var searchIndex = JSON.parse('{\
"arc_swap":{"doc":"Making <code>Arc</code> itself atomic","i":[[0,"access","arc_swap","Abstracting over accessing parts of stored value.",null,null],[8,"Access","arc_swap::access","Abstracts over ways code can get access to a value of …",null,null],[16,"Guard","","A guard object containing the value and keeping it alive.",0,null],[10,"load","","The loading method.",0,[[]]],[3,"DirectDeref","","Plumbing type.",null,null],[3,"DynGuard","","Plumbing type.",null,null],[8,"DynAccess","","An object-safe version of the [<code>Access</code>] trait.",null,null],[10,"load","","The equivalent of [<code>Access::load</code>].",1,[[],["dynguard",3]]],[3,"MapGuard","","A plumbing type.",null,null],[3,"Map","","An adaptor to provide access to a part of larger …",null,null],[11,"new","","Creates a new instance.",2,[[]]],[3,"ConstantDeref","","A plumbing type.",null,null],[3,"Constant","","Access to an constant.",null,null],[12,"0","","",3,null],[0,"cache","arc_swap","Caching handle into the [ArcSwapAny].",null,null],[8,"Access","arc_swap::cache","Generalization of caches providing access to <code>T</code>.",null,null],[10,"load","","Loads the value from cache.",4,[[]]],[3,"Cache","","Caching handle for [<code>ArcSwapAny</code>][ArcSwapAny].",null,null],[11,"new","","Creates a new caching handle.",5,[[]]],[11,"arc_swap","","Gives access to the (possibly shared) cached [<code>ArcSwapAny</code>].",5,[[]]],[11,"load","","Loads the currently held value.",5,[[]]],[11,"map","","Turns this cache into a cache with a projection inside …",5,[[],["mapcache",3]]],[3,"MapCache","","An implementation of a cache with a projection into the …",null,null],[0,"gen_lock","arc_swap","Customization of where and how the generation lock works.",null,null],[3,"Shard","arc_swap::gen_lock","A single shard.",null,null],[8,"LockStorage","","Abstraction of the place where generation locks are …",null,null],[16,"Shards","","The type for keeping several shards.",6,null],[10,"gen_idx","","Access to the generation index.",6,[[],["atomicusize",3]]],[10,"shards","","Access to the shards storage.",6,[[]]],[10,"choose_shard","","Pick one shard of the all selected.",6,[[]]],[3,"Global","","The default, global lock.",null,null],[3,"PrivateUnsharded","","A single „shard“ that is stored inline, inside the …",null,null],[3,"PrivateSharded","","An alternative to <code>PrivateUnsharded</code>, but with configurable …",null,null],[8,"RefCnt","arc_swap","A trait describing smart reference counted pointers.",null,null],[16,"Base","","The base type the pointer points to.",7,null],[10,"into_ptr","","Converts the smart pointer into a raw pointer, without …",7,[[]]],[10,"as_ptr","","Provides a view into the smart pointer as a raw pointer.",7,[[]]],[10,"from_ptr","","Converts a raw pointer back into the smart pointer, …",7,[[]]],[11,"inc","","Increments the reference count by one.",7,[[]]],[11,"dec","","Decrements the reference count by one.",7,[[]]],[3,"Guard","","A temporary storage of the pointer.",null,null],[11,"into_inner","","Converts it into the held value.",8,[[]]],[11,"from_inner","","Create a guard for a given value <code>inner</code>.",8,[[]]],[3,"ArcSwapAny","","An atomic storage for a reference counted smart pointer …",null,null],[11,"new","","Constructs a new value.",9,[[]]],[11,"into_inner","","Extracts the value inside.",9,[[]]],[11,"load_full","","Loads the value.",9,[[]]],[11,"load_signal_safe","","An async-signal-safe version of <code>load</code>",9,[[],["guard",3]]],[11,"load","","Provides a temporary borrow of the object inside.",9,[[],["guard",3]]],[11,"store","","Replaces the value inside this instance.",9,[[]]],[11,"swap","","Exchanges the value inside this instance.",9,[[]]],[11,"compare_and_swap","","Swaps the stored Arc if it equals to <code>current</code>.",9,[[["asraw",8]],["guard",3]]],[11,"rcu","","Read-Copy-Update of the pointer inside.",9,[[]]],[11,"map","","Provides an access to an up to date projection of the …",9,[[],["map",3]]],[6,"ArcSwap","","An atomic storage for <code>Arc</code>.",null,null],[11,"from_pointee","","A convenience constructor directly from the pointed-to …",9,[[]]],[11,"rcu_unwrap","","An <code>rcu</code> which waits to be the sole owner of the original …",9,[[]]],[6,"ArcSwapOption","","An atomic storage for <code>Option<Arc></code>.",null,null],[11,"from_pointee","","A convenience constructor directly from a pointed-to …",9,[[["option",4],["into",8]]]],[11,"empty","","A convenience constructor for an empty value.",9,[[]]],[6,"IndependentArcSwap","","An atomic storage that doesn\'t share the internal …",null,null],[11,"load","arc_swap::access","",10,[[]]],[11,"load","","",10,[[],["dynguard",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"load","","",11,[[]]],[11,"load","","",11,[[],["dynguard",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"load","","",12,[[]]],[11,"load","","",12,[[],["dynguard",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"load","","",2,[[],["dynguard",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"load","","",13,[[]]],[11,"load","","",13,[[],["dynguard",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"load","","",3,[[],["dynguard",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","arc_swap::cache","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","arc_swap::gen_lock","",15,[[]]],[11,"into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"load","arc_swap","",8,[[]]],[11,"load","","",8,[[],["dynguard",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_string","","",8,[[],["string",3]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"load","","",9,[[],["dynguard",3]]],[11,"from","","",9,[[]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"to_string","","",9,[[],["string",3]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"load","","",9,[[]]],[11,"load","","",9,[[]]],[11,"load","","",9,[[]]],[11,"load","arc_swap::access","",2,[[]]],[11,"load","","",3,[[]]],[11,"load","arc_swap::cache","",5,[[]]],[11,"load","","",14,[[]]],[11,"gen_idx","arc_swap::gen_lock","",16,[[],["atomicusize",3]]],[11,"shards","","",16,[[]]],[11,"choose_shard","","",16,[[]]],[11,"gen_idx","","",17,[[],["atomicusize",3]]],[11,"shards","","",17,[[]]],[11,"choose_shard","","",17,[[]]],[11,"gen_idx","","",18,[[],["atomicusize",3]]],[11,"shards","","",18,[[]]],[11,"choose_shard","","",18,[[]]],[11,"drop","arc_swap","",8,[[]]],[11,"drop","","",9,[[]]],[11,"from","arc_swap::cache","",5,[[]]],[11,"from","arc_swap","",9,[[]]],[11,"clone","arc_swap::access","",12,[[],["mapguard",3]]],[11,"clone","","",2,[[],["map",3]]],[11,"clone","","",13,[[],["constantderef",3]]],[11,"clone","","",3,[[],["constant",3]]],[11,"clone","arc_swap::cache","",5,[[],["cache",3]]],[11,"clone","","",14,[[],["mapcache",3]]],[11,"clone","arc_swap","",9,[[]]],[11,"default","arc_swap::gen_lock","",15,[[],["shard",3]]],[11,"default","","",16,[[],["global",3]]],[11,"default","","",17,[[],["privateunsharded",3]]],[11,"default","","",18,[[],["privatesharded",3]]],[11,"default","arc_swap","",9,[[]]],[11,"cmp","arc_swap::access","",13,[[["constantderef",3]],["ordering",4]]],[11,"cmp","","",3,[[["constant",3]],["ordering",4]]],[11,"eq","","",13,[[["constantderef",3]]]],[11,"ne","","",13,[[["constantderef",3]]]],[11,"eq","","",3,[[["constant",3]]]],[11,"ne","","",3,[[["constant",3]]]],[11,"partial_cmp","","",13,[[["constantderef",3]],[["option",4],["ordering",4]]]],[11,"lt","","",13,[[["constantderef",3]]]],[11,"le","","",13,[[["constantderef",3]]]],[11,"gt","","",13,[[["constantderef",3]]]],[11,"ge","","",13,[[["constantderef",3]]]],[11,"partial_cmp","","",3,[[["constant",3]],[["option",4],["ordering",4]]]],[11,"lt","","",3,[[["constant",3]]]],[11,"le","","",3,[[["constant",3]]]],[11,"gt","","",3,[[["constant",3]]]],[11,"ge","","",3,[[["constant",3]]]],[11,"deref","","",10,[[]]],[11,"deref","","",10,[[]]],[11,"deref","","",11,[[]]],[11,"deref","","",12,[[]]],[11,"deref","","",13,[[]]],[11,"deref","arc_swap","",8,[[]]],[11,"fmt","arc_swap::access","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","arc_swap::cache","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","arc_swap","",8,[[["formatter",3]],["fmtresult",6]]],[11,"fmt","","",9,[[["formatter",3]],["fmtresult",6]]],[11,"fmt","","",8,[[["formatter",3]],["fmtresult",6]]],[11,"fmt","","",9,[[["formatter",3]],["fmtresult",6]]],[11,"hash","arc_swap::access","",13,[[]]],[11,"hash","","",3,[[]]],[11,"inc","arc_swap","Increments the reference count by one.",7,[[]]],[11,"dec","","Decrements the reference count by one.",7,[[]]]],"p":[[8,"Access"],[8,"DynAccess"],[3,"Map"],[3,"Constant"],[8,"Access"],[3,"Cache"],[8,"LockStorage"],[8,"RefCnt"],[3,"Guard"],[3,"ArcSwapAny"],[3,"DirectDeref"],[3,"DynGuard"],[3,"MapGuard"],[3,"ConstantDeref"],[3,"MapCache"],[3,"Shard"],[3,"Global"],[3,"PrivateUnsharded"],[3,"PrivateSharded"]]},\
"async_trait":{"doc":"github crates-io docs-rs","i":[[23,"async_trait","async_trait","",null,null]],"p":[]},\
"bitflags":{"doc":"A typesafe bitmask flag generator useful for sets of …","i":[[14,"bitflags","bitflags","The macro used to generate the flag structure.",null,null]],"p":[]},\
"byteorder":{"doc":"This crate provides convenience methods for encoding and …","i":[[8,"ReadBytesExt","byteorder","Extends <code>Read</code> with methods for reading numbers. (For …",null,null],[11,"read_u8","","Reads an unsigned 8 bit integer from the underlying …",0,[[],["result",6]]],[11,"read_i8","","Reads a signed 8 bit integer from the underlying reader.",0,[[],["result",6]]],[11,"read_u16","","Reads an unsigned 16 bit integer from the underlying …",0,[[],["result",6]]],[11,"read_i16","","Reads a signed 16 bit integer from the underlying reader.",0,[[],["result",6]]],[11,"read_u24","","Reads an unsigned 24 bit integer from the underlying …",0,[[],["result",6]]],[11,"read_i24","","Reads a signed 24 bit integer from the underlying reader.",0,[[],["result",6]]],[11,"read_u32","","Reads an unsigned 32 bit integer from the underlying …",0,[[],["result",6]]],[11,"read_i32","","Reads a signed 32 bit integer from the underlying reader.",0,[[],["result",6]]],[11,"read_u48","","Reads an unsigned 48 bit integer from the underlying …",0,[[],["result",6]]],[11,"read_i48","","Reads a signed 48 bit integer from the underlying reader.",0,[[],["result",6]]],[11,"read_u64","","Reads an unsigned 64 bit integer from the underlying …",0,[[],["result",6]]],[11,"read_i64","","Reads a signed 64 bit integer from the underlying reader.",0,[[],["result",6]]],[11,"read_u128","","Reads an unsigned 128 bit integer from the underlying …",0,[[],["result",6]]],[11,"read_i128","","Reads a signed 128 bit integer from the underlying reader.",0,[[],["result",6]]],[11,"read_uint","","Reads an unsigned n-bytes integer from the underlying …",0,[[],["result",6]]],[11,"read_int","","Reads a signed n-bytes integer from the underlying reader.",0,[[],["result",6]]],[11,"read_uint128","","Reads an unsigned n-bytes integer from the underlying …",0,[[],["result",6]]],[11,"read_int128","","Reads a signed n-bytes integer from the underlying reader.",0,[[],["result",6]]],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point …",0,[[],["result",6]]],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point …",0,[[],["result",6]]],[11,"read_u16_into","","Reads a sequence of unsigned 16 bit integers from the …",0,[[],["result",6]]],[11,"read_u32_into","","Reads a sequence of unsigned 32 bit integers from the …",0,[[],["result",6]]],[11,"read_u64_into","","Reads a sequence of unsigned 64 bit integers from the …",0,[[],["result",6]]],[11,"read_u128_into","","Reads a sequence of unsigned 128 bit integers from the …",0,[[],["result",6]]],[11,"read_i8_into","","Reads a sequence of signed 8 bit integers from the …",0,[[],["result",6]]],[11,"read_i16_into","","Reads a sequence of signed 16 bit integers from the …",0,[[],["result",6]]],[11,"read_i32_into","","Reads a sequence of signed 32 bit integers from the …",0,[[],["result",6]]],[11,"read_i64_into","","Reads a sequence of signed 64 bit integers from the …",0,[[],["result",6]]],[11,"read_i128_into","","Reads a sequence of signed 128 bit integers from the …",0,[[],["result",6]]],[11,"read_f32_into","","Reads a sequence of IEEE754 single-precision (4 bytes) …",0,[[],["result",6]]],[11,"read_f32_into_unchecked","","<strong>DEPRECATED</strong>.",0,[[],["result",6]]],[11,"read_f64_into","","Reads a sequence of IEEE754 double-precision (8 bytes) …",0,[[],["result",6]]],[11,"read_f64_into_unchecked","","<strong>DEPRECATED</strong>.",0,[[],["result",6]]],[8,"WriteBytesExt","","Extends <code>Write</code> with methods for writing numbers. (For …",null,null],[11,"write_u8","","Writes an unsigned 8 bit integer to the underlying writer.",1,[[],["result",6]]],[11,"write_i8","","Writes a signed 8 bit integer to the underlying writer.",1,[[],["result",6]]],[11,"write_u16","","Writes an unsigned 16 bit integer to the underlying …",1,[[],["result",6]]],[11,"write_i16","","Writes a signed 16 bit integer to the underlying writer.",1,[[],["result",6]]],[11,"write_u24","","Writes an unsigned 24 bit integer to the underlying …",1,[[],["result",6]]],[11,"write_i24","","Writes a signed 24 bit integer to the underlying writer.",1,[[],["result",6]]],[11,"write_u32","","Writes an unsigned 32 bit integer to the underlying …",1,[[],["result",6]]],[11,"write_i32","","Writes a signed 32 bit integer to the underlying writer.",1,[[],["result",6]]],[11,"write_u48","","Writes an unsigned 48 bit integer to the underlying …",1,[[],["result",6]]],[11,"write_i48","","Writes a signed 48 bit integer to the underlying writer.",1,[[],["result",6]]],[11,"write_u64","","Writes an unsigned 64 bit integer to the underlying …",1,[[],["result",6]]],[11,"write_i64","","Writes a signed 64 bit integer to the underlying writer.",1,[[],["result",6]]],[11,"write_u128","","Writes an unsigned 128 bit integer to the underlying …",1,[[],["result",6]]],[11,"write_i128","","Writes a signed 128 bit integer to the underlying writer.",1,[[],["result",6]]],[11,"write_uint","","Writes an unsigned n-bytes integer to the underlying …",1,[[],["result",6]]],[11,"write_int","","Writes a signed n-bytes integer to the underlying writer.",1,[[],["result",6]]],[11,"write_uint128","","Writes an unsigned n-bytes integer to the underlying …",1,[[],["result",6]]],[11,"write_int128","","Writes a signed n-bytes integer to the underlying writer.",1,[[],["result",6]]],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating …",1,[[],["result",6]]],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating …",1,[[],["result",6]]],[8,"ByteOrder","","<code>ByteOrder</code> describes types that can serialize integers as …",null,null],[10,"read_u16","","Reads an unsigned 16 bit integer from <code>buf</code>.",2,[[]]],[11,"read_u24","","Reads an unsigned 24 bit integer from <code>buf</code>, stored in u32.",2,[[]]],[10,"read_u32","","Reads an unsigned 32 bit integer from <code>buf</code>.",2,[[]]],[11,"read_u48","","Reads an unsigned 48 bit integer from <code>buf</code>, stored in u64.",2,[[]]],[10,"read_u64","","Reads an unsigned 64 bit integer from <code>buf</code>.",2,[[]]],[10,"read_u128","","Reads an unsigned 128 bit integer from <code>buf</code>.",2,[[]]],[10,"read_uint","","Reads an unsigned n-bytes integer from <code>buf</code>.",2,[[]]],[10,"read_uint128","","Reads an unsigned n-bytes integer from <code>buf</code>.",2,[[]]],[10,"write_u16","","Writes an unsigned 16 bit integer <code>n</code> to <code>buf</code>.",2,[[]]],[11,"write_u24","","Writes an unsigned 24 bit integer <code>n</code> to <code>buf</code>, stored in u32.",2,[[]]],[10,"write_u32","","Writes an unsigned 32 bit integer <code>n</code> to <code>buf</code>.",2,[[]]],[11,"write_u48","","Writes an unsigned 48 bit integer <code>n</code> to <code>buf</code>, stored in u64.",2,[[]]],[10,"write_u64","","Writes an unsigned 64 bit integer <code>n</code> to <code>buf</code>.",2,[[]]],[10,"write_u128","","Writes an unsigned 128 bit integer <code>n</code> to <code>buf</code>.",2,[[]]],[10,"write_uint","","Writes an unsigned integer <code>n</code> to <code>buf</code> using only <code>nbytes</code>.",2,[[]]],[10,"write_uint128","","Writes an unsigned integer <code>n</code> to <code>buf</code> using only <code>nbytes</code>.",2,[[]]],[11,"read_i16","","Reads a signed 16 bit integer from <code>buf</code>.",2,[[]]],[11,"read_i24","","Reads a signed 24 bit integer from <code>buf</code>, stored in i32.",2,[[]]],[11,"read_i32","","Reads a signed 32 bit integer from <code>buf</code>.",2,[[]]],[11,"read_i48","","Reads a signed 48 bit integer from <code>buf</code>, stored in i64.",2,[[]]],[11,"read_i64","","Reads a signed 64 bit integer from <code>buf</code>.",2,[[]]],[11,"read_i128","","Reads a signed 128 bit integer from <code>buf</code>.",2,[[]]],[11,"read_int","","Reads a signed n-bytes integer from <code>buf</code>.",2,[[]]],[11,"read_int128","","Reads a signed n-bytes integer from <code>buf</code>.",2,[[]]],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point …",2,[[]]],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point …",2,[[]]],[11,"write_i16","","Writes a signed 16 bit integer <code>n</code> to <code>buf</code>.",2,[[]]],[11,"write_i24","","Writes a signed 24 bit integer <code>n</code> to <code>buf</code>, stored in i32.",2,[[]]],[11,"write_i32","","Writes a signed 32 bit integer <code>n</code> to <code>buf</code>.",2,[[]]],[11,"write_i48","","Writes a signed 48 bit integer <code>n</code> to <code>buf</code>, stored in i64.",2,[[]]],[11,"write_i64","","Writes a signed 64 bit integer <code>n</code> to <code>buf</code>.",2,[[]]],[11,"write_i128","","Writes a signed 128 bit integer <code>n</code> to <code>buf</code>.",2,[[]]],[11,"write_int","","Writes a signed integer <code>n</code> to <code>buf</code> using only <code>nbytes</code>.",2,[[]]],[11,"write_int128","","Writes a signed integer <code>n</code> to <code>buf</code> using only <code>nbytes</code>.",2,[[]]],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating …",2,[[]]],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating …",2,[[]]],[10,"read_u16_into","","Reads unsigned 16 bit integers from <code>src</code> into <code>dst</code>.",2,[[]]],[10,"read_u32_into","","Reads unsigned 32 bit integers from <code>src</code> into <code>dst</code>.",2,[[]]],[10,"read_u64_into","","Reads unsigned 64 bit integers from <code>src</code> into <code>dst</code>.",2,[[]]],[10,"read_u128_into","","Reads unsigned 128 bit integers from <code>src</code> into <code>dst</code>.",2,[[]]],[11,"read_i16_into","","Reads signed 16 bit integers from <code>src</code> to <code>dst</code>.",2,[[]]],[11,"read_i32_into","","Reads signed 32 bit integers from <code>src</code> into <code>dst</code>.",2,[[]]],[11,"read_i64_into","","Reads signed 64 bit integers from <code>src</code> into <code>dst</code>.",2,[[]]],[11,"read_i128_into","","Reads signed 128 bit integers from <code>src</code> into <code>dst</code>.",2,[[]]],[11,"read_f32_into","","Reads IEEE754 single-precision (4 bytes) floating point …",2,[[]]],[11,"read_f32_into_unchecked","","<strong>DEPRECATED</strong>.",2,[[]]],[11,"read_f64_into","","Reads IEEE754 single-precision (4 bytes) floating point …",2,[[]]],[11,"read_f64_into_unchecked","","<strong>DEPRECATED</strong>.",2,[[]]],[10,"write_u16_into","","Writes unsigned 16 bit integers from <code>src</code> into <code>dst</code>.",2,[[]]],[10,"write_u32_into","","Writes unsigned 32 bit integers from <code>src</code> into <code>dst</code>.",2,[[]]],[10,"write_u64_into","","Writes unsigned 64 bit integers from <code>src</code> into <code>dst</code>.",2,[[]]],[10,"write_u128_into","","Writes unsigned 128 bit integers from <code>src</code> into <code>dst</code>.",2,[[]]],[11,"write_i8_into","","Writes signed 8 bit integers from <code>src</code> into <code>dst</code>.",2,[[]]],[11,"write_i16_into","","Writes signed 16 bit integers from <code>src</code> into <code>dst</code>.",2,[[]]],[11,"write_i32_into","","Writes signed 32 bit integers from <code>src</code> into <code>dst</code>.",2,[[]]],[11,"write_i64_into","","Writes signed 64 bit integers from <code>src</code> into <code>dst</code>.",2,[[]]],[11,"write_i128_into","","Writes signed 128 bit integers from <code>src</code> into <code>dst</code>.",2,[[]]],[11,"write_f32_into","","Writes IEEE754 single-precision (4 bytes) floating point …",2,[[]]],[11,"write_f64_into","","Writes IEEE754 double-precision (8 bytes) floating point …",2,[[]]],[10,"from_slice_u16","","Converts the given slice of unsigned 16 bit integers to a …",2,[[]]],[10,"from_slice_u32","","Converts the given slice of unsigned 32 bit integers to a …",2,[[]]],[10,"from_slice_u64","","Converts the given slice of unsigned 64 bit integers to a …",2,[[]]],[10,"from_slice_u128","","Converts the given slice of unsigned 128 bit integers to …",2,[[]]],[11,"from_slice_i16","","Converts the given slice of signed 16 bit integers to a …",2,[[]]],[11,"from_slice_i32","","Converts the given slice of signed 32 bit integers to a …",2,[[]]],[11,"from_slice_i64","","Converts the given slice of signed 64 bit integers to a …",2,[[]]],[11,"from_slice_i128","","Converts the given slice of signed 128 bit integers to a …",2,[[]]],[10,"from_slice_f32","","Converts the given slice of IEEE754 single-precision (4 …",2,[[]]],[10,"from_slice_f64","","Converts the given slice of IEEE754 double-precision (8 …",2,[[]]],[4,"BigEndian","","Defines big-endian serialization.",null,null],[6,"BE","","A type alias for <code>BigEndian</code>.",null,null],[4,"LittleEndian","","Defines little-endian serialization.",null,null],[6,"LE","","A type alias for <code>LittleEndian</code>.",null,null],[6,"NetworkEndian","","Defines network byte order serialization.",null,null],[6,"NativeEndian","","Defines system native-endian serialization.",null,null],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"read_u16","","",3,[[]]],[11,"read_u32","","",3,[[]]],[11,"read_u64","","",3,[[]]],[11,"read_u128","","",3,[[]]],[11,"read_uint","","",3,[[]]],[11,"read_uint128","","",3,[[]]],[11,"write_u16","","",3,[[]]],[11,"write_u32","","",3,[[]]],[11,"write_u64","","",3,[[]]],[11,"write_u128","","",3,[[]]],[11,"write_uint","","",3,[[]]],[11,"write_uint128","","",3,[[]]],[11,"read_u16_into","","",3,[[]]],[11,"read_u32_into","","",3,[[]]],[11,"read_u64_into","","",3,[[]]],[11,"read_u128_into","","",3,[[]]],[11,"write_u16_into","","",3,[[]]],[11,"write_u32_into","","",3,[[]]],[11,"write_u64_into","","",3,[[]]],[11,"write_u128_into","","",3,[[]]],[11,"from_slice_u16","","",3,[[]]],[11,"from_slice_u32","","",3,[[]]],[11,"from_slice_u64","","",3,[[]]],[11,"from_slice_u128","","",3,[[]]],[11,"from_slice_f32","","",3,[[]]],[11,"from_slice_f64","","",3,[[]]],[11,"read_u16","","",4,[[]]],[11,"read_u32","","",4,[[]]],[11,"read_u64","","",4,[[]]],[11,"read_u128","","",4,[[]]],[11,"read_uint","","",4,[[]]],[11,"read_uint128","","",4,[[]]],[11,"write_u16","","",4,[[]]],[11,"write_u32","","",4,[[]]],[11,"write_u64","","",4,[[]]],[11,"write_u128","","",4,[[]]],[11,"write_uint","","",4,[[]]],[11,"write_uint128","","",4,[[]]],[11,"read_u16_into","","",4,[[]]],[11,"read_u32_into","","",4,[[]]],[11,"read_u64_into","","",4,[[]]],[11,"read_u128_into","","",4,[[]]],[11,"write_u16_into","","",4,[[]]],[11,"write_u32_into","","",4,[[]]],[11,"write_u64_into","","",4,[[]]],[11,"write_u128_into","","",4,[[]]],[11,"from_slice_u16","","",4,[[]]],[11,"from_slice_u32","","",4,[[]]],[11,"from_slice_u64","","",4,[[]]],[11,"from_slice_u128","","",4,[[]]],[11,"from_slice_f32","","",4,[[]]],[11,"from_slice_f64","","",4,[[]]],[11,"clone","","",3,[[],["bigendian",4]]],[11,"clone","","",4,[[],["littleendian",4]]],[11,"default","","",3,[[],["bigendian",4]]],[11,"default","","",4,[[],["littleendian",4]]],[11,"cmp","","",3,[[["bigendian",4]],["ordering",4]]],[11,"cmp","","",4,[[["littleendian",4]],["ordering",4]]],[11,"eq","","",3,[[["bigendian",4]]]],[11,"eq","","",4,[[["littleendian",4]]]],[11,"partial_cmp","","",3,[[["bigendian",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",4,[[["littleendian",4]],[["option",4],["ordering",4]]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"hash","","",3,[[]]],[11,"hash","","",4,[[]]],[11,"read_u8","","Reads an unsigned 8 bit integer from the underlying …",0,[[],["result",6]]],[11,"read_i8","","Reads a signed 8 bit integer from the underlying reader.",0,[[],["result",6]]],[11,"read_u16","","Reads an unsigned 16 bit integer from the underlying …",0,[[],["result",6]]],[11,"read_i16","","Reads a signed 16 bit integer from the underlying reader.",0,[[],["result",6]]],[11,"read_u24","","Reads an unsigned 24 bit integer from the underlying …",0,[[],["result",6]]],[11,"read_i24","","Reads a signed 24 bit integer from the underlying reader.",0,[[],["result",6]]],[11,"read_u32","","Reads an unsigned 32 bit integer from the underlying …",0,[[],["result",6]]],[11,"read_i32","","Reads a signed 32 bit integer from the underlying reader.",0,[[],["result",6]]],[11,"read_u48","","Reads an unsigned 48 bit integer from the underlying …",0,[[],["result",6]]],[11,"read_i48","","Reads a signed 48 bit integer from the underlying reader.",0,[[],["result",6]]],[11,"read_u64","","Reads an unsigned 64 bit integer from the underlying …",0,[[],["result",6]]],[11,"read_i64","","Reads a signed 64 bit integer from the underlying reader.",0,[[],["result",6]]],[11,"read_u128","","Reads an unsigned 128 bit integer from the underlying …",0,[[],["result",6]]],[11,"read_i128","","Reads a signed 128 bit integer from the underlying reader.",0,[[],["result",6]]],[11,"read_uint","","Reads an unsigned n-bytes integer from the underlying …",0,[[],["result",6]]],[11,"read_int","","Reads a signed n-bytes integer from the underlying reader.",0,[[],["result",6]]],[11,"read_uint128","","Reads an unsigned n-bytes integer from the underlying …",0,[[],["result",6]]],[11,"read_int128","","Reads a signed n-bytes integer from the underlying reader.",0,[[],["result",6]]],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point …",0,[[],["result",6]]],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point …",0,[[],["result",6]]],[11,"read_u16_into","","Reads a sequence of unsigned 16 bit integers from the …",0,[[],["result",6]]],[11,"read_u32_into","","Reads a sequence of unsigned 32 bit integers from the …",0,[[],["result",6]]],[11,"read_u64_into","","Reads a sequence of unsigned 64 bit integers from the …",0,[[],["result",6]]],[11,"read_u128_into","","Reads a sequence of unsigned 128 bit integers from the …",0,[[],["result",6]]],[11,"read_i8_into","","Reads a sequence of signed 8 bit integers from the …",0,[[],["result",6]]],[11,"read_i16_into","","Reads a sequence of signed 16 bit integers from the …",0,[[],["result",6]]],[11,"read_i32_into","","Reads a sequence of signed 32 bit integers from the …",0,[[],["result",6]]],[11,"read_i64_into","","Reads a sequence of signed 64 bit integers from the …",0,[[],["result",6]]],[11,"read_i128_into","","Reads a sequence of signed 128 bit integers from the …",0,[[],["result",6]]],[11,"read_f32_into","","Reads a sequence of IEEE754 single-precision (4 bytes) …",0,[[],["result",6]]],[11,"read_f32_into_unchecked","","<strong>DEPRECATED</strong>.",0,[[],["result",6]]],[11,"read_f64_into","","Reads a sequence of IEEE754 double-precision (8 bytes) …",0,[[],["result",6]]],[11,"read_f64_into_unchecked","","<strong>DEPRECATED</strong>.",0,[[],["result",6]]],[11,"write_u8","","Writes an unsigned 8 bit integer to the underlying writer.",1,[[],["result",6]]],[11,"write_i8","","Writes a signed 8 bit integer to the underlying writer.",1,[[],["result",6]]],[11,"write_u16","","Writes an unsigned 16 bit integer to the underlying …",1,[[],["result",6]]],[11,"write_i16","","Writes a signed 16 bit integer to the underlying writer.",1,[[],["result",6]]],[11,"write_u24","","Writes an unsigned 24 bit integer to the underlying …",1,[[],["result",6]]],[11,"write_i24","","Writes a signed 24 bit integer to the underlying writer.",1,[[],["result",6]]],[11,"write_u32","","Writes an unsigned 32 bit integer to the underlying …",1,[[],["result",6]]],[11,"write_i32","","Writes a signed 32 bit integer to the underlying writer.",1,[[],["result",6]]],[11,"write_u48","","Writes an unsigned 48 bit integer to the underlying …",1,[[],["result",6]]],[11,"write_i48","","Writes a signed 48 bit integer to the underlying writer.",1,[[],["result",6]]],[11,"write_u64","","Writes an unsigned 64 bit integer to the underlying …",1,[[],["result",6]]],[11,"write_i64","","Writes a signed 64 bit integer to the underlying writer.",1,[[],["result",6]]],[11,"write_u128","","Writes an unsigned 128 bit integer to the underlying …",1,[[],["result",6]]],[11,"write_i128","","Writes a signed 128 bit integer to the underlying writer.",1,[[],["result",6]]],[11,"write_uint","","Writes an unsigned n-bytes integer to the underlying …",1,[[],["result",6]]],[11,"write_int","","Writes a signed n-bytes integer to the underlying writer.",1,[[],["result",6]]],[11,"write_uint128","","Writes an unsigned n-bytes integer to the underlying …",1,[[],["result",6]]],[11,"write_int128","","Writes a signed n-bytes integer to the underlying writer.",1,[[],["result",6]]],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating …",1,[[],["result",6]]],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating …",1,[[],["result",6]]]],"p":[[8,"ReadBytesExt"],[8,"WriteBytesExt"],[8,"ByteOrder"],[4,"BigEndian"],[4,"LittleEndian"]]},\
"bytes":{"doc":"Provides abstractions for working with bytes.","i":[[0,"buf","bytes","Utilities for working with buffers.",null,null],[0,"ext","bytes::buf","Extra utilities for <code>Buf</code> and <code>BufMut</code> types.",null,null],[3,"Chain","bytes::buf::ext","A <code>Chain</code> sequences two buffers.",null,null],[3,"Limit","","A <code>BufMut</code> adapter which limits the amount of bytes that …",null,null],[3,"Take","","A <code>Buf</code> adapter which limits the bytes read from an …",null,null],[3,"Reader","","A <code>Buf</code> adapter which implements <code>io::Read</code> for the inner …",null,null],[3,"Writer","","A <code>BufMut</code> adapter which implements <code>io::Write</code> for the inner …",null,null],[8,"BufExt","","Extra methods for implementations of <code>Buf</code>.",null,null],[11,"take","","Creates an adaptor which will read at most <code>limit</code> bytes …",0,[[],["take",3]]],[11,"chain","","Creates an adaptor which will chain this buffer with …",0,[[["buf",8]],[["chain",3],["buf",8]]]],[11,"reader","","Creates an adaptor which implements the <code>Read</code> trait for …",0,[[],["reader",3]]],[8,"BufMutExt","","Extra methods for implementations of <code>BufMut</code>.",null,null],[11,"limit","","Creates an adaptor which can write at most <code>limit</code> bytes to …",1,[[],["limit",3]]],[11,"writer","","Creates an adaptor which implements the <code>Write</code> trait for …",1,[[],["writer",3]]],[11,"chain_mut","","Creates an adapter which will chain this buffer with …",1,[[["bufmut",8]],[["chain",3],["bufmut",8]]]],[8,"Buf","bytes::buf","Read bytes from a buffer.",null,null],[10,"remaining","","Returns the number of bytes between the current position …",2,[[]]],[10,"bytes","","Returns a slice starting at the current position and of …",2,[[]]],[11,"bytes_vectored","","Fills <code>dst</code> with potentially multiple slices starting at …",2,[[]]],[10,"advance","","Advance the internal cursor of the Buf",2,[[]]],[11,"has_remaining","","Returns true if there are any more bytes to consume",2,[[]]],[11,"copy_to_slice","","Copies bytes from <code>self</code> into <code>dst</code>.",2,[[]]],[11,"get_u8","","Gets an unsigned 8 bit integer from <code>self</code>.",2,[[]]],[11,"get_i8","","Gets a signed 8 bit integer from <code>self</code>.",2,[[]]],[11,"get_u16","","Gets an unsigned 16 bit integer from <code>self</code> in big-endian …",2,[[]]],[11,"get_u16_le","","Gets an unsigned 16 bit integer from <code>self</code> in …",2,[[]]],[11,"get_i16","","Gets a signed 16 bit integer from <code>self</code> in big-endian byte …",2,[[]]],[11,"get_i16_le","","Gets a signed 16 bit integer from <code>self</code> in little-endian …",2,[[]]],[11,"get_u32","","Gets an unsigned 32 bit integer from <code>self</code> in the …",2,[[]]],[11,"get_u32_le","","Gets an unsigned 32 bit integer from <code>self</code> in the …",2,[[]]],[11,"get_i32","","Gets a signed 32 bit integer from <code>self</code> in big-endian byte …",2,[[]]],[11,"get_i32_le","","Gets a signed 32 bit integer from <code>self</code> in little-endian …",2,[[]]],[11,"get_u64","","Gets an unsigned 64 bit integer from <code>self</code> in big-endian …",2,[[]]],[11,"get_u64_le","","Gets an unsigned 64 bit integer from <code>self</code> in …",2,[[]]],[11,"get_i64","","Gets a signed 64 bit integer from <code>self</code> in big-endian byte …",2,[[]]],[11,"get_i64_le","","Gets a signed 64 bit integer from <code>self</code> in little-endian …",2,[[]]],[11,"get_u128","","Gets an unsigned 128 bit integer from <code>self</code> in big-endian …",2,[[]]],[11,"get_u128_le","","Gets an unsigned 128 bit integer from <code>self</code> in …",2,[[]]],[11,"get_i128","","Gets a signed 128 bit integer from <code>self</code> in big-endian …",2,[[]]],[11,"get_i128_le","","Gets a signed 128 bit integer from <code>self</code> in little-endian …",2,[[]]],[11,"get_uint","","Gets an unsigned n-byte integer from <code>self</code> in big-endian …",2,[[]]],[11,"get_uint_le","","Gets an unsigned n-byte integer from <code>self</code> in …",2,[[]]],[11,"get_int","","Gets a signed n-byte integer from <code>self</code> in big-endian byte …",2,[[]]],[11,"get_int_le","","Gets a signed n-byte integer from <code>self</code> in little-endian …",2,[[]]],[11,"get_f32","","Gets an IEEE754 single-precision (4 bytes) floating point …",2,[[]]],[11,"get_f32_le","","Gets an IEEE754 single-precision (4 bytes) floating point …",2,[[]]],[11,"get_f64","","Gets an IEEE754 double-precision (8 bytes) floating point …",2,[[]]],[11,"get_f64_le","","Gets an IEEE754 double-precision (8 bytes) floating point …",2,[[]]],[11,"to_bytes","","Consumes remaining bytes inside self and returns new …",2,[[],["bytes",3]]],[8,"BufMut","","A trait for values that provide sequential write access …",null,null],[10,"remaining_mut","","Returns the number of bytes that can be written from the …",3,[[]]],[10,"advance_mut","","Advance the internal cursor of the BufMut",3,[[]]],[11,"has_remaining_mut","","Returns true if there is space in <code>self</code> for more bytes.",3,[[]]],[10,"bytes_mut","","Returns a mutable slice starting at the current BufMut …",3,[[]]],[11,"bytes_vectored_mut","","Fills <code>dst</code> with potentially multiple mutable slices …",3,[[]]],[11,"put","","Transfer bytes into <code>self</code> from <code>src</code> and advance the cursor …",3,[[["buf",8]]]],[11,"put_slice","","Transfer bytes into <code>self</code> from <code>src</code> and advance the cursor …",3,[[]]],[11,"put_u8","","Writes an unsigned 8 bit integer to <code>self</code>.",3,[[]]],[11,"put_i8","","Writes a signed 8 bit integer to <code>self</code>.",3,[[]]],[11,"put_u16","","Writes an unsigned 16 bit integer to <code>self</code> in big-endian …",3,[[]]],[11,"put_u16_le","","Writes an unsigned 16 bit integer to <code>self</code> in …",3,[[]]],[11,"put_i16","","Writes a signed 16 bit integer to <code>self</code> in big-endian byte …",3,[[]]],[11,"put_i16_le","","Writes a signed 16 bit integer to <code>self</code> in little-endian …",3,[[]]],[11,"put_u32","","Writes an unsigned 32 bit integer to <code>self</code> in big-endian …",3,[[]]],[11,"put_u32_le","","Writes an unsigned 32 bit integer to <code>self</code> in …",3,[[]]],[11,"put_i32","","Writes a signed 32 bit integer to <code>self</code> in big-endian byte …",3,[[]]],[11,"put_i32_le","","Writes a signed 32 bit integer to <code>self</code> in little-endian …",3,[[]]],[11,"put_u64","","Writes an unsigned 64 bit integer to <code>self</code> in the …",3,[[]]],[11,"put_u64_le","","Writes an unsigned 64 bit integer to <code>self</code> in …",3,[[]]],[11,"put_i64","","Writes a signed 64 bit integer to <code>self</code> in the big-endian …",3,[[]]],[11,"put_i64_le","","Writes a signed 64 bit integer to <code>self</code> in little-endian …",3,[[]]],[11,"put_u128","","Writes an unsigned 128 bit integer to <code>self</code> in the …",3,[[]]],[11,"put_u128_le","","Writes an unsigned 128 bit integer to <code>self</code> in …",3,[[]]],[11,"put_i128","","Writes a signed 128 bit integer to <code>self</code> in the big-endian …",3,[[]]],[11,"put_i128_le","","Writes a signed 128 bit integer to <code>self</code> in little-endian …",3,[[]]],[11,"put_uint","","Writes an unsigned n-byte integer to <code>self</code> in big-endian …",3,[[]]],[11,"put_uint_le","","Writes an unsigned n-byte integer to <code>self</code> in the …",3,[[]]],[11,"put_int","","Writes a signed n-byte integer to <code>self</code> in big-endian byte …",3,[[]]],[11,"put_int_le","","Writes a signed n-byte integer to <code>self</code> in little-endian …",3,[[]]],[11,"put_f32","","Writes  an IEEE754 single-precision (4 bytes) floating …",3,[[]]],[11,"put_f32_le","","Writes  an IEEE754 single-precision (4 bytes) floating …",3,[[]]],[11,"put_f64","","Writes  an IEEE754 double-precision (8 bytes) floating …",3,[[]]],[11,"put_f64_le","","Writes  an IEEE754 double-precision (8 bytes) floating …",3,[[]]],[3,"IoSliceMut","","A buffer type used for <code>readv</code>.",null,null],[3,"IntoIter","","Iterator over the bytes contained by the buffer.",null,null],[8,"Buf","bytes","Read bytes from a buffer.",null,null],[10,"remaining","","Returns the number of bytes between the current position …",2,[[]]],[10,"bytes","","Returns a slice starting at the current position and of …",2,[[]]],[11,"bytes_vectored","bytes::buf","Fills <code>dst</code> with potentially multiple slices starting at …",2,[[]]],[10,"advance","bytes","Advance the internal cursor of the Buf",2,[[]]],[11,"has_remaining","bytes::buf","Returns true if there are any more bytes to consume",2,[[]]],[11,"copy_to_slice","","Copies bytes from <code>self</code> into <code>dst</code>.",2,[[]]],[11,"get_u8","","Gets an unsigned 8 bit integer from <code>self</code>.",2,[[]]],[11,"get_i8","","Gets a signed 8 bit integer from <code>self</code>.",2,[[]]],[11,"get_u16","","Gets an unsigned 16 bit integer from <code>self</code> in big-endian …",2,[[]]],[11,"get_u16_le","","Gets an unsigned 16 bit integer from <code>self</code> in …",2,[[]]],[11,"get_i16","","Gets a signed 16 bit integer from <code>self</code> in big-endian byte …",2,[[]]],[11,"get_i16_le","","Gets a signed 16 bit integer from <code>self</code> in little-endian …",2,[[]]],[11,"get_u32","","Gets an unsigned 32 bit integer from <code>self</code> in the …",2,[[]]],[11,"get_u32_le","","Gets an unsigned 32 bit integer from <code>self</code> in the …",2,[[]]],[11,"get_i32","","Gets a signed 32 bit integer from <code>self</code> in big-endian byte …",2,[[]]],[11,"get_i32_le","","Gets a signed 32 bit integer from <code>self</code> in little-endian …",2,[[]]],[11,"get_u64","","Gets an unsigned 64 bit integer from <code>self</code> in big-endian …",2,[[]]],[11,"get_u64_le","","Gets an unsigned 64 bit integer from <code>self</code> in …",2,[[]]],[11,"get_i64","","Gets a signed 64 bit integer from <code>self</code> in big-endian byte …",2,[[]]],[11,"get_i64_le","","Gets a signed 64 bit integer from <code>self</code> in little-endian …",2,[[]]],[11,"get_u128","","Gets an unsigned 128 bit integer from <code>self</code> in big-endian …",2,[[]]],[11,"get_u128_le","","Gets an unsigned 128 bit integer from <code>self</code> in …",2,[[]]],[11,"get_i128","","Gets a signed 128 bit integer from <code>self</code> in big-endian …",2,[[]]],[11,"get_i128_le","","Gets a signed 128 bit integer from <code>self</code> in little-endian …",2,[[]]],[11,"get_uint","","Gets an unsigned n-byte integer from <code>self</code> in big-endian …",2,[[]]],[11,"get_uint_le","","Gets an unsigned n-byte integer from <code>self</code> in …",2,[[]]],[11,"get_int","","Gets a signed n-byte integer from <code>self</code> in big-endian byte …",2,[[]]],[11,"get_int_le","","Gets a signed n-byte integer from <code>self</code> in little-endian …",2,[[]]],[11,"get_f32","","Gets an IEEE754 single-precision (4 bytes) floating point …",2,[[]]],[11,"get_f32_le","","Gets an IEEE754 single-precision (4 bytes) floating point …",2,[[]]],[11,"get_f64","","Gets an IEEE754 double-precision (8 bytes) floating point …",2,[[]]],[11,"get_f64_le","","Gets an IEEE754 double-precision (8 bytes) floating point …",2,[[]]],[11,"to_bytes","","Consumes remaining bytes inside self and returns new …",2,[[],["bytes",3]]],[8,"BufMut","bytes","A trait for values that provide sequential write access …",null,null],[10,"remaining_mut","","Returns the number of bytes that can be written from the …",3,[[]]],[10,"advance_mut","","Advance the internal cursor of the BufMut",3,[[]]],[11,"has_remaining_mut","bytes::buf","Returns true if there is space in <code>self</code> for more bytes.",3,[[]]],[10,"bytes_mut","bytes","Returns a mutable slice starting at the current BufMut …",3,[[]]],[11,"bytes_vectored_mut","bytes::buf","Fills <code>dst</code> with potentially multiple mutable slices …",3,[[]]],[11,"put","","Transfer bytes into <code>self</code> from <code>src</code> and advance the cursor …",3,[[["buf",8]]]],[11,"put_slice","","Transfer bytes into <code>self</code> from <code>src</code> and advance the cursor …",3,[[]]],[11,"put_u8","","Writes an unsigned 8 bit integer to <code>self</code>.",3,[[]]],[11,"put_i8","","Writes a signed 8 bit integer to <code>self</code>.",3,[[]]],[11,"put_u16","","Writes an unsigned 16 bit integer to <code>self</code> in big-endian …",3,[[]]],[11,"put_u16_le","","Writes an unsigned 16 bit integer to <code>self</code> in …",3,[[]]],[11,"put_i16","","Writes a signed 16 bit integer to <code>self</code> in big-endian byte …",3,[[]]],[11,"put_i16_le","","Writes a signed 16 bit integer to <code>self</code> in little-endian …",3,[[]]],[11,"put_u32","","Writes an unsigned 32 bit integer to <code>self</code> in big-endian …",3,[[]]],[11,"put_u32_le","","Writes an unsigned 32 bit integer to <code>self</code> in …",3,[[]]],[11,"put_i32","","Writes a signed 32 bit integer to <code>self</code> in big-endian byte …",3,[[]]],[11,"put_i32_le","","Writes a signed 32 bit integer to <code>self</code> in little-endian …",3,[[]]],[11,"put_u64","","Writes an unsigned 64 bit integer to <code>self</code> in the …",3,[[]]],[11,"put_u64_le","","Writes an unsigned 64 bit integer to <code>self</code> in …",3,[[]]],[11,"put_i64","","Writes a signed 64 bit integer to <code>self</code> in the big-endian …",3,[[]]],[11,"put_i64_le","","Writes a signed 64 bit integer to <code>self</code> in little-endian …",3,[[]]],[11,"put_u128","","Writes an unsigned 128 bit integer to <code>self</code> in the …",3,[[]]],[11,"put_u128_le","","Writes an unsigned 128 bit integer to <code>self</code> in …",3,[[]]],[11,"put_i128","","Writes a signed 128 bit integer to <code>self</code> in the big-endian …",3,[[]]],[11,"put_i128_le","","Writes a signed 128 bit integer to <code>self</code> in little-endian …",3,[[]]],[11,"put_uint","","Writes an unsigned n-byte integer to <code>self</code> in big-endian …",3,[[]]],[11,"put_uint_le","","Writes an unsigned n-byte integer to <code>self</code> in the …",3,[[]]],[11,"put_int","","Writes a signed n-byte integer to <code>self</code> in big-endian byte …",3,[[]]],[11,"put_int_le","","Writes a signed n-byte integer to <code>self</code> in little-endian …",3,[[]]],[11,"put_f32","","Writes  an IEEE754 single-precision (4 bytes) floating …",3,[[]]],[11,"put_f32_le","","Writes  an IEEE754 single-precision (4 bytes) floating …",3,[[]]],[11,"put_f64","","Writes  an IEEE754 double-precision (8 bytes) floating …",3,[[]]],[11,"put_f64_le","","Writes  an IEEE754 double-precision (8 bytes) floating …",3,[[]]],[3,"Bytes","bytes","A reference counted contiguous slice of memory.",null,null],[3,"BytesMut","","A unique reference to a contiguous slice of memory.",null,null],[11,"from","bytes::buf","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","bytes::buf::ext","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"into","","",6,[[]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"into","","",7,[[]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"into","","",8,[[]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"into","","",9,[[]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","bytes::buf","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"into","","",10,[[]]],[11,"try_into","","",10,[[],["result",4]]],[11,"into_iter","","",10,[[]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","bytes","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"into","","",11,[[]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"from","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"into","","",12,[[]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"remaining","bytes::buf::ext","",5,[[]]],[11,"bytes","","",5,[[]]],[11,"advance","","",5,[[]]],[11,"bytes_vectored","","",5,[[]]],[11,"remaining","","",8,[[]]],[11,"bytes","","",8,[[]]],[11,"advance","","",8,[[]]],[11,"remaining","bytes","",11,[[]]],[11,"bytes","","",11,[[]]],[11,"advance","","",11,[[]]],[11,"to_bytes","","",11,[[],["bytes",3]]],[11,"remaining","","",12,[[]]],[11,"bytes","","",12,[[]]],[11,"advance","","",12,[[]]],[11,"to_bytes","","",12,[[],["bytes",3]]],[11,"remaining_mut","bytes::buf::ext","",5,[[]]],[11,"bytes_mut","","",5,[[]]],[11,"advance_mut","","",5,[[]]],[11,"bytes_vectored_mut","","",5,[[]]],[11,"remaining_mut","","",6,[[]]],[11,"bytes_mut","","",6,[[]]],[11,"advance_mut","","",6,[[]]],[11,"remaining_mut","bytes","",12,[[]]],[11,"advance_mut","","",12,[[]]],[11,"bytes_mut","","",12,[[]]],[11,"put","","",12,[[["buf",8]]]],[11,"put_slice","","",12,[[]]],[11,"deref","","",11,[[]]],[11,"deref","","",12,[[]]],[11,"deref_mut","","",12,[[]]],[11,"from","bytes::buf","",4,[[],["ioslicemut",3]]],[11,"from","","",4,[[],["ioslicemut",3]]],[11,"from","bytes","",11,[[],["bytes",3]]],[11,"from","","",11,[[],["bytes",3]]],[11,"from","","",11,[[["vec",3]],["bytes",3]]],[11,"from","","",11,[[["string",3]],["bytes",3]]],[11,"from","","",12,[[],["bytesmut",3]]],[11,"from","","",12,[[],["bytesmut",3]]],[11,"from","","",11,[[["bytesmut",3]],["bytes",3]]],[11,"fmt","bytes::buf","",4,[[["formatter",3]],["result",6]]],[11,"fmt","bytes::buf::ext","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","bytes::buf","",10,[[["formatter",3]],["result",6]]],[11,"fmt","bytes","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"eq","","",11,[[["bytes",3]]]],[11,"eq","","",11,[[]]],[11,"eq","","",11,[[]]],[11,"eq","","",11,[[["vec",3]]]],[11,"eq","","",11,[[["string",3]]]],[11,"eq","","",11,[[]]],[11,"eq","","",12,[[["bytesmut",3]]]],[11,"eq","","",12,[[]]],[11,"eq","","",12,[[]]],[11,"eq","","",12,[[["vec",3]]]],[11,"eq","","",12,[[["string",3]]]],[11,"eq","","",12,[[]]],[11,"eq","","",11,[[["bytesmut",3]]]],[11,"eq","","",12,[[["bytes",3]]]],[11,"cmp","","",11,[[["bytes",3]],["ordering",4]]],[11,"cmp","","",12,[[["bytesmut",3]],["ordering",4]]],[11,"partial_cmp","","",11,[[["bytes",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",11,[[],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",11,[[],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",11,[[["vec",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",11,[[["string",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",11,[[],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",12,[[["bytesmut",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",12,[[],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",12,[[],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",12,[[["vec",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",12,[[["string",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",12,[[],[["ordering",4],["option",4]]]],[11,"drop","","",11,[[]]],[11,"drop","","",12,[[]]],[11,"hash","","",11,[[]]],[11,"hash","","",12,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"write_str","","",12,[[],["result",6]]],[11,"write_fmt","","",12,[[["arguments",3]],["result",6]]],[11,"from_iter","","",11,[[["intoiterator",8]]]],[11,"from_iter","","",12,[[["intoiterator",8]]]],[11,"from_iter","","",12,[[["intoiterator",8]]]],[11,"as_ref","","",11,[[]]],[11,"as_ref","","",12,[[]]],[11,"as_mut","","",12,[[]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"next","bytes::buf","",10,[[],["option",4]]],[11,"size_hint","","",10,[[]]],[11,"into_iter","bytes::buf::ext","",5,[[]]],[11,"into_iter","bytes","",11,[[]]],[11,"into_iter","","",12,[[]]],[11,"extend","","",12,[[]]],[11,"extend","","",12,[[]]],[11,"clone","","",11,[[],["bytes",3]]],[11,"clone","","",12,[[],["bytesmut",3]]],[11,"default","","",11,[[],["bytes",3]]],[11,"default","","",12,[[],["bytesmut",3]]],[11,"fill_buf","bytes::buf::ext","",7,[[],["result",6]]],[11,"consume","","",7,[[]]],[11,"read","","",7,[[],["result",6]]],[11,"write","","",9,[[],["result",6]]],[11,"flush","","",9,[[],["result",6]]],[11,"bytes_vectored","bytes::buf","Fills <code>dst</code> with potentially multiple slices starting at …",2,[[]]],[11,"has_remaining","","Returns true if there are any more bytes to consume",2,[[]]],[11,"copy_to_slice","","Copies bytes from <code>self</code> into <code>dst</code>.",2,[[]]],[11,"get_u8","","Gets an unsigned 8 bit integer from <code>self</code>.",2,[[]]],[11,"get_i8","","Gets a signed 8 bit integer from <code>self</code>.",2,[[]]],[11,"get_u16","","Gets an unsigned 16 bit integer from <code>self</code> in big-endian …",2,[[]]],[11,"get_u16_le","","Gets an unsigned 16 bit integer from <code>self</code> in …",2,[[]]],[11,"get_i16","","Gets a signed 16 bit integer from <code>self</code> in big-endian byte …",2,[[]]],[11,"get_i16_le","","Gets a signed 16 bit integer from <code>self</code> in little-endian …",2,[[]]],[11,"get_u32","","Gets an unsigned 32 bit integer from <code>self</code> in the …",2,[[]]],[11,"get_u32_le","","Gets an unsigned 32 bit integer from <code>self</code> in the …",2,[[]]],[11,"get_i32","","Gets a signed 32 bit integer from <code>self</code> in big-endian byte …",2,[[]]],[11,"get_i32_le","","Gets a signed 32 bit integer from <code>self</code> in little-endian …",2,[[]]],[11,"get_u64","","Gets an unsigned 64 bit integer from <code>self</code> in big-endian …",2,[[]]],[11,"get_u64_le","","Gets an unsigned 64 bit integer from <code>self</code> in …",2,[[]]],[11,"get_i64","","Gets a signed 64 bit integer from <code>self</code> in big-endian byte …",2,[[]]],[11,"get_i64_le","","Gets a signed 64 bit integer from <code>self</code> in little-endian …",2,[[]]],[11,"get_u128","","Gets an unsigned 128 bit integer from <code>self</code> in big-endian …",2,[[]]],[11,"get_u128_le","","Gets an unsigned 128 bit integer from <code>self</code> in …",2,[[]]],[11,"get_i128","","Gets a signed 128 bit integer from <code>self</code> in big-endian …",2,[[]]],[11,"get_i128_le","","Gets a signed 128 bit integer from <code>self</code> in little-endian …",2,[[]]],[11,"get_uint","","Gets an unsigned n-byte integer from <code>self</code> in big-endian …",2,[[]]],[11,"get_uint_le","","Gets an unsigned n-byte integer from <code>self</code> in …",2,[[]]],[11,"get_int","","Gets a signed n-byte integer from <code>self</code> in big-endian byte …",2,[[]]],[11,"get_int_le","","Gets a signed n-byte integer from <code>self</code> in little-endian …",2,[[]]],[11,"get_f32","","Gets an IEEE754 single-precision (4 bytes) floating point …",2,[[]]],[11,"get_f32_le","","Gets an IEEE754 single-precision (4 bytes) floating point …",2,[[]]],[11,"get_f64","","Gets an IEEE754 double-precision (8 bytes) floating point …",2,[[]]],[11,"get_f64_le","","Gets an IEEE754 double-precision (8 bytes) floating point …",2,[[]]],[11,"to_bytes","","Consumes remaining bytes inside self and returns new …",2,[[],["bytes",3]]],[11,"has_remaining_mut","","Returns true if there is space in <code>self</code> for more bytes.",3,[[]]],[11,"bytes_vectored_mut","","Fills <code>dst</code> with potentially multiple mutable slices …",3,[[]]],[11,"put","","Transfer bytes into <code>self</code> from <code>src</code> and advance the cursor …",3,[[["buf",8]]]],[11,"put_slice","","Transfer bytes into <code>self</code> from <code>src</code> and advance the cursor …",3,[[]]],[11,"put_u8","","Writes an unsigned 8 bit integer to <code>self</code>.",3,[[]]],[11,"put_i8","","Writes a signed 8 bit integer to <code>self</code>.",3,[[]]],[11,"put_u16","","Writes an unsigned 16 bit integer to <code>self</code> in big-endian …",3,[[]]],[11,"put_u16_le","","Writes an unsigned 16 bit integer to <code>self</code> in …",3,[[]]],[11,"put_i16","","Writes a signed 16 bit integer to <code>self</code> in big-endian byte …",3,[[]]],[11,"put_i16_le","","Writes a signed 16 bit integer to <code>self</code> in little-endian …",3,[[]]],[11,"put_u32","","Writes an unsigned 32 bit integer to <code>self</code> in big-endian …",3,[[]]],[11,"put_u32_le","","Writes an unsigned 32 bit integer to <code>self</code> in …",3,[[]]],[11,"put_i32","","Writes a signed 32 bit integer to <code>self</code> in big-endian byte …",3,[[]]],[11,"put_i32_le","","Writes a signed 32 bit integer to <code>self</code> in little-endian …",3,[[]]],[11,"put_u64","","Writes an unsigned 64 bit integer to <code>self</code> in the …",3,[[]]],[11,"put_u64_le","","Writes an unsigned 64 bit integer to <code>self</code> in …",3,[[]]],[11,"put_i64","","Writes a signed 64 bit integer to <code>self</code> in the big-endian …",3,[[]]],[11,"put_i64_le","","Writes a signed 64 bit integer to <code>self</code> in little-endian …",3,[[]]],[11,"put_u128","","Writes an unsigned 128 bit integer to <code>self</code> in the …",3,[[]]],[11,"put_u128_le","","Writes an unsigned 128 bit integer to <code>self</code> in …",3,[[]]],[11,"put_i128","","Writes a signed 128 bit integer to <code>self</code> in the big-endian …",3,[[]]],[11,"put_i128_le","","Writes a signed 128 bit integer to <code>self</code> in little-endian …",3,[[]]],[11,"put_uint","","Writes an unsigned n-byte integer to <code>self</code> in big-endian …",3,[[]]],[11,"put_uint_le","","Writes an unsigned n-byte integer to <code>self</code> in the …",3,[[]]],[11,"put_int","","Writes a signed n-byte integer to <code>self</code> in big-endian byte …",3,[[]]],[11,"put_int_le","","Writes a signed n-byte integer to <code>self</code> in little-endian …",3,[[]]],[11,"put_f32","","Writes  an IEEE754 single-precision (4 bytes) floating …",3,[[]]],[11,"put_f32_le","","Writes  an IEEE754 single-precision (4 bytes) floating …",3,[[]]],[11,"put_f64","","Writes  an IEEE754 double-precision (8 bytes) floating …",3,[[]]],[11,"put_f64_le","","Writes  an IEEE754 double-precision (8 bytes) floating …",3,[[]]],[11,"new","bytes::buf::ext","Creates a new <code>Chain</code> sequencing the provided values.",5,[[],["chain",3]]],[11,"first_ref","","Gets a reference to the first underlying <code>Buf</code>.",5,[[]]],[11,"first_mut","","Gets a mutable reference to the first underlying <code>Buf</code>.",5,[[]]],[11,"last_ref","","Gets a reference to the last underlying <code>Buf</code>.",5,[[]]],[11,"last_mut","","Gets a mutable reference to the last underlying <code>Buf</code>.",5,[[]]],[11,"into_inner","","Consumes this <code>Chain</code>, returning the underlying values.",5,[[]]],[11,"into_inner","","Consumes this <code>Limit</code>, returning the underlying value.",6,[[]]],[11,"get_ref","","Gets a reference to the underlying <code>BufMut</code>.",6,[[]]],[11,"get_mut","","Gets a mutable reference to the underlying <code>BufMut</code>.",6,[[]]],[11,"limit","","Returns the maximum number of bytes that can be written",6,[[]]],[11,"set_limit","","Sets the maximum number of bytes that can be written.",6,[[]]],[11,"get_ref","","Gets a reference to the underlying <code>Buf</code>.",7,[[]]],[11,"get_mut","","Gets a mutable reference to the underlying <code>Buf</code>.",7,[[]]],[11,"into_inner","","Consumes this <code>Reader</code>, returning the underlying value.",7,[[]]],[11,"into_inner","","Consumes this <code>Take</code>, returning the underlying value.",8,[[]]],[11,"get_ref","","Gets a reference to the underlying <code>Buf</code>.",8,[[]]],[11,"get_mut","","Gets a mutable reference to the underlying <code>Buf</code>.",8,[[]]],[11,"limit","","Returns the maximum number of bytes that can be read.",8,[[]]],[11,"set_limit","","Sets the maximum number of bytes that can be read.",8,[[]]],[11,"get_ref","","Gets a reference to the underlying <code>BufMut</code>.",9,[[]]],[11,"get_mut","","Gets a mutable reference to the underlying <code>BufMut</code>.",9,[[]]],[11,"into_inner","","Consumes this <code>Writer</code>, returning the underlying value.",9,[[]]],[11,"new","bytes::buf","Creates an iterator over the bytes contained by the …",10,[[],["intoiter",3]]],[11,"into_inner","","Consumes this <code>IntoIter</code>, returning the underlying value.",10,[[]]],[11,"get_ref","","Gets a reference to the underlying <code>Buf</code>.",10,[[]]],[11,"get_mut","","Gets a mutable reference to the underlying <code>Buf</code>.",10,[[]]],[11,"new","bytes","Creates a new empty <code>Bytes</code>.",11,[[],["bytes",3]]],[11,"from_static","","Creates a new <code>Bytes</code> from a static slice.",11,[[],["bytes",3]]],[11,"len","","Returns the number of bytes contained in this <code>Bytes</code>.",11,[[]]],[11,"is_empty","","Returns true if the <code>Bytes</code> has a length of 0.",11,[[]]],[11,"copy_from_slice","","Creates <code>Bytes</code> instance from slice, by copying it.",11,[[]]],[11,"slice","","Returns a slice of self for the provided range.",11,[[],["bytes",3]]],[11,"slice_ref","","Returns a slice of self that is equivalent to the given …",11,[[],["bytes",3]]],[11,"split_off","","Splits the bytes into two at the given index.",11,[[],["bytes",3]]],[11,"split_to","","Splits the bytes into two at the given index.",11,[[],["bytes",3]]],[11,"truncate","","Shortens the buffer, keeping the first <code>len</code> bytes and …",11,[[]]],[11,"clear","","Clears the buffer, removing all data.",11,[[]]],[11,"with_capacity","","Creates a new <code>BytesMut</code> with the specified capacity.",12,[[],["bytesmut",3]]],[11,"new","","Creates a new <code>BytesMut</code> with default capacity.",12,[[],["bytesmut",3]]],[11,"len","","Returns the number of bytes contained in this <code>BytesMut</code>.",12,[[]]],[11,"is_empty","","Returns true if the <code>BytesMut</code> has a length of 0.",12,[[]]],[11,"capacity","","Returns the number of bytes the <code>BytesMut</code> can hold without …",12,[[]]],[11,"freeze","","Converts <code>self</code> into an immutable <code>Bytes</code>.",12,[[],["bytes",3]]],[11,"split_off","","Splits the bytes into two at the given index.",12,[[],["bytesmut",3]]],[11,"split","","Removes the bytes from the current view, returning them …",12,[[],["bytesmut",3]]],[11,"split_to","","Splits the buffer into two at the given index.",12,[[],["bytesmut",3]]],[11,"truncate","","Shortens the buffer, keeping the first <code>len</code> bytes and …",12,[[]]],[11,"clear","","Clears the buffer, removing all data.",12,[[]]],[11,"resize","","Resizes the buffer so that <code>len</code> is equal to <code>new_len</code>.",12,[[]]],[11,"set_len","","Sets the length of the buffer.",12,[[]]],[11,"reserve","","Reserves capacity for at least <code>additional</code> more bytes to …",12,[[]]],[11,"extend_from_slice","","Appends given bytes to this <code>BytesMut</code>.",12,[[]]],[11,"unsplit","","Absorbs a <code>BytesMut</code> that was previously split off.",12,[[["bytesmut",3]]]]],"p":[[8,"BufExt"],[8,"BufMutExt"],[8,"Buf"],[8,"BufMut"],[3,"IoSliceMut"],[3,"Chain"],[3,"Limit"],[3,"Reader"],[3,"Take"],[3,"Writer"],[3,"IntoIter"],[3,"Bytes"],[3,"BytesMut"]]},\
"cfg_if":{"doc":"A macro for defining <code>#[cfg]</code> if-else statements.","i":[[14,"cfg_if","cfg_if","The main macro provided by this crate. See crate …",null,null]],"p":[]},\
"enum_primitive":{"doc":"This crate exports a macro <code>enum_from_primitive!</code> that …","i":[[4,"Option","enum_primitive","The <code>Option</code> type. See the module level documentation for …",null,null],[13,"None","","No value",0,null],[13,"Some","","Some value <code>T</code>",0,null],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Converts an <code>isize</code> to return an optional value of this …",1,[[],["option",4]]],[11,"from_i8","","Converts an <code>i8</code> to return an optional value of this type. …",1,[[],["option",4]]],[11,"from_i16","","Converts an <code>i16</code> to return an optional value of this type. …",1,[[],["option",4]]],[11,"from_i32","","Converts an <code>i32</code> to return an optional value of this type. …",1,[[],["option",4]]],[10,"from_i64","","Converts an <code>i64</code> to return an optional value of this type. …",1,[[],["option",4]]],[11,"from_i128","","Converts an <code>i128</code> to return an optional value of this …",1,[[],["option",4]]],[11,"from_usize","","Converts a <code>usize</code> to return an optional value of this …",1,[[],["option",4]]],[11,"from_u8","","Converts an <code>u8</code> to return an optional value of this type. …",1,[[],["option",4]]],[11,"from_u16","","Converts an <code>u16</code> to return an optional value of this type. …",1,[[],["option",4]]],[11,"from_u32","","Converts an <code>u32</code> to return an optional value of this type. …",1,[[],["option",4]]],[10,"from_u64","","Converts an <code>u64</code> to return an optional value of this type. …",1,[[],["option",4]]],[11,"from_u128","","Converts an <code>u128</code> to return an optional value of this …",1,[[],["option",4]]],[11,"from_f32","","Converts a <code>f32</code> to return an optional value of this type. …",1,[[],["option",4]]],[11,"from_f64","","Converts a <code>f64</code> to return an optional value of this type. …",1,[[],["option",4]]],[14,"enum_from_primitive_impl_ty","","Helper macro for internal use by <code>enum_from_primitive!</code>.",null,null],[14,"enum_from_primitive_impl","","Helper macro for internal use by <code>enum_from_primitive!</code>.",null,null],[14,"enum_from_primitive","","Wrap this macro around an <code>enum</code> declaration to get an …",null,null],[11,"from","","",0,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"product","","Takes each element in the [<code>Iterator</code>]: if it is a [<code>None</code>], …",0,[[],["option",4]]],[11,"fmt","","",0,[[["formatter",3]],[["result",4],["error",3]]]],[11,"from_iter","","Takes each element in the [<code>Iterator</code>]: if it is [<code>None</code>][…",0,[[],["option",4]]],[11,"default","","Returns [<code>None</code>][Option::None].",0,[[],["option",4]]],[11,"cmp","","",0,[[["option",4]],["ordering",4]]],[11,"clone","","",0,[[],["option",4]]],[11,"clone_from","","",0,[[["option",4]]]],[11,"from","","Converts from <code>&Option<T></code> to <code>Option<&T></code>.",0,[[["option",4]],["option",4]]],[11,"from","","Converts from <code>&mut Option<T></code> to <code>Option<&mut T></code>",0,[[["option",4]],["option",4]]],[11,"from","","Copies <code>val</code> into a new <code>Some</code>.",0,[[],["option",4]]],[11,"into_iter","","Returns a consuming iterator over the possibly contained …",0,[[],["intoiter",3]]],[11,"hash","","",0,[[]]],[11,"into_result","","",0,[[],[["noneerror",3],["result",4]]]],[11,"from_ok","","",0,[[],["option",4]]],[11,"from_error","","",0,[[["noneerror",3]],["option",4]]],[11,"eq","","",0,[[["option",4]]]],[11,"ne","","",0,[[["option",4]]]],[11,"sum","","Takes each element in the [<code>Iterator</code>]: if it is a [<code>None</code>], …",0,[[],["option",4]]],[11,"partial_cmp","","",0,[[["option",4]],[["option",4],["ordering",4]]]],[11,"lt","","",0,[[["option",4]]]],[11,"le","","",0,[[["option",4]]]],[11,"gt","","",0,[[["option",4]]]],[11,"ge","","",0,[[["option",4]]]],[11,"is_some","","Returns <code>true</code> if the option is a [<code>Some</code>] value.",0,[[]]],[11,"is_none","","Returns <code>true</code> if the option is a [<code>None</code>] value.",0,[[]]],[11,"contains","","Returns <code>true</code> if the option is a [<code>Some</code>] value containing …",0,[[]]],[11,"as_ref","","Converts from <code>&Option<T></code> to <code>Option<&T></code>.",0,[[],["option",4]]],[11,"as_mut","","Converts from <code>&mut Option<T></code> to <code>Option<&mut T></code>.",0,[[],["option",4]]],[11,"as_pin_ref","","Converts from [<code>Pin</code>]<code><&Option<T>></code> to <code>Option<</code>[<code>Pin</code>]<code><&T>></code>.",0,[[["option",4],["pin",3]],[["option",4],["pin",3]]]],[11,"as_pin_mut","","Converts from [<code>Pin</code>]<code><&mut Option<T>></code> to <code>Option<</code>[<code>Pin</code>]…",0,[[["option",4],["pin",3]],[["pin",3],["option",4]]]],[11,"expect","","Returns the contained [<code>Some</code>] value, consuming the <code>self</code> …",0,[[]]],[11,"unwrap","","Returns the contained [<code>Some</code>] value, consuming the <code>self</code> …",0,[[]]],[11,"unwrap_or","","Returns the contained [<code>Some</code>] value or a provided default.",0,[[]]],[11,"unwrap_or_else","","Returns the contained [<code>Some</code>] value or computes it from a …",0,[[]]],[11,"map","","Maps an <code>Option<T></code> to <code>Option<U></code> by applying a function to …",0,[[],["option",4]]],[11,"map_or","","Applies a function to the contained value (if any), or …",0,[[]]],[11,"map_or_else","","Applies a function to the contained value (if any), or …",0,[[]]],[11,"ok_or","","Transforms the <code>Option<T></code> into a [<code>Result<T, E></code>], mapping …",0,[[],["result",4]]],[11,"ok_or_else","","Transforms the <code>Option<T></code> into a [<code>Result<T, E></code>], mapping …",0,[[],["result",4]]],[11,"insert","","Inserts <code>value</code> into the option then returns a mutable …",0,[[]]],[11,"iter","","Returns an iterator over the possibly contained value.",0,[[],["iter",3]]],[11,"iter_mut","","Returns a mutable iterator over the possibly contained …",0,[[],["itermut",3]]],[11,"and","","Returns [<code>None</code>] if the option is [<code>None</code>], otherwise returns …",0,[[["option",4]],["option",4]]],[11,"and_then","","Returns [<code>None</code>] if the option is [<code>None</code>], otherwise calls <code>f</code> …",0,[[],["option",4]]],[11,"filter","","Returns [<code>None</code>] if the option is [<code>None</code>], otherwise calls …",0,[[],["option",4]]],[11,"or","","Returns the option if it contains a value, otherwise …",0,[[["option",4]],["option",4]]],[11,"or_else","","Returns the option if it contains a value, otherwise …",0,[[],["option",4]]],[11,"xor","","Returns [<code>Some</code>] if exactly one of <code>self</code>, <code>optb</code> is [<code>Some</code>], …",0,[[["option",4]],["option",4]]],[11,"get_or_insert","","Inserts <code>value</code> into the option if it is [<code>None</code>], then …",0,[[]]],[11,"get_or_insert_with","","Inserts a value computed from <code>f</code> into the option if it is […",0,[[]]],[11,"take","","Takes the value out of the option, leaving a [<code>None</code>] in …",0,[[],["option",4]]],[11,"replace","","Replaces the actual value in the option by the value …",0,[[],["option",4]]],[11,"zip","","Zips <code>self</code> with another <code>Option</code>.",0,[[["option",4]],["option",4]]],[11,"zip_with","","Zips <code>self</code> and another <code>Option</code> with function <code>f</code>.",0,[[["option",4]],["option",4]]],[11,"copied","","Maps an <code>Option<&T></code> to an <code>Option<T></code> by copying the …",0,[[],["option",4]]],[11,"copied","","Maps an <code>Option<&mut T></code> to an <code>Option<T></code> by copying the …",0,[[],["option",4]]],[11,"cloned","","Maps an <code>Option<&T></code> to an <code>Option<T></code> by cloning the …",0,[[],["option",4]]],[11,"cloned","","Maps an <code>Option<&mut T></code> to an <code>Option<T></code> by cloning the …",0,[[],["option",4]]],[11,"expect_none","","Consumes <code>self</code> while expecting [<code>None</code>] and returning …",0,[[]]],[11,"unwrap_none","","Consumes <code>self</code> while expecting [<code>None</code>] and returning …",0,[[]]],[11,"unwrap_or_default","","Returns the contained [<code>Some</code>] value or a default",0,[[]]],[11,"as_deref","","Converts from <code>Option<T></code> (or <code>&Option<T></code>) to …",0,[[],["option",4]]],[11,"as_deref_mut","","Converts from <code>Option<T></code> (or <code>&mut Option<T></code>) to …",0,[[],["option",4]]],[11,"transpose","","Transposes an <code>Option</code> of a [<code>Result</code>] into a [<code>Result</code>] of an …",0,[[],[["result",4],["option",4]]]],[11,"flatten","","Converts from <code>Option<Option<T>></code> to <code>Option<T></code>",0,[[],["option",4]]]],"p":[[4,"Option"],[8,"FromPrimitive"]]},\
"fnv":{"doc":"An implementation of the [Fowler–Noll–Vo hash function…","i":[[3,"FnvHasher","fnv","An implementation of the Fowler–Noll–Vo hash function.",null,null],[11,"with_key","","Create an FNV hasher starting with a state corresponding …",0,[[],["fnvhasher",3]]],[6,"FnvBuildHasher","","A builder for default FNV hashers.",null,null],[6,"FnvHashMap","","A <code>HashMap</code> using a default FNV hasher.",null,null],[6,"FnvHashSet","","A <code>HashSet</code> using a default FNV hasher.",null,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"default","","",0,[[],["fnvhasher",3]]],[11,"finish","","",0,[[]]],[11,"write","","",0,[[]]]],"p":[[3,"FnvHasher"]]},\
"futures":{"doc":"Abstractions for asynchronous programming.","i":[[14,"ready","futures","Extracts the successful type of a <code>Poll<T></code>.",null,null],[14,"pin_mut","","Pins a value on the stack.",null,null],[14,"pending","","A macro which yields to the event loop once.",null,null],[14,"poll","","A macro which returns the result of polling a future once …",null,null],[14,"join","","Polls multiple futures simultaneously, returning a tuple …",null,null],[14,"try_join","","Polls multiple futures simultaneously, resolving to a […",null,null],[14,"select_biased","","Polls multiple futures and streams simultaneously, …",null,null],[14,"select","","Polls multiple futures and streams simultaneously, …",null,null],[0,"channel","","Cross-task communication.",null,null],[0,"oneshot","futures::channel","A channel for sending a single message between …",null,null],[3,"Receiver","futures::channel::oneshot","A future for a value that will be provided by another …",null,null],[3,"Sender","","A means of transmitting a single value to another task.",null,null],[5,"channel","","Creates a new one-shot channel for sending values across …",null,[[]]],[3,"Cancellation","","A future that resolves when the receiving end of a …",null,null],[3,"Canceled","","Error returned from a <code>Receiver</code> when the corresponding …",null,null],[0,"mpsc","futures::channel","A multi-producer, single-consumer queue for sending …",null,null],[3,"Sender","futures::channel::mpsc","The transmission end of a bounded mpsc channel.",null,null],[3,"UnboundedSender","","The transmission end of an unbounded mpsc channel.",null,null],[3,"Receiver","","The receiving end of a bounded mpsc channel.",null,null],[3,"UnboundedReceiver","","The receiving end of an unbounded mpsc channel.",null,null],[3,"SendError","","The error type for <code>Sender</code>s used as <code>Sink</code>s.",null,null],[3,"TrySendError","","The error type returned from <code>try_send</code>.",null,null],[3,"TryRecvError","","The error type returned from <code>try_next</code>.",null,null],[5,"channel","","Creates a bounded mpsc channel for communicating between …",null,[[]]],[5,"unbounded","","Creates an unbounded mpsc channel for communicating …",null,[[]]],[0,"executor","futures","Task execution.",null,null],[3,"BlockingStream","futures::executor","An iterator which blocks on values from a stream until …",null,null],[3,"Enter","","Represents an executor context.",null,null],[3,"EnterError","","An error returned by <code>enter</code> if an execution scope has …",null,null],[3,"LocalSpawner","","A handle to a <code>LocalPool</code> that implements <code>Spawn</code>.",null,null],[3,"LocalPool","","A single-threaded task pool for polling futures to …",null,null],[5,"block_on","","Run a future to completion on the current thread.",null,[[]]],[5,"block_on_stream","","Turn a stream into a blocking iterator.",null,[[],["blockingstream",3]]],[5,"enter","","Marks the current thread as being within the dynamic …",null,[[],[["result",4],["entererror",3],["enter",3]]]],[0,"future","futures","Asynchronous values.",null,null],[8,"Future","futures::future","A future represents an asynchronous computation.",null,null],[16,"Output","","The type of value produced on completion.",0,null],[10,"poll","","Attempt to resolve the future to a final value, …",0,[[["context",3],["pin",3]],["poll",4]]],[8,"TryFuture","","A convenience for futures that return <code>Result</code> values that …",null,null],[16,"Ok","","The type of successful values yielded by this future",1,null],[16,"Error","","The type of failures yielded by this future",1,null],[10,"try_poll","","Poll this <code>TryFuture</code> as if it were a <code>Future</code>.",1,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[8,"FusedFuture","","A future which tracks whether or not the underlying future…",null,null],[10,"is_terminated","","Returns <code>true</code> if the underlying future should no longer be …",2,[[]]],[6,"BoxFuture","","An owned dynamically typed [<code>Future</code>] for use in cases …",null,null],[6,"LocalBoxFuture","","<code>BoxFuture</code>, but without the <code>Send</code> requirement.",null,null],[3,"FutureObj","","A custom trait object for polling futures, roughly akin to…",null,null],[3,"LocalFutureObj","","A custom trait object for polling futures, roughly akin to…",null,null],[8,"UnsafeFutureObj","","A custom implementation of a future trait object for …",null,null],[10,"into_raw","","Convert an owned instance into a (conceptually owned) fat …",3,[[]]],[10,"drop","","Drops the future represented by the given fat pointer.",3,[[]]],[5,"lazy","","Creates a new future that allows delayed execution of a …",null,[[],["lazy",3]]],[3,"Lazy","","Future for the [<code>lazy</code>] function.",null,null],[5,"maybe_done","","Wraps a future into a <code>MaybeDone</code>",null,[[],["maybedone",4]]],[4,"MaybeDone","","A future that may have completed.",null,null],[13,"Future","","A not-yet-completed future",4,null],[13,"Done","","The output of the completed future",4,null],[13,"Gone","","The empty variant after the result of a [<code>MaybeDone</code>] has …",4,null],[5,"pending","","Creates a future which never resolves, representing a …",null,[[],["pending",3]]],[3,"Pending","","Future for the [<code>pending()</code>] function.",null,null],[5,"poll_fn","","Creates a new future wrapping around a function returning …",null,[[],["pollfn",3]]],[3,"PollFn","","Future for the [<code>poll_fn</code>] function.",null,null],[5,"ready","","Creates a future that is immediately ready with a value.",null,[[],["ready",3]]],[5,"ok","","Create a future that is immediately ready with a success …",null,[[],[["result",4],["ready",3]]]],[5,"err","","Create a future that is immediately ready with an error …",null,[[],[["result",4],["ready",3]]]],[3,"Ready","","Future for the <code>ready</code> function.",null,null],[5,"join","","Joins the result of two futures, waiting for them both to …",null,[[],["join",3]]],[5,"join3","","Same as <code>join</code>, but with more futures.",null,[[],["join3",3]]],[5,"join4","","Same as <code>join</code>, but with more futures.",null,[[],["join4",3]]],[5,"join5","","Same as <code>join</code>, but with more futures.",null,[[],["join5",3]]],[3,"Join","","Future for the <code>join</code> function.",null,null],[3,"Join3","","Future for the [<code>join3</code>] function.",null,null],[3,"Join4","","Future for the [<code>join4</code>] function.",null,null],[3,"Join5","","Future for the [<code>join5</code>] function.",null,null],[5,"select","","Waits for either one of two differently-typed futures to …",null,[[],["select",3]]],[3,"Select","","Future for the [<code>select()</code>] function.",null,null],[5,"try_join","","Joins the result of two futures, waiting for them both to …",null,[[],["tryjoin",3]]],[5,"try_join3","","Same as <code>try_join</code>, but with more futures.",null,[[],["tryjoin3",3]]],[5,"try_join4","","Same as <code>try_join</code>, but with more futures.",null,[[],["tryjoin4",3]]],[5,"try_join5","","Same as <code>try_join</code>, but with more futures.",null,[[],["tryjoin5",3]]],[3,"TryJoin","","Future for the <code>try_join</code> function.",null,null],[3,"TryJoin3","","Future for the [<code>try_join3</code>] function.",null,null],[3,"TryJoin4","","Future for the [<code>try_join4</code>] function.",null,null],[3,"TryJoin5","","Future for the [<code>try_join5</code>] function.",null,null],[5,"try_select","","Waits for either one of two differently-typed futures to …",null,[[],["tryselect",3]]],[3,"TrySelect","","Future for the [<code>try_select()</code>] function.",null,null],[4,"Either","","Combines two different futures, streams, or sinks having …",null,null],[13,"Left","","First branch of the type",5,null],[13,"Right","","Second branch of the type",5,null],[3,"OptionFuture","","A future representing a value which may or may not be …",null,null],[8,"FutureExt","","An extension trait for <code>Future</code>s that provides a variety of …",null,null],[11,"map","","Map this future\'s output to a different type, returning a …",6,[[],["map",3]]],[11,"map_into","","Map this future\'s output to a different type, returning a …",6,[[],["mapinto",3]]],[11,"then","","Chain on a computation for when a future finished, …",6,[[],["then",3]]],[11,"left_future","","Wrap this future in an <code>Either</code> future, making it the …",6,[[],["either",4]]],[11,"right_future","","Wrap this future in an <code>Either</code> future, making it the …",6,[[],["either",4]]],[11,"into_stream","","Convert this future into a single element stream.",6,[[],["intostream",3]]],[11,"flatten","","Flatten the execution of this future when the output of …",6,[[],["flatten",3]]],[11,"flatten_stream","","Flatten the execution of this future when the successful …",6,[[],["flattenstream",3]]],[11,"fuse","","Fuse a future such that <code>poll</code> will never again be called …",6,[[],["fuse",3]]],[11,"inspect","","Do something with the output of a future before passing …",6,[[],["inspect",3]]],[11,"catch_unwind","","Catches unwinding panics while polling the future.",6,[[],["catchunwind",3]]],[11,"shared","","Create a cloneable handle to this future where all …",6,[[],["shared",3]]],[11,"remote_handle","","Turn this future into a future that yields <code>()</code> on …",6,[[]]],[11,"boxed","","Wrap the future in a Box, pinning it.",6,[[],[["box",3],["pin",3]]]],[11,"boxed_local","","Wrap the future in a Box, pinning it.",6,[[],[["pin",3],["box",3]]]],[11,"unit_error","","Turns a <code>Future<Output = T></code> into a …",6,[[],["uniterror",3]]],[11,"never_error","","Turns a <code>Future<Output = T></code> into a …",6,[[],["nevererror",3]]],[11,"poll_unpin","","A convenience for calling <code>Future::poll</code> on <code>Unpin</code> future …",6,[[["context",3]],["poll",4]]],[11,"now_or_never","","Evaluates and consumes the future, returning the …",6,[[],["option",4]]],[3,"FlattenStream","","Stream for the <code>flatten_stream</code> method.",null,null],[3,"Flatten","","Future for the <code>flatten</code> method.",null,null],[3,"Fuse","","Future for the <code>fuse</code> method.",null,null],[3,"Inspect","","Future for the <code>inspect</code> method.",null,null],[3,"IntoStream","","Stream for the <code>into_stream</code> method.",null,null],[3,"Map","","Future for the <code>flatten</code> method.",null,null],[3,"Then","","Future for the <code>then</code> method.",null,null],[3,"UnitError","","Future for the <code>unit_error</code> combinator.",null,null],[3,"NeverError","","Future for the <code>never_error</code> combinator.",null,null],[8,"TryFutureExt","","Adapters specific to [<code>Result</code>]-returning futures",null,null],[11,"flatten_sink","","Flattens the execution of this future when the successful …",7,[[],["flattensink",3]]],[11,"map_ok","","Maps this future\'s success value to a different value.",7,[[],["mapok",3]]],[11,"map_ok_or_else","","Maps this future\'s success value to a different value, …",7,[[],["mapokorelse",3]]],[11,"map_err","","Maps this future\'s error value to a different value.",7,[[],["maperr",3]]],[11,"err_into","","Maps this future\'s <code>Error</code> to a new error type using the …",7,[[],["errinto",3]]],[11,"ok_into","","Maps this future\'s <code>Ok</code> to a new type using the <code>Into</code> trait.",7,[[],["okinto",3]]],[11,"and_then","","Executes another future after this one resolves …",7,[[],["andthen",3]]],[11,"or_else","","Executes another future if this one resolves to an error. …",7,[[],["orelse",3]]],[11,"inspect_ok","","Do something with the success value of a future before …",7,[[],["inspectok",3]]],[11,"inspect_err","","Do something with the error value of a future before …",7,[[],["inspecterr",3]]],[11,"try_flatten","","Flatten the execution of this future when the successful …",7,[[],["tryflatten",3]]],[11,"try_flatten_stream","","Flatten the execution of this future when the successful …",7,[[],["tryflattenstream",3]]],[11,"unwrap_or_else","","Unwraps this future\'s ouput, producing a future with this …",7,[[],["unwraporelse",3]]],[11,"into_future","","Wraps a [<code>TryFuture</code>] into a type that implements <code>Future</code>.",7,[[],["intofuture",3]]],[11,"try_poll_unpin","","A convenience method for calling [<code>TryFuture::try_poll</code>] on …",7,[[["context",3]],[["poll",4],["result",4]]]],[3,"AndThen","","Future for the <code>and_then</code> method.",null,null],[3,"ErrInto","","Future for the <code>err_into</code> method.",null,null],[3,"FlattenSink","","Sink for the <code>flatten_sink</code> method.",null,null],[3,"IntoFuture","","Future for the <code>into_future</code> method.",null,null],[3,"MapErr","","Future for the <code>map_err</code> method.",null,null],[3,"MapOk","","Future for the <code>map_ok</code> method.",null,null],[3,"OrElse","","Future for the <code>or_else</code> method.",null,null],[3,"InspectOk","","Future for the <code>inspect_ok</code> method.",null,null],[3,"InspectErr","","Future for the <code>inspect_err</code> method.",null,null],[3,"TryFlattenStream","","Future for the <code>try_flatten_stream</code> method.",null,null],[3,"UnwrapOrElse","","Future for the <code>unwrap_or_else</code> method.",null,null],[5,"join_all","","Creates a future which represents a collection of the …",null,[[],["joinall",3]]],[3,"JoinAll","","Future for the [<code>join_all</code>] function.",null,null],[5,"select_all","","Creates a new future which will select over a list of …",null,[[],["selectall",3]]],[3,"SelectAll","","Future for the [<code>select_all</code>] function.",null,null],[5,"try_join_all","","Creates a future which represents either a collection of …",null,[[],["tryjoinall",3]]],[3,"TryJoinAll","","Future for the [<code>try_join_all</code>] function.",null,null],[5,"select_ok","","Creates a new future which will select the first …",null,[[],["selectok",3]]],[3,"SelectOk","","Future for the [<code>select_ok</code>] function.",null,null],[5,"abortable","","Creates a new <code>Abortable</code> future and a <code>AbortHandle</code> which …",null,[[]]],[3,"Abortable","","A future which can be remotely short-circuited using an …",null,null],[3,"AbortHandle","","A handle to a <code>Abortable</code> future.",null,null],[3,"AbortRegistration","","A registration handle for a <code>Abortable</code> future. Values of …",null,null],[3,"Aborted","","Indicator that the <code>Abortable</code> future was aborted.",null,null],[3,"Remote","","A future which sends its output to the corresponding …",null,null],[3,"RemoteHandle","","The handle to a remote future returned by <code>remote_handle</code>. …",null,null],[3,"CatchUnwind","","Future for the <code>catch_unwind</code> method.",null,null],[3,"Shared","","Future for the <code>shared</code> method.",null,null],[0,"io","futures","Asynchronous I/O.",null,null],[8,"AsyncRead","futures::io","Read bytes asynchronously.",null,null],[10,"poll_read","","Attempt to read from the <code>AsyncRead</code> into <code>buf</code>.",8,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_read_vectored","","Attempt to read from the <code>AsyncRead</code> into <code>bufs</code> using …",8,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[8,"AsyncWrite","","Write bytes asynchronously.",null,null],[10,"poll_write","","Attempt to write bytes from <code>buf</code> into the object.",9,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_write_vectored","","Attempt to write bytes from <code>bufs</code> into the object using …",9,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[10,"poll_flush","","Attempt to flush the object, ensuring that any buffered …",9,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[10,"poll_close","","Attempt to close the object.",9,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[8,"AsyncSeek","","Seek bytes asynchronously.",null,null],[10,"poll_seek","","Attempt to seek to an offset, in bytes, in a stream.",10,[[["seekfrom",4],["context",3],["pin",3]],[["poll",4],["result",4]]]],[8,"AsyncBufRead","","Read bytes asynchronously.",null,null],[10,"poll_fill_buf","","Attempt to return the contents of the internal buffer, …",11,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[10,"consume","","Tells this buffer that <code>amt</code> bytes have been consumed from …",11,[[["pin",3]]]],[3,"Error","","The error type for I/O operations of the <code>Read</code>, <code>Write</code>, <code>Seek</code>…",null,null],[4,"ErrorKind","","A list specifying general categories of I/O error.",null,null],[13,"NotFound","","An entity was not found, often a file.",12,null],[13,"PermissionDenied","","The operation lacked the necessary privileges to complete.",12,null],[13,"ConnectionRefused","","The connection was refused by the remote server.",12,null],[13,"ConnectionReset","","The connection was reset by the remote server.",12,null],[13,"ConnectionAborted","","The connection was aborted (terminated) by the remote …",12,null],[13,"NotConnected","","The network operation failed because it was not connected …",12,null],[13,"AddrInUse","","A socket address could not be bound because the address …",12,null],[13,"AddrNotAvailable","","A nonexistent interface was requested or the requested …",12,null],[13,"BrokenPipe","","The operation failed because a pipe was closed.",12,null],[13,"AlreadyExists","","An entity already exists, often a file.",12,null],[13,"WouldBlock","","The operation needs to block to complete, but the …",12,null],[13,"InvalidInput","","A parameter was incorrect.",12,null],[13,"InvalidData","","Data not valid for the operation were encountered.",12,null],[13,"TimedOut","","The I/O operation\'s timeout expired, causing it to be …",12,null],[13,"WriteZero","","An error returned when an operation could not be …",12,null],[13,"Interrupted","","This operation was interrupted.",12,null],[13,"Other","","Any I/O error not part of this list.",12,null],[13,"UnexpectedEof","","An error returned when an operation could not be …",12,null],[3,"IoSlice","","A buffer type used with <code>Write::write_vectored</code>.",null,null],[3,"IoSliceMut","","A buffer type used with <code>Read::read_vectored</code>.",null,null],[6,"Result","","A specialized <code>Result</code> type for I/O operations.",null,null],[4,"SeekFrom","","Enumeration of possible methods to seek within an I/O …",null,null],[13,"Start","","Sets the offset to the provided number of bytes.",13,null],[13,"End","","Sets the offset to the size of this object plus the …",13,null],[13,"Current","","Sets the offset to the current position plus the …",13,null],[8,"AsyncReadExt","","An extension trait which adds utility methods to <code>AsyncRead</code>…",null,null],[11,"chain","","Creates an adaptor which will chain this stream with …",14,[[],["chain",3]]],[11,"read","","Tries to read some bytes directly into the given <code>buf</code> in …",14,[[],["read",3]]],[11,"read_vectored","","Creates a future which will read from the <code>AsyncRead</code> into …",14,[[],["readvectored",3]]],[11,"read_exact","","Creates a future which will read exactly enough bytes to …",14,[[],["readexact",3]]],[11,"read_to_end","","Creates a future which will read all the bytes from this …",14,[[["vec",3]],["readtoend",3]]],[11,"read_to_string","","Creates a future which will read all the bytes from this …",14,[[["string",3]],["readtostring",3]]],[11,"split","","Helper method for splitting this read/write object into …",14,[[]]],[11,"take","","Creates an AsyncRead adapter which will read at most <code>limit</code>…",14,[[],["take",3]]],[8,"AsyncWriteExt","","An extension trait which adds utility methods to …",null,null],[11,"flush","","Creates a future which will entirely flush this <code>AsyncWrite</code>…",15,[[],["flush",3]]],[11,"close","","Creates a future which will entirely close this <code>AsyncWrite</code>…",15,[[],["close",3]]],[11,"write","","Creates a future which will write bytes from <code>buf</code> into the …",15,[[],["write",3]]],[11,"write_vectored","","Creates a future which will write bytes from <code>bufs</code> into …",15,[[],["writevectored",3]]],[11,"write_all","","Write data into this object.",15,[[],["writeall",3]]],[11,"into_sink","","Allow using an [<code>AsyncWrite</code>] as a <code>Sink</code><code><Item: AsRef<[u8]>></code>.",15,[[],["intosink",3]]],[8,"AsyncSeekExt","","An extension trait which adds utility methods to <code>AsyncSeek</code>…",null,null],[11,"seek","","Creates a future which will seek an IO object, and then …",16,[[["seekfrom",4]],["seek",3]]],[8,"AsyncBufReadExt","","An extension trait which adds utility methods to …",null,null],[11,"read_until","","Creates a future which will read all the bytes associated …",17,[[["vec",3]],["readuntil",3]]],[11,"read_line","","Creates a future which will read all the bytes associated …",17,[[["string",3]],["readline",3]]],[11,"lines","","Returns a stream over the lines of this reader. This …",17,[[],["lines",3]]],[3,"AllowStdIo","","A simple wrapper type which allows types which implement …",null,null],[3,"BufReader","","The <code>BufReader</code> struct adds buffering to any reader.",null,null],[3,"BufWriter","","Wraps a writer and buffers its output.",null,null],[3,"Cursor","","A <code>Cursor</code> wraps an in-memory buffer and provides it with a …",null,null],[3,"Chain","","Reader for the <code>chain</code> method.",null,null],[3,"Close","","Future for the <code>close</code> method.",null,null],[5,"copy","","Creates a future which copies all the bytes from one …",null,[[],["copy",3]]],[3,"Copy","","Future for the [<code>copy()</code>] function.",null,null],[5,"copy_buf","","Creates a future which copies all the bytes from one …",null,[[],["copybuf",3]]],[3,"CopyBuf","","Future for the [<code>copy_buf()</code>] function.",null,null],[5,"empty","","Constructs a new handle to an empty reader.",null,[[],["empty",3]]],[3,"Empty","","Reader for the [<code>empty()</code>] function.",null,null],[3,"Flush","","Future for the <code>flush</code> method.",null,null],[3,"IntoSink","","Sink for the <code>into_sink</code> method.",null,null],[3,"Lines","","Stream for the <code>lines</code> method.",null,null],[3,"Read","","Future for the <code>read</code> method.",null,null],[3,"ReadExact","","Future for the <code>read_exact</code> method.",null,null],[3,"ReadHalf","","The readable half of an object returned from …",null,null],[3,"ReadLine","","Future for the <code>read_line</code> method.",null,null],[3,"ReadToEnd","","Future for the <code>read_to_end</code> method.",null,null],[3,"ReadToString","","Future for the <code>read_to_string</code> method.",null,null],[3,"ReadUntil","","Future for the <code>read_until</code> method.",null,null],[3,"ReadVectored","","Future for the <code>read_vectored</code> method.",null,null],[5,"repeat","","Creates an instance of a reader that infinitely repeats …",null,[[],["repeat",3]]],[3,"Repeat","","Reader for the [<code>repeat()</code>] function.",null,null],[3,"ReuniteError","","Error indicating a <code>ReadHalf<T></code> and <code>WriteHalf<T></code> were not …",null,null],[12,"0","","",18,null],[12,"1","","",18,null],[3,"Seek","","Future for the <code>seek</code> method.",null,null],[5,"sink","","Creates an instance of a writer which will successfully …",null,[[],["sink",3]]],[3,"Sink","","Writer for the [<code>sink()</code>] function.",null,null],[3,"Take","","Reader for the <code>take</code> method.",null,null],[3,"Window","","A owned window around an underlying buffer.",null,null],[3,"Write","","Future for the <code>write</code> method.",null,null],[3,"WriteAll","","Future for the <code>write_all</code> method.",null,null],[3,"WriteHalf","","The writable half of an object returned from …",null,null],[3,"WriteVectored","","Future for the <code>write_vectored</code> method.",null,null],[0,"lock","futures","Futures-powered synchronization primitives.",null,null],[3,"MappedMutexGuard","futures::lock","An RAII guard returned by the <code>MutexGuard::map</code> and …",null,null],[3,"Mutex","","A futures-aware mutex.",null,null],[3,"MutexLockFuture","","A future which resolves when the target mutex has been …",null,null],[3,"MutexGuard","","An RAII guard returned by the <code>lock</code> and <code>try_lock</code> methods. …",null,null],[0,"prelude","futures","A \\\"prelude\\\" for crates using the <code>futures</code> crate.",null,null],[8,"Future","futures::prelude","A future represents an asynchronous computation.",null,null],[16,"Output","","The type of value produced on completion.",0,null],[10,"poll","","Attempt to resolve the future to a final value, …",0,[[["context",3],["pin",3]],["poll",4]]],[8,"TryFuture","","A convenience for futures that return <code>Result</code> values that …",null,null],[16,"Ok","","The type of successful values yielded by this future",1,null],[16,"Error","","The type of failures yielded by this future",1,null],[10,"try_poll","","Poll this <code>TryFuture</code> as if it were a <code>Future</code>.",1,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[8,"Stream","","A stream of values produced asynchronously.",null,null],[16,"Item","","Values yielded by the stream.",19,null],[10,"poll_next","","Attempt to pull out the next value of this stream, …",19,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"size_hint","","Returns the bounds on the remaining length of the stream.",19,[[]]],[8,"TryStream","","A convenience for streams that return <code>Result</code> values that …",null,null],[16,"Ok","","The type of successful values yielded by this future",20,null],[16,"Error","","The type of failures yielded by this future",20,null],[10,"try_poll_next","","Poll this <code>TryStream</code> as if it were a <code>Stream</code>.",20,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[8,"Sink","","A <code>Sink</code> is a value into which other values can be sent, …",null,null],[16,"Error","","The type of value produced by the sink when an error …",21,null],[10,"poll_ready","","Attempts to prepare the <code>Sink</code> to receive a value.",21,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[10,"start_send","","Begin the process of sending a value to the sink. Each …",21,[[["pin",3]],["result",4]]],[10,"poll_flush","","Flush any remaining output from this sink.",21,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[10,"poll_close","","Flush any remaining output and close this sink, if …",21,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[8,"AsyncRead","","Read bytes asynchronously.",null,null],[10,"poll_read","","Attempt to read from the <code>AsyncRead</code> into <code>buf</code>.",8,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_read_vectored","","Attempt to read from the <code>AsyncRead</code> into <code>bufs</code> using …",8,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[8,"AsyncWrite","","Write bytes asynchronously.",null,null],[10,"poll_write","","Attempt to write bytes from <code>buf</code> into the object.",9,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_write_vectored","","Attempt to write bytes from <code>bufs</code> into the object using …",9,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[10,"poll_flush","","Attempt to flush the object, ensuring that any buffered …",9,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[10,"poll_close","","Attempt to close the object.",9,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[8,"AsyncSeek","","Seek bytes asynchronously.",null,null],[10,"poll_seek","","Attempt to seek to an offset, in bytes, in a stream.",10,[[["seekfrom",4],["context",3],["pin",3]],[["poll",4],["result",4]]]],[8,"AsyncBufRead","","Read bytes asynchronously.",null,null],[10,"poll_fill_buf","","Attempt to return the contents of the internal buffer, …",11,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[10,"consume","","Tells this buffer that <code>amt</code> bytes have been consumed from …",11,[[["pin",3]]]],[0,"sink","futures","Asynchronous sinks.",null,null],[8,"Sink","futures::sink","A <code>Sink</code> is a value into which other values can be sent, …",null,null],[16,"Error","","The type of value produced by the sink when an error …",21,null],[10,"poll_ready","","Attempts to prepare the <code>Sink</code> to receive a value.",21,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[10,"start_send","","Begin the process of sending a value to the sink. Each …",21,[[["pin",3]],["result",4]]],[10,"poll_flush","","Flush any remaining output from this sink.",21,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[10,"poll_close","","Flush any remaining output and close this sink, if …",21,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[3,"Close","","Future for the <code>close</code> method.",null,null],[3,"Flush","","Future for the <code>flush</code> method.",null,null],[3,"Send","","Future for the <code>send</code> method.",null,null],[3,"SendAll","","Future for the <code>send_all</code> method.",null,null],[3,"SinkErrInto","","Sink for the <code>sink_err_into</code> method.",null,null],[3,"SinkMapErr","","Sink for the <code>sink_map_err</code> method.",null,null],[3,"With","","Sink for the <code>with</code> method.",null,null],[8,"SinkExt","","An extension trait for <code>Sink</code>s that provides a variety of …",null,null],[11,"with","","Composes a function <em>in front of</em> the sink.",22,[[],["with",3]]],[11,"with_flat_map","","Composes a function <em>in front of</em> the sink.",22,[[],["withflatmap",3]]],[11,"sink_map_err","","Transforms the error returned by the sink.",22,[[],["sinkmaperr",3]]],[11,"sink_err_into","","Map this sink\'s error to a different error type using the …",22,[[],["sinkerrinto",3]]],[11,"buffer","","Adds a fixed-size buffer to the current sink.",22,[[],["buffer",3]]],[11,"close","","Close the sink.",22,[[],["close",3]]],[11,"fanout","","Fanout items to multiple sinks.",22,[[],["fanout",3]]],[11,"flush","","Flush the sink, processing all pending items.",22,[[],["flush",3]]],[11,"send","","A future that completes after the given item has been …",22,[[],["send",3]]],[11,"send_all","","A future that completes after the given stream has been …",22,[[],["sendall",3]]],[11,"left_sink","","Wrap this sink in an <code>Either</code> sink, making it the left-hand …",22,[[],["either",4]]],[11,"right_sink","","Wrap this stream in an <code>Either</code> stream, making it the …",22,[[],["either",4]]],[11,"poll_ready_unpin","","A convenience method for calling [<code>Sink::poll_ready</code>] on […",22,[[["context",3]],[["result",4],["poll",4]]]],[11,"start_send_unpin","","A convenience method for calling [<code>Sink::start_send</code>] on […",22,[[],["result",4]]],[11,"poll_flush_unpin","","A convenience method for calling [<code>Sink::poll_flush</code>] on […",22,[[["context",3]],[["result",4],["poll",4]]]],[11,"poll_close_unpin","","A convenience method for calling [<code>Sink::poll_close</code>] on […",22,[[["context",3]],[["result",4],["poll",4]]]],[3,"Fanout","","Sink that clones incoming items and forwards them to two …",null,null],[3,"Drain","","Sink for the [<code>drain</code>] function.",null,null],[5,"drain","","Create a sink that will just discard all items given to …",null,[[],["drain",3]]],[3,"WithFlatMap","","Sink for the <code>with_flat_map</code> method.",null,null],[3,"Buffer","","Sink for the <code>buffer</code> method.",null,null],[0,"stream","futures","Asynchronous streams.",null,null],[8,"Stream","futures::stream","A stream of values produced asynchronously.",null,null],[16,"Item","","Values yielded by the stream.",19,null],[10,"poll_next","","Attempt to pull out the next value of this stream, …",19,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"size_hint","","Returns the bounds on the remaining length of the stream.",19,[[]]],[8,"TryStream","","A convenience for streams that return <code>Result</code> values that …",null,null],[16,"Ok","","The type of successful values yielded by this future",20,null],[16,"Error","","The type of failures yielded by this future",20,null],[10,"try_poll_next","","Poll this <code>TryStream</code> as if it were a <code>Stream</code>.",20,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[8,"FusedStream","","A stream which tracks whether or not the underlying stream…",null,null],[10,"is_terminated","","Returns <code>true</code> if the stream should no longer be polled.",23,[[]]],[6,"BoxStream","","An owned dynamically typed [<code>Stream</code>] for use in cases …",null,null],[6,"LocalBoxStream","","<code>BoxStream</code>, but without the <code>Send</code> requirement.",null,null],[5,"iter","","Converts an <code>Iterator</code> into a <code>Stream</code> which is always ready …",null,[[],["iter",3]]],[3,"Iter","","Stream for the [<code>iter</code>] function.",null,null],[5,"repeat","","Create a stream which produces the same item repeatedly.",null,[[],["repeat",3]]],[3,"Repeat","","Stream for the [<code>repeat</code>] function.",null,null],[5,"empty","","Creates a stream which contains no elements.",null,[[],["empty",3]]],[3,"Empty","","Stream for the [<code>empty</code>] function.",null,null],[5,"pending","","Creates a stream which never returns any elements.",null,[[],["pending",3]]],[3,"Pending","","Stream for the [<code>pending()</code>] function.",null,null],[5,"once","","Creates a stream of a single element.",null,[[],["once",3]]],[3,"Once","","A stream which emits single element and then EOF.",null,null],[5,"poll_fn","","Creates a new stream wrapping a function returning …",null,[[],["pollfn",3]]],[3,"PollFn","","Stream for the [<code>poll_fn</code>] function.",null,null],[5,"select","","This function will attempt to pull items from both …",null,[[],["select",3]]],[3,"Select","","Stream for the [<code>select()</code>] function.",null,null],[5,"unfold","","Creates a <code>Stream</code> from a seed and a closure returning a …",null,[[],["unfold",3]]],[3,"Unfold","","Stream for the [<code>unfold</code>] function.",null,null],[5,"try_unfold","","Creates a <code>TryStream</code> from a seed and a closure returning a …",null,[[],["tryunfold",3]]],[3,"TryUnfold","","Stream for the [<code>try_unfold</code>] function.",null,null],[8,"StreamExt","","An extension trait for <code>Stream</code>s that provides a variety of …",null,null],[11,"next","","Creates a future that resolves to the next item in the …",24,[[],["next",3]]],[11,"into_future","","Converts this stream into a future of …",24,[[],["streamfuture",3]]],[11,"map","","Maps this stream\'s items to a different type, returning a …",24,[[],["map",3]]],[11,"enumerate","","Creates a stream which gives the current iteration count …",24,[[],["enumerate",3]]],[11,"filter","","Filters the values produced by this stream according to …",24,[[],["filter",3]]],[11,"filter_map","","Filters the values produced by this stream while …",24,[[],["filtermap",3]]],[11,"then","","Computes from this stream\'s items new items of a …",24,[[],["then",3]]],[11,"collect","","Transforms a stream into a collection, returning a future …",24,[[],["collect",3]]],[11,"concat","","Concatenate all items of a stream into a single extendable…",24,[[],["concat",3]]],[11,"fold","","Execute an accumulating asynchronous computation over a …",24,[[],["fold",3]]],[11,"flatten","","Flattens a stream of streams into just one continuous …",24,[[],["flatten",3]]],[11,"flat_map","","Maps a stream like [<code>StreamExt::map</code>] but flattens nested …",24,[[],["flatmap",3]]],[11,"scan","","Combinator similar to [<code>StreamExt::fold</code>] that holds …",24,[[],["scan",3]]],[11,"skip_while","","Skip elements on this stream while the provided …",24,[[],["skipwhile",3]]],[11,"take_while","","Take elements from this stream while the provided …",24,[[],["takewhile",3]]],[11,"take_until","","Take elements from this stream until the provided future …",24,[[],["takeuntil",3]]],[11,"for_each","","Runs this stream to completion, executing the provided …",24,[[],["foreach",3]]],[11,"for_each_concurrent","","Runs this stream to completion, executing the provided …",24,[[],["foreachconcurrent",3]]],[11,"take","","Creates a new stream of at most <code>n</code> items of the underlying …",24,[[],["take",3]]],[11,"skip","","Creates a new stream which skips <code>n</code> items of the …",24,[[],["skip",3]]],[11,"fuse","","Fuse a stream such that <code>poll_next</code> will never again be …",24,[[],["fuse",3]]],[11,"by_ref","","Borrows a stream, rather than consuming it.",24,[[]]],[11,"catch_unwind","","Catches unwinding panics while polling the stream.",24,[[],["catchunwind",3]]],[11,"boxed","","Wrap the stream in a Box, pinning it.",24,[[],[["pin",3],["box",3]]]],[11,"boxed_local","","Wrap the stream in a Box, pinning it.",24,[[],[["pin",3],["box",3]]]],[11,"buffered","","An adaptor for creating a buffered list of pending …",24,[[],["buffered",3]]],[11,"buffer_unordered","","An adaptor for creating a buffered list of pending …",24,[[],["bufferunordered",3]]],[11,"zip","","An adapter for zipping two streams together.",24,[[],["zip",3]]],[11,"chain","","Adapter for chaining two streams.",24,[[],["chain",3]]],[11,"peekable","","Creates a new stream which exposes a <code>peek</code> method.",24,[[],["peekable",3]]],[11,"chunks","","An adaptor for chunking up items of the stream inside a …",24,[[],["chunks",3]]],[11,"ready_chunks","","An adaptor for chunking up ready items of the stream …",24,[[],["readychunks",3]]],[11,"forward","","A future that completes after the given stream has been …",24,[[],["forward",3]]],[11,"split","","Splits this <code>Stream + Sink</code> object into separate <code>Sink</code> and …",24,[[]]],[11,"inspect","","Do something with each item of this stream, afterwards …",24,[[],["inspect",3]]],[11,"left_stream","","Wrap this stream in an <code>Either</code> stream, making it the …",24,[[],["either",4]]],[11,"right_stream","","Wrap this stream in an <code>Either</code> stream, making it the …",24,[[],["either",4]]],[11,"poll_next_unpin","","A convenience method for calling [<code>Stream::poll_next</code>] on […",24,[[["context",3]],[["option",4],["poll",4]]]],[11,"select_next_some","","Returns a [<code>Future</code>] that resolves when the next item in …",24,[[],["selectnextsome",3]]],[3,"Chain","","Stream for the <code>chain</code> method.",null,null],[3,"Collect","","Future for the <code>collect</code> method.",null,null],[3,"Concat","","Future for the <code>concat</code> method.",null,null],[3,"Enumerate","","Stream for the <code>enumerate</code> method.",null,null],[3,"Filter","","Stream for the <code>filter</code> method.",null,null],[3,"FilterMap","","Stream for the <code>filter_map</code> method.",null,null],[3,"FlatMap","","Stream for the <code>flat_map</code> method.",null,null],[3,"Flatten","","Stream for the <code>inspect</code> method.",null,null],[3,"Fold","","Future for the <code>fold</code> method.",null,null],[3,"Forward","","Future for the <code>forward</code> method.",null,null],[3,"ForEach","","Future for the <code>for_each</code> method.",null,null],[3,"Fuse","","Stream for the <code>fuse</code> method.",null,null],[3,"StreamFuture","","Future for the <code>into_future</code> method.",null,null],[3,"Inspect","","Stream for the <code>inspect</code> method.",null,null],[3,"Map","","Stream for the <code>map</code> method.",null,null],[3,"Next","","Future for the <code>next</code> method.",null,null],[3,"SelectNextSome","","Future for the <code>select_next_some</code> method.",null,null],[3,"Peek","","Future for the <code>Peekable::peek()</code> function from [<code>Peekable</code>]",null,null],[3,"Peekable","","A <code>Stream</code> that implements a <code>peek</code> method.",null,null],[3,"Scan","","Stream for the <code>scan</code> method.",null,null],[3,"Skip","","Stream for the <code>skip</code> method.",null,null],[3,"SkipWhile","","Stream for the <code>skip_while</code> method.",null,null],[3,"Take","","Stream for the <code>take</code> method.",null,null],[3,"TakeWhile","","Stream for the <code>take_while</code> method.",null,null],[3,"Then","","Stream for the <code>then</code> method.",null,null],[3,"Zip","","Stream for the <code>zip</code> method.",null,null],[8,"TryStreamExt","","Adapters specific to <code>Result</code>-returning streams",null,null],[11,"err_into","","Wraps the current stream in a new stream which converts …",25,[[],["errinto",3]]],[11,"map_ok","","Wraps the current stream in a new stream which maps the …",25,[[],["mapok",3]]],[11,"map_err","","Wraps the current stream in a new stream which maps the …",25,[[],["maperr",3]]],[11,"and_then","","Chain on a computation for when a value is ready, passing …",25,[[],["andthen",3]]],[11,"or_else","","Chain on a computation for when an error happens, passing …",25,[[],["orelse",3]]],[11,"inspect_ok","","Do something with the success value of this stream, …",25,[[],["inspectok",3]]],[11,"inspect_err","","Do something with the error value of this stream, …",25,[[],["inspecterr",3]]],[11,"into_stream","","Wraps a [<code>TryStream</code>] into a type that implements <code>Stream</code>",25,[[],["intostream",3]]],[11,"try_next","","Creates a future that attempts to resolve the next item …",25,[[],["trynext",3]]],[11,"try_for_each","","Attempts to run this stream to completion, executing the …",25,[[],["tryforeach",3]]],[11,"try_skip_while","","Skip elements on this stream while the provided …",25,[[],["tryskipwhile",3]]],[11,"try_for_each_concurrent","","Attempts to run this stream to completion, executing the …",25,[[],["tryforeachconcurrent",3]]],[11,"try_collect","","Attempt to transform a stream into a collection, …",25,[[],["trycollect",3]]],[11,"try_filter","","Attempt to filter the values produced by this stream …",25,[[],["tryfilter",3]]],[11,"try_filter_map","","Attempt to filter the values produced by this stream while…",25,[[],["tryfiltermap",3]]],[11,"try_flatten","","Flattens a stream of streams into just one continuous …",25,[[],["tryflatten",3]]],[11,"try_fold","","Attempt to execute an accumulating asynchronous …",25,[[],["tryfold",3]]],[11,"try_concat","","Attempt to concatenate all items of a stream into a single…",25,[[],["tryconcat",3]]],[11,"try_buffer_unordered","","Attempt to execute several futures from a stream …",25,[[],["trybufferunordered",3]]],[11,"try_poll_next_unpin","","A convenience method for calling [<code>TryStream::try_poll_next</code>…",25,[[["context",3]],[["option",4],["poll",4]]]],[11,"into_async_read","","Adapter that converts this stream into an <code>AsyncRead</code>.",25,[[],["intoasyncread",3]]],[3,"AndThen","","Stream for the <code>and_then</code> method.",null,null],[3,"ErrInto","","Stream for the <code>err_into</code> method.",null,null],[3,"MapOk","","Stream for the <code>map_ok</code> method.",null,null],[3,"MapErr","","Stream for the <code>map_err</code> method.",null,null],[3,"OrElse","","Stream for the <code>or_else</code> method.",null,null],[3,"InspectOk","","Stream for the <code>inspect_ok</code> method.",null,null],[3,"InspectErr","","Stream for the <code>inspect_err</code> method.",null,null],[3,"TryNext","","Future for the <code>try_next</code> method.",null,null],[3,"TryForEach","","Future for the <code>try_for_each</code> method.",null,null],[3,"TryFilter","","Stream for the <code>try_filter</code> method.",null,null],[3,"TryFilterMap","","Stream for the <code>try_filter_map</code> method.",null,null],[3,"TryFlatten","","Stream for the <code>try_flatten</code> method.",null,null],[3,"TryCollect","","Future for the <code>try_collect</code> method.",null,null],[3,"TryConcat","","Future for the <code>try_concat</code> method.",null,null],[3,"TryFold","","Future for the <code>try_fold</code> method.",null,null],[3,"TrySkipWhile","","Stream for the <code>try_skip_while</code> method.",null,null],[3,"IntoStream","","Stream for the <code>into_stream</code> method.",null,null],[3,"Chunks","","Stream for the <code>chunks</code> method.",null,null],[3,"ReadyChunks","","Stream for the <code>ready_chunks</code> method.",null,null],[3,"FuturesOrdered","","An unbounded queue of futures.",null,null],[0,"futures_unordered","","An unbounded set of futures.",null,null],[3,"FuturesUnordered","futures::stream::futures_unordered","A set of futures which may complete in any order.",null,null],[3,"Iter","","Immutable iterator over all the futures in the unordered …",null,null],[3,"IterMut","","Mutable iterator over all futures in the unordered set.",null,null],[3,"IterPinMut","","Mutable iterator over all futures in the unordered set.",null,null],[3,"IterPinRef","","Immutable iterator over all futures in the unordered set.",null,null],[3,"FuturesUnordered","futures::stream","A set of futures which may complete in any order.",null,null],[3,"BufferUnordered","","Stream for the <code>buffer_unordered</code> method.",null,null],[3,"Buffered","","Stream for the <code>buffered</code> method.",null,null],[3,"ForEachConcurrent","","Future for the <code>for_each_concurrent</code> method.",null,null],[3,"SplitStream","","A <code>Stream</code> part of the split pair",null,null],[3,"SplitSink","","A <code>Sink</code> part of the split pair",null,null],[3,"ReuniteError","","Error indicating a <code>SplitSink<S></code> and <code>SplitStream<S></code> were …",null,null],[12,"0","","",26,null],[12,"1","","",26,null],[5,"select_all","","Convert a list of streams into a <code>Stream</code> of results from …",null,[[],["selectall",3]]],[3,"SelectAll","","An unbounded set of streams",null,null],[3,"CatchUnwind","","Stream for the <code>catch_unwind</code> method.",null,null],[3,"TryBufferUnordered","","Stream for the <code>try_buffer_unordered</code> method.",null,null],[3,"TryForEachConcurrent","","Future for the <code>try_for_each_concurrent</code> method.",null,null],[3,"IntoAsyncRead","","Reader for the <code>into_async_read</code> method.",null,null],[0,"task","futures","Tools for working with tasks.",null,null],[3,"Context","futures::task","The <code>Context</code> of an asynchronous task.",null,null],[4,"Poll","","Indicates whether a value is available or if the current …",null,null],[13,"Ready","","Represents that a value is immediately ready.",27,null],[13,"Pending","","Represents that a value is not ready yet.",27,null],[3,"Waker","","A <code>Waker</code> is a handle for waking up a task by notifying its …",null,null],[3,"RawWaker","","A <code>RawWaker</code> allows the implementor of a task executor to …",null,null],[3,"RawWakerVTable","","A virtual function pointer table (vtable) that specifies …",null,null],[8,"Spawn","","The <code>Spawn</code> trait allows for pushing futures onto an …",null,null],[10,"spawn_obj","","Spawns a future that will be run to completion.",28,[[["futureobj",3]],[["spawnerror",3],["result",4]]]],[11,"status","","Determines whether the executor is able to spawn new …",28,[[],[["spawnerror",3],["result",4]]]],[8,"LocalSpawn","","The <code>LocalSpawn</code> is similar to [<code>Spawn</code>], but allows spawning …",null,null],[10,"spawn_local_obj","","Spawns a future that will be run to completion.",29,[[["localfutureobj",3]],[["spawnerror",3],["result",4]]]],[11,"status_local","","Determines whether the executor is able to spawn new …",29,[[],[["spawnerror",3],["result",4]]]],[3,"SpawnError","","An error that occurred during spawning.",null,null],[3,"FutureObj","","A custom trait object for polling futures, roughly akin to…",null,null],[3,"LocalFutureObj","","A custom trait object for polling futures, roughly akin to…",null,null],[8,"UnsafeFutureObj","","A custom implementation of a future trait object for …",null,null],[10,"into_raw","","Convert an owned instance into a (conceptually owned) fat …",3,[[]]],[10,"drop","","Drops the future represented by the given fat pointer.",3,[[]]],[5,"noop_waker","","Create a new [<code>Waker</code>] which does nothing when <code>wake()</code> is …",null,[[],["waker",3]]],[5,"noop_waker_ref","","Get a static reference to a [<code>Waker</code>] which does nothing …",null,[[],["waker",3]]],[8,"SpawnExt","","Extension trait for <code>Spawn</code>.",null,null],[11,"spawn","","Spawns a task that polls the given future with output <code>()</code> …",30,[[],[["spawnerror",3],["result",4]]]],[11,"spawn_with_handle","","Spawns a task that polls the given future to completion …",30,[[],[["result",4],["spawnerror",3],["remotehandle",3]]]],[8,"LocalSpawnExt","","Extension trait for <code>LocalSpawn</code>.",null,null],[11,"spawn_local","","Spawns a task that polls the given future with output <code>()</code> …",31,[[],[["spawnerror",3],["result",4]]]],[11,"spawn_local_with_handle","","Spawns a task that polls the given future to completion …",31,[[],[["result",4],["spawnerror",3],["remotehandle",3]]]],[5,"waker","","Creates a [<code>Waker</code>] from an <code>Arc<impl ArcWake></code>.",null,[[["arc",3]],["waker",3]]],[5,"waker_ref","","Creates a reference to a [<code>Waker</code>] from a reference to …",null,[[["arc",3]],["wakerref",3]]],[3,"WakerRef","","A [<code>Waker</code>] that is only valid for a given lifetime.",null,null],[8,"ArcWake","","A way of waking up a specific task.",null,null],[11,"wake","","Indicates that the associated task is ready to make …",32,[[["arc",3]]]],[10,"wake_by_ref","","Indicates that the associated task is ready to make …",32,[[["arc",3]]]],[3,"AtomicWaker","","A synchronization primitive for task wakeup.",null,null],[0,"never","futures","This module contains the <code>Never</code> type.",null,null],[6,"Never","futures::never","A type with no possible values.",null,null],[11,"from","futures::channel::oneshot","",33,[[]]],[11,"into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"into_future","","",33,[[]]],[11,"try_poll","","",33,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"into_future","","",35,[[]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"to_string","","",36,[[],["string",3]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"from","futures::channel::mpsc","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"try_poll_next","","",39,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"try_poll_next","","",40,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"to_string","","",41,[[],["string",3]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"to_string","","",42,[[],["string",3]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_string","","",43,[[],["string",3]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"from","futures::executor","",44,[[]]],[11,"into","","",44,[[]]],[11,"into_iter","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_string","","",46,[[],["string",3]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"from","futures::task","",49,[[]]],[11,"into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"into_future","","",49,[[]]],[11,"try_poll","","",49,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"into_future","","",50,[[]]],[11,"try_poll","","",50,[[["pin",3],["context",3]],["poll",4]]],[11,"from","futures::future","",51,[[]]],[11,"into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"into_future","","",51,[[]]],[11,"try_poll","","",51,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"into_future","","",4,[[]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"to_owned","","",52,[[]]],[11,"clone_into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"into_future","","",52,[[]]],[11,"try_poll","","",52,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"into_future","","",53,[[]]],[11,"try_poll","","",53,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"to_owned","","",54,[[]]],[11,"clone_into","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"into_future","","",54,[[]]],[11,"try_poll","","",54,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"into_future","","",55,[[]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"into_future","","",56,[[]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"into_future","","",57,[[]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"into_future","","",58,[[]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"into_future","","",59,[[]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"into_future","","",60,[[]]],[11,"try_poll","","",60,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",61,[[]]],[11,"into","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"into_future","","",61,[[]]],[11,"try_poll","","",61,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"into_future","","",62,[[]]],[11,"try_poll","","",62,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",63,[[]]],[11,"into","","",63,[[]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"into_future","","",63,[[]]],[11,"try_poll","","",63,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",64,[[]]],[11,"into","","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"into_future","","",64,[[]]],[11,"try_poll","","",64,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"into_future","","",5,[[]]],[11,"try_poll","","",5,[[["pin",3],["context",3]],["poll",4]]],[11,"try_poll_next","","",5,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"from","","",65,[[]]],[11,"into","","",65,[[]]],[11,"to_owned","","",65,[[]]],[11,"clone_into","","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"into_future","","",65,[[]]],[11,"from","","",66,[[]]],[11,"into","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"try_poll_next","","",66,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"from","","",67,[[]]],[11,"into","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"into_future","","",67,[[]]],[11,"try_poll","","",67,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",68,[[]]],[11,"into","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"into_future","","",68,[[]]],[11,"try_poll","","",68,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",69,[[]]],[11,"into","","",69,[[]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"into_future","","",69,[[]]],[11,"try_poll","","",69,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",70,[[]]],[11,"into","","",70,[[]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"try_into","","",70,[[],["result",4]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"try_poll_next","","",70,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"from","","",71,[[]]],[11,"into","","",71,[[]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"into_future","","",71,[[]]],[11,"try_poll","","",71,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",72,[[]]],[11,"into","","",72,[[]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"into_future","","",72,[[]]],[11,"try_poll","","",72,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",73,[[]]],[11,"into","","",73,[[]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"try_into","","",73,[[],["result",4]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"into_future","","",73,[[]]],[11,"try_poll","","",73,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",74,[[]]],[11,"into","","",74,[[]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"try_into","","",74,[[],["result",4]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"into_future","","",74,[[]]],[11,"try_poll","","",74,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",75,[[]]],[11,"into","","",75,[[]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"try_into","","",75,[[],["result",4]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"into_future","","",75,[[]]],[11,"try_poll","","",75,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",76,[[]]],[11,"into","","",76,[[]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"try_into","","",76,[[],["result",4]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"into_future","","",76,[[]]],[11,"try_poll","","",76,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",77,[[]]],[11,"into","","",77,[[]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"try_into","","",77,[[],["result",4]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"try_poll_next","","",77,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"from","","",78,[[]]],[11,"into","","",78,[[]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"try_into","","",78,[[],["result",4]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"into_future","","",78,[[]]],[11,"try_poll","","",78,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",79,[[]]],[11,"into","","",79,[[]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"try_into","","",79,[[],["result",4]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"into_future","","",79,[[]]],[11,"try_poll","","",79,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",80,[[]]],[11,"into","","",80,[[]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"try_into","","",80,[[],["result",4]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"into_future","","",80,[[]]],[11,"try_poll","","",80,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",81,[[]]],[11,"into","","",81,[[]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"try_into","","",81,[[],["result",4]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"into_future","","",81,[[]]],[11,"try_poll","","",81,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",82,[[]]],[11,"into","","",82,[[]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"try_into","","",82,[[],["result",4]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"into_future","","",82,[[]]],[11,"try_poll","","",82,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",83,[[]]],[11,"into","","",83,[[]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"try_into","","",83,[[],["result",4]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"into_future","","",83,[[]]],[11,"try_poll","","",83,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",84,[[]]],[11,"into","","",84,[[]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"try_into","","",84,[[],["result",4]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"try_poll_next","","",84,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"from","","",85,[[]]],[11,"into","","",85,[[]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"try_into","","",85,[[],["result",4]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"into_future","","",85,[[]]],[11,"try_poll","","",85,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",86,[[]]],[11,"into","","",86,[[]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"try_into","","",86,[[],["result",4]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"into_future","","",86,[[]]],[11,"from","","",87,[[]]],[11,"into","","",87,[[]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"try_into","","",87,[[],["result",4]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"into_future","","",87,[[]]],[11,"from","","",88,[[]]],[11,"into","","",88,[[]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"try_into","","",88,[[],["result",4]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"into_future","","",88,[[]]],[11,"try_poll","","",88,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",89,[[]]],[11,"into","","",89,[[]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"try_into","","",89,[[],["result",4]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"into_future","","",89,[[]]],[11,"try_poll","","",89,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",90,[[]]],[11,"into","","",90,[[]]],[11,"to_owned","","",90,[[]]],[11,"clone_into","","",90,[[]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"try_into","","",90,[[],["result",4]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"into_future","","",90,[[]]],[11,"try_poll","","",90,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",91,[[]]],[11,"into","","",91,[[]]],[11,"to_owned","","",91,[[]]],[11,"clone_into","","",91,[[]]],[11,"borrow","","",91,[[]]],[11,"borrow_mut","","",91,[[]]],[11,"try_from","","",91,[[],["result",4]]],[11,"try_into","","",91,[[],["result",4]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"from","","",92,[[]]],[11,"into","","",92,[[]]],[11,"borrow","","",92,[[]]],[11,"borrow_mut","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"try_into","","",92,[[],["result",4]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"from","","",93,[[]]],[11,"into","","",93,[[]]],[11,"to_owned","","",93,[[]]],[11,"clone_into","","",93,[[]]],[11,"to_string","","",93,[[],["string",3]]],[11,"borrow","","",93,[[]]],[11,"borrow_mut","","",93,[[]]],[11,"try_from","","",93,[[],["result",4]]],[11,"try_into","","",93,[[],["result",4]]],[11,"type_id","","",93,[[],["typeid",3]]],[11,"from","","",94,[[]]],[11,"into","","",94,[[]]],[11,"borrow","","",94,[[]]],[11,"borrow_mut","","",94,[[]]],[11,"try_from","","",94,[[],["result",4]]],[11,"try_into","","",94,[[],["result",4]]],[11,"type_id","","",94,[[],["typeid",3]]],[11,"into_future","","",94,[[]]],[11,"from","","",95,[[]]],[11,"into","","",95,[[]]],[11,"borrow","","",95,[[]]],[11,"borrow_mut","","",95,[[]]],[11,"try_from","","",95,[[],["result",4]]],[11,"try_into","","",95,[[],["result",4]]],[11,"type_id","","",95,[[],["typeid",3]]],[11,"into_future","","",95,[[]]],[11,"try_poll","","",95,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",96,[[]]],[11,"into","","",96,[[]]],[11,"borrow","","",96,[[]]],[11,"borrow_mut","","",96,[[]]],[11,"try_from","","",96,[[],["result",4]]],[11,"try_into","","",96,[[],["result",4]]],[11,"type_id","","",96,[[],["typeid",3]]],[11,"into_future","","",96,[[]]],[11,"try_poll","","",96,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",97,[[]]],[11,"into","","",97,[[]]],[11,"to_owned","","",97,[[]]],[11,"clone_into","","",97,[[]]],[11,"borrow","","",97,[[]]],[11,"borrow_mut","","",97,[[]]],[11,"try_from","","",97,[[],["result",4]]],[11,"try_into","","",97,[[],["result",4]]],[11,"type_id","","",97,[[],["typeid",3]]],[11,"into_future","","",97,[[]]],[11,"try_poll","","",97,[[["pin",3],["context",3]],["poll",4]]],[11,"from","futures::io","",98,[[]]],[11,"into","","",98,[[]]],[11,"to_string","","",98,[[],["string",3]]],[11,"borrow","","",98,[[]]],[11,"borrow_mut","","",98,[[]]],[11,"try_from","","",98,[[],["result",4]]],[11,"try_into","","",98,[[],["result",4]]],[11,"type_id","","",98,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",99,[[]]],[11,"into","","",99,[[]]],[11,"to_owned","","",99,[[]]],[11,"clone_into","","",99,[[]]],[11,"borrow","","",99,[[]]],[11,"borrow_mut","","",99,[[]]],[11,"try_from","","",99,[[],["result",4]]],[11,"try_into","","",99,[[],["result",4]]],[11,"type_id","","",99,[[],["typeid",3]]],[11,"from","","",100,[[]]],[11,"into","","",100,[[]]],[11,"borrow","","",100,[[]]],[11,"borrow_mut","","",100,[[]]],[11,"try_from","","",100,[[],["result",4]]],[11,"try_into","","",100,[[],["result",4]]],[11,"type_id","","",100,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",101,[[]]],[11,"into","","",101,[[]]],[11,"to_owned","","",101,[[]]],[11,"clone_into","","",101,[[]]],[11,"borrow","","",101,[[]]],[11,"borrow_mut","","",101,[[]]],[11,"try_from","","",101,[[],["result",4]]],[11,"try_into","","",101,[[],["result",4]]],[11,"type_id","","",101,[[],["typeid",3]]],[11,"from","","",102,[[]]],[11,"into","","",102,[[]]],[11,"borrow","","",102,[[]]],[11,"borrow_mut","","",102,[[]]],[11,"try_from","","",102,[[],["result",4]]],[11,"try_into","","",102,[[],["result",4]]],[11,"type_id","","",102,[[],["typeid",3]]],[11,"from","","",103,[[]]],[11,"into","","",103,[[]]],[11,"borrow","","",103,[[]]],[11,"borrow_mut","","",103,[[]]],[11,"try_from","","",103,[[],["result",4]]],[11,"try_into","","",103,[[],["result",4]]],[11,"type_id","","",103,[[],["typeid",3]]],[11,"from","","",104,[[]]],[11,"into","","",104,[[]]],[11,"to_owned","","",104,[[]]],[11,"clone_into","","",104,[[]]],[11,"borrow","","",104,[[]]],[11,"borrow_mut","","",104,[[]]],[11,"try_from","","",104,[[],["result",4]]],[11,"try_into","","",104,[[],["result",4]]],[11,"type_id","","",104,[[],["typeid",3]]],[11,"from","","",105,[[]]],[11,"into","","",105,[[]]],[11,"borrow","","",105,[[]]],[11,"borrow_mut","","",105,[[]]],[11,"try_from","","",105,[[],["result",4]]],[11,"try_into","","",105,[[],["result",4]]],[11,"type_id","","",105,[[],["typeid",3]]],[11,"from","","",106,[[]]],[11,"into","","",106,[[]]],[11,"borrow","","",106,[[]]],[11,"borrow_mut","","",106,[[]]],[11,"try_from","","",106,[[],["result",4]]],[11,"try_into","","",106,[[],["result",4]]],[11,"type_id","","",106,[[],["typeid",3]]],[11,"into_future","","",106,[[]]],[11,"try_poll","","",106,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",107,[[]]],[11,"into","","",107,[[]]],[11,"borrow","","",107,[[]]],[11,"borrow_mut","","",107,[[]]],[11,"try_from","","",107,[[],["result",4]]],[11,"try_into","","",107,[[],["result",4]]],[11,"type_id","","",107,[[],["typeid",3]]],[11,"into_future","","",107,[[]]],[11,"try_poll","","",107,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",108,[[]]],[11,"into","","",108,[[]]],[11,"borrow","","",108,[[]]],[11,"borrow_mut","","",108,[[]]],[11,"try_from","","",108,[[],["result",4]]],[11,"try_into","","",108,[[],["result",4]]],[11,"type_id","","",108,[[],["typeid",3]]],[11,"into_future","","",108,[[]]],[11,"try_poll","","",108,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",109,[[]]],[11,"into","","",109,[[]]],[11,"borrow","","",109,[[]]],[11,"borrow_mut","","",109,[[]]],[11,"try_from","","",109,[[],["result",4]]],[11,"try_into","","",109,[[],["result",4]]],[11,"type_id","","",109,[[],["typeid",3]]],[11,"from","","",110,[[]]],[11,"into","","",110,[[]]],[11,"borrow","","",110,[[]]],[11,"borrow_mut","","",110,[[]]],[11,"try_from","","",110,[[],["result",4]]],[11,"try_into","","",110,[[],["result",4]]],[11,"type_id","","",110,[[],["typeid",3]]],[11,"into_future","","",110,[[]]],[11,"try_poll","","",110,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",111,[[]]],[11,"into","","",111,[[]]],[11,"borrow","","",111,[[]]],[11,"borrow_mut","","",111,[[]]],[11,"try_from","","",111,[[],["result",4]]],[11,"try_into","","",111,[[],["result",4]]],[11,"type_id","","",111,[[],["typeid",3]]],[11,"from","","",112,[[]]],[11,"into","","",112,[[]]],[11,"borrow","","",112,[[]]],[11,"borrow_mut","","",112,[[]]],[11,"try_from","","",112,[[],["result",4]]],[11,"try_into","","",112,[[],["result",4]]],[11,"type_id","","",112,[[],["typeid",3]]],[11,"try_poll_next","","",112,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"from","","",113,[[]]],[11,"into","","",113,[[]]],[11,"borrow","","",113,[[]]],[11,"borrow_mut","","",113,[[]]],[11,"try_from","","",113,[[],["result",4]]],[11,"try_into","","",113,[[],["result",4]]],[11,"type_id","","",113,[[],["typeid",3]]],[11,"into_future","","",113,[[]]],[11,"try_poll","","",113,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",114,[[]]],[11,"into","","",114,[[]]],[11,"borrow","","",114,[[]]],[11,"borrow_mut","","",114,[[]]],[11,"try_from","","",114,[[],["result",4]]],[11,"try_into","","",114,[[],["result",4]]],[11,"type_id","","",114,[[],["typeid",3]]],[11,"into_future","","",114,[[]]],[11,"try_poll","","",114,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",115,[[]]],[11,"into","","",115,[[]]],[11,"borrow","","",115,[[]]],[11,"borrow_mut","","",115,[[]]],[11,"try_from","","",115,[[],["result",4]]],[11,"try_into","","",115,[[],["result",4]]],[11,"type_id","","",115,[[],["typeid",3]]],[11,"from","","",116,[[]]],[11,"into","","",116,[[]]],[11,"borrow","","",116,[[]]],[11,"borrow_mut","","",116,[[]]],[11,"try_from","","",116,[[],["result",4]]],[11,"try_into","","",116,[[],["result",4]]],[11,"type_id","","",116,[[],["typeid",3]]],[11,"into_future","","",116,[[]]],[11,"try_poll","","",116,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",117,[[]]],[11,"into","","",117,[[]]],[11,"borrow","","",117,[[]]],[11,"borrow_mut","","",117,[[]]],[11,"try_from","","",117,[[],["result",4]]],[11,"try_into","","",117,[[],["result",4]]],[11,"type_id","","",117,[[],["typeid",3]]],[11,"into_future","","",117,[[]]],[11,"try_poll","","",117,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",118,[[]]],[11,"into","","",118,[[]]],[11,"borrow","","",118,[[]]],[11,"borrow_mut","","",118,[[]]],[11,"try_from","","",118,[[],["result",4]]],[11,"try_into","","",118,[[],["result",4]]],[11,"type_id","","",118,[[],["typeid",3]]],[11,"into_future","","",118,[[]]],[11,"try_poll","","",118,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",119,[[]]],[11,"into","","",119,[[]]],[11,"borrow","","",119,[[]]],[11,"borrow_mut","","",119,[[]]],[11,"try_from","","",119,[[],["result",4]]],[11,"try_into","","",119,[[],["result",4]]],[11,"type_id","","",119,[[],["typeid",3]]],[11,"into_future","","",119,[[]]],[11,"try_poll","","",119,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",120,[[]]],[11,"into","","",120,[[]]],[11,"borrow","","",120,[[]]],[11,"borrow_mut","","",120,[[]]],[11,"try_from","","",120,[[],["result",4]]],[11,"try_into","","",120,[[],["result",4]]],[11,"type_id","","",120,[[],["typeid",3]]],[11,"into_future","","",120,[[]]],[11,"try_poll","","",120,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",121,[[]]],[11,"into","","",121,[[]]],[11,"borrow","","",121,[[]]],[11,"borrow_mut","","",121,[[]]],[11,"try_from","","",121,[[],["result",4]]],[11,"try_into","","",121,[[],["result",4]]],[11,"type_id","","",121,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_string","","",18,[[],["string",3]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",122,[[]]],[11,"into","","",122,[[]]],[11,"borrow","","",122,[[]]],[11,"borrow_mut","","",122,[[]]],[11,"try_from","","",122,[[],["result",4]]],[11,"try_into","","",122,[[],["result",4]]],[11,"type_id","","",122,[[],["typeid",3]]],[11,"into_future","","",122,[[]]],[11,"try_poll","","",122,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",123,[[]]],[11,"into","","",123,[[]]],[11,"borrow","","",123,[[]]],[11,"borrow_mut","","",123,[[]]],[11,"try_from","","",123,[[],["result",4]]],[11,"try_into","","",123,[[],["result",4]]],[11,"type_id","","",123,[[],["typeid",3]]],[11,"from","","",124,[[]]],[11,"into","","",124,[[]]],[11,"borrow","","",124,[[]]],[11,"borrow_mut","","",124,[[]]],[11,"try_from","","",124,[[],["result",4]]],[11,"try_into","","",124,[[],["result",4]]],[11,"type_id","","",124,[[],["typeid",3]]],[11,"from","","",125,[[]]],[11,"into","","",125,[[]]],[11,"borrow","","",125,[[]]],[11,"borrow_mut","","",125,[[]]],[11,"try_from","","",125,[[],["result",4]]],[11,"try_into","","",125,[[],["result",4]]],[11,"type_id","","",125,[[],["typeid",3]]],[11,"from","","",126,[[]]],[11,"into","","",126,[[]]],[11,"borrow","","",126,[[]]],[11,"borrow_mut","","",126,[[]]],[11,"try_from","","",126,[[],["result",4]]],[11,"try_into","","",126,[[],["result",4]]],[11,"type_id","","",126,[[],["typeid",3]]],[11,"into_future","","",126,[[]]],[11,"try_poll","","",126,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",127,[[]]],[11,"into","","",127,[[]]],[11,"borrow","","",127,[[]]],[11,"borrow_mut","","",127,[[]]],[11,"try_from","","",127,[[],["result",4]]],[11,"try_into","","",127,[[],["result",4]]],[11,"type_id","","",127,[[],["typeid",3]]],[11,"into_future","","",127,[[]]],[11,"try_poll","","",127,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",128,[[]]],[11,"into","","",128,[[]]],[11,"borrow","","",128,[[]]],[11,"borrow_mut","","",128,[[]]],[11,"try_from","","",128,[[],["result",4]]],[11,"try_into","","",128,[[],["result",4]]],[11,"type_id","","",128,[[],["typeid",3]]],[11,"from","","",129,[[]]],[11,"into","","",129,[[]]],[11,"borrow","","",129,[[]]],[11,"borrow_mut","","",129,[[]]],[11,"try_from","","",129,[[],["result",4]]],[11,"try_into","","",129,[[],["result",4]]],[11,"type_id","","",129,[[],["typeid",3]]],[11,"into_future","","",129,[[]]],[11,"try_poll","","",129,[[["pin",3],["context",3]],["poll",4]]],[11,"from","futures::lock","",130,[[]]],[11,"into","","",130,[[]]],[11,"borrow","","",130,[[]]],[11,"borrow_mut","","",130,[[]]],[11,"try_from","","",130,[[],["result",4]]],[11,"try_into","","",130,[[],["result",4]]],[11,"type_id","","",130,[[],["typeid",3]]],[11,"from","","",131,[[]]],[11,"from","","",131,[[]]],[11,"into","","",131,[[]]],[11,"borrow","","",131,[[]]],[11,"borrow_mut","","",131,[[]]],[11,"try_from","","",131,[[],["result",4]]],[11,"try_into","","",131,[[],["result",4]]],[11,"type_id","","",131,[[],["typeid",3]]],[11,"from","","",132,[[]]],[11,"into","","",132,[[]]],[11,"borrow","","",132,[[]]],[11,"borrow_mut","","",132,[[]]],[11,"try_from","","",132,[[],["result",4]]],[11,"try_into","","",132,[[],["result",4]]],[11,"type_id","","",132,[[],["typeid",3]]],[11,"into_future","","",132,[[]]],[11,"from","","",133,[[]]],[11,"into","","",133,[[]]],[11,"borrow","","",133,[[]]],[11,"borrow_mut","","",133,[[]]],[11,"try_from","","",133,[[],["result",4]]],[11,"try_into","","",133,[[],["result",4]]],[11,"type_id","","",133,[[],["typeid",3]]],[11,"from","futures::sink","",134,[[]]],[11,"into","","",134,[[]]],[11,"borrow","","",134,[[]]],[11,"borrow_mut","","",134,[[]]],[11,"try_from","","",134,[[],["result",4]]],[11,"try_into","","",134,[[],["result",4]]],[11,"type_id","","",134,[[],["typeid",3]]],[11,"into_future","","",134,[[]]],[11,"try_poll","","",134,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",135,[[]]],[11,"into","","",135,[[]]],[11,"borrow","","",135,[[]]],[11,"borrow_mut","","",135,[[]]],[11,"try_from","","",135,[[],["result",4]]],[11,"try_into","","",135,[[],["result",4]]],[11,"type_id","","",135,[[],["typeid",3]]],[11,"into_future","","",135,[[]]],[11,"try_poll","","",135,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",136,[[]]],[11,"into","","",136,[[]]],[11,"borrow","","",136,[[]]],[11,"borrow_mut","","",136,[[]]],[11,"try_from","","",136,[[],["result",4]]],[11,"try_into","","",136,[[],["result",4]]],[11,"type_id","","",136,[[],["typeid",3]]],[11,"into_future","","",136,[[]]],[11,"try_poll","","",136,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",137,[[]]],[11,"into","","",137,[[]]],[11,"borrow","","",137,[[]]],[11,"borrow_mut","","",137,[[]]],[11,"try_from","","",137,[[],["result",4]]],[11,"try_into","","",137,[[],["result",4]]],[11,"type_id","","",137,[[],["typeid",3]]],[11,"into_future","","",137,[[]]],[11,"try_poll","","",137,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",138,[[]]],[11,"into","","",138,[[]]],[11,"borrow","","",138,[[]]],[11,"borrow_mut","","",138,[[]]],[11,"try_from","","",138,[[],["result",4]]],[11,"try_into","","",138,[[],["result",4]]],[11,"type_id","","",138,[[],["typeid",3]]],[11,"try_poll_next","","",138,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"from","","",139,[[]]],[11,"into","","",139,[[]]],[11,"to_owned","","",139,[[]]],[11,"clone_into","","",139,[[]]],[11,"borrow","","",139,[[]]],[11,"borrow_mut","","",139,[[]]],[11,"try_from","","",139,[[],["result",4]]],[11,"try_into","","",139,[[],["result",4]]],[11,"type_id","","",139,[[],["typeid",3]]],[11,"try_poll_next","","",139,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"from","","",140,[[]]],[11,"into","","",140,[[]]],[11,"borrow","","",140,[[]]],[11,"borrow_mut","","",140,[[]]],[11,"try_from","","",140,[[],["result",4]]],[11,"try_into","","",140,[[],["result",4]]],[11,"type_id","","",140,[[],["typeid",3]]],[11,"try_poll_next","","",140,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"from","","",141,[[]]],[11,"into","","",141,[[]]],[11,"borrow","","",141,[[]]],[11,"borrow_mut","","",141,[[]]],[11,"try_from","","",141,[[],["result",4]]],[11,"try_into","","",141,[[],["result",4]]],[11,"type_id","","",141,[[],["typeid",3]]],[11,"from","","",142,[[]]],[11,"into","","",142,[[]]],[11,"borrow","","",142,[[]]],[11,"borrow_mut","","",142,[[]]],[11,"try_from","","",142,[[],["result",4]]],[11,"try_into","","",142,[[],["result",4]]],[11,"type_id","","",142,[[],["typeid",3]]],[11,"from","","",143,[[]]],[11,"into","","",143,[[]]],[11,"borrow","","",143,[[]]],[11,"borrow_mut","","",143,[[]]],[11,"try_from","","",143,[[],["result",4]]],[11,"try_into","","",143,[[],["result",4]]],[11,"type_id","","",143,[[],["typeid",3]]],[11,"try_poll_next","","",143,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"from","","",144,[[]]],[11,"into","","",144,[[]]],[11,"borrow","","",144,[[]]],[11,"borrow_mut","","",144,[[]]],[11,"try_from","","",144,[[],["result",4]]],[11,"try_into","","",144,[[],["result",4]]],[11,"type_id","","",144,[[],["typeid",3]]],[11,"try_poll_next","","",144,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"from","futures::stream","",145,[[]]],[11,"into","","",145,[[]]],[11,"borrow","","",145,[[]]],[11,"borrow_mut","","",145,[[]]],[11,"try_from","","",145,[[],["result",4]]],[11,"try_into","","",145,[[],["result",4]]],[11,"type_id","","",145,[[],["typeid",3]]],[11,"try_poll_next","","",145,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"from","","",146,[[]]],[11,"into","","",146,[[]]],[11,"borrow","","",146,[[]]],[11,"borrow_mut","","",146,[[]]],[11,"try_from","","",146,[[],["result",4]]],[11,"try_into","","",146,[[],["result",4]]],[11,"type_id","","",146,[[],["typeid",3]]],[11,"try_poll_next","","",146,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"from","","",147,[[]]],[11,"into","","",147,[[]]],[11,"borrow","","",147,[[]]],[11,"borrow_mut","","",147,[[]]],[11,"try_from","","",147,[[],["result",4]]],[11,"try_into","","",147,[[],["result",4]]],[11,"type_id","","",147,[[],["typeid",3]]],[11,"try_poll_next","","",147,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"from","","",148,[[]]],[11,"into","","",148,[[]]],[11,"borrow","","",148,[[]]],[11,"borrow_mut","","",148,[[]]],[11,"try_from","","",148,[[],["result",4]]],[11,"try_into","","",148,[[],["result",4]]],[11,"type_id","","",148,[[],["typeid",3]]],[11,"try_poll_next","","",148,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"from","","",149,[[]]],[11,"into","","",149,[[]]],[11,"borrow","","",149,[[]]],[11,"borrow_mut","","",149,[[]]],[11,"try_from","","",149,[[],["result",4]]],[11,"try_into","","",149,[[],["result",4]]],[11,"type_id","","",149,[[],["typeid",3]]],[11,"try_poll_next","","",149,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"from","","",150,[[]]],[11,"into","","",150,[[]]],[11,"borrow","","",150,[[]]],[11,"borrow_mut","","",150,[[]]],[11,"try_from","","",150,[[],["result",4]]],[11,"try_into","","",150,[[],["result",4]]],[11,"type_id","","",150,[[],["typeid",3]]],[11,"try_poll_next","","",150,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"from","","",151,[[]]],[11,"into","","",151,[[]]],[11,"borrow","","",151,[[]]],[11,"borrow_mut","","",151,[[]]],[11,"try_from","","",151,[[],["result",4]]],[11,"try_into","","",151,[[],["result",4]]],[11,"type_id","","",151,[[],["typeid",3]]],[11,"try_poll_next","","",151,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"from","","",152,[[]]],[11,"into","","",152,[[]]],[11,"borrow","","",152,[[]]],[11,"borrow_mut","","",152,[[]]],[11,"try_from","","",152,[[],["result",4]]],[11,"try_into","","",152,[[],["result",4]]],[11,"type_id","","",152,[[],["typeid",3]]],[11,"try_poll_next","","",152,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"from","","",153,[[]]],[11,"into","","",153,[[]]],[11,"borrow","","",153,[[]]],[11,"borrow_mut","","",153,[[]]],[11,"try_from","","",153,[[],["result",4]]],[11,"try_into","","",153,[[],["result",4]]],[11,"type_id","","",153,[[],["typeid",3]]],[11,"try_poll_next","","",153,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"from","","",154,[[]]],[11,"into","","",154,[[]]],[11,"borrow","","",154,[[]]],[11,"borrow_mut","","",154,[[]]],[11,"try_from","","",154,[[],["result",4]]],[11,"try_into","","",154,[[],["result",4]]],[11,"type_id","","",154,[[],["typeid",3]]],[11,"try_poll_next","","",154,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"from","","",155,[[]]],[11,"into","","",155,[[]]],[11,"borrow","","",155,[[]]],[11,"borrow_mut","","",155,[[]]],[11,"try_from","","",155,[[],["result",4]]],[11,"try_into","","",155,[[],["result",4]]],[11,"type_id","","",155,[[],["typeid",3]]],[11,"into_future","","",155,[[]]],[11,"from","","",156,[[]]],[11,"into","","",156,[[]]],[11,"borrow","","",156,[[]]],[11,"borrow_mut","","",156,[[]]],[11,"try_from","","",156,[[],["result",4]]],[11,"try_into","","",156,[[],["result",4]]],[11,"type_id","","",156,[[],["typeid",3]]],[11,"into_future","","",156,[[]]],[11,"try_poll","","",156,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",157,[[]]],[11,"into","","",157,[[]]],[11,"borrow","","",157,[[]]],[11,"borrow_mut","","",157,[[]]],[11,"try_from","","",157,[[],["result",4]]],[11,"try_into","","",157,[[],["result",4]]],[11,"type_id","","",157,[[],["typeid",3]]],[11,"from","","",158,[[]]],[11,"into","","",158,[[]]],[11,"borrow","","",158,[[]]],[11,"borrow_mut","","",158,[[]]],[11,"try_from","","",158,[[],["result",4]]],[11,"try_into","","",158,[[],["result",4]]],[11,"type_id","","",158,[[],["typeid",3]]],[11,"try_poll_next","","",158,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"from","","",159,[[]]],[11,"into","","",159,[[]]],[11,"borrow","","",159,[[]]],[11,"borrow_mut","","",159,[[]]],[11,"try_from","","",159,[[],["result",4]]],[11,"try_into","","",159,[[],["result",4]]],[11,"type_id","","",159,[[],["typeid",3]]],[11,"try_poll_next","","",159,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"from","","",160,[[]]],[11,"into","","",160,[[]]],[11,"borrow","","",160,[[]]],[11,"borrow_mut","","",160,[[]]],[11,"try_from","","",160,[[],["result",4]]],[11,"try_into","","",160,[[],["result",4]]],[11,"type_id","","",160,[[],["typeid",3]]],[11,"try_poll_next","","",160,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"from","","",161,[[]]],[11,"into","","",161,[[]]],[11,"borrow","","",161,[[]]],[11,"borrow_mut","","",161,[[]]],[11,"try_from","","",161,[[],["result",4]]],[11,"try_into","","",161,[[],["result",4]]],[11,"type_id","","",161,[[],["typeid",3]]],[11,"try_poll_next","","",161,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"from","","",162,[[]]],[11,"into","","",162,[[]]],[11,"borrow","","",162,[[]]],[11,"borrow_mut","","",162,[[]]],[11,"try_from","","",162,[[],["result",4]]],[11,"try_into","","",162,[[],["result",4]]],[11,"type_id","","",162,[[],["typeid",3]]],[11,"into_future","","",162,[[]]],[11,"try_poll","","",162,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",163,[[]]],[11,"into","","",163,[[]]],[11,"borrow","","",163,[[]]],[11,"borrow_mut","","",163,[[]]],[11,"try_from","","",163,[[],["result",4]]],[11,"try_into","","",163,[[],["result",4]]],[11,"type_id","","",163,[[],["typeid",3]]],[11,"into_future","","",163,[[]]],[11,"try_poll","","",163,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",164,[[]]],[11,"into","","",164,[[]]],[11,"borrow","","",164,[[]]],[11,"borrow_mut","","",164,[[]]],[11,"try_from","","",164,[[],["result",4]]],[11,"try_into","","",164,[[],["result",4]]],[11,"type_id","","",164,[[],["typeid",3]]],[11,"into_future","","",164,[[]]],[11,"from","","",165,[[]]],[11,"into","","",165,[[]]],[11,"borrow","","",165,[[]]],[11,"borrow_mut","","",165,[[]]],[11,"try_from","","",165,[[],["result",4]]],[11,"try_into","","",165,[[],["result",4]]],[11,"type_id","","",165,[[],["typeid",3]]],[11,"try_poll_next","","",165,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"from","","",166,[[]]],[11,"into","","",166,[[]]],[11,"borrow","","",166,[[]]],[11,"borrow_mut","","",166,[[]]],[11,"try_from","","",166,[[],["result",4]]],[11,"try_into","","",166,[[],["result",4]]],[11,"type_id","","",166,[[],["typeid",3]]],[11,"into_future","","",166,[[]]],[11,"from","","",167,[[]]],[11,"into","","",167,[[]]],[11,"borrow","","",167,[[]]],[11,"borrow_mut","","",167,[[]]],[11,"try_from","","",167,[[],["result",4]]],[11,"try_into","","",167,[[],["result",4]]],[11,"type_id","","",167,[[],["typeid",3]]],[11,"try_poll_next","","",167,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"from","","",168,[[]]],[11,"into","","",168,[[]]],[11,"borrow","","",168,[[]]],[11,"borrow_mut","","",168,[[]]],[11,"try_from","","",168,[[],["result",4]]],[11,"try_into","","",168,[[],["result",4]]],[11,"type_id","","",168,[[],["typeid",3]]],[11,"try_poll_next","","",168,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"from","","",169,[[]]],[11,"into","","",169,[[]]],[11,"borrow","","",169,[[]]],[11,"borrow_mut","","",169,[[]]],[11,"try_from","","",169,[[],["result",4]]],[11,"try_into","","",169,[[],["result",4]]],[11,"type_id","","",169,[[],["typeid",3]]],[11,"into_future","","",169,[[]]],[11,"from","","",170,[[]]],[11,"into","","",170,[[]]],[11,"borrow","","",170,[[]]],[11,"borrow_mut","","",170,[[]]],[11,"try_from","","",170,[[],["result",4]]],[11,"try_into","","",170,[[],["result",4]]],[11,"type_id","","",170,[[],["typeid",3]]],[11,"into_future","","",170,[[]]],[11,"try_poll","","",170,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",171,[[]]],[11,"into","","",171,[[]]],[11,"borrow","","",171,[[]]],[11,"borrow_mut","","",171,[[]]],[11,"try_from","","",171,[[],["result",4]]],[11,"try_into","","",171,[[],["result",4]]],[11,"type_id","","",171,[[],["typeid",3]]],[11,"into_future","","",171,[[]]],[11,"from","","",172,[[]]],[11,"into","","",172,[[]]],[11,"borrow","","",172,[[]]],[11,"borrow_mut","","",172,[[]]],[11,"try_from","","",172,[[],["result",4]]],[11,"try_into","","",172,[[],["result",4]]],[11,"type_id","","",172,[[],["typeid",3]]],[11,"try_poll_next","","",172,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"from","","",173,[[]]],[11,"into","","",173,[[]]],[11,"borrow","","",173,[[]]],[11,"borrow_mut","","",173,[[]]],[11,"try_from","","",173,[[],["result",4]]],[11,"try_into","","",173,[[],["result",4]]],[11,"type_id","","",173,[[],["typeid",3]]],[11,"try_poll_next","","",173,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"from","","",174,[[]]],[11,"into","","",174,[[]]],[11,"borrow","","",174,[[]]],[11,"borrow_mut","","",174,[[]]],[11,"try_from","","",174,[[],["result",4]]],[11,"try_into","","",174,[[],["result",4]]],[11,"type_id","","",174,[[],["typeid",3]]],[11,"try_poll_next","","",174,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"from","","",175,[[]]],[11,"into","","",175,[[]]],[11,"borrow","","",175,[[]]],[11,"borrow_mut","","",175,[[]]],[11,"try_from","","",175,[[],["result",4]]],[11,"try_into","","",175,[[],["result",4]]],[11,"type_id","","",175,[[],["typeid",3]]],[11,"try_poll_next","","",175,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"from","","",176,[[]]],[11,"into","","",176,[[]]],[11,"borrow","","",176,[[]]],[11,"borrow_mut","","",176,[[]]],[11,"try_from","","",176,[[],["result",4]]],[11,"try_into","","",176,[[],["result",4]]],[11,"type_id","","",176,[[],["typeid",3]]],[11,"try_poll_next","","",176,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"from","","",177,[[]]],[11,"into","","",177,[[]]],[11,"borrow","","",177,[[]]],[11,"borrow_mut","","",177,[[]]],[11,"try_from","","",177,[[],["result",4]]],[11,"try_into","","",177,[[],["result",4]]],[11,"type_id","","",177,[[],["typeid",3]]],[11,"try_poll_next","","",177,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"from","","",178,[[]]],[11,"into","","",178,[[]]],[11,"borrow","","",178,[[]]],[11,"borrow_mut","","",178,[[]]],[11,"try_from","","",178,[[],["result",4]]],[11,"try_into","","",178,[[],["result",4]]],[11,"type_id","","",178,[[],["typeid",3]]],[11,"try_poll_next","","",178,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"from","","",179,[[]]],[11,"into","","",179,[[]]],[11,"borrow","","",179,[[]]],[11,"borrow_mut","","",179,[[]]],[11,"try_from","","",179,[[],["result",4]]],[11,"try_into","","",179,[[],["result",4]]],[11,"type_id","","",179,[[],["typeid",3]]],[11,"from","","",180,[[]]],[11,"into","","",180,[[]]],[11,"borrow","","",180,[[]]],[11,"borrow_mut","","",180,[[]]],[11,"try_from","","",180,[[],["result",4]]],[11,"try_into","","",180,[[],["result",4]]],[11,"type_id","","",180,[[],["typeid",3]]],[11,"try_poll_next","","",180,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"from","","",181,[[]]],[11,"into","","",181,[[]]],[11,"borrow","","",181,[[]]],[11,"borrow_mut","","",181,[[]]],[11,"try_from","","",181,[[],["result",4]]],[11,"try_into","","",181,[[],["result",4]]],[11,"type_id","","",181,[[],["typeid",3]]],[11,"try_poll_next","","",181,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"from","","",182,[[]]],[11,"into","","",182,[[]]],[11,"borrow","","",182,[[]]],[11,"borrow_mut","","",182,[[]]],[11,"try_from","","",182,[[],["result",4]]],[11,"try_into","","",182,[[],["result",4]]],[11,"type_id","","",182,[[],["typeid",3]]],[11,"try_poll_next","","",182,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"from","","",183,[[]]],[11,"into","","",183,[[]]],[11,"borrow","","",183,[[]]],[11,"borrow_mut","","",183,[[]]],[11,"try_from","","",183,[[],["result",4]]],[11,"try_into","","",183,[[],["result",4]]],[11,"type_id","","",183,[[],["typeid",3]]],[11,"try_poll_next","","",183,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"from","","",184,[[]]],[11,"into","","",184,[[]]],[11,"borrow","","",184,[[]]],[11,"borrow_mut","","",184,[[]]],[11,"try_from","","",184,[[],["result",4]]],[11,"try_into","","",184,[[],["result",4]]],[11,"type_id","","",184,[[],["typeid",3]]],[11,"try_poll_next","","",184,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"from","","",185,[[]]],[11,"into","","",185,[[]]],[11,"borrow","","",185,[[]]],[11,"borrow_mut","","",185,[[]]],[11,"try_from","","",185,[[],["result",4]]],[11,"try_into","","",185,[[],["result",4]]],[11,"type_id","","",185,[[],["typeid",3]]],[11,"try_poll_next","","",185,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"from","","",186,[[]]],[11,"into","","",186,[[]]],[11,"borrow","","",186,[[]]],[11,"borrow_mut","","",186,[[]]],[11,"try_from","","",186,[[],["result",4]]],[11,"try_into","","",186,[[],["result",4]]],[11,"type_id","","",186,[[],["typeid",3]]],[11,"try_poll_next","","",186,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"from","","",187,[[]]],[11,"into","","",187,[[]]],[11,"borrow","","",187,[[]]],[11,"borrow_mut","","",187,[[]]],[11,"try_from","","",187,[[],["result",4]]],[11,"try_into","","",187,[[],["result",4]]],[11,"type_id","","",187,[[],["typeid",3]]],[11,"into_future","","",187,[[]]],[11,"try_poll","","",187,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",188,[[]]],[11,"into","","",188,[[]]],[11,"borrow","","",188,[[]]],[11,"borrow_mut","","",188,[[]]],[11,"try_from","","",188,[[],["result",4]]],[11,"try_into","","",188,[[],["result",4]]],[11,"type_id","","",188,[[],["typeid",3]]],[11,"into_future","","",188,[[]]],[11,"try_poll","","",188,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",189,[[]]],[11,"into","","",189,[[]]],[11,"borrow","","",189,[[]]],[11,"borrow_mut","","",189,[[]]],[11,"try_from","","",189,[[],["result",4]]],[11,"try_into","","",189,[[],["result",4]]],[11,"type_id","","",189,[[],["typeid",3]]],[11,"try_poll_next","","",189,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"from","","",190,[[]]],[11,"into","","",190,[[]]],[11,"borrow","","",190,[[]]],[11,"borrow_mut","","",190,[[]]],[11,"try_from","","",190,[[],["result",4]]],[11,"try_into","","",190,[[],["result",4]]],[11,"type_id","","",190,[[],["typeid",3]]],[11,"try_poll_next","","",190,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"from","","",191,[[]]],[11,"into","","",191,[[]]],[11,"borrow","","",191,[[]]],[11,"borrow_mut","","",191,[[]]],[11,"try_from","","",191,[[],["result",4]]],[11,"try_into","","",191,[[],["result",4]]],[11,"type_id","","",191,[[],["typeid",3]]],[11,"try_poll_next","","",191,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"from","","",192,[[]]],[11,"into","","",192,[[]]],[11,"borrow","","",192,[[]]],[11,"borrow_mut","","",192,[[]]],[11,"try_from","","",192,[[],["result",4]]],[11,"try_into","","",192,[[],["result",4]]],[11,"type_id","","",192,[[],["typeid",3]]],[11,"into_future","","",192,[[]]],[11,"try_poll","","",192,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",193,[[]]],[11,"into","","",193,[[]]],[11,"borrow","","",193,[[]]],[11,"borrow_mut","","",193,[[]]],[11,"try_from","","",193,[[],["result",4]]],[11,"try_into","","",193,[[],["result",4]]],[11,"type_id","","",193,[[],["typeid",3]]],[11,"into_future","","",193,[[]]],[11,"try_poll","","",193,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",194,[[]]],[11,"into","","",194,[[]]],[11,"borrow","","",194,[[]]],[11,"borrow_mut","","",194,[[]]],[11,"try_from","","",194,[[],["result",4]]],[11,"try_into","","",194,[[],["result",4]]],[11,"type_id","","",194,[[],["typeid",3]]],[11,"into_future","","",194,[[]]],[11,"try_poll","","",194,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",195,[[]]],[11,"into","","",195,[[]]],[11,"borrow","","",195,[[]]],[11,"borrow_mut","","",195,[[]]],[11,"try_from","","",195,[[],["result",4]]],[11,"try_into","","",195,[[],["result",4]]],[11,"type_id","","",195,[[],["typeid",3]]],[11,"try_poll_next","","",195,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"from","","",196,[[]]],[11,"into","","",196,[[]]],[11,"borrow","","",196,[[]]],[11,"borrow_mut","","",196,[[]]],[11,"try_from","","",196,[[],["result",4]]],[11,"try_into","","",196,[[],["result",4]]],[11,"type_id","","",196,[[],["typeid",3]]],[11,"try_poll_next","","",196,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"from","","",197,[[]]],[11,"into","","",197,[[]]],[11,"borrow","","",197,[[]]],[11,"borrow_mut","","",197,[[]]],[11,"try_from","","",197,[[],["result",4]]],[11,"try_into","","",197,[[],["result",4]]],[11,"type_id","","",197,[[],["typeid",3]]],[11,"from","","",198,[[]]],[11,"into","","",198,[[]]],[11,"borrow","","",198,[[]]],[11,"borrow_mut","","",198,[[]]],[11,"try_from","","",198,[[],["result",4]]],[11,"try_into","","",198,[[],["result",4]]],[11,"type_id","","",198,[[],["typeid",3]]],[11,"from","","",199,[[]]],[11,"into","","",199,[[]]],[11,"borrow","","",199,[[]]],[11,"borrow_mut","","",199,[[]]],[11,"try_from","","",199,[[],["result",4]]],[11,"try_into","","",199,[[],["result",4]]],[11,"type_id","","",199,[[],["typeid",3]]],[11,"try_poll_next","","",199,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"from","","",200,[[]]],[11,"into","","",200,[[]]],[11,"borrow","","",200,[[]]],[11,"borrow_mut","","",200,[[]]],[11,"try_from","","",200,[[],["result",4]]],[11,"try_into","","",200,[[],["result",4]]],[11,"type_id","","",200,[[],["typeid",3]]],[11,"try_poll_next","","",200,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"from","futures::stream::futures_unordered","",201,[[]]],[11,"into","","",201,[[]]],[11,"into_iter","","",201,[[]]],[11,"borrow","","",201,[[]]],[11,"borrow_mut","","",201,[[]]],[11,"try_from","","",201,[[],["result",4]]],[11,"try_into","","",201,[[],["result",4]]],[11,"type_id","","",201,[[],["typeid",3]]],[11,"from","","",202,[[]]],[11,"into","","",202,[[]]],[11,"into_iter","","",202,[[]]],[11,"borrow","","",202,[[]]],[11,"borrow_mut","","",202,[[]]],[11,"try_from","","",202,[[],["result",4]]],[11,"try_into","","",202,[[],["result",4]]],[11,"type_id","","",202,[[],["typeid",3]]],[11,"from","","",203,[[]]],[11,"into","","",203,[[]]],[11,"into_iter","","",203,[[]]],[11,"borrow","","",203,[[]]],[11,"borrow_mut","","",203,[[]]],[11,"try_from","","",203,[[],["result",4]]],[11,"try_into","","",203,[[],["result",4]]],[11,"type_id","","",203,[[],["typeid",3]]],[11,"from","","",204,[[]]],[11,"into","","",204,[[]]],[11,"into_iter","","",204,[[]]],[11,"borrow","","",204,[[]]],[11,"borrow_mut","","",204,[[]]],[11,"try_from","","",204,[[],["result",4]]],[11,"try_into","","",204,[[],["result",4]]],[11,"type_id","","",204,[[],["typeid",3]]],[11,"from","futures::stream","",205,[[]]],[11,"into","","",205,[[]]],[11,"borrow","","",205,[[]]],[11,"borrow_mut","","",205,[[]]],[11,"try_from","","",205,[[],["result",4]]],[11,"try_into","","",205,[[],["result",4]]],[11,"type_id","","",205,[[],["typeid",3]]],[11,"try_poll_next","","",205,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"from","","",206,[[]]],[11,"into","","",206,[[]]],[11,"borrow","","",206,[[]]],[11,"borrow_mut","","",206,[[]]],[11,"try_from","","",206,[[],["result",4]]],[11,"try_into","","",206,[[],["result",4]]],[11,"type_id","","",206,[[],["typeid",3]]],[11,"try_poll_next","","",206,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"from","","",207,[[]]],[11,"into","","",207,[[]]],[11,"borrow","","",207,[[]]],[11,"borrow_mut","","",207,[[]]],[11,"try_from","","",207,[[],["result",4]]],[11,"try_into","","",207,[[],["result",4]]],[11,"type_id","","",207,[[],["typeid",3]]],[11,"into_future","","",207,[[]]],[11,"from","","",208,[[]]],[11,"into","","",208,[[]]],[11,"borrow","","",208,[[]]],[11,"borrow_mut","","",208,[[]]],[11,"try_from","","",208,[[],["result",4]]],[11,"try_into","","",208,[[],["result",4]]],[11,"type_id","","",208,[[],["typeid",3]]],[11,"try_poll_next","","",208,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"from","","",209,[[]]],[11,"into","","",209,[[]]],[11,"borrow","","",209,[[]]],[11,"borrow_mut","","",209,[[]]],[11,"try_from","","",209,[[],["result",4]]],[11,"try_into","","",209,[[],["result",4]]],[11,"type_id","","",209,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_string","","",26,[[],["string",3]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","","",210,[[]]],[11,"into","","",210,[[]]],[11,"borrow","","",210,[[]]],[11,"borrow_mut","","",210,[[]]],[11,"try_from","","",210,[[],["result",4]]],[11,"try_into","","",210,[[],["result",4]]],[11,"type_id","","",210,[[],["typeid",3]]],[11,"try_poll_next","","",210,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"from","","",211,[[]]],[11,"into","","",211,[[]]],[11,"borrow","","",211,[[]]],[11,"borrow_mut","","",211,[[]]],[11,"try_from","","",211,[[],["result",4]]],[11,"try_into","","",211,[[],["result",4]]],[11,"type_id","","",211,[[],["typeid",3]]],[11,"try_poll_next","","",211,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"from","","",212,[[]]],[11,"into","","",212,[[]]],[11,"borrow","","",212,[[]]],[11,"borrow_mut","","",212,[[]]],[11,"try_from","","",212,[[],["result",4]]],[11,"try_into","","",212,[[],["result",4]]],[11,"type_id","","",212,[[],["typeid",3]]],[11,"try_poll_next","","",212,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"from","","",213,[[]]],[11,"into","","",213,[[]]],[11,"borrow","","",213,[[]]],[11,"borrow_mut","","",213,[[]]],[11,"try_from","","",213,[[],["result",4]]],[11,"try_into","","",213,[[],["result",4]]],[11,"type_id","","",213,[[],["typeid",3]]],[11,"into_future","","",213,[[]]],[11,"try_poll","","",213,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",214,[[]]],[11,"into","","",214,[[]]],[11,"borrow","","",214,[[]]],[11,"borrow_mut","","",214,[[]]],[11,"try_from","","",214,[[],["result",4]]],[11,"try_into","","",214,[[],["result",4]]],[11,"type_id","","",214,[[],["typeid",3]]],[11,"from","futures::task","",215,[[]]],[11,"into","","",215,[[]]],[11,"borrow","","",215,[[]]],[11,"borrow_mut","","",215,[[]]],[11,"try_from","","",215,[[],["result",4]]],[11,"try_into","","",215,[[],["result",4]]],[11,"type_id","","",215,[[],["typeid",3]]],[11,"from","","",27,[[]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","","",216,[[]]],[11,"into","","",216,[[]]],[11,"to_owned","","",216,[[]]],[11,"clone_into","","",216,[[]]],[11,"borrow","","",216,[[]]],[11,"borrow_mut","","",216,[[]]],[11,"try_from","","",216,[[],["result",4]]],[11,"try_into","","",216,[[],["result",4]]],[11,"type_id","","",216,[[],["typeid",3]]],[11,"from","","",217,[[]]],[11,"into","","",217,[[]]],[11,"borrow","","",217,[[]]],[11,"borrow_mut","","",217,[[]]],[11,"try_from","","",217,[[],["result",4]]],[11,"try_into","","",217,[[],["result",4]]],[11,"type_id","","",217,[[],["typeid",3]]],[11,"from","","",218,[[]]],[11,"into","","",218,[[]]],[11,"to_owned","","",218,[[]]],[11,"clone_into","","",218,[[]]],[11,"borrow","","",218,[[]]],[11,"borrow_mut","","",218,[[]]],[11,"try_from","","",218,[[],["result",4]]],[11,"try_into","","",218,[[],["result",4]]],[11,"type_id","","",218,[[],["typeid",3]]],[11,"from","","",219,[[]]],[11,"into","","",219,[[]]],[11,"to_string","","",219,[[],["string",3]]],[11,"borrow","","",219,[[]]],[11,"borrow_mut","","",219,[[]]],[11,"try_from","","",219,[[],["result",4]]],[11,"try_into","","",219,[[],["result",4]]],[11,"type_id","","",219,[[],["typeid",3]]],[11,"from","","",220,[[]]],[11,"into","","",220,[[]]],[11,"borrow","","",220,[[]]],[11,"borrow_mut","","",220,[[]]],[11,"try_from","","",220,[[],["result",4]]],[11,"try_into","","",220,[[],["result",4]]],[11,"type_id","","",220,[[],["typeid",3]]],[11,"from","","",221,[[]]],[11,"into","","",221,[[]]],[11,"borrow","","",221,[[]]],[11,"borrow_mut","","",221,[[]]],[11,"try_from","","",221,[[],["result",4]]],[11,"try_into","","",221,[[],["result",4]]],[11,"type_id","","",221,[[],["typeid",3]]],[11,"description","futures::io","",98,[[]]],[11,"cause","","",98,[[],[["option",4],["error",8]]]],[11,"source","","",98,[[],[["option",4],["error",8]]]],[11,"deref","","",99,[[]]],[11,"deref","","",100,[[]]],[11,"from","","",98,[[["intoinnererror",3]],["error",3]]],[11,"from","","Converts an [<code>ErrorKind</code>] into an [<code>Error</code>].",98,[[["errorkind",4]],["error",3]]],[11,"from","","Converts a [<code>NulError</code>] into a [<code>io::Error</code>].",98,[[["nulerror",3]],["error",3]]],[11,"hash","","",12,[[]]],[11,"deref_mut","","",100,[[]]],[11,"partial_cmp","","",12,[[["errorkind",4]],[["option",4],["ordering",4]]]],[11,"cmp","","",12,[[["errorkind",4]],["ordering",4]]],[11,"fmt","","",99,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",13,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",12,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",100,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",98,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",98,[[["formatter",3]],[["result",4],["error",3]]]],[11,"eq","","",13,[[["seekfrom",4]]]],[11,"ne","","",13,[[["seekfrom",4]]]],[11,"eq","","",12,[[["errorkind",4]]]],[11,"clone","","",99,[[],["ioslice",3]]],[11,"clone","","",13,[[],["seekfrom",4]]],[11,"clone","","",12,[[],["errorkind",4]]],[11,"fmt","futures::task","",218,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",215,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",27,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",216,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",217,[[["formatter",3]],[["result",4],["error",3]]]],[11,"cmp","","",27,[[["poll",4]],["ordering",4]]],[11,"clone","","",216,[[],["waker",3]]],[11,"clone","","",27,[[],["poll",4]]],[11,"clone","","",218,[[],["rawwakervtable",3]]],[11,"from","","Convert to a <code>Ready</code> variant.",27,[[],["poll",4]]],[11,"hash","","",27,[[]]],[11,"drop","","",216,[[]]],[11,"into_result","","",27,[[],["result",4]]],[11,"from_error","","",27,[[],[["poll",4],["result",4]]]],[11,"from_ok","","",27,[[],[["poll",4],["result",4]]]],[11,"into_result","","",27,[[],["result",4]]],[11,"from_error","","",27,[[],[["option",4],["poll",4]]]],[11,"from_ok","","",27,[[],[["option",4],["poll",4]]]],[11,"eq","","",27,[[["poll",4]]]],[11,"ne","","",27,[[["poll",4]]]],[11,"eq","","",217,[[["rawwaker",3]]]],[11,"ne","","",217,[[["rawwaker",3]]]],[11,"eq","","",218,[[["rawwakervtable",3]]]],[11,"ne","","",218,[[["rawwakervtable",3]]]],[11,"partial_cmp","","",27,[[["poll",4]],[["option",4],["ordering",4]]]],[11,"lt","","",27,[[["poll",4]]]],[11,"le","","",27,[[["poll",4]]]],[11,"gt","","",27,[[["poll",4]]]],[11,"ge","","",27,[[["poll",4]]]],[11,"from","","",216,[[["arc",3]],["waker",3]]],[11,"from","","",217,[[["arc",3]],["rawwaker",3]]],[11,"fmt","","",221,[[["formatter",3]],[["result",4],["error",3]]]],[11,"default","","",221,[[],["atomicwaker",3]]],[11,"as_ref","futures::io","",125,[[]]],[11,"poll_next","futures::future","",66,[[["pin",3],["flattenstream",3],["context",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",66,[[]]],[11,"poll_next","futures::sink","",140,[[["with",3],["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",140,[[]]],[11,"poll_next","futures::stream","",182,[[["pin",3],["mapok",3],["context",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",182,[[]]],[11,"poll_next","","",152,[[["pin",3],["unfold",3],["context",3]],[["poll",4],["option",4]]]],[11,"poll_next","","",189,[[["pin",3],["tryfilter",3],["context",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",189,[[]]],[11,"poll_next","","",184,[[["pin",3],["context",3],["orelse",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",184,[[]]],[11,"poll_next","","",153,[[["pin",3],["tryunfold",3],["context",3]],[["poll",4],["option",4]]]],[11,"poll_next","","",147,[[["empty",3],["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",147,[[]]],[11,"poll_next","","",183,[[["maperr",3],["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",183,[[]]],[11,"poll_next","","",160,[[["pin",3],["flatmap",3],["context",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",160,[[]]],[11,"poll_next","","",167,[[["pin",3],["inspect",3],["context",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",167,[[]]],[11,"poll_next","","",179,[[["pin",3],["zip",3],["context",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",179,[[]]],[11,"poll_next","","",181,[[["pin",3],["context",3],["errinto",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",181,[[]]],[11,"poll_next","","",196,[[["context",3],["pin",3],["intostream",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",196,[[]]],[11,"poll_next","","",178,[[["pin",3],["context",3],["then",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",178,[[]]],[11,"poll_next","","",149,[[["once",3],["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",149,[[]]],[11,"poll_next","","",148,[[["pending",3],["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",148,[[]]],[11,"poll_next","","",150,[[["pin",3],["context",3],["pollfn",3]],[["poll",4],["option",4]]]],[11,"poll_next","","",211,[[["pin",3],["context",3],["catchunwind",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",211,[[]]],[11,"poll_next","","",161,[[["pin",3],["context",3],["flatten",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",161,[[]]],[11,"poll_next","","",146,[[["pin",3],["context",3],["repeat",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",146,[[]]],[11,"poll_next","","",198,[[["readychunks",3],["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",198,[[]]],[11,"poll_next","","",174,[[["context",3],["pin",3],["skip",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",174,[[]]],[11,"poll_next","","",197,[[["chunks",3],["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",197,[[]]],[11,"poll_next","","",210,[[["pin",3],["selectall",3],["context",3]],[["option",4],["poll",4]]]],[11,"poll_next","","",159,[[["context",3],["filtermap",3],["pin",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",159,[[]]],[11,"poll_next","","",212,[[["pin",3],["context",3],["trybufferunordered",3]],[["poll",4],["option",4]]]],[11,"poll_next","futures::sink","",138,[[["context",3],["pin",3],["sinkerrinto",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",138,[[]]],[11,"poll_next","futures::future","",84,[[["pin",3],["tryflattenstream",3],["context",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",84,[[]]],[11,"poll_next","","",77,[[["flattensink",3],["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",77,[[]]],[11,"poll_next","futures::stream","",208,[[["splitstream",3],["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"poll_next","","",177,[[["pin",3],["context",3],["takewhile",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",177,[[]]],[11,"poll_next","futures::io","",112,[[["lines",3],["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"poll_next","futures::stream","",157,[[["enumerate",3],["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",157,[[]]],[11,"poll_next","","",199,[[["futuresordered",3],["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",199,[[]]],[11,"poll_next","","",175,[[["skipwhile",3],["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",175,[[]]],[11,"poll_next","futures::sink","",144,[[["buffer",3],["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",144,[[]]],[11,"poll_next","","",143,[[["pin",3],["withflatmap",3],["context",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",143,[[]]],[11,"poll_next","futures::stream","",195,[[["tryskipwhile",3],["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",195,[[]]],[11,"poll_next","futures::future","",70,[[["context",3],["pin",3],["intostream",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",70,[[]]],[11,"poll_next","futures::stream","",151,[[["pin",3],["select",3],["context",3]],[["option",4],["poll",4]]]],[11,"poll_next","","",176,[[["pin",3],["take",3],["context",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",176,[[]]],[11,"poll_next","futures::future","",5,[[["either",4],["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"poll_next","futures::stream","",191,[[["pin",3],["context",3],["tryflatten",3]],[["poll",4],["option",4]]]],[11,"poll_next","","",200,[[["pin",3],["context",3],["futuresunordered",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",200,[[]]],[11,"poll_next","","",186,[[["inspecterr",3],["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",186,[[]]],[11,"poll_next","","",168,[[["pin",3],["map",3],["context",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",168,[[]]],[11,"poll_next","","",180,[[["andthen",3],["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",180,[[]]],[11,"poll_next","","",190,[[["context",3],["pin",3],["tryfiltermap",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",190,[[]]],[11,"poll_next","","",173,[[["pin",3],["scan",3],["context",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",173,[[]]],[11,"poll_next","","",205,[[["context",3],["bufferunordered",3],["pin",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",205,[[]]],[11,"poll_next","","",206,[[["pin",3],["context",3],["buffered",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",206,[[]]],[11,"poll_next","","",154,[[["pin",3],["context",3],["chain",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",154,[[]]],[11,"poll_next","","",158,[[["pin",3],["filter",3],["context",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",158,[[]]],[11,"poll_next","futures::sink","",139,[[["context",3],["sinkmaperr",3],["pin",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",139,[[]]],[11,"poll_next","futures::stream","",172,[[["pin",3],["context",3],["peekable",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",172,[[]]],[11,"poll_next","","",165,[[["context",3],["pin",3],["fuse",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",165,[[]]],[11,"poll_next","","",185,[[["inspectok",3],["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",185,[[]]],[11,"poll_next","","",145,[[["iter",3],["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",145,[[]]],[11,"cmp","futures::io","",101,[[["allowstdio",3]],["ordering",4]]],[11,"deref_mut","futures::lock","",133,[[]]],[11,"deref_mut","","",130,[[]]],[11,"from_iter","futures::future","",89,[[],["selectok",3]]],[11,"from_iter","","",87,[[],["selectall",3]]],[11,"from_iter","","",86,[[],["joinall",3]]],[11,"from_iter","futures::stream","",199,[[],["futuresordered",3]]],[11,"from_iter","","",210,[[],["selectall",3]]],[11,"from_iter","futures::future","",88,[[],["tryjoinall",3]]],[11,"from_iter","futures::stream","",200,[[],["futuresunordered",3]]],[11,"next","futures::stream::futures_unordered","",202,[[],["option",4]]],[11,"size_hint","","",202,[[]]],[11,"next","","",201,[[],["option",4]]],[11,"size_hint","","",201,[[]]],[11,"next","","",204,[[],[["option",4],["pin",3]]]],[11,"size_hint","","",204,[[]]],[11,"next","","",203,[[],[["pin",3],["option",4]]]],[11,"size_hint","","",203,[[]]],[11,"default","futures::io","",104,[[],["cursor",3]]],[11,"default","futures::stream","",200,[[],["futuresunordered",3]]],[11,"default","","",210,[[],["selectall",3]]],[11,"default","","",199,[[],["futuresordered",3]]],[11,"default","futures::lock","",131,[[],["mutex",3]]],[11,"seek","futures::io","",101,[[["seekfrom",4]],[["error",3],["result",4]]]],[11,"from","futures::future","",65,[[["option",4]],["optionfuture",3]]],[11,"from","futures::lock","",131,[[],["mutex",3]]],[11,"poll","futures::stream","",213,[[["context",3],["pin",3],["tryforeachconcurrent",3]],["poll",4]]],[11,"poll","futures::io","",120,[[["pin",3],["readvectored",3],["context",3]],["poll",4]]],[11,"poll","futures::stream","",193,[[["pin",3],["tryconcat",3],["context",3]],["poll",4]]],[11,"poll","futures::future","",86,[[["joinall",3],["context",3],["pin",3]],["poll",4]]],[11,"poll","","",61,[[["tryjoin3",3],["pin",3],["context",3]],["poll",4]]],[11,"poll","futures::io","",114,[[["pin",3],["readexact",3],["context",3]],["poll",4]]],[11,"poll","futures::future","",74,[[["nevererror",3],["context",3],["pin",3]],["poll",4]]],[11,"poll","","",62,[[["tryjoin4",3],["pin",3],["context",3]],["poll",4]]],[11,"poll","futures::sink","",135,[[["pin",3],["flush",3],["context",3]],["poll",4]]],[11,"poll","futures::io","",110,[[["context",3],["pin",3],["flush",3]],["poll",4]]],[11,"poll","","",117,[[["pin",3],["context",3],["readtoend",3]],["poll",4]]],[11,"poll","futures::stream","",207,[[["pin",3],["foreachconcurrent",3],["context",3]],["poll",4]]],[11,"poll","futures::future","",76,[[["pin",3],["context",3],["errinto",3]],["poll",4]]],[11,"poll","futures::stream","",169,[[["pin",3],["next",3],["context",3]],["poll",4]]],[11,"poll","futures::future","",89,[[["selectok",3],["context",3],["pin",3]],["poll",4]]],[11,"poll","","",75,[[["pin",3],["andthen",3],["context",3]],["poll",4]]],[11,"poll","","",81,[[["pin",3],["orelse",3],["context",3]],["poll",4]]],[11,"poll","futures::lock","",132,[[["context",3],["pin",3],["mutexlockfuture",3]],["poll",4]]],[11,"poll","futures::stream","",156,[[["concat",3],["context",3],["pin",3]],["poll",4]]],[11,"poll","futures::io","",108,[[["pin",3],["context",3],["copybuf",3]],["poll",4]]],[11,"poll","futures::future","",52,[[["context",3],["pin",3],["pending",3]],["poll",4]]],[11,"poll","futures::stream","",155,[[["context",3],["collect",3],["pin",3]],["poll",4]]],[11,"poll","futures::future","",97,[[["pin",3],["shared",3],["context",3]],["poll",4]]],[11,"poll","","",54,[[["pin",3],["ready",3],["context",3]],["poll",4]]],[11,"poll","futures::sink","",136,[[["pin",3],["send",3],["context",3]],["poll",4]]],[11,"poll","futures::future","",67,[[["pin",3],["flatten",3],["context",3]],["poll",4]]],[11,"poll","","",59,[[["pin",3],["select",3],["context",3]],["poll",4]]],[11,"poll","","",51,[[["pin",3],["lazy",3],["context",3]],["poll",4]]],[11,"poll","","",95,[[["context",3],["pin",3],["remotehandle",3]],["poll",4]]],[11,"poll","","",94,[[["remote",3],["pin",3],["context",3]],["poll",4]]],[11,"poll","","",80,[[["pin",3],["context",3],["mapok",3]],["poll",4]]],[11,"poll","futures::io","",113,[[["read",3],["pin",3],["context",3]],["poll",4]]],[11,"poll","futures::future","",57,[[["context",3],["pin",3],["join4",3]],["poll",4]]],[11,"poll","","",4,[[["maybedone",4],["pin",3],["context",3]],["poll",4]]],[11,"poll","","",68,[[["fuse",3],["context",3],["pin",3]],["poll",4]]],[11,"poll","","",85,[[["pin",3],["context",3],["unwraporelse",3]],["poll",4]]],[11,"poll","","",65,[[["optionfuture",3],["pin",3],["context",3]],["poll",4]]],[11,"poll","futures::io","",116,[[["pin",3],["context",3],["readline",3]],["poll",4]]],[11,"poll","futures::stream","",162,[[["pin",3],["fold",3],["context",3]],["poll",4]]],[11,"poll","futures::future","",72,[[["then",3],["pin",3],["context",3]],["poll",4]]],[11,"poll","","",73,[[["context",3],["pin",3],["uniterror",3]],["poll",4]]],[11,"poll","","",69,[[["context",3],["inspect",3],["pin",3]],["poll",4]]],[11,"poll","futures::stream","",171,[[["pin",3],["peek",3],["context",3]],["poll",4]]],[11,"poll","futures::sink","",134,[[["pin",3],["close",3],["context",3]],["poll",4]]],[11,"poll","futures::future","",60,[[["tryjoin",3],["context",3],["pin",3]],["poll",4]]],[11,"poll","futures::stream","",166,[[["streamfuture",3],["pin",3],["context",3]],["poll",4]]],[11,"poll","","",188,[[["pin",3],["tryforeach",3],["context",3]],["poll",4]]],[11,"poll","futures::future","",90,[[["context",3],["pin",3],["abortable",3]],["poll",4]]],[11,"poll","futures::stream","",163,[[["pin",3],["context",3],["forward",3]],["poll",4]]],[11,"poll","futures::io","",126,[[["pin",3],["context",3],["write",3]],["poll",4]]],[11,"poll","futures::future","",56,[[["pin",3],["context",3],["join3",3]],["poll",4]]],[11,"poll","futures::io","",122,[[["seek",3],["context",3],["pin",3]],["poll",4]]],[11,"poll","futures::future","",96,[[["context",3],["pin",3],["catchunwind",3]],["poll",4]]],[11,"poll","","",88,[[["tryjoinall",3],["context",3],["pin",3]],["poll",4]]],[11,"poll","","",87,[[["pin",3],["selectall",3],["context",3]],["poll",4]]],[11,"poll","futures::io","",106,[[["pin",3],["close",3],["context",3]],["poll",4]]],[11,"poll","futures::stream","",164,[[["pin",3],["foreach",3],["context",3]],["poll",4]]],[11,"poll","futures::future","",64,[[["pin",3],["context",3],["tryselect",3]],["poll",4]]],[11,"poll","","",53,[[["pollfn",3],["context",3],["pin",3]],["poll",4]]],[11,"poll","","",55,[[["pin",3],["join",3],["context",3]],["poll",4]]],[11,"poll","","",63,[[["pin",3],["tryjoin5",3],["context",3]],["poll",4]]],[11,"poll","","",71,[[["pin",3],["context",3],["map",3]],["poll",4]]],[11,"poll","futures::sink","",137,[[["pin",3],["sendall",3],["context",3]],["poll",4]]],[11,"poll","futures::future","",79,[[["maperr",3],["pin",3],["context",3]],["poll",4]]],[11,"poll","futures::io","",119,[[["context",3],["readuntil",3],["pin",3]],["poll",4]]],[11,"poll","","",107,[[["pin",3],["copy",3],["context",3]],["poll",4]]],[11,"poll","futures::stream","",170,[[["selectnextsome",3],["context",3],["pin",3]],["poll",4]]],[11,"poll","futures::future","",83,[[["pin",3],["inspecterr",3],["context",3]],["poll",4]]],[11,"poll","","",58,[[["pin",3],["context",3],["join5",3]],["poll",4]]],[11,"poll","futures::io","",127,[[["pin",3],["context",3],["writeall",3]],[["result",4],["poll",4]]]],[11,"poll","futures::future","",78,[[["pin",3],["context",3],["intofuture",3]],["poll",4]]],[11,"poll","futures::io","",129,[[["writevectored",3],["pin",3],["context",3]],["poll",4]]],[11,"poll","futures::stream","",187,[[["context",3],["pin",3],["trynext",3]],["poll",4]]],[11,"poll","","",194,[[["context",3],["tryfold",3],["pin",3]],["poll",4]]],[11,"poll","futures::future","",82,[[["pin",3],["context",3],["inspectok",3]],["poll",4]]],[11,"poll","futures::stream","",192,[[["pin",3],["context",3],["trycollect",3]],["poll",4]]],[11,"poll","futures::io","",118,[[["readtostring",3],["context",3],["pin",3]],["poll",4]]],[11,"poll","futures::future","",5,[[["either",4],["pin",3],["context",3]],["poll",4]]],[11,"poll_read","","",5,[[["either",4],["pin",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_read_vectored","","",5,[[["either",4],["pin",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_read","futures::io","",102,[[["pin",3],["bufreader",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_read_vectored","","",102,[[["pin",3],["bufreader",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_read","futures::stream","",214,[[["intoasyncread",3],["pin",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_read","futures::io","",103,[[["pin",3],["context",3],["bufwriter",3]],[["result",4],["poll",4]]]],[11,"poll_read_vectored","","",103,[[["pin",3],["context",3],["bufwriter",3]],[["result",4],["poll",4]]]],[11,"poll_read","","",105,[[["context",3],["pin",3],["chain",3]],[["result",4],["poll",4]]]],[11,"poll_read_vectored","","",105,[[["context",3],["pin",3],["chain",3]],[["result",4],["poll",4]]]],[11,"poll_read","","",109,[[["pin",3],["context",3],["empty",3]],[["result",4],["poll",4]]]],[11,"poll_read","","",121,[[["pin",3],["repeat",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_read_vectored","","",121,[[["pin",3],["repeat",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_read","","",124,[[["pin",3],["context",3],["take",3]],[["result",4],["poll",4]]]],[11,"poll_read","","",101,[[["allowstdio",3],["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_read_vectored","","",101,[[["allowstdio",3],["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_read","","",104,[[["pin",3],["context",3],["cursor",3]],[["result",4],["poll",4]]]],[11,"poll_read_vectored","","",104,[[["pin",3],["context",3],["cursor",3]],[["result",4],["poll",4]]]],[11,"poll_read","","",115,[[["readhalf",3],["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_read_vectored","","",115,[[["readhalf",3],["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"fill_buf","","",101,[[],[["error",3],["result",4]]]],[11,"consume","","",101,[[]]],[11,"read","","",101,[[],[["error",3],["result",4]]]],[11,"read_vectored","","",101,[[],[["error",3],["result",4]]]],[11,"read_to_end","","",101,[[["vec",3]],[["error",3],["result",4]]]],[11,"read_to_string","","",101,[[["string",3]],[["error",3],["result",4]]]],[11,"read_exact","","",101,[[],[["result",4],["error",3]]]],[11,"spawn_local_obj","futures::stream","",200,[[["localfutureobj",3]],[["spawnerror",3],["result",4]]]],[11,"poll_ready","futures::sink","",142,[[["pin",3],["context",3],["drain",3]],[["result",4],["poll",4]]]],[11,"start_send","","",142,[[["pin",3],["drain",3]],["result",4]]],[11,"poll_flush","","",142,[[["pin",3],["context",3],["drain",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",142,[[["pin",3],["context",3],["drain",3]],[["result",4],["poll",4]]]],[11,"poll_ready","futures::stream","",189,[[["tryfilter",3],["pin",3],["context",3]],[["result",4],["poll",4]]]],[11,"start_send","","",189,[[["tryfilter",3],["pin",3]],["result",4]]],[11,"poll_flush","","",189,[[["tryfilter",3],["pin",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",189,[[["tryfilter",3],["pin",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_ready","","",176,[[["context",3],["take",3],["pin",3]],[["result",4],["poll",4]]]],[11,"start_send","","",176,[[["take",3],["pin",3]],["result",4]]],[11,"poll_flush","","",176,[[["context",3],["take",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",176,[[["context",3],["take",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_ready","futures::io","",111,[[["intosink",3],["pin",3],["context",3]],[["result",4],["poll",4]]]],[11,"start_send","","",111,[[["intosink",3],["pin",3]],["result",4]]],[11,"poll_flush","","",111,[[["intosink",3],["pin",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",111,[[["intosink",3],["pin",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_ready","futures::stream","",190,[[["pin",3],["tryfiltermap",3],["context",3]],[["result",4],["poll",4]]]],[11,"start_send","","",190,[[["pin",3],["tryfiltermap",3]],["result",4]]],[11,"poll_flush","","",190,[[["pin",3],["tryfiltermap",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",190,[[["pin",3],["tryfiltermap",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_ready","","",206,[[["pin",3],["buffered",3],["context",3]],[["result",4],["poll",4]]]],[11,"start_send","","",206,[[["pin",3],["buffered",3]],["result",4]]],[11,"poll_flush","","",206,[[["pin",3],["buffered",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",206,[[["pin",3],["buffered",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_ready","","",209,[[["pin",3],["context",3],["splitsink",3]],[["poll",4],["result",4]]]],[11,"start_send","","",209,[[["pin",3],["splitsink",3]],["result",4]]],[11,"poll_flush","","",209,[[["pin",3],["context",3],["splitsink",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",209,[[["pin",3],["context",3],["splitsink",3]],[["poll",4],["result",4]]]],[11,"poll_ready","","",195,[[["pin",3],["tryskipwhile",3],["context",3]],[["poll",4],["result",4]]]],[11,"start_send","","",195,[[["pin",3],["tryskipwhile",3]],["result",4]]],[11,"poll_flush","","",195,[[["pin",3],["tryskipwhile",3],["context",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",195,[[["pin",3],["tryskipwhile",3],["context",3]],[["poll",4],["result",4]]]],[11,"poll_ready","","",185,[[["inspectok",3],["pin",3],["context",3]],[["poll",4],["result",4]]]],[11,"start_send","","",185,[[["inspectok",3],["pin",3]],["result",4]]],[11,"poll_flush","","",185,[[["inspectok",3],["pin",3],["context",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",185,[[["inspectok",3],["pin",3],["context",3]],[["poll",4],["result",4]]]],[11,"poll_ready","","",161,[[["pin",3],["context",3],["flatten",3]],[["poll",4],["result",4]]]],[11,"start_send","","",161,[[["pin",3],["flatten",3]],["result",4]]],[11,"poll_flush","","",161,[[["pin",3],["context",3],["flatten",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",161,[[["pin",3],["context",3],["flatten",3]],[["poll",4],["result",4]]]],[11,"poll_ready","futures::future","",84,[[["pin",3],["tryflattenstream",3],["context",3]],[["poll",4],["result",4]]]],[11,"start_send","","",84,[[["pin",3],["tryflattenstream",3]],["result",4]]],[11,"poll_flush","","",84,[[["pin",3],["tryflattenstream",3],["context",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",84,[[["pin",3],["tryflattenstream",3],["context",3]],[["poll",4],["result",4]]]],[11,"poll_ready","futures::stream","",158,[[["filter",3],["pin",3],["context",3]],[["result",4],["poll",4]]]],[11,"start_send","","",158,[[["filter",3],["pin",3]],["result",4]]],[11,"poll_flush","","",158,[[["filter",3],["pin",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",158,[[["filter",3],["pin",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_ready","","",183,[[["maperr",3],["pin",3],["context",3]],[["poll",4],["result",4]]]],[11,"start_send","","",183,[[["maperr",3],["pin",3]],["result",4]]],[11,"poll_flush","","",183,[[["maperr",3],["pin",3],["context",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",183,[[["maperr",3],["pin",3],["context",3]],[["poll",4],["result",4]]]],[11,"poll_ready","","",173,[[["context",3],["scan",3],["pin",3]],[["poll",4],["result",4]]]],[11,"start_send","","",173,[[["scan",3],["pin",3]],["result",4]]],[11,"poll_flush","","",173,[[["context",3],["scan",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",173,[[["context",3],["scan",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_ready","","",174,[[["context",3],["skip",3],["pin",3]],[["poll",4],["result",4]]]],[11,"start_send","","",174,[[["skip",3],["pin",3]],["result",4]]],[11,"poll_flush","","",174,[[["context",3],["skip",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",174,[[["context",3],["skip",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_ready","","",205,[[["pin",3],["bufferunordered",3],["context",3]],[["poll",4],["result",4]]]],[11,"start_send","","",205,[[["pin",3],["bufferunordered",3]],["result",4]]],[11,"poll_flush","","",205,[[["pin",3],["bufferunordered",3],["context",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",205,[[["pin",3],["bufferunordered",3],["context",3]],[["poll",4],["result",4]]]],[11,"poll_ready","","",160,[[["pin",3],["flatmap",3],["context",3]],[["result",4],["poll",4]]]],[11,"start_send","","",160,[[["pin",3],["flatmap",3]],["result",4]]],[11,"poll_flush","","",160,[[["pin",3],["flatmap",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",160,[[["pin",3],["flatmap",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_ready","futures::sink","",144,[[["pin",3],["context",3],["buffer",3]],[["result",4],["poll",4]]]],[11,"start_send","","",144,[[["pin",3],["buffer",3]],["result",4]]],[11,"poll_flush","","",144,[[["pin",3],["context",3],["buffer",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",144,[[["pin",3],["context",3],["buffer",3]],[["result",4],["poll",4]]]],[11,"poll_ready","futures::stream","",198,[[["pin",3],["readychunks",3],["context",3]],[["result",4],["poll",4]]]],[11,"start_send","","",198,[[["pin",3],["readychunks",3]],["result",4]]],[11,"poll_flush","","",198,[[["pin",3],["readychunks",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",198,[[["pin",3],["readychunks",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_ready","","",172,[[["pin",3],["context",3],["peekable",3]],[["result",4],["poll",4]]]],[11,"start_send","","",172,[[["pin",3],["peekable",3]],["result",4]]],[11,"poll_flush","","",172,[[["pin",3],["context",3],["peekable",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",172,[[["pin",3],["context",3],["peekable",3]],[["result",4],["poll",4]]]],[11,"poll_ready","futures::sink","",140,[[["pin",3],["with",3],["context",3]],[["poll",4],["result",4]]]],[11,"start_send","","",140,[[["pin",3],["with",3]],["result",4]]],[11,"poll_flush","","",140,[[["pin",3],["with",3],["context",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",140,[[["pin",3],["with",3],["context",3]],[["poll",4],["result",4]]]],[11,"poll_ready","","",138,[[["context",3],["pin",3],["sinkerrinto",3]],[["poll",4],["result",4]]]],[11,"start_send","","",138,[[["pin",3],["sinkerrinto",3]],["result",4]]],[11,"poll_flush","","",138,[[["context",3],["pin",3],["sinkerrinto",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",138,[[["context",3],["pin",3],["sinkerrinto",3]],[["poll",4],["result",4]]]],[11,"poll_ready","futures::stream","",182,[[["pin",3],["mapok",3],["context",3]],[["result",4],["poll",4]]]],[11,"start_send","","",182,[[["pin",3],["mapok",3]],["result",4]]],[11,"poll_flush","","",182,[[["pin",3],["mapok",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",182,[[["pin",3],["mapok",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_ready","futures::future","",77,[[["flattensink",3],["pin",3],["context",3]],[["result",4],["poll",4]]]],[11,"start_send","","",77,[[["flattensink",3],["pin",3]],["result",4]]],[11,"poll_flush","","",77,[[["flattensink",3],["pin",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",77,[[["flattensink",3],["pin",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_ready","futures::stream","",175,[[["pin",3],["skipwhile",3],["context",3]],[["result",4],["poll",4]]]],[11,"start_send","","",175,[[["pin",3],["skipwhile",3]],["result",4]]],[11,"poll_flush","","",175,[[["pin",3],["skipwhile",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",175,[[["pin",3],["skipwhile",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_ready","","",168,[[["pin",3],["map",3],["context",3]],[["result",4],["poll",4]]]],[11,"start_send","","",168,[[["pin",3],["map",3]],["result",4]]],[11,"poll_flush","","",168,[[["pin",3],["map",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",168,[[["pin",3],["map",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_ready","","",197,[[["context",3],["pin",3],["chunks",3]],[["poll",4],["result",4]]]],[11,"start_send","","",197,[[["pin",3],["chunks",3]],["result",4]]],[11,"poll_flush","","",197,[[["context",3],["pin",3],["chunks",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",197,[[["context",3],["pin",3],["chunks",3]],[["poll",4],["result",4]]]],[11,"poll_ready","","",167,[[["pin",3],["inspect",3],["context",3]],[["result",4],["poll",4]]]],[11,"start_send","","",167,[[["pin",3],["inspect",3]],["result",4]]],[11,"poll_flush","","",167,[[["pin",3],["inspect",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",167,[[["pin",3],["inspect",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_ready","","",196,[[["context",3],["intostream",3],["pin",3]],[["poll",4],["result",4]]]],[11,"start_send","","",196,[[["intostream",3],["pin",3]],["result",4]]],[11,"poll_flush","","",196,[[["context",3],["intostream",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",196,[[["context",3],["intostream",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_ready","","",159,[[["pin",3],["filtermap",3],["context",3]],[["result",4],["poll",4]]]],[11,"start_send","","",159,[[["pin",3],["filtermap",3]],["result",4]]],[11,"poll_flush","","",159,[[["pin",3],["filtermap",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",159,[[["pin",3],["filtermap",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_ready","","",177,[[["takewhile",3],["pin",3],["context",3]],[["poll",4],["result",4]]]],[11,"start_send","","",177,[[["takewhile",3],["pin",3]],["result",4]]],[11,"poll_flush","","",177,[[["takewhile",3],["pin",3],["context",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",177,[[["takewhile",3],["pin",3],["context",3]],[["poll",4],["result",4]]]],[11,"poll_ready","futures::future","",5,[[["either",4],["pin",3],["context",3]],[["poll",4],["result",4]]]],[11,"start_send","","",5,[[["either",4],["pin",3]],["result",4]]],[11,"poll_flush","","",5,[[["either",4],["pin",3],["context",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",5,[[["either",4],["pin",3],["context",3]],[["poll",4],["result",4]]]],[11,"poll_ready","futures::sink","",139,[[["sinkmaperr",3],["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"start_send","","",139,[[["sinkmaperr",3],["pin",3]],["result",4]]],[11,"poll_flush","","",139,[[["sinkmaperr",3],["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",139,[[["sinkmaperr",3],["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_ready","","",141,[[["fanout",3],["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"start_send","","",141,[[["fanout",3],["pin",3]],["result",4]]],[11,"poll_flush","","",141,[[["fanout",3],["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",141,[[["fanout",3],["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_ready","futures::stream","",181,[[["pin",3],["context",3],["errinto",3]],[["result",4],["poll",4]]]],[11,"start_send","","",181,[[["pin",3],["errinto",3]],["result",4]]],[11,"poll_flush","","",181,[[["pin",3],["context",3],["errinto",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",181,[[["pin",3],["context",3],["errinto",3]],[["result",4],["poll",4]]]],[11,"poll_ready","","",180,[[["context",3],["pin",3],["andthen",3]],[["poll",4],["result",4]]]],[11,"start_send","","",180,[[["pin",3],["andthen",3]],["result",4]]],[11,"poll_flush","","",180,[[["context",3],["pin",3],["andthen",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",180,[[["context",3],["pin",3],["andthen",3]],[["poll",4],["result",4]]]],[11,"poll_ready","","",212,[[["pin",3],["trybufferunordered",3],["context",3]],[["poll",4],["result",4]]]],[11,"start_send","","",212,[[["pin",3],["trybufferunordered",3]],["result",4]]],[11,"poll_flush","","",212,[[["pin",3],["trybufferunordered",3],["context",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",212,[[["pin",3],["trybufferunordered",3],["context",3]],[["poll",4],["result",4]]]],[11,"poll_ready","futures::future","",66,[[["pin",3],["flattenstream",3],["context",3]],[["poll",4],["result",4]]]],[11,"start_send","","",66,[[["pin",3],["flattenstream",3]],["result",4]]],[11,"poll_flush","","",66,[[["pin",3],["flattenstream",3],["context",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",66,[[["pin",3],["flattenstream",3],["context",3]],[["poll",4],["result",4]]]],[11,"poll_ready","futures::sink","",143,[[["withflatmap",3],["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"start_send","","",143,[[["withflatmap",3],["pin",3]],["result",4]]],[11,"poll_flush","","",143,[[["withflatmap",3],["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",143,[[["withflatmap",3],["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_ready","futures::stream","",178,[[["pin",3],["context",3],["then",3]],[["poll",4],["result",4]]]],[11,"start_send","","",178,[[["pin",3],["then",3]],["result",4]]],[11,"poll_flush","","",178,[[["pin",3],["context",3],["then",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",178,[[["pin",3],["context",3],["then",3]],[["poll",4],["result",4]]]],[11,"poll_ready","","",186,[[["inspecterr",3],["pin",3],["context",3]],[["poll",4],["result",4]]]],[11,"start_send","","",186,[[["inspecterr",3],["pin",3]],["result",4]]],[11,"poll_flush","","",186,[[["inspecterr",3],["pin",3],["context",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",186,[[["inspecterr",3],["pin",3],["context",3]],[["poll",4],["result",4]]]],[11,"poll_ready","","",191,[[["tryflatten",3],["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"start_send","","",191,[[["tryflatten",3],["pin",3]],["result",4]]],[11,"poll_flush","","",191,[[["tryflatten",3],["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",191,[[["tryflatten",3],["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_ready","","",165,[[["context",3],["pin",3],["fuse",3]],[["poll",4],["result",4]]]],[11,"start_send","","",165,[[["pin",3],["fuse",3]],["result",4]]],[11,"poll_flush","","",165,[[["context",3],["pin",3],["fuse",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",165,[[["context",3],["pin",3],["fuse",3]],[["poll",4],["result",4]]]],[11,"poll_ready","","",157,[[["pin",3],["context",3],["enumerate",3]],[["poll",4],["result",4]]]],[11,"start_send","","",157,[[["pin",3],["enumerate",3]],["result",4]]],[11,"poll_flush","","",157,[[["pin",3],["context",3],["enumerate",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",157,[[["pin",3],["context",3],["enumerate",3]],[["poll",4],["result",4]]]],[11,"poll_ready","","",184,[[["pin",3],["context",3],["orelse",3]],[["poll",4],["result",4]]]],[11,"start_send","","",184,[[["pin",3],["orelse",3]],["result",4]]],[11,"poll_flush","","",184,[[["pin",3],["context",3],["orelse",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",184,[[["pin",3],["context",3],["orelse",3]],[["poll",4],["result",4]]]],[11,"spawn_obj","","",200,[[["futureobj",3]],[["spawnerror",3],["result",4]]]],[11,"fmt","futures::future","",5,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::stream","",195,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",160,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::future","",75,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::io","",114,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::future","",96,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::stream","",150,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::future","",80,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::stream","",174,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",162,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::lock","",133,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::stream","",181,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::future","",61,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::io","",119,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::stream","",163,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::future","",93,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::stream","",184,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::io","",109,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::future","",87,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::io","",122,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::stream","",148,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::sink","",137,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::future","",81,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::io","",124,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::future","",55,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::stream","",177,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",179,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::io","",105,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::future","",56,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::stream","",167,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::future","",97,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::sink","",139,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::future","",94,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::stream","",172,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::future","",59,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::io","",107,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::future","",60,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",62,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::stream","",193,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",147,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",199,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::io","",126,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::lock","",132,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::stream","",194,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",187,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::future","",66,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::io","",129,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::sink","",134,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::future","",76,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::io","",116,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::future","",63,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::io","",128,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::stream","",182,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",154,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::future","",67,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",72,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::stream","",190,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::io","",123,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",127,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::stream","",170,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::sink","",141,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::future","",53,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::io","",104,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::stream","",210,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",165,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::stream::futures_unordered","",204,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::stream","",205,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::future","",51,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::stream::futures_unordered","",202,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::future","",54,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::stream::futures_unordered","",203,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::stream","",155,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::future","",64,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::sink","",138,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::stream","",185,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",171,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::io","",117,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::future","",82,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::io","",121,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::stream","",208,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::sink","",136,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::stream","",173,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::io","",106,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::future","",68,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::stream","",186,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::future","",65,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::stream","",146,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",197,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::future","",95,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::stream","",156,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::future","",91,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::stream","",153,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",180,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::io","",118,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::future","",77,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::stream","",211,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::future","",78,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::stream","",188,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",183,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",151,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",159,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",178,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::io","",120,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::stream","",166,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::io","",115,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::stream","",158,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::io","",101,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::future","",90,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::stream","",198,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::io","",108,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::stream","",164,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",175,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::io","",102,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::future","",86,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::stream","",206,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::io","",125,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::stream","",200,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::future","",58,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",92,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::sink","",135,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::stream","",209,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::future","",88,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::stream","",157,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::future","",4,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::stream","",169,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",214,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",207,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::future","",57,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",74,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::sink","",144,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::future","",70,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::stream","",161,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::sink","",143,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::stream","",212,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::future","",85,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",69,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::stream::futures_unordered","",201,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::stream","",26,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",149,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",176,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::sink","",142,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::io","",112,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::future","",84,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",89,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",52,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::stream","",192,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::future","",73,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",79,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::stream","",145,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::io","",103,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::stream","",189,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",152,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::io","",113,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::stream","",213,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::lock","",131,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::stream","",168,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",191,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::lock","",130,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::io","",111,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",18,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::sink","",140,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::future","",83,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::io","",110,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::stream","",196,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::future","",71,[[["formatter",3]],[["result",4],["error",3]]]],[11,"extend","futures::stream","",210,[[]]],[11,"extend","","",199,[[]]],[11,"extend","","",200,[[]]],[11,"is_terminated","futures::future","",67,[[]]],[11,"is_terminated","","",59,[[]]],[11,"is_terminated","","",52,[[]]],[11,"is_terminated","","",85,[[]]],[11,"is_terminated","","",82,[[]]],[11,"is_terminated","","",54,[[]]],[11,"is_terminated","futures::stream","",171,[[]]],[11,"is_terminated","futures::future","",68,[[]]],[11,"is_terminated","","",58,[[]]],[11,"is_terminated","","",78,[[]]],[11,"is_terminated","futures::stream","",164,[[]]],[11,"is_terminated","futures::future","",57,[[]]],[11,"is_terminated","","",72,[[]]],[11,"is_terminated","futures::stream","",194,[[]]],[11,"is_terminated","futures::future","",5,[[]]],[11,"is_terminated","","",75,[[]]],[11,"is_terminated","futures::stream","",213,[[]]],[11,"is_terminated","futures::future","",4,[[]]],[11,"is_terminated","futures::stream","",163,[[]]],[11,"is_terminated","","",170,[[]]],[11,"is_terminated","futures::lock","",132,[[]]],[11,"is_terminated","futures::future","",81,[[]]],[11,"is_terminated","","",74,[[]]],[11,"is_terminated","","",73,[[]]],[11,"is_terminated","","",69,[[]]],[11,"is_terminated","futures::stream","",192,[[]]],[11,"is_terminated","","",169,[[]]],[11,"is_terminated","futures::future","",79,[[]]],[11,"is_terminated","","",71,[[]]],[11,"is_terminated","","",80,[[]]],[11,"is_terminated","futures::stream","",166,[[]]],[11,"is_terminated","futures::future","",83,[[]]],[11,"is_terminated","futures::stream","",187,[[]]],[11,"is_terminated","futures::future","",76,[[]]],[11,"is_terminated","","",65,[[]]],[11,"is_terminated","","",97,[[]]],[11,"is_terminated","futures::stream","",207,[[]]],[11,"is_terminated","","",162,[[]]],[11,"is_terminated","","",156,[[]]],[11,"is_terminated","futures::future","",55,[[]]],[11,"is_terminated","futures::stream","",155,[[]]],[11,"is_terminated","futures::future","",51,[[]]],[11,"is_terminated","","",56,[[]]],[11,"poll_write","futures::io","",104,[[["context",3],["pin",3],["cursor",3]],[["result",4],["poll",4]]]],[11,"poll_write_vectored","","",104,[[["context",3],["pin",3],["cursor",3]],[["result",4],["poll",4]]]],[11,"poll_flush","","",104,[[["context",3],["pin",3],["cursor",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",104,[[["context",3],["pin",3],["cursor",3]],[["result",4],["poll",4]]]],[11,"poll_write","","",128,[[["context",3],["pin",3],["writehalf",3]],[["result",4],["poll",4]]]],[11,"poll_write_vectored","","",128,[[["context",3],["pin",3],["writehalf",3]],[["result",4],["poll",4]]]],[11,"poll_flush","","",128,[[["context",3],["pin",3],["writehalf",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",128,[[["context",3],["pin",3],["writehalf",3]],[["result",4],["poll",4]]]],[11,"poll_write","futures::stream","",214,[[["intoasyncread",3],["pin",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_flush","","",214,[[["intoasyncread",3],["pin",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",214,[[["intoasyncread",3],["pin",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_write","futures::io","",104,[[["pin",3],["cursor",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_write_vectored","","",104,[[["pin",3],["cursor",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_flush","","",104,[[["pin",3],["cursor",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",104,[[["pin",3],["cursor",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_write","futures::future","",5,[[["either",4],["pin",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_write_vectored","","",5,[[["either",4],["pin",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_flush","","",5,[[["either",4],["pin",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",5,[[["either",4],["pin",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_write","futures::io","",104,[[["pin",3],["context",3],["cursor",3]],[["result",4],["poll",4]]]],[11,"poll_write_vectored","","",104,[[["pin",3],["context",3],["cursor",3]],[["result",4],["poll",4]]]],[11,"poll_flush","","",104,[[["pin",3],["context",3],["cursor",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",104,[[["pin",3],["context",3],["cursor",3]],[["result",4],["poll",4]]]],[11,"poll_write","","",103,[[["pin",3],["context",3],["bufwriter",3]],[["result",4],["poll",4]]]],[11,"poll_write_vectored","","",103,[[["pin",3],["context",3],["bufwriter",3]],[["result",4],["poll",4]]]],[11,"poll_flush","","",103,[[["pin",3],["context",3],["bufwriter",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",103,[[["pin",3],["context",3],["bufwriter",3]],[["result",4],["poll",4]]]],[11,"poll_write","","",104,[[["pin",3],["cursor",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_write_vectored","","",104,[[["pin",3],["cursor",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_flush","","",104,[[["pin",3],["cursor",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",104,[[["pin",3],["cursor",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_write","","",123,[[["sink",3],["pin",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_write_vectored","","",123,[[["sink",3],["pin",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_flush","","",123,[[["sink",3],["pin",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",123,[[["sink",3],["pin",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_write","","",101,[[["allowstdio",3],["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_write_vectored","","",101,[[["allowstdio",3],["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_flush","","",101,[[["allowstdio",3],["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",101,[[["allowstdio",3],["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_write","","",102,[[["pin",3],["bufreader",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_write_vectored","","",102,[[["pin",3],["bufreader",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_flush","","",102,[[["pin",3],["bufreader",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",102,[[["pin",3],["bufreader",3],["context",3]],[["result",4],["poll",4]]]],[11,"partial_cmp","","",101,[[["allowstdio",3]],[["option",4],["ordering",4]]]],[11,"lt","","",101,[[["allowstdio",3]]]],[11,"le","","",101,[[["allowstdio",3]]]],[11,"gt","","",101,[[["allowstdio",3]]]],[11,"ge","","",101,[[["allowstdio",3]]]],[11,"as_mut","","",125,[[]]],[11,"poll_seek","futures::future","",5,[[["either",4],["pin",3],["context",3],["seekfrom",4]],[["poll",4],["result",4]]]],[11,"poll_seek","futures::io","Seek to the offset, in bytes, in the underlying writer.",103,[[["seekfrom",4],["pin",3],["context",3],["bufwriter",3]],[["poll",4],["result",4]]]],[11,"poll_seek","","Seek to an offset, in bytes, in the underlying reader.",102,[[["bufreader",3],["pin",3],["context",3],["seekfrom",4]],[["poll",4],["result",4]]]],[11,"poll_seek","","",104,[[["cursor",3],["seekfrom",4],["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_seek","","",101,[[["seekfrom",4],["allowstdio",3],["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"hash","","",101,[[]]],[11,"drop","futures::lock","",133,[[]]],[11,"drop","futures::stream","",200,[[]]],[11,"drop","futures::future","",97,[[]]],[11,"drop","futures::lock","",132,[[]]],[11,"drop","","",130,[[]]],[11,"is_terminated","futures::stream","",190,[[]]],[11,"is_terminated","","",210,[[]]],[11,"is_terminated","","",181,[[]]],[11,"is_terminated","","",173,[[]]],[11,"is_terminated","","",174,[[]]],[11,"is_terminated","futures::sink","",143,[[]]],[11,"is_terminated","futures::stream","",196,[[]]],[11,"is_terminated","","",152,[[]]],[11,"is_terminated","","",157,[[]]],[11,"is_terminated","","",183,[[]]],[11,"is_terminated","","",172,[[]]],[11,"is_terminated","","",182,[[]]],[11,"is_terminated","futures::future","",84,[[]]],[11,"is_terminated","futures::stream","",200,[[]]],[11,"is_terminated","","",178,[[]]],[11,"is_terminated","","",148,[[]]],[11,"is_terminated","futures::future","",66,[[]]],[11,"is_terminated","futures::sink","",138,[[]]],[11,"is_terminated","futures::stream","",154,[[]]],[11,"is_terminated","","",198,[[]]],[11,"is_terminated","futures::future","",5,[[]]],[11,"is_terminated","futures::stream","",158,[[]]],[11,"is_terminated","","",147,[[]]],[11,"is_terminated","","",151,[[]]],[11,"is_terminated","","",176,[[]]],[11,"is_terminated","","",180,[[]]],[11,"is_terminated","","",159,[[]]],[11,"is_terminated","","",168,[[]]],[11,"is_terminated","","",185,[[]]],[11,"is_terminated","","",195,[[]]],[11,"is_terminated","","",175,[[]]],[11,"is_terminated","","",184,[[]]],[11,"is_terminated","","",149,[[]]],[11,"is_terminated","","",161,[[]]],[11,"is_terminated","","",165,[[]]],[11,"is_terminated","","",205,[[]]],[11,"is_terminated","","",211,[[]]],[11,"is_terminated","futures::future","",77,[[]]],[11,"is_terminated","futures::sink","",139,[[]]],[11,"is_terminated","futures::future","",70,[[]]],[11,"is_terminated","futures::stream","",197,[[]]],[11,"is_terminated","","",160,[[]]],[11,"is_terminated","","",177,[[]]],[11,"is_terminated","futures::sink","",144,[[]]],[11,"is_terminated","futures::stream","",186,[[]]],[11,"is_terminated","","",189,[[]]],[11,"is_terminated","","",146,[[]]],[11,"is_terminated","","",191,[[]]],[11,"is_terminated","","",167,[[]]],[11,"is_terminated","","",179,[[]]],[11,"deref","futures::lock","",130,[[]]],[11,"deref","","",133,[[]]],[11,"clone","futures::future","",52,[[],["pending",3]]],[11,"clone","futures::io","",104,[[],["cursor",3]]],[11,"clone","futures::future","",91,[[],["aborthandle",3]]],[11,"clone","","",5,[[],["either",4]]],[11,"clone","futures::sink","",139,[[],["sinkmaperr",3]]],[11,"clone","futures::future","",93,[[],["aborted",3]]],[11,"clone","","",90,[[],["abortable",3]]],[11,"clone","futures::io","",101,[[],["allowstdio",3]]],[11,"clone","futures::future","",65,[[],["optionfuture",3]]],[11,"clone","","",54,[[],["ready",3]]],[11,"clone","","",97,[[],["shared",3]]],[11,"eq","","",93,[[["aborted",3]]]],[11,"eq","futures::io","",101,[[["allowstdio",3]]]],[11,"ne","","",101,[[["allowstdio",3]]]],[11,"write","","",101,[[],[["error",3],["result",4]]]],[11,"write_vectored","","",101,[[],[["error",3],["result",4]]]],[11,"flush","","",101,[[],[["result",4],["error",3]]]],[11,"write_all","","",101,[[],[["result",4],["error",3]]]],[11,"write_fmt","","",101,[[["arguments",3]],[["result",4],["error",3]]]],[11,"fmt","","",18,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::stream","",26,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::future","",93,[[["formatter",3]],[["result",4],["error",3]]]],[11,"poll_fill_buf","","",5,[[["either",4],["pin",3],["context",3]],[["poll",4],["result",4]]]],[11,"consume","","",5,[[["either",4],["pin",3]]]],[11,"poll_fill_buf","futures::io","",105,[[["context",3],["pin",3],["chain",3]],[["poll",4],["result",4]]]],[11,"consume","","",105,[[["pin",3],["chain",3]]]],[11,"poll_fill_buf","","",102,[[["pin",3],["bufreader",3],["context",3]],[["poll",4],["result",4]]]],[11,"consume","","",102,[[["pin",3],["bufreader",3]]]],[11,"poll_fill_buf","futures::stream","",214,[[["intoasyncread",3],["pin",3],["context",3]],[["poll",4],["result",4]]]],[11,"consume","","",214,[[["intoasyncread",3],["pin",3]]]],[11,"poll_fill_buf","futures::io","",103,[[["pin",3],["context",3],["bufwriter",3]],[["poll",4],["result",4]]]],[11,"consume","","",103,[[["pin",3],["bufwriter",3]]]],[11,"poll_fill_buf","","",101,[[["allowstdio",3],["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"consume","","",101,[[["allowstdio",3],["pin",3]]]],[11,"poll_fill_buf","","",124,[[["pin",3],["context",3],["take",3]],[["poll",4],["result",4]]]],[11,"consume","","",124,[[["pin",3],["take",3]]]],[11,"poll_fill_buf","","",109,[[["pin",3],["context",3],["empty",3]],[["poll",4],["result",4]]]],[11,"consume","","",109,[[["pin",3],["empty",3]]]],[11,"poll_fill_buf","","",104,[[["pin",3],["context",3],["cursor",3]],[["poll",4],["result",4]]]],[11,"consume","","",104,[[["pin",3],["cursor",3]]]],[11,"drop","futures::task","",50,[[]]],[11,"from","","",50,[[["box",3],["pin",3]],["localfutureobj",3]]],[11,"from","","",49,[[["box",3],["future",8],["global",3]],["futureobj",3]]],[11,"from","","",49,[[["global",3],["box",3]],["futureobj",3]]],[11,"from","","",50,[[["futureobj",3]],["localfutureobj",3]]],[11,"from","","",49,[[["pin",3],["box",3]],["futureobj",3]]],[11,"from","","",49,[[["box",3],["pin",3]],["futureobj",3]]],[11,"from","","",50,[[["global",3],["box",3]],["localfutureobj",3]]],[11,"from","","",50,[[["box",3],["future",8],["global",3]],["localfutureobj",3]]],[11,"from","","",50,[[["box",3],["pin",3]],["localfutureobj",3]]],[11,"deref","","",220,[[],["waker",3]]],[11,"fmt","","",219,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",50,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",220,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",49,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",219,[[["formatter",3]],[["result",4],["error",3]]]],[11,"poll","","",49,[[["futureobj",3],["pin",3],["context",3]],["poll",4]]],[11,"poll","","",50,[[["localfutureobj",3],["context",3],["pin",3]],["poll",4]]],[11,"drop","futures::channel::oneshot","",34,[[]]],[11,"drop","","",33,[[]]],[11,"drop","futures::channel::mpsc","",39,[[]]],[11,"drop","","",40,[[]]],[11,"poll_ready","","",37,[[["pin",3],["sender",3],["context",3]],[["result",4],["poll",4]]]],[11,"start_send","","",37,[[["pin",3],["sender",3]],["result",4]]],[11,"poll_flush","","",37,[[["pin",3],["sender",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",37,[[["pin",3],["sender",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_ready","","",38,[[["pin",3],["context",3],["unboundedsender",3]],[["result",4],["poll",4]]]],[11,"start_send","","",38,[[["pin",3],["unboundedsender",3]],["result",4]]],[11,"poll_flush","","",38,[[["pin",3],["context",3],["unboundedsender",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",38,[[["pin",3],["context",3],["unboundedsender",3]],[["result",4],["poll",4]]]],[11,"is_terminated","","",39,[[]]],[11,"is_terminated","","",40,[[]]],[11,"poll","futures::channel::oneshot","",33,[[["pin",3],["receiver",3],["context",3]],[["poll",4],["result",4]]]],[11,"poll","","",35,[[["pin",3],["cancellation",3],["context",3]],["poll",4]]],[11,"clone","futures::channel::mpsc","",38,[[],["unboundedsender",3]]],[11,"clone","","",41,[[],["senderror",3]]],[11,"clone","","",42,[[],["trysenderror",3]]],[11,"clone","futures::channel::oneshot","",36,[[],["canceled",3]]],[11,"clone","futures::channel::mpsc","",37,[[],["sender",3]]],[11,"poll_next","","",40,[[["pin",3],["context",3],["unboundedreceiver",3]],[["poll",4],["option",4]]]],[11,"poll_next","","",39,[[["pin",3],["context",3],["receiver",3]],[["poll",4],["option",4]]]],[11,"eq","futures::channel::oneshot","",36,[[["canceled",3]]]],[11,"eq","futures::channel::mpsc","",41,[[["senderror",3]]]],[11,"ne","","",41,[[["senderror",3]]]],[11,"eq","","",42,[[["trysenderror",3]]]],[11,"ne","","",42,[[["trysenderror",3]]]],[11,"fmt","futures::channel::oneshot","",35,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::channel::mpsc","",38,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::channel::oneshot","",33,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::channel::mpsc","",37,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",39,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",40,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::channel::oneshot","",34,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",36,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::channel::mpsc","",42,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",43,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",41,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",41,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",43,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",42,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::channel::oneshot","",36,[[["formatter",3]],[["result",4],["error",3]]]],[11,"clone","futures::executor","",47,[[],["localspawner",3]]],[11,"deref","","",44,[[]]],[11,"spawn_obj","","",47,[[["futureobj",3]],[["spawnerror",3],["result",4]]]],[11,"status","","",47,[[],[["spawnerror",3],["result",4]]]],[11,"deref_mut","","",44,[[]]],[11,"fmt","","",47,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",46,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",45,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",48,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",44,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",46,[[["formatter",3]],[["result",4],["error",3]]]],[11,"next","","",44,[[],["option",4]]],[11,"size_hint","","",44,[[]]],[11,"spawn_local_obj","","",47,[[["localfutureobj",3]],[["spawnerror",3],["result",4]]]],[11,"status_local","","",47,[[],[["spawnerror",3],["result",4]]]],[11,"default","","",48,[[],["localpool",3]]],[11,"drop","","",45,[[]]],[11,"close","futures::channel::oneshot","Gracefully close this receiver, preventing any subsequent …",33,[[]]],[11,"try_recv","","Attempts to receive a message outside of the context of a …",33,[[],[["result",4],["option",4],["canceled",3]]]],[11,"send","","Completes this oneshot with a successful result.",34,[[],["result",4]]],[11,"poll_canceled","","Polls this <code>Sender</code> half to detect whether its associated …",34,[[["context",3]],["poll",4]]],[11,"cancellation","","Creates a future that resolves when this <code>Sender</code>\'s …",34,[[],["cancellation",3]]],[11,"is_canceled","","Tests to see whether this <code>Sender</code>\'s corresponding <code>Receiver</code> …",34,[[]]],[11,"try_send","futures::channel::mpsc","Attempts to send a message on this <code>Sender</code>, returning the …",37,[[],[["result",4],["trysenderror",3]]]],[11,"start_send","","Send a message on the channel.",37,[[],[["result",4],["senderror",3]]]],[11,"poll_ready","","Polls the channel to determine if there is guaranteed …",37,[[["context",3]],[["result",4],["poll",4]]]],[11,"is_closed","","Returns whether this channel is closed without needing a …",37,[[]]],[11,"close_channel","","Closes this channel from the sender side, preventing any …",37,[[]]],[11,"disconnect","","Disconnects this sender from the channel, closing it if …",37,[[]]],[11,"same_receiver","","Returns whether the senders send to the same receiver.",37,[[["sender",3]]]],[11,"hash_receiver","","Hashes the receiver into the provided hasher",37,[[]]],[11,"poll_ready","","Check if the channel is ready to receive a message.",38,[[["context",3]],[["result",4],["poll",4]]]],[11,"is_closed","","Returns whether this channel is closed without needing a …",38,[[]]],[11,"close_channel","","Closes this channel from the sender side, preventing any …",38,[[]]],[11,"disconnect","","Disconnects this sender from the channel, closing it if …",38,[[]]],[11,"start_send","","Send a message on the channel.",38,[[],[["result",4],["senderror",3]]]],[11,"unbounded_send","","Sends a message along this channel.",38,[[],[["result",4],["trysenderror",3]]]],[11,"same_receiver","","Returns whether the senders send to the same receiver.",38,[[["unboundedsender",3]]]],[11,"hash_receiver","","Hashes the receiver into the provided hasher",38,[[]]],[11,"close","","Closes the receiving half of a channel, without dropping …",39,[[]]],[11,"try_next","","Tries to receive the next message without notifying a …",39,[[],[["tryrecverror",3],["result",4],["option",4]]]],[11,"close","","Closes the receiving half of a channel, without dropping …",40,[[]]],[11,"try_next","","Tries to receive the next message without notifying a …",40,[[],[["tryrecverror",3],["result",4],["option",4]]]],[11,"is_full","","Returns <code>true</code> if this error is a result of the channel …",41,[[]]],[11,"is_disconnected","","Returns <code>true</code> if this error is a result of the receiver …",41,[[]]],[11,"is_full","","Returns <code>true</code> if this error is a result of the channel …",42,[[]]],[11,"is_disconnected","","Returns <code>true</code> if this error is a result of the receiver …",42,[[]]],[11,"into_inner","","Returns the message that was attempted to be sent but …",42,[[]]],[11,"into_send_error","","Drops the message and converts into a <code>SendError</code>.",42,[[],["senderror",3]]],[11,"into_inner","futures::executor","Convert this <code>BlockingStream</code> into the inner <code>Stream</code> type.",44,[[]]],[11,"new","","Create a new, empty pool of tasks.",48,[[],["localpool",3]]],[11,"spawner","","Get a clonable handle to the pool as a [<code>Spawn</code>].",48,[[],["localspawner",3]]],[11,"run","","Run all tasks in the pool to completion.",48,[[]]],[11,"run_until","","Runs all the tasks in the pool until the given future …",48,[[]]],[11,"try_run_one","","Runs all tasks and returns after completing one future or …",48,[[]]],[11,"run_until_stalled","","Runs all tasks in the pool and returns if no more …",48,[[]]],[11,"new","futures::task","Create a <code>FutureObj</code> from a custom trait object …",49,[[],["futureobj",3]]],[11,"new","","Create a <code>LocalFutureObj</code> from a custom trait object …",50,[[],["localfutureobj",3]]],[11,"into_future_obj","","Converts the <code>LocalFutureObj</code> into a <code>FutureObj</code>.",50,[[],["futureobj",3]]],[11,"output_mut","futures::future","Returns an [<code>Option</code>] containing a mutable reference to the …",4,[[["maybedone",4],["pin",3]],["option",4]]],[11,"take_output","","Attempt to take the output of a <code>MaybeDone</code> without driving …",4,[[["maybedone",4],["pin",3]],["option",4]]],[11,"into_inner","","Unwraps the value from this immediately ready future.",54,[[]]],[11,"factor_first","","Factor out a homogeneous type from an either of pairs.",5,[[]]],[11,"factor_second","","Factor out a homogeneous type from an either of pairs.",5,[[]]],[11,"into_inner","","Extract the value of an either over two equivalent types.",5,[[]]],[11,"terminated","","Creates a new <code>Fuse</code>-wrapped future which is already …",68,[[],["fuse",3]]],[11,"new","","Creates a new <code>Abortable</code> future using an existing …",90,[[["abortregistration",3]],["abortable",3]]],[11,"new_pair","","Creates an (<code>AbortHandle</code>, <code>AbortRegistration</code>) pair which …",91,[[]]],[11,"abort","","Abort the <code>Abortable</code> future associated with this handle.",91,[[]]],[11,"forget","","Drops this handle <em>without</em> canceling the underlying future.",95,[[]]],[11,"peek","","Returns [<code>Some</code>] containing a reference to this [<code>Shared</code>]\'s …",97,[[],["option",4]]],[11,"new","futures::io","Creates a new I/O error from a known kind of error as …",98,[[["errorkind",4]],["error",3]]],[11,"last_os_error","","Returns an error representing the last OS error which …",98,[[],["error",3]]],[11,"from_raw_os_error","","Creates a new instance of an [<code>Error</code>] from a particular OS …",98,[[],["error",3]]],[11,"raw_os_error","","Returns the OS error that this error represents (if any).",98,[[],["option",4]]],[11,"get_ref","","Returns a reference to the inner error wrapped by this …",98,[[],[["error",8],["option",4]]]],[11,"get_mut","","Returns a mutable reference to the inner error wrapped by …",98,[[],[["option",4],["error",8]]]],[11,"into_inner","","Consumes the <code>Error</code>, returning its inner error (if any).",98,[[],[["option",4],["box",3]]]],[11,"kind","","Returns the corresponding [<code>ErrorKind</code>] for this error.",98,[[],["errorkind",4]]],[11,"new","","Creates a new <code>IoSlice</code> wrapping a byte slice.",99,[[],["ioslice",3]]],[11,"advance","","Advance the internal cursor of the slice.",99,[[]]],[11,"new","","Creates a new <code>IoSliceMut</code> wrapping a byte slice.",100,[[],["ioslicemut",3]]],[11,"advance","","Advance the internal cursor of the slice.",100,[[]]],[11,"new","","Creates a new <code>AllowStdIo</code> from an existing IO object.",101,[[],["allowstdio",3]]],[11,"get_ref","","Returns a reference to the contained IO object.",101,[[]]],[11,"get_mut","","Returns a mutable reference to the contained IO object.",101,[[]]],[11,"into_inner","","Consumes self and returns the contained IO object.",101,[[]]],[11,"new","","Creates a new <code>BufReader</code> with a default buffer capacity. …",102,[[],["bufreader",3]]],[11,"with_capacity","","Creates a new <code>BufReader</code> with the specified buffer …",102,[[],["bufreader",3]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",102,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",102,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",102,[[["pin",3],["bufreader",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",102,[[]]],[11,"buffer","","Returns a reference to the internally buffered data.",102,[[]]],[11,"new","","Creates a new <code>BufWriter</code> with a default buffer capacity. …",103,[[],["bufwriter",3]]],[11,"with_capacity","","Creates a new <code>BufWriter</code> with the specified buffer …",103,[[],["bufwriter",3]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",103,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",103,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",103,[[["pin",3],["bufwriter",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",103,[[]]],[11,"buffer","","Returns a reference to the internally buffered data.",103,[[]]],[11,"new","","Creates a new cursor wrapping the provided underlying …",104,[[],["cursor",3]]],[11,"into_inner","","Consumes this cursor, returning the underlying value.",104,[[]]],[11,"get_ref","","Gets a reference to the underlying value in this cursor.",104,[[]]],[11,"get_mut","","Gets a mutable reference to the underlying value in this …",104,[[]]],[11,"position","","Returns the current position of this cursor.",104,[[]]],[11,"set_position","","Sets the position of this cursor.",104,[[]]],[11,"get_ref","","Gets references to the underlying readers in this <code>Chain</code>.",105,[[]]],[11,"get_mut","","Gets mutable references to the underlying readers in this …",105,[[]]],[11,"get_pin_mut","","Gets pinned mutable references to the underlying readers …",105,[[["pin",3],["chain",3]]]],[11,"into_inner","","Consumes the <code>Chain</code>, returning the wrapped readers.",105,[[]]],[11,"reunite","","Attempts to put the two \\\"halves\\\" of a split …",115,[[["writehalf",3]],[["reuniteerror",3],["result",4]]]],[11,"limit","","Returns the remaining number of bytes that can be read …",124,[[]]],[11,"set_limit","","Sets the number of bytes that can be read before this …",124,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",124,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",124,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",124,[[["pin",3],["take",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",124,[[]]],[11,"new","","Creates a new window around the buffer <code>t</code> defaulting to …",125,[[],["window",3]]],[11,"get_ref","","Gets a shared reference to the underlying buffer inside …",125,[[]]],[11,"get_mut","","Gets a mutable reference to the underlying buffer inside …",125,[[]]],[11,"into_inner","","Consumes this <code>Window</code>, returning the underlying buffer.",125,[[]]],[11,"start","","Returns the starting index of this window into the …",125,[[]]],[11,"end","","Returns the end index of this window into the underlying …",125,[[]]],[11,"set","","Changes the range of this window to the range specified.",125,[[]]],[11,"reunite","","Attempts to put the two \\\"halves\\\" of a split …",128,[[["readhalf",3]],[["reuniteerror",3],["result",4]]]],[11,"map","futures::lock","Returns a locked view over a portion of the locked data.",130,[[["mappedmutexguard",3]],["mappedmutexguard",3]]],[11,"new","","Creates a new futures-aware mutex.",131,[[],["mutex",3]]],[11,"into_inner","","Consumes this mutex, returning the underlying data.",131,[[]]],[11,"try_lock","","Attempt to acquire the lock immediately.",131,[[],[["option",4],["mutexguard",3]]]],[11,"lock","","Acquire the lock asynchronously.",131,[[],["mutexlockfuture",3]]],[11,"get_mut","","Returns a mutable reference to the underlying data.",131,[[]]],[11,"map","","Returns a locked view over a portion of the locked data.",133,[[["mutexguard",3]],["mappedmutexguard",3]]],[11,"get_ref","futures::sink","Acquires a reference to the underlying sink or stream …",138,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",138,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",138,[[["pin",3],["sinkerrinto",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",138,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",139,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",139,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",139,[[["sinkmaperr",3],["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",139,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",140,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",140,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",140,[[["pin",3],["with",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",140,[[]]],[11,"get_ref","","Get a shared reference to the inner sinks.",141,[[]]],[11,"get_mut","","Get a mutable reference to the inner sinks.",141,[[]]],[11,"get_pin_mut","","Get a pinned mutable reference to the inner sinks.",141,[[["fanout",3],["pin",3]]]],[11,"into_inner","","Consumes this combinator, returning the underlying sinks.",141,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",143,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",143,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",143,[[["withflatmap",3],["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",143,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",144,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",144,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",144,[[["pin",3],["buffer",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",144,[[]]],[11,"get_ref","futures::stream","Acquires a reference to the underlying streams that this …",151,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying streams …",151,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",151,[[["pin",3],["select",3]]]],[11,"into_inner","","Consumes this combinator, returning the underlying …",151,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",157,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",157,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",157,[[["enumerate",3],["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",157,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",158,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",158,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",158,[[["pin",3],["filter",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",158,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",159,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",159,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",159,[[["filtermap",3],["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",159,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",160,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",160,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",160,[[["pin",3],["flatmap",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",160,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",161,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",161,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",161,[[["pin",3],["flatten",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",161,[[]]],[11,"is_done","","Returns whether the underlying stream has finished or not.",165,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",165,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",165,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",165,[[["pin",3],["fuse",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",165,[[]]],[11,"get_ref","","Acquires a reference to the underlying stream that this …",166,[[],["option",4]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream …",166,[[],["option",4]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",166,[[["streamfuture",3],["pin",3]],[["option",4],["pin",3]]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",166,[[],["option",4]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",167,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",167,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",167,[[["pin",3],["inspect",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",167,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",168,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",168,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",168,[[["pin",3],["map",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",168,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",172,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",172,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",172,[[["pin",3],["peekable",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",172,[[]]],[11,"peek","","Produces a <code>Peek</code> future which retrieves a reference to the …",172,[[["pin",3],["peekable",3]],["peek",3]]],[11,"poll_peek","","Peek retrieves a reference to the next item in the stream.",172,[[["pin",3],["context",3],["peekable",3]],[["poll",4],["option",4]]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",173,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",173,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",173,[[["pin",3],["scan",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",173,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",174,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",174,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",174,[[["pin",3],["skip",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",174,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",175,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",175,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",175,[[["skipwhile",3],["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",175,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",176,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",176,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",176,[[["pin",3],["take",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",176,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",177,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",177,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",177,[[["pin",3],["takewhile",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",177,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",178,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",178,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",178,[[["pin",3],["then",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",178,[[]]],[11,"get_ref","","Acquires a reference to the underlying streams that this …",179,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying streams …",179,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",179,[[["pin",3],["zip",3]]]],[11,"into_inner","","Consumes this combinator, returning the underlying …",179,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",180,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",180,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",180,[[["andthen",3],["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",180,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",181,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",181,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",181,[[["pin",3],["errinto",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",181,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",182,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",182,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",182,[[["pin",3],["mapok",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",182,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",183,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",183,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",183,[[["maperr",3],["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",183,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",184,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",184,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",184,[[["pin",3],["orelse",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",184,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",185,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",185,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",185,[[["inspectok",3],["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",185,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",186,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",186,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",186,[[["inspecterr",3],["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",186,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",189,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",189,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",189,[[["pin",3],["tryfilter",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",189,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",190,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",190,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",190,[[["pin",3],["tryfiltermap",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",190,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",191,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",191,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",191,[[["pin",3],["tryflatten",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",191,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",195,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",195,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",195,[[["tryskipwhile",3],["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",195,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",196,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",196,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",196,[[["pin",3],["intostream",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",196,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",197,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",197,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",197,[[["chunks",3],["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",197,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",198,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",198,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",198,[[["readychunks",3],["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",198,[[]]],[11,"new","","Constructs a new, empty <code>FuturesOrdered</code>",199,[[],["futuresordered",3]]],[11,"len","","Returns the number of futures contained in the queue.",199,[[]]],[11,"is_empty","","Returns <code>true</code> if the queue contains no futures",199,[[]]],[11,"push","","Push a future into the queue.",199,[[]]],[11,"new","","Constructs a new, empty [<code>FuturesUnordered</code>].",200,[[],["futuresunordered",3]]],[11,"len","","Returns the number of futures contained in the set.",200,[[]]],[11,"is_empty","","Returns <code>true</code> if the set contains no futures.",200,[[]]],[11,"push","","Push a future into the set.",200,[[]]],[11,"iter","","Returns an iterator that allows inspecting each future in …",200,[[],["iter",3]]],[11,"iter_mut","","Returns an iterator that allows modifying each future in …",200,[[],["itermut",3]]],[11,"iter_pin_mut","","Returns an iterator that allows modifying each future in …",200,[[["pin",3],["futuresunordered",3]],["iterpinmut",3]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",205,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",205,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",205,[[["bufferunordered",3],["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",205,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",206,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",206,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",206,[[["pin",3],["buffered",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",206,[[]]],[11,"reunite","","Attempts to put the two \\\"halves\\\" of a split <code>Stream + Sink</code> …",208,[[["splitsink",3]],[["reuniteerror",3],["result",4]]]],[11,"reunite","","Attempts to put the two \\\"halves\\\" of a split <code>Stream + Sink</code> …",209,[[["splitstream",3]],[["reuniteerror",3],["result",4]]]],[11,"new","","Constructs a new, empty <code>SelectAll</code>",210,[[],["selectall",3]]],[11,"len","","Returns the number of streams contained in the set.",210,[[]]],[11,"is_empty","","Returns <code>true</code> if the set contains no streams",210,[[]]],[11,"push","","Push a stream into the set.",210,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",211,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",211,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",211,[[["pin",3],["catchunwind",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",211,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",212,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",212,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",212,[[["pin",3],["trybufferunordered",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",212,[[]]],[11,"from_waker","futures::task","Create a new <code>Context</code> from a <code>&Waker</code>.",215,[[["waker",3]],["context",3]]],[11,"waker","","Returns a reference to the <code>Waker</code> for the current task.",215,[[],["waker",3]]],[11,"map","","Changes the ready value of this <code>Poll</code> with the closure …",27,[[],["poll",4]]],[11,"is_ready","","Returns <code>true</code> if this is <code>Poll::Ready</code>",27,[[]]],[11,"is_pending","","Returns <code>true</code> if this is <code>Poll::Pending</code>",27,[[]]],[11,"map_ok","","Changes the success value of this <code>Poll</code> with the closure …",27,[[],[["poll",4],["result",4]]]],[11,"map_err","","Changes the error value of this <code>Poll</code> with the closure …",27,[[],[["result",4],["poll",4]]]],[11,"map_ok","","Changes the success value of this <code>Poll</code> with the closure …",27,[[],[["poll",4],["option",4]]]],[11,"map_err","","Changes the error value of this <code>Poll</code> with the closure …",27,[[],[["option",4],["poll",4]]]],[11,"wake","","Wake up the task associated with this <code>Waker</code>.",216,[[]]],[11,"wake_by_ref","","Wake up the task associated with this <code>Waker</code> without …",216,[[]]],[11,"will_wake","","Returns <code>true</code> if this <code>Waker</code> and another <code>Waker</code> have awoken …",216,[[["waker",3]]]],[11,"from_raw","","Creates a new <code>Waker</code> from [<code>RawWaker</code>].",216,[[["rawwaker",3]],["waker",3]]],[11,"new","","Creates a new <code>RawWaker</code> from the provided <code>data</code> pointer and …",217,[[["rawwakervtable",3]],["rawwaker",3]]],[11,"new","","Creates a new <code>RawWakerVTable</code> from the provided <code>clone</code>, <code>wake</code>…",218,[[],["rawwakervtable",3]]],[11,"shutdown","","Spawning failed because the executor has been shut down.",219,[[],["spawnerror",3]]],[11,"is_shutdown","","Check whether spawning failed to the executor being shut …",219,[[]]],[11,"new","","Create a new [<code>WakerRef</code>] from a [<code>Waker</code>] reference.",220,[[["waker",3]],["wakerref",3]]],[11,"new_unowned","","Create a new [<code>WakerRef</code>] from a [<code>Waker</code>] that must not be …",220,[[["manuallydrop",3],["waker",3]],["wakerref",3]]],[11,"new","","Create an <code>AtomicWaker</code>.",221,[[],["atomicwaker",3]]],[11,"register","","Registers the waker to be notified on calls to <code>wake</code>.",221,[[["waker",3]]]],[11,"wake","","Calls <code>wake</code> on the last <code>Waker</code> passed to <code>register</code>.",221,[[]]],[11,"take","","Returns the last <code>Waker</code> passed to <code>register</code>, so that the …",221,[[],[["option",4],["waker",3]]]]],"p":[[8,"Future"],[8,"TryFuture"],[8,"FusedFuture"],[8,"UnsafeFutureObj"],[4,"MaybeDone"],[4,"Either"],[8,"FutureExt"],[8,"TryFutureExt"],[8,"AsyncRead"],[8,"AsyncWrite"],[8,"AsyncSeek"],[8,"AsyncBufRead"],[4,"ErrorKind"],[4,"SeekFrom"],[8,"AsyncReadExt"],[8,"AsyncWriteExt"],[8,"AsyncSeekExt"],[8,"AsyncBufReadExt"],[3,"ReuniteError"],[8,"Stream"],[8,"TryStream"],[8,"Sink"],[8,"SinkExt"],[8,"FusedStream"],[8,"StreamExt"],[8,"TryStreamExt"],[3,"ReuniteError"],[4,"Poll"],[8,"Spawn"],[8,"LocalSpawn"],[8,"SpawnExt"],[8,"LocalSpawnExt"],[8,"ArcWake"],[3,"Receiver"],[3,"Sender"],[3,"Cancellation"],[3,"Canceled"],[3,"Sender"],[3,"UnboundedSender"],[3,"Receiver"],[3,"UnboundedReceiver"],[3,"SendError"],[3,"TrySendError"],[3,"TryRecvError"],[3,"BlockingStream"],[3,"Enter"],[3,"EnterError"],[3,"LocalSpawner"],[3,"LocalPool"],[3,"FutureObj"],[3,"LocalFutureObj"],[3,"Lazy"],[3,"Pending"],[3,"PollFn"],[3,"Ready"],[3,"Join"],[3,"Join3"],[3,"Join4"],[3,"Join5"],[3,"Select"],[3,"TryJoin"],[3,"TryJoin3"],[3,"TryJoin4"],[3,"TryJoin5"],[3,"TrySelect"],[3,"OptionFuture"],[3,"FlattenStream"],[3,"Flatten"],[3,"Fuse"],[3,"Inspect"],[3,"IntoStream"],[3,"Map"],[3,"Then"],[3,"UnitError"],[3,"NeverError"],[3,"AndThen"],[3,"ErrInto"],[3,"FlattenSink"],[3,"IntoFuture"],[3,"MapErr"],[3,"MapOk"],[3,"OrElse"],[3,"InspectOk"],[3,"InspectErr"],[3,"TryFlattenStream"],[3,"UnwrapOrElse"],[3,"JoinAll"],[3,"SelectAll"],[3,"TryJoinAll"],[3,"SelectOk"],[3,"Abortable"],[3,"AbortHandle"],[3,"AbortRegistration"],[3,"Aborted"],[3,"Remote"],[3,"RemoteHandle"],[3,"CatchUnwind"],[3,"Shared"],[3,"Error"],[3,"IoSlice"],[3,"IoSliceMut"],[3,"AllowStdIo"],[3,"BufReader"],[3,"BufWriter"],[3,"Cursor"],[3,"Chain"],[3,"Close"],[3,"Copy"],[3,"CopyBuf"],[3,"Empty"],[3,"Flush"],[3,"IntoSink"],[3,"Lines"],[3,"Read"],[3,"ReadExact"],[3,"ReadHalf"],[3,"ReadLine"],[3,"ReadToEnd"],[3,"ReadToString"],[3,"ReadUntil"],[3,"ReadVectored"],[3,"Repeat"],[3,"Seek"],[3,"Sink"],[3,"Take"],[3,"Window"],[3,"Write"],[3,"WriteAll"],[3,"WriteHalf"],[3,"WriteVectored"],[3,"MappedMutexGuard"],[3,"Mutex"],[3,"MutexLockFuture"],[3,"MutexGuard"],[3,"Close"],[3,"Flush"],[3,"Send"],[3,"SendAll"],[3,"SinkErrInto"],[3,"SinkMapErr"],[3,"With"],[3,"Fanout"],[3,"Drain"],[3,"WithFlatMap"],[3,"Buffer"],[3,"Iter"],[3,"Repeat"],[3,"Empty"],[3,"Pending"],[3,"Once"],[3,"PollFn"],[3,"Select"],[3,"Unfold"],[3,"TryUnfold"],[3,"Chain"],[3,"Collect"],[3,"Concat"],[3,"Enumerate"],[3,"Filter"],[3,"FilterMap"],[3,"FlatMap"],[3,"Flatten"],[3,"Fold"],[3,"Forward"],[3,"ForEach"],[3,"Fuse"],[3,"StreamFuture"],[3,"Inspect"],[3,"Map"],[3,"Next"],[3,"SelectNextSome"],[3,"Peek"],[3,"Peekable"],[3,"Scan"],[3,"Skip"],[3,"SkipWhile"],[3,"Take"],[3,"TakeWhile"],[3,"Then"],[3,"Zip"],[3,"AndThen"],[3,"ErrInto"],[3,"MapOk"],[3,"MapErr"],[3,"OrElse"],[3,"InspectOk"],[3,"InspectErr"],[3,"TryNext"],[3,"TryForEach"],[3,"TryFilter"],[3,"TryFilterMap"],[3,"TryFlatten"],[3,"TryCollect"],[3,"TryConcat"],[3,"TryFold"],[3,"TrySkipWhile"],[3,"IntoStream"],[3,"Chunks"],[3,"ReadyChunks"],[3,"FuturesOrdered"],[3,"FuturesUnordered"],[3,"Iter"],[3,"IterMut"],[3,"IterPinMut"],[3,"IterPinRef"],[3,"BufferUnordered"],[3,"Buffered"],[3,"ForEachConcurrent"],[3,"SplitStream"],[3,"SplitSink"],[3,"SelectAll"],[3,"CatchUnwind"],[3,"TryBufferUnordered"],[3,"TryForEachConcurrent"],[3,"IntoAsyncRead"],[3,"Context"],[3,"Waker"],[3,"RawWaker"],[3,"RawWakerVTable"],[3,"SpawnError"],[3,"WakerRef"],[3,"AtomicWaker"]]},\
"futures_channel":{"doc":"Asynchronous channels.","i":[[0,"mpsc","futures_channel","A multi-producer, single-consumer queue for sending …",null,null],[3,"Sender","futures_channel::mpsc","The transmission end of a bounded mpsc channel.",null,null],[3,"UnboundedSender","","The transmission end of an unbounded mpsc channel.",null,null],[3,"Receiver","","The receiving end of a bounded mpsc channel.",null,null],[3,"UnboundedReceiver","","The receiving end of an unbounded mpsc channel.",null,null],[3,"SendError","","The error type for <code>Sender</code>s used as <code>Sink</code>s.",null,null],[3,"TrySendError","","The error type returned from <code>try_send</code>.",null,null],[3,"TryRecvError","","The error type returned from <code>try_next</code>.",null,null],[11,"is_full","","Returns <code>true</code> if this error is a result of the channel …",0,[[]]],[11,"is_disconnected","","Returns <code>true</code> if this error is a result of the receiver …",0,[[]]],[11,"is_full","","Returns <code>true</code> if this error is a result of the channel …",1,[[]]],[11,"is_disconnected","","Returns <code>true</code> if this error is a result of the receiver …",1,[[]]],[11,"into_inner","","Returns the message that was attempted to be sent but …",1,[[]]],[11,"into_send_error","","Drops the message and converts into a <code>SendError</code>.",1,[[],["senderror",3]]],[5,"channel","","Creates a bounded mpsc channel for communicating between …",null,[[]]],[5,"unbounded","","Creates an unbounded mpsc channel for communicating …",null,[[]]],[11,"try_send","","Attempts to send a message on this <code>Sender</code>, returning the …",2,[[],[["result",4],["trysenderror",3]]]],[11,"start_send","","Send a message on the channel.",2,[[],[["result",4],["senderror",3]]]],[11,"poll_ready","","Polls the channel to determine if there is guaranteed …",2,[[["context",3]],[["poll",4],["result",4]]]],[11,"is_closed","","Returns whether this channel is closed without needing a …",2,[[]]],[11,"close_channel","","Closes this channel from the sender side, preventing any …",2,[[]]],[11,"disconnect","","Disconnects this sender from the channel, closing it if …",2,[[]]],[11,"same_receiver","","Returns whether the senders send to the same receiver.",2,[[]]],[11,"hash_receiver","","Hashes the receiver into the provided hasher",2,[[]]],[11,"poll_ready","","Check if the channel is ready to receive a message.",3,[[["context",3]],[["poll",4],["result",4]]]],[11,"is_closed","","Returns whether this channel is closed without needing a …",3,[[]]],[11,"close_channel","","Closes this channel from the sender side, preventing any …",3,[[]]],[11,"disconnect","","Disconnects this sender from the channel, closing it if …",3,[[]]],[11,"start_send","","Send a message on the channel.",3,[[],[["result",4],["senderror",3]]]],[11,"unbounded_send","","Sends a message along this channel.",3,[[],[["result",4],["trysenderror",3]]]],[11,"same_receiver","","Returns whether the senders send to the same receiver.",3,[[]]],[11,"hash_receiver","","Hashes the receiver into the provided hasher",3,[[]]],[11,"close","","Closes the receiving half of a channel, without dropping …",4,[[]]],[11,"try_next","","Tries to receive the next message without notifying a …",4,[[],[["result",4],["tryrecverror",3],["option",4]]]],[11,"close","","Closes the receiving half of a channel, without dropping …",5,[[]]],[11,"try_next","","Tries to receive the next message without notifying a …",5,[[],[["result",4],["tryrecverror",3],["option",4]]]],[0,"oneshot","futures_channel","A channel for sending a single message between …",null,null],[3,"Receiver","futures_channel::oneshot","A future for a value that will be provided by another …",null,null],[3,"Sender","","A means of transmitting a single value to another task.",null,null],[5,"channel","","Creates a new one-shot channel for sending values across …",null,[[]]],[11,"send","","Completes this oneshot with a successful result.",6,[[],["result",4]]],[11,"poll_canceled","","Polls this <code>Sender</code> half to detect whether its associated …",6,[[["context",3]],["poll",4]]],[11,"cancellation","","Creates a future that resolves when this <code>Sender</code>\'s …",6,[[],["cancellation",3]]],[11,"is_canceled","","Tests to see whether this <code>Sender</code>\'s corresponding <code>Receiver</code> …",6,[[]]],[3,"Cancellation","","A future that resolves when the receiving end of a …",null,null],[3,"Canceled","","Error returned from a <code>Receiver</code> when the corresponding …",null,null],[11,"close","","Gracefully close this receiver, preventing any subsequent …",7,[[]]],[11,"try_recv","","Attempts to receive a message outside of the context of a …",7,[[],[["option",4],["canceled",3],["result",4]]]],[11,"from","futures_channel::mpsc","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"try_poll_next","","",4,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"try_poll_next","","",5,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_string","","",8,[[],["string",3]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","futures_channel::oneshot","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"into_future","","",7,[[]]],[11,"try_poll","","",7,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"into_future","","",9,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"to_string","","",10,[[],["string",3]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"drop","futures_channel::mpsc","",4,[[]]],[11,"drop","","",5,[[]]],[11,"drop","futures_channel::oneshot","",6,[[]]],[11,"drop","","",7,[[]]],[11,"clone","futures_channel::mpsc","",0,[[],["senderror",3]]],[11,"clone","","",1,[[],["trysenderror",3]]],[11,"clone","","",2,[[],["sender",3]]],[11,"clone","","",3,[[],["unboundedsender",3]]],[11,"clone","futures_channel::oneshot","",10,[[],["canceled",3]]],[11,"eq","futures_channel::mpsc","",0,[[["senderror",3]]]],[11,"ne","","",0,[[["senderror",3]]]],[11,"eq","","",1,[[["trysenderror",3]]]],[11,"ne","","",1,[[["trysenderror",3]]]],[11,"eq","futures_channel::oneshot","",10,[[["canceled",3]]]],[11,"fmt","futures_channel::mpsc","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","futures_channel::oneshot","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","futures_channel::mpsc","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","futures_channel::oneshot","",10,[[["formatter",3]],["result",6]]],[11,"poll","","",9,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",7,[[["pin",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_next","futures_channel::mpsc","",4,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"poll_next","","",5,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"is_terminated","","",4,[[]]],[11,"is_terminated","","",5,[[]]],[11,"poll_ready","","",2,[[["pin",3],["context",3]],[["poll",4],["result",4]]]],[11,"start_send","","",2,[[["pin",3]],["result",4]]],[11,"poll_flush","","",2,[[["pin",3],["context",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",2,[[["pin",3],["context",3]],[["poll",4],["result",4]]]],[11,"poll_ready","","",3,[[["pin",3],["context",3]],[["poll",4],["result",4]]]],[11,"start_send","","",3,[[["pin",3]],["result",4]]],[11,"poll_flush","","",3,[[["pin",3],["context",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",3,[[["pin",3],["context",3]],[["poll",4],["result",4]]]]],"p":[[3,"SendError"],[3,"TrySendError"],[3,"Sender"],[3,"UnboundedSender"],[3,"Receiver"],[3,"UnboundedReceiver"],[3,"Sender"],[3,"Receiver"],[3,"TryRecvError"],[3,"Cancellation"],[3,"Canceled"]]},\
"futures_core":{"doc":"Core traits and types for asynchronous operations in Rust.","i":[[0,"future","futures_core","Futures.",null,null],[8,"Future","futures_core::future","A future represents an asynchronous computation.",null,null],[16,"Output","","The type of value produced on completion.",0,null],[10,"poll","","Attempt to resolve the future to a final value, …",0,[[["context",3],["pin",3]],["poll",4]]],[6,"BoxFuture","","An owned dynamically typed [<code>Future</code>] for use in cases …",null,null],[6,"LocalBoxFuture","","<code>BoxFuture</code>, but without the <code>Send</code> requirement.",null,null],[8,"FusedFuture","","A future which tracks whether or not the underlying future…",null,null],[10,"is_terminated","","Returns <code>true</code> if the underlying future should no longer be …",1,[[]]],[8,"TryFuture","","A convenience for futures that return <code>Result</code> values that …",null,null],[16,"Ok","","The type of successful values yielded by this future",2,null],[16,"Error","","The type of failures yielded by this future",2,null],[10,"try_poll","","Poll this <code>TryFuture</code> as if it were a <code>Future</code>.",2,[[["pin",3],["context",3]],[["poll",4],["result",4]]]],[0,"stream","futures_core","Asynchronous streams.",null,null],[6,"BoxStream","futures_core::stream","An owned dynamically typed [<code>Stream</code>] for use in cases …",null,null],[6,"LocalBoxStream","","<code>BoxStream</code>, but without the <code>Send</code> requirement.",null,null],[8,"Stream","","A stream of values produced asynchronously.",null,null],[16,"Item","","Values yielded by the stream.",3,null],[10,"poll_next","","Attempt to pull out the next value of this stream, …",3,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"size_hint","","Returns the bounds on the remaining length of the stream.",3,[[]]],[8,"FusedStream","","A stream which tracks whether or not the underlying stream…",null,null],[10,"is_terminated","","Returns <code>true</code> if the stream should no longer be polled.",4,[[]]],[8,"TryStream","","A convenience for streams that return <code>Result</code> values that …",null,null],[16,"Ok","","The type of successful values yielded by this future",5,null],[16,"Error","","The type of failures yielded by this future",5,null],[10,"try_poll_next","","Poll this <code>TryStream</code> as if it were a <code>Stream</code>.",5,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[0,"task","futures_core","Task notification.",null,null],[3,"Context","futures_core::task","The <code>Context</code> of an asynchronous task.",null,null],[4,"Poll","","Indicates whether a value is available or if the current …",null,null],[13,"Ready","","Represents that a value is immediately ready.",6,null],[13,"Pending","","Represents that a value is not ready yet.",6,null],[3,"Waker","","A <code>Waker</code> is a handle for waking up a task by notifying its …",null,null],[3,"RawWaker","","A <code>RawWaker</code> allows the implementor of a task executor to …",null,null],[3,"RawWakerVTable","","A virtual function pointer table (vtable) that specifies …",null,null],[14,"ready","futures_core","Extracts the successful type of a <code>Poll<T></code>.",null,null],[11,"from","futures_core::task","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"fmt","","",10,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",7,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",6,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",8,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",9,[[["formatter",3]],[["result",4],["error",3]]]],[11,"cmp","","",6,[[["poll",4]],["ordering",4]]],[11,"clone","","",8,[[],["waker",3]]],[11,"clone","","",6,[[],["poll",4]]],[11,"clone","","",10,[[],["rawwakervtable",3]]],[11,"from","","Convert to a <code>Ready</code> variant.",6,[[],["poll",4]]],[11,"hash","","",6,[[]]],[11,"drop","","",8,[[]]],[11,"into_result","","",6,[[],["result",4]]],[11,"from_error","","",6,[[],[["result",4],["poll",4]]]],[11,"from_ok","","",6,[[],[["result",4],["poll",4]]]],[11,"into_result","","",6,[[],["result",4]]],[11,"from_error","","",6,[[],[["option",4],["poll",4]]]],[11,"from_ok","","",6,[[],[["option",4],["poll",4]]]],[11,"eq","","",6,[[["poll",4]]]],[11,"ne","","",6,[[["poll",4]]]],[11,"eq","","",9,[[["rawwaker",3]]]],[11,"ne","","",9,[[["rawwaker",3]]]],[11,"eq","","",10,[[["rawwakervtable",3]]]],[11,"ne","","",10,[[["rawwakervtable",3]]]],[11,"partial_cmp","","",6,[[["poll",4]],[["option",4],["ordering",4]]]],[11,"lt","","",6,[[["poll",4]]]],[11,"le","","",6,[[["poll",4]]]],[11,"gt","","",6,[[["poll",4]]]],[11,"ge","","",6,[[["poll",4]]]],[11,"from","","",8,[[["arc",3]],["waker",3]]],[11,"from","","",9,[[["arc",3]],["rawwaker",3]]],[11,"from_waker","","Create a new <code>Context</code> from a <code>&Waker</code>.",7,[[["waker",3]],["context",3]]],[11,"waker","","Returns a reference to the <code>Waker</code> for the current task.",7,[[],["waker",3]]],[11,"map","","Changes the ready value of this <code>Poll</code> with the closure …",6,[[],["poll",4]]],[11,"is_ready","","Returns <code>true</code> if this is <code>Poll::Ready</code>",6,[[]]],[11,"is_pending","","Returns <code>true</code> if this is <code>Poll::Pending</code>",6,[[]]],[11,"map_ok","","Changes the success value of this <code>Poll</code> with the closure …",6,[[],[["poll",4],["result",4]]]],[11,"map_err","","Changes the error value of this <code>Poll</code> with the closure …",6,[[],[["result",4],["poll",4]]]],[11,"map_ok","","Changes the success value of this <code>Poll</code> with the closure …",6,[[],[["option",4],["poll",4]]]],[11,"map_err","","Changes the error value of this <code>Poll</code> with the closure …",6,[[],[["poll",4],["option",4]]]],[11,"wake","","Wake up the task associated with this <code>Waker</code>.",8,[[]]],[11,"wake_by_ref","","Wake up the task associated with this <code>Waker</code> without …",8,[[]]],[11,"will_wake","","Returns <code>true</code> if this <code>Waker</code> and another <code>Waker</code> have awoken …",8,[[["waker",3]]]],[11,"from_raw","","Creates a new <code>Waker</code> from [<code>RawWaker</code>].",8,[[["rawwaker",3]],["waker",3]]],[11,"new","","Creates a new <code>RawWaker</code> from the provided <code>data</code> pointer and …",9,[[["rawwakervtable",3]],["rawwaker",3]]],[11,"new","","Creates a new <code>RawWakerVTable</code> from the provided <code>clone</code>, <code>wake</code>…",10,[[],["rawwakervtable",3]]]],"p":[[8,"Future"],[8,"FusedFuture"],[8,"TryFuture"],[8,"Stream"],[8,"FusedStream"],[8,"TryStream"],[4,"Poll"],[3,"Context"],[3,"Waker"],[3,"RawWaker"],[3,"RawWakerVTable"]]},\
"futures_executor":{"doc":"Built-in executors and related tools.","i":[[5,"block_on","futures_executor","Run a future to completion on the current thread.",null,[[["future",8]]]],[5,"block_on_stream","","Turn a stream into a blocking iterator.",null,[[["unpin",8],["stream",8]],[["blockingstream",3],["unpin",8],["stream",8]]]],[3,"BlockingStream","","An iterator which blocks on values from a stream until …",null,null],[3,"LocalPool","","A single-threaded task pool for polling futures to …",null,null],[3,"LocalSpawner","","A handle to a <code>LocalPool</code> that implements <code>Spawn</code>.",null,null],[5,"enter","","Marks the current thread as being within the dynamic …",null,[[],[["result",4],["entererror",3],["enter",3]]]],[3,"Enter","","Represents an executor context.",null,null],[3,"EnterError","","An error returned by <code>enter</code> if an execution scope has …",null,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"into_iter","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"drop","","",3,[[]]],[11,"next","","",2,[[],["option",4]]],[11,"size_hint","","",2,[[]]],[11,"clone","","",1,[[],["localspawner",3]]],[11,"default","","",0,[[]]],[11,"deref","","",2,[[]]],[11,"deref_mut","","",2,[[]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"spawn_obj","","",1,[[["futureobj",3]],[["result",4],["spawnerror",3]]]],[11,"status","","",1,[[],[["result",4],["spawnerror",3]]]],[11,"spawn_local_obj","","",1,[[["localfutureobj",3]],[["result",4],["spawnerror",3]]]],[11,"status_local","","",1,[[],[["result",4],["spawnerror",3]]]],[11,"new","","Create a new, empty pool of tasks.",0,[[],["localpool",3]]],[11,"spawner","","Get a clonable handle to the pool as a [<code>Spawn</code>].",0,[[],["localspawner",3]]],[11,"run","","Run all tasks in the pool to completion.",0,[[]]],[11,"run_until","","Runs all the tasks in the pool until the given future …",0,[[["future",8]]]],[11,"try_run_one","","Runs all tasks and returns after completing one future or …",0,[[]]],[11,"run_until_stalled","","Runs all tasks in the pool and returns if no more …",0,[[]]],[11,"into_inner","","Convert this <code>BlockingStream</code> into the inner <code>Stream</code> type.",2,[[]]]],"p":[[3,"LocalPool"],[3,"LocalSpawner"],[3,"BlockingStream"],[3,"Enter"],[3,"EnterError"]]},\
"futures_io":{"doc":"Asynchronous I/O","i":[[3,"Error","futures_io","The error type for I/O operations of the <code>Read</code>, <code>Write</code>, <code>Seek</code>…",null,null],[4,"ErrorKind","","A list specifying general categories of I/O error.",null,null],[13,"NotFound","","An entity was not found, often a file.",0,null],[13,"PermissionDenied","","The operation lacked the necessary privileges to complete.",0,null],[13,"ConnectionRefused","","The connection was refused by the remote server.",0,null],[13,"ConnectionReset","","The connection was reset by the remote server.",0,null],[13,"ConnectionAborted","","The connection was aborted (terminated) by the remote …",0,null],[13,"NotConnected","","The network operation failed because it was not connected …",0,null],[13,"AddrInUse","","A socket address could not be bound because the address …",0,null],[13,"AddrNotAvailable","","A nonexistent interface was requested or the requested …",0,null],[13,"BrokenPipe","","The operation failed because a pipe was closed.",0,null],[13,"AlreadyExists","","An entity already exists, often a file.",0,null],[13,"WouldBlock","","The operation needs to block to complete, but the …",0,null],[13,"InvalidInput","","A parameter was incorrect.",0,null],[13,"InvalidData","","Data not valid for the operation were encountered.",0,null],[13,"TimedOut","","The I/O operation\'s timeout expired, causing it to be …",0,null],[13,"WriteZero","","An error returned when an operation could not be …",0,null],[13,"Interrupted","","This operation was interrupted.",0,null],[13,"Other","","Any I/O error not part of this list.",0,null],[13,"UnexpectedEof","","An error returned when an operation could not be …",0,null],[6,"Result","","A specialized <code>Result</code> type for I/O operations.",null,null],[3,"IoSlice","","A buffer type used with <code>Write::write_vectored</code>.",null,null],[3,"IoSliceMut","","A buffer type used with <code>Read::read_vectored</code>.",null,null],[4,"SeekFrom","","Enumeration of possible methods to seek within an I/O …",null,null],[13,"Start","","Sets the offset to the provided number of bytes.",1,null],[13,"End","","Sets the offset to the size of this object plus the …",1,null],[13,"Current","","Sets the offset to the current position plus the …",1,null],[8,"AsyncRead","","Read bytes asynchronously.",null,null],[10,"poll_read","","Attempt to read from the <code>AsyncRead</code> into <code>buf</code>.",2,[[["pin",3],["context",3]],[["result",6],["poll",4]]]],[11,"poll_read_vectored","","Attempt to read from the <code>AsyncRead</code> into <code>bufs</code> using …",2,[[["pin",3],["context",3]],[["result",6],["poll",4]]]],[8,"AsyncWrite","","Write bytes asynchronously.",null,null],[10,"poll_write","","Attempt to write bytes from <code>buf</code> into the object.",3,[[["pin",3],["context",3]],[["result",6],["poll",4]]]],[11,"poll_write_vectored","","Attempt to write bytes from <code>bufs</code> into the object using …",3,[[["pin",3],["context",3]],[["result",6],["poll",4]]]],[10,"poll_flush","","Attempt to flush the object, ensuring that any buffered …",3,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[10,"poll_close","","Attempt to close the object.",3,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[8,"AsyncSeek","","Seek bytes asynchronously.",null,null],[10,"poll_seek","","Attempt to seek to an offset, in bytes, in a stream.",4,[[["pin",3],["seekfrom",4],["context",3]],[["result",6],["poll",4]]]],[8,"AsyncBufRead","","Read bytes asynchronously.",null,null],[10,"poll_fill_buf","","Attempt to return the contents of the internal buffer, …",5,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[10,"consume","","Tells this buffer that <code>amt</code> bytes have been consumed from …",5,[[["pin",3]]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_string","","",6,[[],["string",3]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"description","","",6,[[]]],[11,"cause","","",6,[[],[["option",4],["error",8]]]],[11,"source","","",6,[[],[["option",4],["error",8]]]],[11,"deref","","",7,[[]]],[11,"deref","","",8,[[]]],[11,"from","","",6,[[["intoinnererror",3]],["error",3]]],[11,"from","","Converts an [<code>ErrorKind</code>] into an [<code>Error</code>].",6,[[["errorkind",4]],["error",3]]],[11,"from","","Converts a [<code>NulError</code>] into a [<code>io::Error</code>].",6,[[["nulerror",3]],["error",3]]],[11,"hash","","",0,[[]]],[11,"deref_mut","","",8,[[]]],[11,"partial_cmp","","",0,[[["errorkind",4]],[["option",4],["ordering",4]]]],[11,"cmp","","",0,[[["errorkind",4]],["ordering",4]]],[11,"fmt","","",7,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",1,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",0,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",8,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",6,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",6,[[["formatter",3]],[["result",4],["error",3]]]],[11,"eq","","",1,[[["seekfrom",4]]]],[11,"ne","","",1,[[["seekfrom",4]]]],[11,"eq","","",0,[[["errorkind",4]]]],[11,"clone","","",7,[[],["ioslice",3]]],[11,"clone","","",1,[[],["seekfrom",4]]],[11,"clone","","",0,[[],["errorkind",4]]],[11,"new","","Creates a new I/O error from a known kind of error as …",6,[[["errorkind",4]],["error",3]]],[11,"last_os_error","","Returns an error representing the last OS error which …",6,[[],["error",3]]],[11,"from_raw_os_error","","Creates a new instance of an [<code>Error</code>] from a particular OS …",6,[[],["error",3]]],[11,"raw_os_error","","Returns the OS error that this error represents (if any).",6,[[],["option",4]]],[11,"get_ref","","Returns a reference to the inner error wrapped by this …",6,[[],[["error",8],["option",4]]]],[11,"get_mut","","Returns a mutable reference to the inner error wrapped by …",6,[[],[["option",4],["error",8]]]],[11,"into_inner","","Consumes the <code>Error</code>, returning its inner error (if any).",6,[[],[["option",4],["box",3]]]],[11,"kind","","Returns the corresponding [<code>ErrorKind</code>] for this error.",6,[[],["errorkind",4]]],[11,"new","","Creates a new <code>IoSlice</code> wrapping a byte slice.",7,[[],["ioslice",3]]],[11,"advance","","Advance the internal cursor of the slice.",7,[[]]],[11,"new","","Creates a new <code>IoSliceMut</code> wrapping a byte slice.",8,[[],["ioslicemut",3]]],[11,"advance","","Advance the internal cursor of the slice.",8,[[]]],[11,"poll_read_vectored","","Attempt to read from the <code>AsyncRead</code> into <code>bufs</code> using …",2,[[["pin",3],["context",3]],[["result",6],["poll",4]]]],[11,"poll_write_vectored","","Attempt to write bytes from <code>bufs</code> into the object using …",3,[[["pin",3],["context",3]],[["result",6],["poll",4]]]]],"p":[[4,"ErrorKind"],[4,"SeekFrom"],[8,"AsyncRead"],[8,"AsyncWrite"],[8,"AsyncSeek"],[8,"AsyncBufRead"],[3,"Error"],[3,"IoSlice"],[3,"IoSliceMut"]]},\
"futures_macro":{"doc":"The futures-rs procedural macro implementations.","i":[[24,"proc_macro_hack_join_internal","futures_macro","The <code>join!</code> macro.",null,null],[24,"proc_macro_hack_try_join_internal","","The <code>try_join!</code> macro.",null,null],[24,"proc_macro_hack_select_internal","","The <code>select!</code> macro.",null,null],[24,"proc_macro_hack_select_biased_internal","","The <code>select_biased!</code> macro.",null,null]],"p":[]},\
"futures_sink":{"doc":"Asynchronous sinks","i":[[8,"Sink","futures_sink","A <code>Sink</code> is a value into which other values can be sent, …",null,null],[16,"Error","","The type of value produced by the sink when an error …",0,null],[10,"poll_ready","","Attempts to prepare the <code>Sink</code> to receive a value.",0,[[["pin",3],["context",3]],[["poll",4],["result",4]]]],[10,"start_send","","Begin the process of sending a value to the sink. Each …",0,[[["pin",3]],["result",4]]],[10,"poll_flush","","Flush any remaining output from this sink.",0,[[["pin",3],["context",3]],[["poll",4],["result",4]]]],[10,"poll_close","","Flush any remaining output and close this sink, if …",0,[[["pin",3],["context",3]],[["poll",4],["result",4]]]]],"p":[[8,"Sink"]]},\
"futures_task":{"doc":"Tools for working with tasks.","i":[[3,"Context","futures_task","The <code>Context</code> of an asynchronous task.",null,null],[4,"Poll","","Indicates whether a value is available or if the current …",null,null],[13,"Ready","","Represents that a value is immediately ready.",0,null],[13,"Pending","","Represents that a value is not ready yet.",0,null],[3,"Waker","","A <code>Waker</code> is a handle for waking up a task by notifying its …",null,null],[3,"RawWaker","","A <code>RawWaker</code> allows the implementor of a task executor to …",null,null],[3,"RawWakerVTable","","A virtual function pointer table (vtable) that specifies …",null,null],[8,"Spawn","","The <code>Spawn</code> trait allows for pushing futures onto an …",null,null],[10,"spawn_obj","","Spawns a future that will be run to completion.",1,[[["futureobj",3]],[["result",4],["spawnerror",3]]]],[11,"status","","Determines whether the executor is able to spawn new …",1,[[],[["result",4],["spawnerror",3]]]],[3,"SpawnError","","An error that occurred during spawning.",null,null],[8,"LocalSpawn","","The <code>LocalSpawn</code> is similar to [<code>Spawn</code>], but allows spawning …",null,null],[10,"spawn_local_obj","","Spawns a future that will be run to completion.",2,[[["localfutureobj",3]],[["result",4],["spawnerror",3]]]],[11,"status_local","","Determines whether the executor is able to spawn new …",2,[[],[["result",4],["spawnerror",3]]]],[8,"ArcWake","","A way of waking up a specific task.",null,null],[11,"wake","","Indicates that the associated task is ready to make …",3,[[["arc",3]]]],[10,"wake_by_ref","","Indicates that the associated task is ready to make …",3,[[["arc",3]]]],[5,"waker","","Creates a [<code>Waker</code>] from an <code>Arc<impl ArcWake></code>.",null,[[["arc",3]],["waker",3]]],[5,"waker_ref","","Creates a reference to a [<code>Waker</code>] from a reference to …",null,[[["arc",3]],["wakerref",3]]],[3,"WakerRef","","A [<code>Waker</code>] that is only valid for a given lifetime.",null,null],[3,"FutureObj","","A custom trait object for polling futures, roughly akin to…",null,null],[3,"LocalFutureObj","","A custom trait object for polling futures, roughly akin to…",null,null],[8,"UnsafeFutureObj","","A custom implementation of a future trait object for …",null,null],[10,"into_raw","","Convert an owned instance into a (conceptually owned) fat …",4,[[]]],[10,"drop","","Drops the future represented by the given fat pointer.",4,[[]]],[5,"noop_waker","","Create a new [<code>Waker</code>] which does nothing when <code>wake()</code> is …",null,[[],["waker",3]]],[5,"noop_waker_ref","","Get a static reference to a [<code>Waker</code>] which does nothing …",null,[[],["waker",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_string","","",9,[[],["string",3]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"into_future","","",11,[[]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"into_future","","",12,[[]]],[11,"fmt","","",8,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",5,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",0,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",6,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",7,[[["formatter",3]],[["result",4],["error",3]]]],[11,"cmp","","",0,[[["poll",4]],["ordering",4]]],[11,"clone","","",6,[[],["waker",3]]],[11,"clone","","",0,[[],["poll",4]]],[11,"clone","","",8,[[],["rawwakervtable",3]]],[11,"from","","Convert to a <code>Ready</code> variant.",0,[[],["poll",4]]],[11,"hash","","",0,[[]]],[11,"drop","","",6,[[]]],[11,"into_result","","",0,[[],["result",4]]],[11,"from_error","","",0,[[],[["result",4],["poll",4]]]],[11,"from_ok","","",0,[[],[["result",4],["poll",4]]]],[11,"into_result","","",0,[[],["result",4]]],[11,"from_error","","",0,[[],[["poll",4],["option",4]]]],[11,"from_ok","","",0,[[],[["poll",4],["option",4]]]],[11,"eq","","",0,[[["poll",4]]]],[11,"ne","","",0,[[["poll",4]]]],[11,"eq","","",7,[[["rawwaker",3]]]],[11,"ne","","",7,[[["rawwaker",3]]]],[11,"eq","","",8,[[["rawwakervtable",3]]]],[11,"ne","","",8,[[["rawwakervtable",3]]]],[11,"partial_cmp","","",0,[[["poll",4]],[["option",4],["ordering",4]]]],[11,"lt","","",0,[[["poll",4]]]],[11,"le","","",0,[[["poll",4]]]],[11,"gt","","",0,[[["poll",4]]]],[11,"ge","","",0,[[["poll",4]]]],[11,"from","","",6,[[["arc",3]],["waker",3]]],[11,"from","","",7,[[["arc",3]],["rawwaker",3]]],[11,"drop","","",11,[[]]],[11,"from","","",11,[[["futureobj",3]],["localfutureobj",3]]],[11,"from","","",12,[[["box",3]]]],[11,"from","","",12,[[["box",3],["future",8]]]],[11,"from","","",12,[[["pin",3],["box",3]]]],[11,"from","","",12,[[["pin",3],["box",3]]]],[11,"from","","",11,[[["box",3]]]],[11,"from","","",11,[[["future",8],["box",3]]]],[11,"from","","",11,[[["pin",3],["box",3]]]],[11,"from","","",11,[[["box",3],["pin",3]]]],[11,"deref","","",10,[[],["waker",3]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"poll","","",11,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",12,[[["pin",3],["context",3]],["poll",4]]],[11,"from_waker","","Create a new <code>Context</code> from a <code>&Waker</code>.",5,[[["waker",3]],["context",3]]],[11,"waker","","Returns a reference to the <code>Waker</code> for the current task.",5,[[],["waker",3]]],[11,"map","","Changes the ready value of this <code>Poll</code> with the closure …",0,[[],["poll",4]]],[11,"is_ready","","Returns <code>true</code> if this is <code>Poll::Ready</code>",0,[[]]],[11,"is_pending","","Returns <code>true</code> if this is <code>Poll::Pending</code>",0,[[]]],[11,"map_ok","","Changes the success value of this <code>Poll</code> with the closure …",0,[[],[["result",4],["poll",4]]]],[11,"map_err","","Changes the error value of this <code>Poll</code> with the closure …",0,[[],[["result",4],["poll",4]]]],[11,"map_ok","","Changes the success value of this <code>Poll</code> with the closure …",0,[[],[["poll",4],["option",4]]]],[11,"map_err","","Changes the error value of this <code>Poll</code> with the closure …",0,[[],[["poll",4],["option",4]]]],[11,"wake","","Wake up the task associated with this <code>Waker</code>.",6,[[]]],[11,"wake_by_ref","","Wake up the task associated with this <code>Waker</code> without …",6,[[]]],[11,"will_wake","","Returns <code>true</code> if this <code>Waker</code> and another <code>Waker</code> have awoken …",6,[[["waker",3]]]],[11,"from_raw","","Creates a new <code>Waker</code> from [<code>RawWaker</code>].",6,[[["rawwaker",3]],["waker",3]]],[11,"new","","Creates a new <code>RawWaker</code> from the provided <code>data</code> pointer and …",7,[[["rawwakervtable",3]],["rawwaker",3]]],[11,"new","","Creates a new <code>RawWakerVTable</code> from the provided <code>clone</code>, <code>wake</code>…",8,[[],["rawwakervtable",3]]],[11,"status","","Determines whether the executor is able to spawn new …",1,[[],[["result",4],["spawnerror",3]]]],[11,"status_local","","Determines whether the executor is able to spawn new …",2,[[],[["result",4],["spawnerror",3]]]],[11,"shutdown","","Spawning failed because the executor has been shut down.",9,[[]]],[11,"is_shutdown","","Check whether spawning failed to the executor being shut …",9,[[]]],[11,"wake","","Indicates that the associated task is ready to make …",3,[[["arc",3]]]],[11,"new","","Create a new [<code>WakerRef</code>] from a [<code>Waker</code>] reference.",10,[[["waker",3]]]],[11,"new_unowned","","Create a new [<code>WakerRef</code>] from a [<code>Waker</code>] that must not be …",10,[[["manuallydrop",3],["waker",3]]]],[11,"new","","Create a <code>LocalFutureObj</code> from a custom trait object …",11,[[["unsafefutureobj",8]],["localfutureobj",3]]],[11,"into_future_obj","","Converts the <code>LocalFutureObj</code> into a <code>FutureObj</code>.",11,[[],["futureobj",3]]],[11,"new","","Create a <code>FutureObj</code> from a custom trait object …",12,[[["unsafefutureobj",8],["send",8]],["futureobj",3]]]],"p":[[4,"Poll"],[8,"Spawn"],[8,"LocalSpawn"],[8,"ArcWake"],[8,"UnsafeFutureObj"],[3,"Context"],[3,"Waker"],[3,"RawWaker"],[3,"RawWakerVTable"],[3,"SpawnError"],[3,"WakerRef"],[3,"LocalFutureObj"],[3,"FutureObj"]]},\
"futures_util":{"doc":"Combinators and utilities for working with <code>Future</code>s, <code>Stream</code>…","i":[[14,"ready","futures_util","Extracts the successful type of a <code>Poll<T></code>.",null,null],[14,"pin_mut","","Pins a value on the stack.",null,null],[0,"future","","Futures",null,null],[6,"BoxFuture","futures_util::future","An owned dynamically typed [<code>Future</code>] for use in cases …",null,null],[6,"LocalBoxFuture","","<code>BoxFuture</code>, but without the <code>Send</code> requirement.",null,null],[8,"FusedFuture","","A future which tracks whether or not the underlying future…",null,null],[10,"is_terminated","","Returns <code>true</code> if the underlying future should no longer be …",0,[[]]],[8,"Future","","A future represents an asynchronous computation.",null,null],[16,"Output","","The type of value produced on completion.",1,null],[10,"poll","","Attempt to resolve the future to a final value, …",1,[[["context",3],["pin",3]],["poll",4]]],[8,"TryFuture","","A convenience for futures that return <code>Result</code> values that …",null,null],[16,"Ok","","The type of successful values yielded by this future",2,null],[16,"Error","","The type of failures yielded by this future",2,null],[10,"try_poll","","Poll this <code>TryFuture</code> as if it were a <code>Future</code>.",2,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[3,"FutureObj","","A custom trait object for polling futures, roughly akin to…",null,null],[3,"LocalFutureObj","","A custom trait object for polling futures, roughly akin to…",null,null],[8,"UnsafeFutureObj","","A custom implementation of a future trait object for …",null,null],[10,"into_raw","","Convert an owned instance into a (conceptually owned) fat …",3,[[]]],[10,"drop","","Drops the future represented by the given fat pointer.",3,[[]]],[3,"Flatten","","Future for the <code>flatten</code> method.",null,null],[3,"Fuse","","Future for the <code>fuse</code> method.",null,null],[8,"FutureExt","","An extension trait for <code>Future</code>s that provides a variety of …",null,null],[11,"map","","Map this future\'s output to a different type, returning a …",4,[[],["map",3]]],[11,"map_into","","Map this future\'s output to a different type, returning a …",4,[[],["mapinto",3]]],[11,"then","","Chain on a computation for when a future finished, …",4,[[],["then",3]]],[11,"left_future","","Wrap this future in an <code>Either</code> future, making it the …",4,[[],["either",4]]],[11,"right_future","","Wrap this future in an <code>Either</code> future, making it the …",4,[[],["either",4]]],[11,"into_stream","","Convert this future into a single element stream.",4,[[],["intostream",3]]],[11,"flatten","","Flatten the execution of this future when the output of …",4,[[],["flatten",3]]],[11,"flatten_stream","","Flatten the execution of this future when the successful …",4,[[],["flattenstream",3]]],[11,"fuse","","Fuse a future such that <code>poll</code> will never again be called …",4,[[],["fuse",3]]],[11,"inspect","","Do something with the output of a future before passing …",4,[[],["inspect",3]]],[11,"catch_unwind","","Catches unwinding panics while polling the future.",4,[[],["catchunwind",3]]],[11,"shared","","Create a cloneable handle to this future where all …",4,[[],["shared",3]]],[11,"remote_handle","","Turn this future into a future that yields <code>()</code> on …",4,[[]]],[11,"boxed","","Wrap the future in a Box, pinning it.",4,[[],["boxfuture",6]]],[11,"boxed_local","","Wrap the future in a Box, pinning it.",4,[[],["localboxfuture",6]]],[11,"unit_error","","Turns a <code>Future<Output = T></code> into a …",4,[[],["uniterror",3]]],[11,"never_error","","Turns a <code>Future<Output = T></code> into a …",4,[[],["nevererror",3]]],[11,"poll_unpin","","A convenience for calling <code>Future::poll</code> on <code>Unpin</code> future …",4,[[["context",3]],["poll",4]]],[11,"now_or_never","","Evaluates and consumes the future, returning the …",4,[[],["option",4]]],[3,"Inspect","","Future for the <code>inspect</code> method.",null,null],[3,"IntoStream","","Stream for the <code>into_stream</code> method.",null,null],[3,"Map","","Future for the <code>flatten</code> method.",null,null],[3,"NeverError","","Future for the <code>never_error</code> combinator.",null,null],[3,"Then","","Future for the <code>then</code> method.",null,null],[3,"UnitError","","Future for the <code>unit_error</code> combinator.",null,null],[3,"MapInto","","Future for the <code>map_into</code> combinator.",null,null],[3,"FlattenStream","","Stream for the <code>flatten_stream</code> method.",null,null],[3,"CatchUnwind","","Future for the <code>catch_unwind</code> method.",null,null],[3,"Remote","","A future which sends its output to the corresponding …",null,null],[3,"RemoteHandle","","The handle to a remote future returned by <code>remote_handle</code>. …",null,null],[3,"Shared","","Future for the <code>shared</code> method.",null,null],[3,"AndThen","","Future for the <code>and_then</code> method.",null,null],[3,"ErrInto","","Future for the <code>err_into</code> method.",null,null],[3,"OkInto","","Future for the <code>ok_into</code> method.",null,null],[3,"InspectErr","","Future for the <code>inspect_err</code> method.",null,null],[3,"InspectOk","","Future for the <code>inspect_ok</code> method.",null,null],[3,"IntoFuture","","Future for the <code>into_future</code> method.",null,null],[3,"MapErr","","Future for the <code>map_err</code> method.",null,null],[3,"MapOk","","Future for the <code>map_ok</code> method.",null,null],[3,"OrElse","","Future for the <code>or_else</code> method.",null,null],[3,"TryFlattenStream","","Future for the <code>try_flatten_stream</code> method.",null,null],[8,"TryFutureExt","","Adapters specific to [<code>Result</code>]-returning futures",null,null],[11,"flatten_sink","","Flattens the execution of this future when the successful …",5,[[],["flattensink",3]]],[11,"map_ok","","Maps this future\'s success value to a different value.",5,[[],["mapok",3]]],[11,"map_ok_or_else","","Maps this future\'s success value to a different value, …",5,[[],["mapokorelse",3]]],[11,"map_err","","Maps this future\'s error value to a different value.",5,[[],["maperr",3]]],[11,"err_into","","Maps this future\'s <code>Error</code> to a new error type using the …",5,[[],["errinto",3]]],[11,"ok_into","","Maps this future\'s <code>Ok</code> to a new type using the <code>Into</code> trait.",5,[[],["okinto",3]]],[11,"and_then","","Executes another future after this one resolves …",5,[[],["andthen",3]]],[11,"or_else","","Executes another future if this one resolves to an error. …",5,[[],["orelse",3]]],[11,"inspect_ok","","Do something with the success value of a future before …",5,[[],["inspectok",3]]],[11,"inspect_err","","Do something with the error value of a future before …",5,[[],["inspecterr",3]]],[11,"try_flatten","","Flatten the execution of this future when the successful …",5,[[],["tryflatten",3]]],[11,"try_flatten_stream","","Flatten the execution of this future when the successful …",5,[[],["tryflattenstream",3]]],[11,"unwrap_or_else","","Unwraps this future\'s ouput, producing a future with this …",5,[[],["unwraporelse",3]]],[11,"into_future","","Wraps a [<code>TryFuture</code>] into a type that implements <code>Future</code>.",5,[[],["intofuture",3]]],[11,"try_poll_unpin","","A convenience method for calling [<code>TryFuture::try_poll</code>] on …",5,[[["context",3]],[["result",4],["poll",4]]]],[3,"UnwrapOrElse","","Future for the <code>unwrap_or_else</code> method.",null,null],[3,"MapOkOrElse","","Future for the <code>map_ok_or_else</code> method.",null,null],[3,"TryFlatten","","Future for the <code>try_flatten</code> method.",null,null],[3,"FlattenSink","","Sink for the <code>flatten_sink</code> method.",null,null],[5,"lazy","","Creates a new future that allows delayed execution of a …",null,[[],["lazy",3]]],[3,"Lazy","","Future for the [<code>lazy</code>] function.",null,null],[5,"pending","","Creates a future which never resolves, representing a …",null,[[],["pending",3]]],[3,"Pending","","Future for the [<code>pending()</code>] function.",null,null],[5,"maybe_done","","Wraps a future into a <code>MaybeDone</code>",null,[[["future",8]],[["maybedone",4],["future",8]]]],[4,"MaybeDone","","A future that may have completed.",null,null],[13,"Future","","A not-yet-completed future",6,null],[13,"Done","","The output of the completed future",6,null],[13,"Gone","","The empty variant after the result of a [<code>MaybeDone</code>] has …",6,null],[5,"try_maybe_done","","Wraps a future into a <code>TryMaybeDone</code>",null,[[["tryfuture",8]],[["trymaybedone",4],["tryfuture",8]]]],[4,"TryMaybeDone","","A future that may have completed with an error.",null,null],[13,"Future","","A not-yet-completed future",7,null],[13,"Done","","The output of the completed future",7,null],[13,"Gone","","The empty variant after the result of a [<code>TryMaybeDone</code>] …",7,null],[3,"OptionFuture","","A future representing a value which may or may not be …",null,null],[5,"poll_fn","","Creates a new future wrapping around a function returning …",null,[[],["pollfn",3]]],[3,"PollFn","","Future for the [<code>poll_fn</code>] function.",null,null],[5,"err","","Create a future that is immediately ready with an error …",null,[[],[["result",4],["ready",3]]]],[5,"ok","","Create a future that is immediately ready with a success …",null,[[],[["result",4],["ready",3]]]],[5,"ready","","Creates a future that is immediately ready with a value.",null,[[],["ready",3]]],[3,"Ready","","Future for the <code>ready</code> function.",null,null],[5,"join","","Joins the result of two futures, waiting for them both to …",null,[[],["join",3]]],[5,"join3","","Same as <code>join</code>, but with more futures.",null,[[],["join3",3]]],[5,"join4","","Same as <code>join</code>, but with more futures.",null,[[],["join4",3]]],[5,"join5","","Same as <code>join</code>, but with more futures.",null,[[],["join5",3]]],[3,"Join","","Future for the <code>join</code> function.",null,null],[3,"Join3","","Future for the [<code>join3</code>] function.",null,null],[3,"Join4","","Future for the [<code>join4</code>] function.",null,null],[3,"Join5","","Future for the [<code>join5</code>] function.",null,null],[5,"join_all","","Creates a future which represents a collection of the …",null,[[],["joinall",3]]],[3,"JoinAll","","Future for the [<code>join_all</code>] function.",null,null],[5,"select","","Waits for either one of two differently-typed futures to …",null,[[],["select",3]]],[3,"Select","","Future for the [<code>select()</code>] function.",null,null],[5,"select_all","","Creates a new future which will select over a list of …",null,[[],["selectall",3]]],[3,"SelectAll","","Future for the [<code>select_all</code>] function.",null,null],[5,"try_join","","Joins the result of two futures, waiting for them both to …",null,[[],["tryjoin",3]]],[5,"try_join3","","Same as <code>try_join</code>, but with more futures.",null,[[],["tryjoin3",3]]],[5,"try_join4","","Same as <code>try_join</code>, but with more futures.",null,[[],["tryjoin4",3]]],[5,"try_join5","","Same as <code>try_join</code>, but with more futures.",null,[[],["tryjoin5",3]]],[3,"TryJoin","","Future for the <code>try_join</code> function.",null,null],[3,"TryJoin3","","Future for the [<code>try_join3</code>] function.",null,null],[3,"TryJoin4","","Future for the [<code>try_join4</code>] function.",null,null],[3,"TryJoin5","","Future for the [<code>try_join5</code>] function.",null,null],[5,"try_join_all","","Creates a future which represents either a collection of …",null,[[],["tryjoinall",3]]],[3,"TryJoinAll","","Future for the [<code>try_join_all</code>] function.",null,null],[5,"try_select","","Waits for either one of two differently-typed futures to …",null,[[],["tryselect",3]]],[3,"TrySelect","","Future for the [<code>try_select()</code>] function.",null,null],[5,"select_ok","","Creates a new future which will select the first …",null,[[],["selectok",3]]],[3,"SelectOk","","Future for the [<code>select_ok</code>] function.",null,null],[4,"Either","","Combines two different futures, streams, or sinks having …",null,null],[13,"Left","","First branch of the type",8,null],[13,"Right","","Second branch of the type",8,null],[5,"abortable","","Creates a new <code>Abortable</code> future and a <code>AbortHandle</code> which …",null,[[]]],[3,"Abortable","","A future which can be remotely short-circuited using an …",null,null],[3,"AbortHandle","","A handle to a <code>Abortable</code> future.",null,null],[3,"AbortRegistration","","A registration handle for a <code>Abortable</code> future. Values of …",null,null],[3,"Aborted","","Indicator that the <code>Abortable</code> future was aborted.",null,null],[0,"stream","futures_util","Streams",null,null],[6,"BoxStream","futures_util::stream","An owned dynamically typed [<code>Stream</code>] for use in cases …",null,null],[6,"LocalBoxStream","","<code>BoxStream</code>, but without the <code>Send</code> requirement.",null,null],[8,"FusedStream","","A stream which tracks whether or not the underlying stream…",null,null],[10,"is_terminated","","Returns <code>true</code> if the stream should no longer be polled.",9,[[]]],[8,"Stream","","A stream of values produced asynchronously.",null,null],[16,"Item","","Values yielded by the stream.",10,null],[10,"poll_next","","Attempt to pull out the next value of this stream, …",10,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"size_hint","","Returns the bounds on the remaining length of the stream.",10,[[]]],[8,"TryStream","","A convenience for streams that return <code>Result</code> values that …",null,null],[16,"Ok","","The type of successful values yielded by this future",11,null],[16,"Error","","The type of failures yielded by this future",11,null],[10,"try_poll_next","","Poll this <code>TryStream</code> as if it were a <code>Stream</code>.",11,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[0,"futures_unordered","","An unbounded set of futures.",null,null],[3,"Iter","futures_util::stream::futures_unordered","Immutable iterator over all the futures in the unordered …",null,null],[3,"IterMut","","Mutable iterator over all futures in the unordered set.",null,null],[3,"IterPinMut","","Mutable iterator over all futures in the unordered set.",null,null],[3,"IterPinRef","","Immutable iterator over all futures in the unordered set.",null,null],[3,"FuturesUnordered","","A set of futures which may complete in any order.",null,null],[11,"new","","Constructs a new, empty [<code>FuturesUnordered</code>].",12,[[],["futuresunordered",3]]],[11,"len","","Returns the number of futures contained in the set.",12,[[]]],[11,"is_empty","","Returns <code>true</code> if the set contains no futures.",12,[[]]],[11,"push","","Push a future into the set.",12,[[]]],[11,"iter","","Returns an iterator that allows inspecting each future in …",12,[[],["iter",3]]],[11,"iter_mut","","Returns an iterator that allows modifying each future in …",12,[[],["itermut",3]]],[11,"iter_pin_mut","","Returns an iterator that allows modifying each future in …",12,[[["pin",3]],["iterpinmut",3]]],[3,"Chain","futures_util::stream","Stream for the <code>chain</code> method.",null,null],[3,"Collect","","Future for the <code>collect</code> method.",null,null],[3,"Concat","","Future for the <code>concat</code> method.",null,null],[3,"Enumerate","","Stream for the <code>enumerate</code> method.",null,null],[3,"Filter","","Stream for the <code>filter</code> method.",null,null],[3,"FilterMap","","Stream for the <code>filter_map</code> method.",null,null],[3,"FlatMap","","Stream for the <code>flat_map</code> method.",null,null],[3,"Flatten","","Stream for the <code>inspect</code> method.",null,null],[3,"Fold","","Future for the <code>fold</code> method.",null,null],[3,"ForEach","","Future for the <code>for_each</code> method.",null,null],[3,"Fuse","","Stream for the <code>fuse</code> method.",null,null],[3,"Inspect","","Stream for the <code>inspect</code> method.",null,null],[3,"Map","","Stream for the <code>map</code> method.",null,null],[3,"Next","","Future for the <code>next</code> method.",null,null],[3,"Peek","","Future for the <code>Peekable::peek()</code> function from [<code>Peekable</code>]",null,null],[3,"Peekable","","A <code>Stream</code> that implements a <code>peek</code> method.",null,null],[3,"Scan","","Stream for the <code>scan</code> method.",null,null],[3,"SelectNextSome","","Future for the <code>select_next_some</code> method.",null,null],[3,"Skip","","Stream for the <code>skip</code> method.",null,null],[3,"SkipWhile","","Stream for the <code>skip_while</code> method.",null,null],[8,"StreamExt","","An extension trait for <code>Stream</code>s that provides a variety of …",null,null],[11,"next","","Creates a future that resolves to the next item in the …",13,[[],["next",3]]],[11,"into_future","","Converts this stream into a future of …",13,[[],["streamfuture",3]]],[11,"map","","Maps this stream\'s items to a different type, returning a …",13,[[],["map",3]]],[11,"enumerate","","Creates a stream which gives the current iteration count …",13,[[],["enumerate",3]]],[11,"filter","","Filters the values produced by this stream according to …",13,[[],["filter",3]]],[11,"filter_map","","Filters the values produced by this stream while …",13,[[],["filtermap",3]]],[11,"then","","Computes from this stream\'s items new items of a …",13,[[],["then",3]]],[11,"collect","","Transforms a stream into a collection, returning a future …",13,[[],[["extend",8],["collect",3],["default",8]]]],[11,"concat","","Concatenate all items of a stream into a single extendable…",13,[[],["concat",3]]],[11,"fold","","Execute an accumulating asynchronous computation over a …",13,[[],["fold",3]]],[11,"flatten","","Flattens a stream of streams into just one continuous …",13,[[],["flatten",3]]],[11,"flat_map","","Maps a stream like [<code>StreamExt::map</code>] but flattens nested …",13,[[],["flatmap",3]]],[11,"scan","","Combinator similar to [<code>StreamExt::fold</code>] that holds …",13,[[],["scan",3]]],[11,"skip_while","","Skip elements on this stream while the provided …",13,[[],["skipwhile",3]]],[11,"take_while","","Take elements from this stream while the provided …",13,[[],["takewhile",3]]],[11,"take_until","","Take elements from this stream until the provided future …",13,[[],["takeuntil",3]]],[11,"for_each","","Runs this stream to completion, executing the provided …",13,[[],["foreach",3]]],[11,"for_each_concurrent","","Runs this stream to completion, executing the provided …",13,[[],["foreachconcurrent",3]]],[11,"take","","Creates a new stream of at most <code>n</code> items of the underlying …",13,[[],["take",3]]],[11,"skip","","Creates a new stream which skips <code>n</code> items of the …",13,[[],["skip",3]]],[11,"fuse","","Fuse a stream such that <code>poll_next</code> will never again be …",13,[[],["fuse",3]]],[11,"by_ref","","Borrows a stream, rather than consuming it.",13,[[]]],[11,"catch_unwind","","Catches unwinding panics while polling the stream.",13,[[],["catchunwind",3]]],[11,"boxed","","Wrap the stream in a Box, pinning it.",13,[[],["boxstream",6]]],[11,"boxed_local","","Wrap the stream in a Box, pinning it.",13,[[],["localboxstream",6]]],[11,"buffered","","An adaptor for creating a buffered list of pending …",13,[[],["buffered",3]]],[11,"buffer_unordered","","An adaptor for creating a buffered list of pending …",13,[[],["bufferunordered",3]]],[11,"zip","","An adapter for zipping two streams together.",13,[[],["zip",3]]],[11,"chain","","Adapter for chaining two streams.",13,[[],["chain",3]]],[11,"peekable","","Creates a new stream which exposes a <code>peek</code> method.",13,[[],["peekable",3]]],[11,"chunks","","An adaptor for chunking up items of the stream inside a …",13,[[],["chunks",3]]],[11,"ready_chunks","","An adaptor for chunking up ready items of the stream …",13,[[],["readychunks",3]]],[11,"forward","","A future that completes after the given stream has been …",13,[[],["forward",3]]],[11,"split","","Splits this <code>Stream + Sink</code> object into separate <code>Sink</code> and …",13,[[]]],[11,"inspect","","Do something with each item of this stream, afterwards …",13,[[],["inspect",3]]],[11,"left_stream","","Wrap this stream in an <code>Either</code> stream, making it the …",13,[[],["either",4]]],[11,"right_stream","","Wrap this stream in an <code>Either</code> stream, making it the …",13,[[],["either",4]]],[11,"poll_next_unpin","","A convenience method for calling [<code>Stream::poll_next</code>] on […",13,[[["context",3]],[["option",4],["poll",4]]]],[11,"select_next_some","","Returns a [<code>Future</code>] that resolves when the next item in …",13,[[],["selectnextsome",3]]],[3,"StreamFuture","","Future for the <code>into_future</code> method.",null,null],[3,"Take","","Stream for the <code>take</code> method.",null,null],[3,"TakeWhile","","Stream for the <code>take_while</code> method.",null,null],[3,"TakeUntil","","Stream for the <code>take_until</code> method.",null,null],[3,"Then","","Stream for the <code>then</code> method.",null,null],[3,"Zip","","Stream for the <code>zip</code> method.",null,null],[3,"CatchUnwind","","Stream for the <code>catch_unwind</code> method.",null,null],[3,"Chunks","","Stream for the <code>chunks</code> method.",null,null],[3,"ReadyChunks","","Stream for the <code>ready_chunks</code> method.",null,null],[3,"Forward","","Future for the <code>forward</code> method.",null,null],[3,"BufferUnordered","","Stream for the <code>buffer_unordered</code> method.",null,null],[3,"Buffered","","Stream for the <code>buffered</code> method.",null,null],[3,"ForEachConcurrent","","Future for the <code>for_each_concurrent</code> method.",null,null],[3,"ReuniteError","","Error indicating a <code>SplitSink<S></code> and <code>SplitStream<S></code> were …",null,null],[12,"0","","",14,null],[12,"1","","",14,null],[3,"SplitSink","","A <code>Sink</code> part of the split pair",null,null],[3,"SplitStream","","A <code>Stream</code> part of the split pair",null,null],[5,"try_unfold","","Creates a <code>TryStream</code> from a seed and a closure returning a …",null,[[],["tryunfold",3]]],[3,"AndThen","","Stream for the <code>and_then</code> method.",null,null],[3,"ErrInto","","Stream for the <code>err_into</code> method.",null,null],[3,"InspectErr","","Stream for the <code>inspect_err</code> method.",null,null],[3,"InspectOk","","Stream for the <code>inspect_ok</code> method.",null,null],[3,"IntoStream","","Stream for the <code>into_stream</code> method.",null,null],[3,"MapErr","","Stream for the <code>map_err</code> method.",null,null],[3,"MapOk","","Stream for the <code>map_ok</code> method.",null,null],[3,"OrElse","","Stream for the <code>or_else</code> method.",null,null],[3,"TryCollect","","Future for the <code>try_collect</code> method.",null,null],[3,"TryConcat","","Future for the <code>try_concat</code> method.",null,null],[3,"TryFilter","","Stream for the <code>try_filter</code> method.",null,null],[3,"TryFilterMap","","Stream for the <code>try_filter_map</code> method.",null,null],[3,"TryFlatten","","Stream for the <code>try_flatten</code> method.",null,null],[3,"TryFold","","Future for the <code>try_fold</code> method.",null,null],[3,"TryForEach","","Future for the <code>try_for_each</code> method.",null,null],[3,"TryNext","","Future for the <code>try_next</code> method.",null,null],[3,"TrySkipWhile","","Stream for the <code>try_skip_while</code> method.",null,null],[8,"TryStreamExt","","Adapters specific to <code>Result</code>-returning streams",null,null],[11,"err_into","","Wraps the current stream in a new stream which converts …",15,[[],["errinto",3]]],[11,"map_ok","","Wraps the current stream in a new stream which maps the …",15,[[],["mapok",3]]],[11,"map_err","","Wraps the current stream in a new stream which maps the …",15,[[],["maperr",3]]],[11,"and_then","","Chain on a computation for when a value is ready, passing …",15,[[],["andthen",3]]],[11,"or_else","","Chain on a computation for when an error happens, passing …",15,[[],["orelse",3]]],[11,"inspect_ok","","Do something with the success value of this stream, …",15,[[],["inspectok",3]]],[11,"inspect_err","","Do something with the error value of this stream, …",15,[[],["inspecterr",3]]],[11,"into_stream","","Wraps a [<code>TryStream</code>] into a type that implements <code>Stream</code>",15,[[],["intostream",3]]],[11,"try_next","","Creates a future that attempts to resolve the next item …",15,[[],["trynext",3]]],[11,"try_for_each","","Attempts to run this stream to completion, executing the …",15,[[],["tryforeach",3]]],[11,"try_skip_while","","Skip elements on this stream while the provided …",15,[[],["tryskipwhile",3]]],[11,"try_for_each_concurrent","","Attempts to run this stream to completion, executing the …",15,[[],["tryforeachconcurrent",3]]],[11,"try_collect","","Attempt to transform a stream into a collection, …",15,[[],[["trycollect",3],["extend",8],["default",8]]]],[11,"try_filter","","Attempt to filter the values produced by this stream …",15,[[],["tryfilter",3]]],[11,"try_filter_map","","Attempt to filter the values produced by this stream while…",15,[[],["tryfiltermap",3]]],[11,"try_flatten","","Flattens a stream of streams into just one continuous …",15,[[],["tryflatten",3]]],[11,"try_fold","","Attempt to execute an accumulating asynchronous …",15,[[],["tryfold",3]]],[11,"try_concat","","Attempt to concatenate all items of a stream into a single…",15,[[],["tryconcat",3]]],[11,"try_buffer_unordered","","Attempt to execute several futures from a stream …",15,[[],["trybufferunordered",3]]],[11,"try_poll_next_unpin","","A convenience method for calling [<code>TryStream::try_poll_next</code>…",15,[[["context",3]],[["option",4],["poll",4]]]],[11,"into_async_read","","Adapter that converts this stream into an <code>AsyncRead</code>.",15,[[],["intoasyncread",3]]],[3,"TryUnfold","","Stream for the [<code>try_unfold</code>] function.",null,null],[3,"IntoAsyncRead","","Reader for the <code>into_async_read</code> method.",null,null],[3,"TryBufferUnordered","","Stream for the <code>try_buffer_unordered</code> method.",null,null],[3,"TryForEachConcurrent","","Future for the <code>try_for_each_concurrent</code> method.",null,null],[5,"iter","","Converts an <code>Iterator</code> into a <code>Stream</code> which is always ready …",null,[[],["iter",3]]],[3,"Iter","","Stream for the [<code>iter</code>] function.",null,null],[5,"repeat","","Create a stream which produces the same item repeatedly.",null,[[],["repeat",3]]],[3,"Repeat","","Stream for the [<code>repeat</code>] function.",null,null],[5,"empty","","Creates a stream which contains no elements.",null,[[],["empty",3]]],[3,"Empty","","Stream for the [<code>empty</code>] function.",null,null],[5,"once","","Creates a stream of a single element.",null,[[["future",8]],[["future",8],["once",3]]]],[3,"Once","","A stream which emits single element and then EOF.",null,null],[5,"pending","","Creates a stream which never returns any elements.",null,[[],["pending",3]]],[3,"Pending","","Stream for the [<code>pending()</code>] function.",null,null],[5,"poll_fn","","Creates a new stream wrapping a function returning …",null,[[],["pollfn",3]]],[3,"PollFn","","Stream for the [<code>poll_fn</code>] function.",null,null],[5,"select","","This function will attempt to pull items from both …",null,[[],["select",3]]],[3,"Select","","Stream for the [<code>select()</code>] function.",null,null],[5,"unfold","","Creates a <code>Stream</code> from a seed and a closure returning a …",null,[[],["unfold",3]]],[3,"Unfold","","Stream for the [<code>unfold</code>] function.",null,null],[3,"FuturesOrdered","","An unbounded queue of futures.",null,null],[3,"FuturesUnordered","","A set of futures which may complete in any order.",null,null],[5,"select_all","","Convert a list of streams into a <code>Stream</code> of results from …",null,[[],["selectall",3]]],[3,"SelectAll","","An unbounded set of streams",null,null],[0,"sink","futures_util","Sinks",null,null],[8,"Sink","futures_util::sink","A <code>Sink</code> is a value into which other values can be sent, …",null,null],[16,"Error","","The type of value produced by the sink when an error …",16,null],[10,"poll_ready","","Attempts to prepare the <code>Sink</code> to receive a value.",16,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[10,"start_send","","Begin the process of sending a value to the sink. Each …",16,[[["pin",3]],["result",4]]],[10,"poll_flush","","Flush any remaining output from this sink.",16,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[10,"poll_close","","Flush any remaining output and close this sink, if …",16,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[3,"Close","","Future for the <code>close</code> method.",null,null],[5,"drain","","Create a sink that will just discard all items given to …",null,[[],["drain",3]]],[3,"Drain","","Sink for the [<code>drain</code>] function.",null,null],[3,"Fanout","","Sink that clones incoming items and forwards them to two …",null,null],[3,"Flush","","Future for the <code>flush</code> method.",null,null],[3,"SinkErrInto","","Sink for the <code>sink_err_into</code> method.",null,null],[3,"SinkMapErr","","Sink for the <code>sink_map_err</code> method.",null,null],[3,"Send","","Future for the <code>send</code> method.",null,null],[3,"SendAll","","Future for the <code>send_all</code> method.",null,null],[3,"With","","Sink for the <code>with</code> method.",null,null],[3,"WithFlatMap","","Sink for the <code>with_flat_map</code> method.",null,null],[3,"Buffer","","Sink for the <code>buffer</code> method.",null,null],[8,"SinkExt","","An extension trait for <code>Sink</code>s that provides a variety of …",null,null],[11,"with","","Composes a function <em>in front of</em> the sink.",17,[[],["with",3]]],[11,"with_flat_map","","Composes a function <em>in front of</em> the sink.",17,[[],["withflatmap",3]]],[11,"sink_map_err","","Transforms the error returned by the sink.",17,[[],["sinkmaperr",3]]],[11,"sink_err_into","","Map this sink\'s error to a different error type using the …",17,[[],["sinkerrinto",3]]],[11,"buffer","","Adds a fixed-size buffer to the current sink.",17,[[],["buffer",3]]],[11,"close","","Close the sink.",17,[[],["close",3]]],[11,"fanout","","Fanout items to multiple sinks.",17,[[],["fanout",3]]],[11,"flush","","Flush the sink, processing all pending items.",17,[[],["flush",3]]],[11,"send","","A future that completes after the given item has been …",17,[[],["send",3]]],[11,"send_all","","A future that completes after the given stream has been …",17,[[],[["sized",8],["sendall",3]]]],[11,"left_sink","","Wrap this sink in an <code>Either</code> sink, making it the left-hand …",17,[[],["either",4]]],[11,"right_sink","","Wrap this stream in an <code>Either</code> stream, making it the …",17,[[],["either",4]]],[11,"poll_ready_unpin","","A convenience method for calling [<code>Sink::poll_ready</code>] on […",17,[[["context",3]],[["result",4],["poll",4]]]],[11,"start_send_unpin","","A convenience method for calling [<code>Sink::start_send</code>] on […",17,[[],["result",4]]],[11,"poll_flush_unpin","","A convenience method for calling [<code>Sink::poll_flush</code>] on […",17,[[["context",3]],[["result",4],["poll",4]]]],[11,"poll_close_unpin","","A convenience method for calling [<code>Sink::poll_close</code>] on […",17,[[["context",3]],[["result",4],["poll",4]]]],[0,"task","futures_util","Task notification",null,null],[8,"ArcWake","futures_util::task","A way of waking up a specific task.",null,null],[11,"wake","","Indicates that the associated task is ready to make …",18,[[["arc",3]]]],[10,"wake_by_ref","","Indicates that the associated task is ready to make …",18,[[["arc",3]]]],[5,"waker","","Creates a [<code>Waker</code>] from an <code>Arc<impl ArcWake></code>.",null,[[["arc",3]],["waker",3]]],[5,"waker_ref","","Creates a reference to a [<code>Waker</code>] from a reference to …",null,[[["arc",3]],["wakerref",3]]],[3,"WakerRef","","A [<code>Waker</code>] that is only valid for a given lifetime.",null,null],[3,"AtomicWaker","","A synchronization primitive for task wakeup.",null,null],[3,"Context","","The <code>Context</code> of an asynchronous task.",null,null],[4,"Poll","","Indicates whether a value is available or if the current …",null,null],[13,"Ready","","Represents that a value is immediately ready.",19,null],[13,"Pending","","Represents that a value is not ready yet.",19,null],[3,"Waker","","A <code>Waker</code> is a handle for waking up a task by notifying its …",null,null],[3,"RawWaker","","A <code>RawWaker</code> allows the implementor of a task executor to …",null,null],[3,"RawWakerVTable","","A virtual function pointer table (vtable) that specifies …",null,null],[8,"Spawn","","The <code>Spawn</code> trait allows for pushing futures onto an …",null,null],[10,"spawn_obj","","Spawns a future that will be run to completion.",20,[[["futureobj",3]],[["spawnerror",3],["result",4]]]],[11,"status","","Determines whether the executor is able to spawn new …",20,[[],[["spawnerror",3],["result",4]]]],[8,"LocalSpawn","","The <code>LocalSpawn</code> is similar to [<code>Spawn</code>], but allows spawning …",null,null],[10,"spawn_local_obj","","Spawns a future that will be run to completion.",21,[[["localfutureobj",3]],[["spawnerror",3],["result",4]]]],[11,"status_local","","Determines whether the executor is able to spawn new …",21,[[],[["spawnerror",3],["result",4]]]],[3,"SpawnError","","An error that occurred during spawning.",null,null],[3,"FutureObj","","A custom trait object for polling futures, roughly akin to…",null,null],[3,"LocalFutureObj","","A custom trait object for polling futures, roughly akin to…",null,null],[8,"UnsafeFutureObj","","A custom implementation of a future trait object for …",null,null],[10,"into_raw","","Convert an owned instance into a (conceptually owned) fat …",3,[[]]],[10,"drop","","Drops the future represented by the given fat pointer.",3,[[]]],[5,"noop_waker","","Create a new [<code>Waker</code>] which does nothing when <code>wake()</code> is …",null,[[],["waker",3]]],[5,"noop_waker_ref","","Get a static reference to a [<code>Waker</code>] which does nothing …",null,[[],["waker",3]]],[8,"SpawnExt","","Extension trait for <code>Spawn</code>.",null,null],[11,"spawn","","Spawns a task that polls the given future with output <code>()</code> …",22,[[],[["spawnerror",3],["result",4]]]],[11,"spawn_with_handle","","Spawns a task that polls the given future to completion …",22,[[],[["result",4],["remotehandle",3],["spawnerror",3]]]],[8,"LocalSpawnExt","","Extension trait for <code>LocalSpawn</code>.",null,null],[11,"spawn_local","","Spawns a task that polls the given future with output <code>()</code> …",23,[[],[["spawnerror",3],["result",4]]]],[11,"spawn_local_with_handle","","Spawns a task that polls the given future to completion …",23,[[],[["result",4],["remotehandle",3],["spawnerror",3]]]],[0,"never","futures_util","Definition of the <code>Never</code> type, a stand-in for the <code>!</code> type …",null,null],[6,"Never","futures_util::never","A type with no possible values.",null,null],[0,"io","futures_util","IO",null,null],[8,"AsyncRead","futures_util::io","Read bytes asynchronously.",null,null],[10,"poll_read","","Attempt to read from the <code>AsyncRead</code> into <code>buf</code>.",24,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_read_vectored","","Attempt to read from the <code>AsyncRead</code> into <code>bufs</code> using …",24,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[8,"AsyncWrite","","Write bytes asynchronously.",null,null],[10,"poll_write","","Attempt to write bytes from <code>buf</code> into the object.",25,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_write_vectored","","Attempt to write bytes from <code>bufs</code> into the object using …",25,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[10,"poll_flush","","Attempt to flush the object, ensuring that any buffered …",25,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[10,"poll_close","","Attempt to close the object.",25,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[8,"AsyncSeek","","Seek bytes asynchronously.",null,null],[10,"poll_seek","","Attempt to seek to an offset, in bytes, in a stream.",26,[[["seekfrom",4],["context",3],["pin",3]],[["poll",4],["result",4]]]],[8,"AsyncBufRead","","Read bytes asynchronously.",null,null],[10,"poll_fill_buf","","Attempt to return the contents of the internal buffer, …",27,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[10,"consume","","Tells this buffer that <code>amt</code> bytes have been consumed from …",27,[[["pin",3]]]],[3,"Error","","The error type for I/O operations of the <code>Read</code>, <code>Write</code>, <code>Seek</code>…",null,null],[4,"ErrorKind","","A list specifying general categories of I/O error.",null,null],[13,"NotFound","","An entity was not found, often a file.",28,null],[13,"PermissionDenied","","The operation lacked the necessary privileges to complete.",28,null],[13,"ConnectionRefused","","The connection was refused by the remote server.",28,null],[13,"ConnectionReset","","The connection was reset by the remote server.",28,null],[13,"ConnectionAborted","","The connection was aborted (terminated) by the remote …",28,null],[13,"NotConnected","","The network operation failed because it was not connected …",28,null],[13,"AddrInUse","","A socket address could not be bound because the address …",28,null],[13,"AddrNotAvailable","","A nonexistent interface was requested or the requested …",28,null],[13,"BrokenPipe","","The operation failed because a pipe was closed.",28,null],[13,"AlreadyExists","","An entity already exists, often a file.",28,null],[13,"WouldBlock","","The operation needs to block to complete, but the …",28,null],[13,"InvalidInput","","A parameter was incorrect.",28,null],[13,"InvalidData","","Data not valid for the operation were encountered.",28,null],[13,"TimedOut","","The I/O operation\'s timeout expired, causing it to be …",28,null],[13,"WriteZero","","An error returned when an operation could not be …",28,null],[13,"Interrupted","","This operation was interrupted.",28,null],[13,"Other","","Any I/O error not part of this list.",28,null],[13,"UnexpectedEof","","An error returned when an operation could not be …",28,null],[3,"IoSlice","","A buffer type used with <code>Write::write_vectored</code>.",null,null],[3,"IoSliceMut","","A buffer type used with <code>Read::read_vectored</code>.",null,null],[6,"Result","","A specialized <code>Result</code> type for I/O operations.",null,null],[4,"SeekFrom","","Enumeration of possible methods to seek within an I/O …",null,null],[13,"Start","","Sets the offset to the provided number of bytes.",29,null],[13,"End","","Sets the offset to the size of this object plus the …",29,null],[13,"Current","","Sets the offset to the current position plus the …",29,null],[3,"AllowStdIo","","A simple wrapper type which allows types which implement …",null,null],[3,"BufReader","","The <code>BufReader</code> struct adds buffering to any reader.",null,null],[3,"BufWriter","","Wraps a writer and buffers its output.",null,null],[3,"Chain","","Reader for the <code>chain</code> method.",null,null],[3,"Close","","Future for the <code>close</code> method.",null,null],[5,"copy","","Creates a future which copies all the bytes from one …",null,[[],[["copy",3],["sized",8]]]],[3,"Copy","","Future for the [<code>copy()</code>] function.",null,null],[5,"copy_buf","","Creates a future which copies all the bytes from one …",null,[[],[["copybuf",3],["sized",8]]]],[3,"CopyBuf","","Future for the [<code>copy_buf()</code>] function.",null,null],[3,"Cursor","","A <code>Cursor</code> wraps an in-memory buffer and provides it with a …",null,null],[5,"empty","","Constructs a new handle to an empty reader.",null,[[],["empty",3]]],[3,"Empty","","Reader for the [<code>empty()</code>] function.",null,null],[3,"Flush","","Future for the <code>flush</code> method.",null,null],[3,"IntoSink","","Sink for the <code>into_sink</code> method.",null,null],[3,"Lines","","Stream for the <code>lines</code> method.",null,null],[3,"Read","","Future for the <code>read</code> method.",null,null],[3,"ReadVectored","","Future for the <code>read_vectored</code> method.",null,null],[3,"ReadExact","","Future for the <code>read_exact</code> method.",null,null],[3,"ReadLine","","Future for the <code>read_line</code> method.",null,null],[3,"ReadToEnd","","Future for the <code>read_to_end</code> method.",null,null],[3,"ReadToString","","Future for the <code>read_to_string</code> method.",null,null],[3,"ReadUntil","","Future for the <code>read_until</code> method.",null,null],[5,"repeat","","Creates an instance of a reader that infinitely repeats …",null,[[],["repeat",3]]],[3,"Repeat","","Reader for the [<code>repeat()</code>] function.",null,null],[3,"Seek","","Future for the <code>seek</code> method.",null,null],[5,"sink","","Creates an instance of a writer which will successfully …",null,[[],["sink",3]]],[3,"Sink","","Writer for the [<code>sink()</code>] function.",null,null],[3,"ReadHalf","","The readable half of an object returned from …",null,null],[3,"WriteHalf","","The writable half of an object returned from …",null,null],[3,"ReuniteError","","Error indicating a <code>ReadHalf<T></code> and <code>WriteHalf<T></code> were not …",null,null],[12,"0","","",30,null],[12,"1","","",30,null],[3,"Take","","Reader for the <code>take</code> method.",null,null],[3,"Window","","A owned window around an underlying buffer.",null,null],[3,"Write","","Future for the <code>write</code> method.",null,null],[3,"WriteVectored","","Future for the <code>write_vectored</code> method.",null,null],[3,"WriteAll","","Future for the <code>write_all</code> method.",null,null],[8,"AsyncReadExt","","An extension trait which adds utility methods to <code>AsyncRead</code>…",null,null],[11,"chain","","Creates an adaptor which will chain this stream with …",31,[[],["chain",3]]],[11,"read","","Tries to read some bytes directly into the given <code>buf</code> in …",31,[[],["read",3]]],[11,"read_vectored","","Creates a future which will read from the <code>AsyncRead</code> into …",31,[[],["readvectored",3]]],[11,"read_exact","","Creates a future which will read exactly enough bytes to …",31,[[],["readexact",3]]],[11,"read_to_end","","Creates a future which will read all the bytes from this …",31,[[["vec",3]],["readtoend",3]]],[11,"read_to_string","","Creates a future which will read all the bytes from this …",31,[[["string",3]],["readtostring",3]]],[11,"split","","Helper method for splitting this read/write object into …",31,[[]]],[11,"take","","Creates an AsyncRead adapter which will read at most <code>limit</code>…",31,[[],["take",3]]],[8,"AsyncWriteExt","","An extension trait which adds utility methods to …",null,null],[11,"flush","","Creates a future which will entirely flush this <code>AsyncWrite</code>…",32,[[],["flush",3]]],[11,"close","","Creates a future which will entirely close this <code>AsyncWrite</code>…",32,[[],["close",3]]],[11,"write","","Creates a future which will write bytes from <code>buf</code> into the …",32,[[],["write",3]]],[11,"write_vectored","","Creates a future which will write bytes from <code>bufs</code> into …",32,[[],["writevectored",3]]],[11,"write_all","","Write data into this object.",32,[[],["writeall",3]]],[11,"into_sink","","Allow using an [<code>AsyncWrite</code>] as a <code>Sink</code><code><Item: AsRef<[u8]>></code>.",32,[[],[["intosink",3],["asref",8]]]],[8,"AsyncSeekExt","","An extension trait which adds utility methods to <code>AsyncSeek</code>…",null,null],[11,"seek","","Creates a future which will seek an IO object, and then …",33,[[["seekfrom",4]],["seek",3]]],[8,"AsyncBufReadExt","","An extension trait which adds utility methods to …",null,null],[11,"read_until","","Creates a future which will read all the bytes associated …",34,[[["vec",3]],["readuntil",3]]],[11,"read_line","","Creates a future which will read all the bytes associated …",34,[[["string",3]],["readline",3]]],[11,"lines","","Returns a stream over the lines of this reader. This …",34,[[],["lines",3]]],[0,"lock","futures_util","Futures-powered synchronization primitives.",null,null],[3,"MappedMutexGuard","futures_util::lock","An RAII guard returned by the <code>MutexGuard::map</code> and …",null,null],[3,"Mutex","","A futures-aware mutex.",null,null],[3,"MutexLockFuture","","A future which resolves when the target mutex has been …",null,null],[3,"MutexGuard","","An RAII guard returned by the <code>lock</code> and <code>try_lock</code> methods. …",null,null],[14,"poll","futures_util","A macro which returns the result of polling a future once …",null,null],[14,"pending","","A macro which yields to the event loop once.",null,null],[14,"join","","Polls multiple futures simultaneously, returning a tuple …",null,null],[14,"try_join","","Polls multiple futures simultaneously, resolving to a […",null,null],[14,"select","","Polls multiple futures and streams simultaneously, …",null,null],[14,"select_biased","","Polls multiple futures and streams simultaneously, …",null,null],[11,"from","futures_util::task","",35,[[]]],[11,"into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"into_future","","",35,[[]]],[11,"try_poll","","",35,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"into_future","","",36,[[]]],[11,"try_poll","","",36,[[["pin",3],["context",3]],["poll",4]]],[11,"from","futures_util::future","",37,[[]]],[11,"into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"into_future","","",37,[[]]],[11,"try_poll","","",37,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"into_future","","",38,[[]]],[11,"try_poll","","",38,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"into_future","","",39,[[]]],[11,"try_poll","","",39,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"into_future","","",40,[[]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"into_future","","",41,[[]]],[11,"try_poll","","",41,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"into_future","","",42,[[]]],[11,"try_poll","","",42,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"try_poll_next","","",43,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"into_future","","",44,[[]]],[11,"try_poll","","",44,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"try_poll_next","","",45,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"into_future","","",46,[[]]],[11,"try_poll","","",46,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"into_future","","",47,[[]]],[11,"try_poll","","",47,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"into_future","","",48,[[]]],[11,"try_poll","","",48,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"into_future","","",49,[[]]],[11,"try_poll","","",49,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"into_future","","",50,[[]]],[11,"try_poll","","",50,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"into_future","","",51,[[]]],[11,"try_poll","","",51,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"into_future","","",52,[[]]],[11,"try_poll","","",52,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"try_poll_next","","",53,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"try_poll_next","","",54,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"into_future","","",55,[[]]],[11,"try_poll","","",55,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"into_future","","",56,[[]]],[11,"try_poll","","",56,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"into_future","","",57,[[]]],[11,"try_poll","","",57,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"into_future","","",58,[[]]],[11,"try_poll","","",58,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"into_future","","",59,[[]]],[11,"try_poll","","",59,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"into_future","","",60,[[]]],[11,"try_poll","","",60,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",61,[[]]],[11,"into","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"into_future","","",61,[[]]],[11,"try_poll","","",61,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"into_future","","",62,[[]]],[11,"try_poll","","",62,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",63,[[]]],[11,"into","","",63,[[]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"into_future","","",63,[[]]],[11,"try_poll","","",63,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",64,[[]]],[11,"into","","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"into_future","","",64,[[]]],[11,"try_poll","","",64,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",65,[[]]],[11,"into","","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"into_future","","",65,[[]]],[11,"try_poll","","",65,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",66,[[]]],[11,"into","","",66,[[]]],[11,"to_owned","","",66,[[]]],[11,"clone_into","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"into_future","","",66,[[]]],[11,"try_poll","","",66,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"into_future","","",6,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"into_future","","",7,[[]]],[11,"try_poll","","",7,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",67,[[]]],[11,"into","","",67,[[]]],[11,"to_owned","","",67,[[]]],[11,"clone_into","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"into_future","","",67,[[]]],[11,"from","","",68,[[]]],[11,"into","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"into_future","","",68,[[]]],[11,"try_poll","","",68,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",69,[[]]],[11,"into","","",69,[[]]],[11,"to_owned","","",69,[[]]],[11,"clone_into","","",69,[[]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"into_future","","",69,[[]]],[11,"try_poll","","",69,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",70,[[]]],[11,"into","","",70,[[]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"try_into","","",70,[[],["result",4]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"into_future","","",70,[[]]],[11,"from","","",71,[[]]],[11,"into","","",71,[[]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"into_future","","",71,[[]]],[11,"from","","",72,[[]]],[11,"into","","",72,[[]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"into_future","","",72,[[]]],[11,"from","","",73,[[]]],[11,"into","","",73,[[]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"try_into","","",73,[[],["result",4]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"into_future","","",73,[[]]],[11,"from","","",74,[[]]],[11,"into","","",74,[[]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"try_into","","",74,[[],["result",4]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"into_future","","",74,[[]]],[11,"from","","",75,[[]]],[11,"into","","",75,[[]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"try_into","","",75,[[],["result",4]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"into_future","","",75,[[]]],[11,"from","","",76,[[]]],[11,"into","","",76,[[]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"try_into","","",76,[[],["result",4]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"into_future","","",76,[[]]],[11,"from","","",77,[[]]],[11,"into","","",77,[[]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"try_into","","",77,[[],["result",4]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"into_future","","",77,[[]]],[11,"try_poll","","",77,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",78,[[]]],[11,"into","","",78,[[]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"try_into","","",78,[[],["result",4]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"into_future","","",78,[[]]],[11,"try_poll","","",78,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",79,[[]]],[11,"into","","",79,[[]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"try_into","","",79,[[],["result",4]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"into_future","","",79,[[]]],[11,"try_poll","","",79,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",80,[[]]],[11,"into","","",80,[[]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"try_into","","",80,[[],["result",4]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"into_future","","",80,[[]]],[11,"try_poll","","",80,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",81,[[]]],[11,"into","","",81,[[]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"try_into","","",81,[[],["result",4]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"into_future","","",81,[[]]],[11,"try_poll","","",81,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",82,[[]]],[11,"into","","",82,[[]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"try_into","","",82,[[],["result",4]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"into_future","","",82,[[]]],[11,"try_poll","","",82,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",83,[[]]],[11,"into","","",83,[[]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"try_into","","",83,[[],["result",4]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"into_future","","",83,[[]]],[11,"try_poll","","",83,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"into_future","","",8,[[]]],[11,"try_poll","","",8,[[["pin",3],["context",3]],["poll",4]]],[11,"try_poll_next","","",8,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"from","","",84,[[]]],[11,"into","","",84,[[]]],[11,"to_owned","","",84,[[]]],[11,"clone_into","","",84,[[]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"try_into","","",84,[[],["result",4]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"into_future","","",84,[[]]],[11,"try_poll","","",84,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",85,[[]]],[11,"into","","",85,[[]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"try_into","","",85,[[],["result",4]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"from","","",86,[[]]],[11,"into","","",86,[[]]],[11,"to_owned","","",86,[[]]],[11,"clone_into","","",86,[[]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"try_into","","",86,[[],["result",4]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"from","","",87,[[]]],[11,"into","","",87,[[]]],[11,"to_owned","","",87,[[]]],[11,"clone_into","","",87,[[]]],[11,"to_string","","",87,[[],["string",3]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"try_into","","",87,[[],["result",4]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"from","futures_util::stream","",88,[[]]],[11,"into","","",88,[[]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"try_into","","",88,[[],["result",4]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"try_poll_next","","",88,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"from","","",89,[[]]],[11,"into","","",89,[[]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"try_into","","",89,[[],["result",4]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"into_future","","",89,[[]]],[11,"from","","",90,[[]]],[11,"into","","",90,[[]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"try_into","","",90,[[],["result",4]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"into_future","","",90,[[]]],[11,"try_poll","","",90,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",91,[[]]],[11,"into","","",91,[[]]],[11,"borrow","","",91,[[]]],[11,"borrow_mut","","",91,[[]]],[11,"try_from","","",91,[[],["result",4]]],[11,"try_into","","",91,[[],["result",4]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"from","","",92,[[]]],[11,"into","","",92,[[]]],[11,"borrow","","",92,[[]]],[11,"borrow_mut","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"try_into","","",92,[[],["result",4]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"try_poll_next","","",92,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"from","","",93,[[]]],[11,"into","","",93,[[]]],[11,"borrow","","",93,[[]]],[11,"borrow_mut","","",93,[[]]],[11,"try_from","","",93,[[],["result",4]]],[11,"try_into","","",93,[[],["result",4]]],[11,"type_id","","",93,[[],["typeid",3]]],[11,"try_poll_next","","",93,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"from","","",94,[[]]],[11,"into","","",94,[[]]],[11,"borrow","","",94,[[]]],[11,"borrow_mut","","",94,[[]]],[11,"try_from","","",94,[[],["result",4]]],[11,"try_into","","",94,[[],["result",4]]],[11,"type_id","","",94,[[],["typeid",3]]],[11,"into_future","","",94,[[]]],[11,"try_poll","","",94,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",95,[[]]],[11,"into","","",95,[[]]],[11,"borrow","","",95,[[]]],[11,"borrow_mut","","",95,[[]]],[11,"try_from","","",95,[[],["result",4]]],[11,"try_into","","",95,[[],["result",4]]],[11,"type_id","","",95,[[],["typeid",3]]],[11,"into_future","","",95,[[]]],[11,"from","","",96,[[]]],[11,"into","","",96,[[]]],[11,"borrow","","",96,[[]]],[11,"borrow_mut","","",96,[[]]],[11,"try_from","","",96,[[],["result",4]]],[11,"try_into","","",96,[[],["result",4]]],[11,"type_id","","",96,[[],["typeid",3]]],[11,"try_poll_next","","",96,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"from","","",97,[[]]],[11,"into","","",97,[[]]],[11,"borrow","","",97,[[]]],[11,"borrow_mut","","",97,[[]]],[11,"try_from","","",97,[[],["result",4]]],[11,"try_into","","",97,[[],["result",4]]],[11,"type_id","","",97,[[],["typeid",3]]],[11,"into_future","","",97,[[]]],[11,"from","","",98,[[]]],[11,"into","","",98,[[]]],[11,"borrow","","",98,[[]]],[11,"borrow_mut","","",98,[[]]],[11,"try_from","","",98,[[],["result",4]]],[11,"try_into","","",98,[[],["result",4]]],[11,"type_id","","",98,[[],["typeid",3]]],[11,"try_poll_next","","",98,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"from","","",99,[[]]],[11,"into","","",99,[[]]],[11,"borrow","","",99,[[]]],[11,"borrow_mut","","",99,[[]]],[11,"try_from","","",99,[[],["result",4]]],[11,"try_into","","",99,[[],["result",4]]],[11,"type_id","","",99,[[],["typeid",3]]],[11,"into_future","","",99,[[]]],[11,"from","","",100,[[]]],[11,"into","","",100,[[]]],[11,"borrow","","",100,[[]]],[11,"borrow_mut","","",100,[[]]],[11,"try_from","","",100,[[],["result",4]]],[11,"try_into","","",100,[[],["result",4]]],[11,"type_id","","",100,[[],["typeid",3]]],[11,"into_future","","",100,[[]]],[11,"try_poll","","",100,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",101,[[]]],[11,"into","","",101,[[]]],[11,"borrow","","",101,[[]]],[11,"borrow_mut","","",101,[[]]],[11,"try_from","","",101,[[],["result",4]]],[11,"try_into","","",101,[[],["result",4]]],[11,"type_id","","",101,[[],["typeid",3]]],[11,"try_poll_next","","",101,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"from","","",102,[[]]],[11,"into","","",102,[[]]],[11,"borrow","","",102,[[]]],[11,"borrow_mut","","",102,[[]]],[11,"try_from","","",102,[[],["result",4]]],[11,"try_into","","",102,[[],["result",4]]],[11,"type_id","","",102,[[],["typeid",3]]],[11,"into_future","","",102,[[]]],[11,"from","","",103,[[]]],[11,"into","","",103,[[]]],[11,"borrow","","",103,[[]]],[11,"borrow_mut","","",103,[[]]],[11,"try_from","","",103,[[],["result",4]]],[11,"try_into","","",103,[[],["result",4]]],[11,"type_id","","",103,[[],["typeid",3]]],[11,"try_poll_next","","",103,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"from","","",104,[[]]],[11,"into","","",104,[[]]],[11,"borrow","","",104,[[]]],[11,"borrow_mut","","",104,[[]]],[11,"try_from","","",104,[[],["result",4]]],[11,"try_into","","",104,[[],["result",4]]],[11,"type_id","","",104,[[],["typeid",3]]],[11,"try_poll_next","","",104,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"from","","",105,[[]]],[11,"into","","",105,[[]]],[11,"borrow","","",105,[[]]],[11,"borrow_mut","","",105,[[]]],[11,"try_from","","",105,[[],["result",4]]],[11,"try_into","","",105,[[],["result",4]]],[11,"type_id","","",105,[[],["typeid",3]]],[11,"try_poll_next","","",105,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"from","","",106,[[]]],[11,"into","","",106,[[]]],[11,"borrow","","",106,[[]]],[11,"borrow_mut","","",106,[[]]],[11,"try_from","","",106,[[],["result",4]]],[11,"try_into","","",106,[[],["result",4]]],[11,"type_id","","",106,[[],["typeid",3]]],[11,"try_poll_next","","",106,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"from","","",107,[[]]],[11,"into","","",107,[[]]],[11,"borrow","","",107,[[]]],[11,"borrow_mut","","",107,[[]]],[11,"try_from","","",107,[[],["result",4]]],[11,"try_into","","",107,[[],["result",4]]],[11,"type_id","","",107,[[],["typeid",3]]],[11,"try_poll_next","","",107,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"from","","",108,[[]]],[11,"into","","",108,[[]]],[11,"borrow","","",108,[[]]],[11,"borrow_mut","","",108,[[]]],[11,"try_from","","",108,[[],["result",4]]],[11,"try_into","","",108,[[],["result",4]]],[11,"type_id","","",108,[[],["typeid",3]]],[11,"try_poll_next","","",108,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"from","","",109,[[]]],[11,"into","","",109,[[]]],[11,"borrow","","",109,[[]]],[11,"borrow_mut","","",109,[[]]],[11,"try_from","","",109,[[],["result",4]]],[11,"try_into","","",109,[[],["result",4]]],[11,"type_id","","",109,[[],["typeid",3]]],[11,"from","","",110,[[]]],[11,"into","","",110,[[]]],[11,"borrow","","",110,[[]]],[11,"borrow_mut","","",110,[[]]],[11,"try_from","","",110,[[],["result",4]]],[11,"try_into","","",110,[[],["result",4]]],[11,"type_id","","",110,[[],["typeid",3]]],[11,"from","","",111,[[]]],[11,"into","","",111,[[]]],[11,"borrow","","",111,[[]]],[11,"borrow_mut","","",111,[[]]],[11,"try_from","","",111,[[],["result",4]]],[11,"try_into","","",111,[[],["result",4]]],[11,"type_id","","",111,[[],["typeid",3]]],[11,"from","","",112,[[]]],[11,"into","","",112,[[]]],[11,"borrow","","",112,[[]]],[11,"borrow_mut","","",112,[[]]],[11,"try_from","","",112,[[],["result",4]]],[11,"try_into","","",112,[[],["result",4]]],[11,"type_id","","",112,[[],["typeid",3]]],[11,"try_poll_next","","",112,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"from","","",113,[[]]],[11,"into","","",113,[[]]],[11,"borrow","","",113,[[]]],[11,"borrow_mut","","",113,[[]]],[11,"try_from","","",113,[[],["result",4]]],[11,"try_into","","",113,[[],["result",4]]],[11,"type_id","","",113,[[],["typeid",3]]],[11,"try_poll_next","","",113,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"from","","",114,[[]]],[11,"into","","",114,[[]]],[11,"borrow","","",114,[[]]],[11,"borrow_mut","","",114,[[]]],[11,"try_from","","",114,[[],["result",4]]],[11,"try_into","","",114,[[],["result",4]]],[11,"type_id","","",114,[[],["typeid",3]]],[11,"try_poll_next","","",114,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"from","","",115,[[]]],[11,"into","","",115,[[]]],[11,"borrow","","",115,[[]]],[11,"borrow_mut","","",115,[[]]],[11,"try_from","","",115,[[],["result",4]]],[11,"try_into","","",115,[[],["result",4]]],[11,"type_id","","",115,[[],["typeid",3]]],[11,"into_future","","",115,[[]]],[11,"from","","",116,[[]]],[11,"into","","",116,[[]]],[11,"borrow","","",116,[[]]],[11,"borrow_mut","","",116,[[]]],[11,"try_from","","",116,[[],["result",4]]],[11,"try_into","","",116,[[],["result",4]]],[11,"type_id","","",116,[[],["typeid",3]]],[11,"try_poll_next","","",116,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"from","","",117,[[]]],[11,"into","","",117,[[]]],[11,"borrow","","",117,[[]]],[11,"borrow_mut","","",117,[[]]],[11,"try_from","","",117,[[],["result",4]]],[11,"try_into","","",117,[[],["result",4]]],[11,"type_id","","",117,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_string","","",14,[[],["string",3]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",118,[[]]],[11,"into","","",118,[[]]],[11,"borrow","","",118,[[]]],[11,"borrow_mut","","",118,[[]]],[11,"try_from","","",118,[[],["result",4]]],[11,"try_into","","",118,[[],["result",4]]],[11,"type_id","","",118,[[],["typeid",3]]],[11,"try_poll_next","","",118,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"from","","",119,[[]]],[11,"into","","",119,[[]]],[11,"borrow","","",119,[[]]],[11,"borrow_mut","","",119,[[]]],[11,"try_from","","",119,[[],["result",4]]],[11,"try_into","","",119,[[],["result",4]]],[11,"type_id","","",119,[[],["typeid",3]]],[11,"try_poll_next","","",119,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"from","","",120,[[]]],[11,"into","","",120,[[]]],[11,"borrow","","",120,[[]]],[11,"borrow_mut","","",120,[[]]],[11,"try_from","","",120,[[],["result",4]]],[11,"try_into","","",120,[[],["result",4]]],[11,"type_id","","",120,[[],["typeid",3]]],[11,"into_future","","",120,[[]]],[11,"try_poll","","",120,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",121,[[]]],[11,"into","","",121,[[]]],[11,"borrow","","",121,[[]]],[11,"borrow_mut","","",121,[[]]],[11,"try_from","","",121,[[],["result",4]]],[11,"try_into","","",121,[[],["result",4]]],[11,"type_id","","",121,[[],["typeid",3]]],[11,"try_poll_next","","",121,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"from","","",122,[[]]],[11,"into","","",122,[[]]],[11,"borrow","","",122,[[]]],[11,"borrow_mut","","",122,[[]]],[11,"try_from","","",122,[[],["result",4]]],[11,"try_into","","",122,[[],["result",4]]],[11,"type_id","","",122,[[],["typeid",3]]],[11,"try_poll_next","","",122,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"from","","",123,[[]]],[11,"into","","",123,[[]]],[11,"borrow","","",123,[[]]],[11,"borrow_mut","","",123,[[]]],[11,"try_from","","",123,[[],["result",4]]],[11,"try_into","","",123,[[],["result",4]]],[11,"type_id","","",123,[[],["typeid",3]]],[11,"try_poll_next","","",123,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"from","","",124,[[]]],[11,"into","","",124,[[]]],[11,"borrow","","",124,[[]]],[11,"borrow_mut","","",124,[[]]],[11,"try_from","","",124,[[],["result",4]]],[11,"try_into","","",124,[[],["result",4]]],[11,"type_id","","",124,[[],["typeid",3]]],[11,"try_poll_next","","",124,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"from","","",125,[[]]],[11,"into","","",125,[[]]],[11,"borrow","","",125,[[]]],[11,"borrow_mut","","",125,[[]]],[11,"try_from","","",125,[[],["result",4]]],[11,"try_into","","",125,[[],["result",4]]],[11,"type_id","","",125,[[],["typeid",3]]],[11,"try_poll_next","","",125,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"from","","",126,[[]]],[11,"into","","",126,[[]]],[11,"borrow","","",126,[[]]],[11,"borrow_mut","","",126,[[]]],[11,"try_from","","",126,[[],["result",4]]],[11,"try_into","","",126,[[],["result",4]]],[11,"type_id","","",126,[[],["typeid",3]]],[11,"into_future","","",126,[[]]],[11,"try_poll","","",126,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",127,[[]]],[11,"into","","",127,[[]]],[11,"borrow","","",127,[[]]],[11,"borrow_mut","","",127,[[]]],[11,"try_from","","",127,[[],["result",4]]],[11,"try_into","","",127,[[],["result",4]]],[11,"type_id","","",127,[[],["typeid",3]]],[11,"into_future","","",127,[[]]],[11,"try_poll","","",127,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",128,[[]]],[11,"into","","",128,[[]]],[11,"borrow","","",128,[[]]],[11,"borrow_mut","","",128,[[]]],[11,"try_from","","",128,[[],["result",4]]],[11,"try_into","","",128,[[],["result",4]]],[11,"type_id","","",128,[[],["typeid",3]]],[11,"try_poll_next","","",128,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"from","","",129,[[]]],[11,"into","","",129,[[]]],[11,"borrow","","",129,[[]]],[11,"borrow_mut","","",129,[[]]],[11,"try_from","","",129,[[],["result",4]]],[11,"try_into","","",129,[[],["result",4]]],[11,"type_id","","",129,[[],["typeid",3]]],[11,"try_poll_next","","",129,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"from","","",130,[[]]],[11,"into","","",130,[[]]],[11,"borrow","","",130,[[]]],[11,"borrow_mut","","",130,[[]]],[11,"try_from","","",130,[[],["result",4]]],[11,"try_into","","",130,[[],["result",4]]],[11,"type_id","","",130,[[],["typeid",3]]],[11,"try_poll_next","","",130,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"from","","",131,[[]]],[11,"into","","",131,[[]]],[11,"borrow","","",131,[[]]],[11,"borrow_mut","","",131,[[]]],[11,"try_from","","",131,[[],["result",4]]],[11,"try_into","","",131,[[],["result",4]]],[11,"type_id","","",131,[[],["typeid",3]]],[11,"into_future","","",131,[[]]],[11,"try_poll","","",131,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",132,[[]]],[11,"into","","",132,[[]]],[11,"borrow","","",132,[[]]],[11,"borrow_mut","","",132,[[]]],[11,"try_from","","",132,[[],["result",4]]],[11,"try_into","","",132,[[],["result",4]]],[11,"type_id","","",132,[[],["typeid",3]]],[11,"into_future","","",132,[[]]],[11,"try_poll","","",132,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",133,[[]]],[11,"into","","",133,[[]]],[11,"borrow","","",133,[[]]],[11,"borrow_mut","","",133,[[]]],[11,"try_from","","",133,[[],["result",4]]],[11,"try_into","","",133,[[],["result",4]]],[11,"type_id","","",133,[[],["typeid",3]]],[11,"into_future","","",133,[[]]],[11,"try_poll","","",133,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",134,[[]]],[11,"into","","",134,[[]]],[11,"borrow","","",134,[[]]],[11,"borrow_mut","","",134,[[]]],[11,"try_from","","",134,[[],["result",4]]],[11,"try_into","","",134,[[],["result",4]]],[11,"type_id","","",134,[[],["typeid",3]]],[11,"try_poll_next","","",134,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"from","","",135,[[]]],[11,"into","","",135,[[]]],[11,"borrow","","",135,[[]]],[11,"borrow_mut","","",135,[[]]],[11,"try_from","","",135,[[],["result",4]]],[11,"try_into","","",135,[[],["result",4]]],[11,"type_id","","",135,[[],["typeid",3]]],[11,"try_poll_next","","",135,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"from","","",136,[[]]],[11,"into","","",136,[[]]],[11,"borrow","","",136,[[]]],[11,"borrow_mut","","",136,[[]]],[11,"try_from","","",136,[[],["result",4]]],[11,"try_into","","",136,[[],["result",4]]],[11,"type_id","","",136,[[],["typeid",3]]],[11,"try_poll_next","","",136,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"from","","",137,[[]]],[11,"into","","",137,[[]]],[11,"borrow","","",137,[[]]],[11,"borrow_mut","","",137,[[]]],[11,"try_from","","",137,[[],["result",4]]],[11,"try_into","","",137,[[],["result",4]]],[11,"type_id","","",137,[[],["typeid",3]]],[11,"into_future","","",137,[[]]],[11,"try_poll","","",137,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",138,[[]]],[11,"into","","",138,[[]]],[11,"borrow","","",138,[[]]],[11,"borrow_mut","","",138,[[]]],[11,"try_from","","",138,[[],["result",4]]],[11,"try_into","","",138,[[],["result",4]]],[11,"type_id","","",138,[[],["typeid",3]]],[11,"from","","",139,[[]]],[11,"into","","",139,[[]]],[11,"borrow","","",139,[[]]],[11,"borrow_mut","","",139,[[]]],[11,"try_from","","",139,[[],["result",4]]],[11,"try_into","","",139,[[],["result",4]]],[11,"type_id","","",139,[[],["typeid",3]]],[11,"try_poll_next","","",139,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"from","","",140,[[]]],[11,"into","","",140,[[]]],[11,"borrow","","",140,[[]]],[11,"borrow_mut","","",140,[[]]],[11,"try_from","","",140,[[],["result",4]]],[11,"try_into","","",140,[[],["result",4]]],[11,"type_id","","",140,[[],["typeid",3]]],[11,"try_poll_next","","",140,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"from","","",141,[[]]],[11,"into","","",141,[[]]],[11,"borrow","","",141,[[]]],[11,"borrow_mut","","",141,[[]]],[11,"try_from","","",141,[[],["result",4]]],[11,"try_into","","",141,[[],["result",4]]],[11,"type_id","","",141,[[],["typeid",3]]],[11,"try_poll_next","","",141,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"from","","",142,[[]]],[11,"into","","",142,[[]]],[11,"borrow","","",142,[[]]],[11,"borrow_mut","","",142,[[]]],[11,"try_from","","",142,[[],["result",4]]],[11,"try_into","","",142,[[],["result",4]]],[11,"type_id","","",142,[[],["typeid",3]]],[11,"try_poll_next","","",142,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"from","","",143,[[]]],[11,"into","","",143,[[]]],[11,"borrow","","",143,[[]]],[11,"borrow_mut","","",143,[[]]],[11,"try_from","","",143,[[],["result",4]]],[11,"try_into","","",143,[[],["result",4]]],[11,"type_id","","",143,[[],["typeid",3]]],[11,"try_poll_next","","",143,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"from","","",144,[[]]],[11,"into","","",144,[[]]],[11,"borrow","","",144,[[]]],[11,"borrow_mut","","",144,[[]]],[11,"try_from","","",144,[[],["result",4]]],[11,"try_into","","",144,[[],["result",4]]],[11,"type_id","","",144,[[],["typeid",3]]],[11,"try_poll_next","","",144,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"from","","",145,[[]]],[11,"into","","",145,[[]]],[11,"borrow","","",145,[[]]],[11,"borrow_mut","","",145,[[]]],[11,"try_from","","",145,[[],["result",4]]],[11,"try_into","","",145,[[],["result",4]]],[11,"type_id","","",145,[[],["typeid",3]]],[11,"try_poll_next","","",145,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"from","","",146,[[]]],[11,"into","","",146,[[]]],[11,"borrow","","",146,[[]]],[11,"borrow_mut","","",146,[[]]],[11,"try_from","","",146,[[],["result",4]]],[11,"try_into","","",146,[[],["result",4]]],[11,"type_id","","",146,[[],["typeid",3]]],[11,"try_poll_next","","",146,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"from","","",147,[[]]],[11,"into","","",147,[[]]],[11,"borrow","","",147,[[]]],[11,"borrow_mut","","",147,[[]]],[11,"try_from","","",147,[[],["result",4]]],[11,"try_into","","",147,[[],["result",4]]],[11,"type_id","","",147,[[],["typeid",3]]],[11,"try_poll_next","","",147,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"from","","",148,[[]]],[11,"into","","",148,[[]]],[11,"borrow","","",148,[[]]],[11,"borrow_mut","","",148,[[]]],[11,"try_from","","",148,[[],["result",4]]],[11,"try_into","","",148,[[],["result",4]]],[11,"type_id","","",148,[[],["typeid",3]]],[11,"try_poll_next","","",148,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"from","","",149,[[]]],[11,"into","","",149,[[]]],[11,"borrow","","",149,[[]]],[11,"borrow_mut","","",149,[[]]],[11,"try_from","","",149,[[],["result",4]]],[11,"try_into","","",149,[[],["result",4]]],[11,"type_id","","",149,[[],["typeid",3]]],[11,"try_poll_next","","",149,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"from","","",150,[[]]],[11,"into","","",150,[[]]],[11,"borrow","","",150,[[]]],[11,"borrow_mut","","",150,[[]]],[11,"try_from","","",150,[[],["result",4]]],[11,"try_into","","",150,[[],["result",4]]],[11,"type_id","","",150,[[],["typeid",3]]],[11,"try_poll_next","","",150,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"from","","",151,[[]]],[11,"into","","",151,[[]]],[11,"borrow","","",151,[[]]],[11,"borrow_mut","","",151,[[]]],[11,"try_from","","",151,[[],["result",4]]],[11,"try_into","","",151,[[],["result",4]]],[11,"type_id","","",151,[[],["typeid",3]]],[11,"try_poll_next","","",151,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"from","","",152,[[]]],[11,"into","","",152,[[]]],[11,"borrow","","",152,[[]]],[11,"borrow_mut","","",152,[[]]],[11,"try_from","","",152,[[],["result",4]]],[11,"try_into","","",152,[[],["result",4]]],[11,"type_id","","",152,[[],["typeid",3]]],[11,"try_poll_next","","",152,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"from","futures_util::stream::futures_unordered","",153,[[]]],[11,"into","","",153,[[]]],[11,"into_iter","","",153,[[]]],[11,"borrow","","",153,[[]]],[11,"borrow_mut","","",153,[[]]],[11,"try_from","","",153,[[],["result",4]]],[11,"try_into","","",153,[[],["result",4]]],[11,"type_id","","",153,[[],["typeid",3]]],[11,"from","","",154,[[]]],[11,"into","","",154,[[]]],[11,"into_iter","","",154,[[]]],[11,"borrow","","",154,[[]]],[11,"borrow_mut","","",154,[[]]],[11,"try_from","","",154,[[],["result",4]]],[11,"try_into","","",154,[[],["result",4]]],[11,"type_id","","",154,[[],["typeid",3]]],[11,"from","","",155,[[]]],[11,"into","","",155,[[]]],[11,"into_iter","","",155,[[]]],[11,"borrow","","",155,[[]]],[11,"borrow_mut","","",155,[[]]],[11,"try_from","","",155,[[],["result",4]]],[11,"try_into","","",155,[[],["result",4]]],[11,"type_id","","",155,[[],["typeid",3]]],[11,"from","","",156,[[]]],[11,"into","","",156,[[]]],[11,"into_iter","","",156,[[]]],[11,"borrow","","",156,[[]]],[11,"borrow_mut","","",156,[[]]],[11,"try_from","","",156,[[],["result",4]]],[11,"try_into","","",156,[[],["result",4]]],[11,"type_id","","",156,[[],["typeid",3]]],[11,"from","futures_util::stream","",12,[[]]],[11,"into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"try_poll_next","","",12,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"from","","",157,[[]]],[11,"into","","",157,[[]]],[11,"borrow","","",157,[[]]],[11,"borrow_mut","","",157,[[]]],[11,"try_from","","",157,[[],["result",4]]],[11,"try_into","","",157,[[],["result",4]]],[11,"type_id","","",157,[[],["typeid",3]]],[11,"try_poll_next","","",157,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"from","futures_util::sink","",158,[[]]],[11,"into","","",158,[[]]],[11,"borrow","","",158,[[]]],[11,"borrow_mut","","",158,[[]]],[11,"try_from","","",158,[[],["result",4]]],[11,"try_into","","",158,[[],["result",4]]],[11,"type_id","","",158,[[],["typeid",3]]],[11,"into_future","","",158,[[]]],[11,"try_poll","","",158,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",159,[[]]],[11,"into","","",159,[[]]],[11,"borrow","","",159,[[]]],[11,"borrow_mut","","",159,[[]]],[11,"try_from","","",159,[[],["result",4]]],[11,"try_into","","",159,[[],["result",4]]],[11,"type_id","","",159,[[],["typeid",3]]],[11,"from","","",160,[[]]],[11,"into","","",160,[[]]],[11,"borrow","","",160,[[]]],[11,"borrow_mut","","",160,[[]]],[11,"try_from","","",160,[[],["result",4]]],[11,"try_into","","",160,[[],["result",4]]],[11,"type_id","","",160,[[],["typeid",3]]],[11,"from","","",161,[[]]],[11,"into","","",161,[[]]],[11,"borrow","","",161,[[]]],[11,"borrow_mut","","",161,[[]]],[11,"try_from","","",161,[[],["result",4]]],[11,"try_into","","",161,[[],["result",4]]],[11,"type_id","","",161,[[],["typeid",3]]],[11,"into_future","","",161,[[]]],[11,"try_poll","","",161,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",162,[[]]],[11,"into","","",162,[[]]],[11,"borrow","","",162,[[]]],[11,"borrow_mut","","",162,[[]]],[11,"try_from","","",162,[[],["result",4]]],[11,"try_into","","",162,[[],["result",4]]],[11,"type_id","","",162,[[],["typeid",3]]],[11,"try_poll_next","","",162,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"from","","",163,[[]]],[11,"into","","",163,[[]]],[11,"to_owned","","",163,[[]]],[11,"clone_into","","",163,[[]]],[11,"borrow","","",163,[[]]],[11,"borrow_mut","","",163,[[]]],[11,"try_from","","",163,[[],["result",4]]],[11,"try_into","","",163,[[],["result",4]]],[11,"type_id","","",163,[[],["typeid",3]]],[11,"try_poll_next","","",163,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"from","","",164,[[]]],[11,"into","","",164,[[]]],[11,"borrow","","",164,[[]]],[11,"borrow_mut","","",164,[[]]],[11,"try_from","","",164,[[],["result",4]]],[11,"try_into","","",164,[[],["result",4]]],[11,"type_id","","",164,[[],["typeid",3]]],[11,"into_future","","",164,[[]]],[11,"try_poll","","",164,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",165,[[]]],[11,"into","","",165,[[]]],[11,"borrow","","",165,[[]]],[11,"borrow_mut","","",165,[[]]],[11,"try_from","","",165,[[],["result",4]]],[11,"try_into","","",165,[[],["result",4]]],[11,"type_id","","",165,[[],["typeid",3]]],[11,"into_future","","",165,[[]]],[11,"try_poll","","",165,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",166,[[]]],[11,"into","","",166,[[]]],[11,"borrow","","",166,[[]]],[11,"borrow_mut","","",166,[[]]],[11,"try_from","","",166,[[],["result",4]]],[11,"try_into","","",166,[[],["result",4]]],[11,"type_id","","",166,[[],["typeid",3]]],[11,"try_poll_next","","",166,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"from","","",167,[[]]],[11,"into","","",167,[[]]],[11,"borrow","","",167,[[]]],[11,"borrow_mut","","",167,[[]]],[11,"try_from","","",167,[[],["result",4]]],[11,"try_into","","",167,[[],["result",4]]],[11,"type_id","","",167,[[],["typeid",3]]],[11,"try_poll_next","","",167,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"from","","",168,[[]]],[11,"into","","",168,[[]]],[11,"borrow","","",168,[[]]],[11,"borrow_mut","","",168,[[]]],[11,"try_from","","",168,[[],["result",4]]],[11,"try_into","","",168,[[],["result",4]]],[11,"type_id","","",168,[[],["typeid",3]]],[11,"try_poll_next","","",168,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"from","futures_util::task","",169,[[]]],[11,"into","","",169,[[]]],[11,"borrow","","",169,[[]]],[11,"borrow_mut","","",169,[[]]],[11,"try_from","","",169,[[],["result",4]]],[11,"try_into","","",169,[[],["result",4]]],[11,"type_id","","",169,[[],["typeid",3]]],[11,"from","","",170,[[]]],[11,"into","","",170,[[]]],[11,"borrow","","",170,[[]]],[11,"borrow_mut","","",170,[[]]],[11,"try_from","","",170,[[],["result",4]]],[11,"try_into","","",170,[[],["result",4]]],[11,"type_id","","",170,[[],["typeid",3]]],[11,"from","","",171,[[]]],[11,"into","","",171,[[]]],[11,"borrow","","",171,[[]]],[11,"borrow_mut","","",171,[[]]],[11,"try_from","","",171,[[],["result",4]]],[11,"try_into","","",171,[[],["result",4]]],[11,"type_id","","",171,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",172,[[]]],[11,"into","","",172,[[]]],[11,"to_owned","","",172,[[]]],[11,"clone_into","","",172,[[]]],[11,"borrow","","",172,[[]]],[11,"borrow_mut","","",172,[[]]],[11,"try_from","","",172,[[],["result",4]]],[11,"try_into","","",172,[[],["result",4]]],[11,"type_id","","",172,[[],["typeid",3]]],[11,"from","","",173,[[]]],[11,"into","","",173,[[]]],[11,"borrow","","",173,[[]]],[11,"borrow_mut","","",173,[[]]],[11,"try_from","","",173,[[],["result",4]]],[11,"try_into","","",173,[[],["result",4]]],[11,"type_id","","",173,[[],["typeid",3]]],[11,"from","","",174,[[]]],[11,"into","","",174,[[]]],[11,"to_owned","","",174,[[]]],[11,"clone_into","","",174,[[]]],[11,"borrow","","",174,[[]]],[11,"borrow_mut","","",174,[[]]],[11,"try_from","","",174,[[],["result",4]]],[11,"try_into","","",174,[[],["result",4]]],[11,"type_id","","",174,[[],["typeid",3]]],[11,"from","","",175,[[]]],[11,"into","","",175,[[]]],[11,"to_string","","",175,[[],["string",3]]],[11,"borrow","","",175,[[]]],[11,"borrow_mut","","",175,[[]]],[11,"try_from","","",175,[[],["result",4]]],[11,"try_into","","",175,[[],["result",4]]],[11,"type_id","","",175,[[],["typeid",3]]],[11,"from","futures_util::io","",176,[[]]],[11,"into","","",176,[[]]],[11,"to_string","","",176,[[],["string",3]]],[11,"borrow","","",176,[[]]],[11,"borrow_mut","","",176,[[]]],[11,"try_from","","",176,[[],["result",4]]],[11,"try_into","","",176,[[],["result",4]]],[11,"type_id","","",176,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",177,[[]]],[11,"into","","",177,[[]]],[11,"to_owned","","",177,[[]]],[11,"clone_into","","",177,[[]]],[11,"borrow","","",177,[[]]],[11,"borrow_mut","","",177,[[]]],[11,"try_from","","",177,[[],["result",4]]],[11,"try_into","","",177,[[],["result",4]]],[11,"type_id","","",177,[[],["typeid",3]]],[11,"from","","",178,[[]]],[11,"into","","",178,[[]]],[11,"borrow","","",178,[[]]],[11,"borrow_mut","","",178,[[]]],[11,"try_from","","",178,[[],["result",4]]],[11,"try_into","","",178,[[],["result",4]]],[11,"type_id","","",178,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",179,[[]]],[11,"into","","",179,[[]]],[11,"to_owned","","",179,[[]]],[11,"clone_into","","",179,[[]]],[11,"borrow","","",179,[[]]],[11,"borrow_mut","","",179,[[]]],[11,"try_from","","",179,[[],["result",4]]],[11,"try_into","","",179,[[],["result",4]]],[11,"type_id","","",179,[[],["typeid",3]]],[11,"from","","",180,[[]]],[11,"into","","",180,[[]]],[11,"borrow","","",180,[[]]],[11,"borrow_mut","","",180,[[]]],[11,"try_from","","",180,[[],["result",4]]],[11,"try_into","","",180,[[],["result",4]]],[11,"type_id","","",180,[[],["typeid",3]]],[11,"from","","",181,[[]]],[11,"into","","",181,[[]]],[11,"borrow","","",181,[[]]],[11,"borrow_mut","","",181,[[]]],[11,"try_from","","",181,[[],["result",4]]],[11,"try_into","","",181,[[],["result",4]]],[11,"type_id","","",181,[[],["typeid",3]]],[11,"from","","",182,[[]]],[11,"into","","",182,[[]]],[11,"borrow","","",182,[[]]],[11,"borrow_mut","","",182,[[]]],[11,"try_from","","",182,[[],["result",4]]],[11,"try_into","","",182,[[],["result",4]]],[11,"type_id","","",182,[[],["typeid",3]]],[11,"from","","",183,[[]]],[11,"into","","",183,[[]]],[11,"borrow","","",183,[[]]],[11,"borrow_mut","","",183,[[]]],[11,"try_from","","",183,[[],["result",4]]],[11,"try_into","","",183,[[],["result",4]]],[11,"type_id","","",183,[[],["typeid",3]]],[11,"into_future","","",183,[[]]],[11,"try_poll","","",183,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",184,[[]]],[11,"into","","",184,[[]]],[11,"borrow","","",184,[[]]],[11,"borrow_mut","","",184,[[]]],[11,"try_from","","",184,[[],["result",4]]],[11,"try_into","","",184,[[],["result",4]]],[11,"type_id","","",184,[[],["typeid",3]]],[11,"into_future","","",184,[[]]],[11,"try_poll","","",184,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",185,[[]]],[11,"into","","",185,[[]]],[11,"borrow","","",185,[[]]],[11,"borrow_mut","","",185,[[]]],[11,"try_from","","",185,[[],["result",4]]],[11,"try_into","","",185,[[],["result",4]]],[11,"type_id","","",185,[[],["typeid",3]]],[11,"into_future","","",185,[[]]],[11,"try_poll","","",185,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",186,[[]]],[11,"into","","",186,[[]]],[11,"to_owned","","",186,[[]]],[11,"clone_into","","",186,[[]]],[11,"borrow","","",186,[[]]],[11,"borrow_mut","","",186,[[]]],[11,"try_from","","",186,[[],["result",4]]],[11,"try_into","","",186,[[],["result",4]]],[11,"type_id","","",186,[[],["typeid",3]]],[11,"from","","",187,[[]]],[11,"into","","",187,[[]]],[11,"borrow","","",187,[[]]],[11,"borrow_mut","","",187,[[]]],[11,"try_from","","",187,[[],["result",4]]],[11,"try_into","","",187,[[],["result",4]]],[11,"type_id","","",187,[[],["typeid",3]]],[11,"from","","",188,[[]]],[11,"into","","",188,[[]]],[11,"borrow","","",188,[[]]],[11,"borrow_mut","","",188,[[]]],[11,"try_from","","",188,[[],["result",4]]],[11,"try_into","","",188,[[],["result",4]]],[11,"type_id","","",188,[[],["typeid",3]]],[11,"into_future","","",188,[[]]],[11,"try_poll","","",188,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",189,[[]]],[11,"into","","",189,[[]]],[11,"borrow","","",189,[[]]],[11,"borrow_mut","","",189,[[]]],[11,"try_from","","",189,[[],["result",4]]],[11,"try_into","","",189,[[],["result",4]]],[11,"type_id","","",189,[[],["typeid",3]]],[11,"from","","",190,[[]]],[11,"into","","",190,[[]]],[11,"borrow","","",190,[[]]],[11,"borrow_mut","","",190,[[]]],[11,"try_from","","",190,[[],["result",4]]],[11,"try_into","","",190,[[],["result",4]]],[11,"type_id","","",190,[[],["typeid",3]]],[11,"try_poll_next","","",190,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"from","","",191,[[]]],[11,"into","","",191,[[]]],[11,"borrow","","",191,[[]]],[11,"borrow_mut","","",191,[[]]],[11,"try_from","","",191,[[],["result",4]]],[11,"try_into","","",191,[[],["result",4]]],[11,"type_id","","",191,[[],["typeid",3]]],[11,"into_future","","",191,[[]]],[11,"try_poll","","",191,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",192,[[]]],[11,"into","","",192,[[]]],[11,"borrow","","",192,[[]]],[11,"borrow_mut","","",192,[[]]],[11,"try_from","","",192,[[],["result",4]]],[11,"try_into","","",192,[[],["result",4]]],[11,"type_id","","",192,[[],["typeid",3]]],[11,"into_future","","",192,[[]]],[11,"try_poll","","",192,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",193,[[]]],[11,"into","","",193,[[]]],[11,"borrow","","",193,[[]]],[11,"borrow_mut","","",193,[[]]],[11,"try_from","","",193,[[],["result",4]]],[11,"try_into","","",193,[[],["result",4]]],[11,"type_id","","",193,[[],["typeid",3]]],[11,"into_future","","",193,[[]]],[11,"try_poll","","",193,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",194,[[]]],[11,"into","","",194,[[]]],[11,"borrow","","",194,[[]]],[11,"borrow_mut","","",194,[[]]],[11,"try_from","","",194,[[],["result",4]]],[11,"try_into","","",194,[[],["result",4]]],[11,"type_id","","",194,[[],["typeid",3]]],[11,"into_future","","",194,[[]]],[11,"try_poll","","",194,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",195,[[]]],[11,"into","","",195,[[]]],[11,"borrow","","",195,[[]]],[11,"borrow_mut","","",195,[[]]],[11,"try_from","","",195,[[],["result",4]]],[11,"try_into","","",195,[[],["result",4]]],[11,"type_id","","",195,[[],["typeid",3]]],[11,"into_future","","",195,[[]]],[11,"try_poll","","",195,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",196,[[]]],[11,"into","","",196,[[]]],[11,"borrow","","",196,[[]]],[11,"borrow_mut","","",196,[[]]],[11,"try_from","","",196,[[],["result",4]]],[11,"try_into","","",196,[[],["result",4]]],[11,"type_id","","",196,[[],["typeid",3]]],[11,"into_future","","",196,[[]]],[11,"try_poll","","",196,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",197,[[]]],[11,"into","","",197,[[]]],[11,"borrow","","",197,[[]]],[11,"borrow_mut","","",197,[[]]],[11,"try_from","","",197,[[],["result",4]]],[11,"try_into","","",197,[[],["result",4]]],[11,"type_id","","",197,[[],["typeid",3]]],[11,"into_future","","",197,[[]]],[11,"try_poll","","",197,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",198,[[]]],[11,"into","","",198,[[]]],[11,"borrow","","",198,[[]]],[11,"borrow_mut","","",198,[[]]],[11,"try_from","","",198,[[],["result",4]]],[11,"try_into","","",198,[[],["result",4]]],[11,"type_id","","",198,[[],["typeid",3]]],[11,"from","","",199,[[]]],[11,"into","","",199,[[]]],[11,"borrow","","",199,[[]]],[11,"borrow_mut","","",199,[[]]],[11,"try_from","","",199,[[],["result",4]]],[11,"try_into","","",199,[[],["result",4]]],[11,"type_id","","",199,[[],["typeid",3]]],[11,"into_future","","",199,[[]]],[11,"try_poll","","",199,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",200,[[]]],[11,"into","","",200,[[]]],[11,"borrow","","",200,[[]]],[11,"borrow_mut","","",200,[[]]],[11,"try_from","","",200,[[],["result",4]]],[11,"try_into","","",200,[[],["result",4]]],[11,"type_id","","",200,[[],["typeid",3]]],[11,"from","","",201,[[]]],[11,"into","","",201,[[]]],[11,"borrow","","",201,[[]]],[11,"borrow_mut","","",201,[[]]],[11,"try_from","","",201,[[],["result",4]]],[11,"try_into","","",201,[[],["result",4]]],[11,"type_id","","",201,[[],["typeid",3]]],[11,"from","","",202,[[]]],[11,"into","","",202,[[]]],[11,"borrow","","",202,[[]]],[11,"borrow_mut","","",202,[[]]],[11,"try_from","","",202,[[],["result",4]]],[11,"try_into","","",202,[[],["result",4]]],[11,"type_id","","",202,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_string","","",30,[[],["string",3]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","","",203,[[]]],[11,"into","","",203,[[]]],[11,"borrow","","",203,[[]]],[11,"borrow_mut","","",203,[[]]],[11,"try_from","","",203,[[],["result",4]]],[11,"try_into","","",203,[[],["result",4]]],[11,"type_id","","",203,[[],["typeid",3]]],[11,"from","","",204,[[]]],[11,"into","","",204,[[]]],[11,"borrow","","",204,[[]]],[11,"borrow_mut","","",204,[[]]],[11,"try_from","","",204,[[],["result",4]]],[11,"try_into","","",204,[[],["result",4]]],[11,"type_id","","",204,[[],["typeid",3]]],[11,"from","","",205,[[]]],[11,"into","","",205,[[]]],[11,"borrow","","",205,[[]]],[11,"borrow_mut","","",205,[[]]],[11,"try_from","","",205,[[],["result",4]]],[11,"try_into","","",205,[[],["result",4]]],[11,"type_id","","",205,[[],["typeid",3]]],[11,"into_future","","",205,[[]]],[11,"try_poll","","",205,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",206,[[]]],[11,"into","","",206,[[]]],[11,"borrow","","",206,[[]]],[11,"borrow_mut","","",206,[[]]],[11,"try_from","","",206,[[],["result",4]]],[11,"try_into","","",206,[[],["result",4]]],[11,"type_id","","",206,[[],["typeid",3]]],[11,"into_future","","",206,[[]]],[11,"try_poll","","",206,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",207,[[]]],[11,"into","","",207,[[]]],[11,"borrow","","",207,[[]]],[11,"borrow_mut","","",207,[[]]],[11,"try_from","","",207,[[],["result",4]]],[11,"try_into","","",207,[[],["result",4]]],[11,"type_id","","",207,[[],["typeid",3]]],[11,"into_future","","",207,[[]]],[11,"try_poll","","",207,[[["pin",3],["context",3]],["poll",4]]],[11,"from","futures_util::lock","",208,[[]]],[11,"from","","",208,[[]]],[11,"into","","",208,[[]]],[11,"borrow","","",208,[[]]],[11,"borrow_mut","","",208,[[]]],[11,"try_from","","",208,[[],["result",4]]],[11,"try_into","","",208,[[],["result",4]]],[11,"type_id","","",208,[[],["typeid",3]]],[11,"from","","",209,[[]]],[11,"into","","",209,[[]]],[11,"borrow","","",209,[[]]],[11,"borrow_mut","","",209,[[]]],[11,"try_from","","",209,[[],["result",4]]],[11,"try_into","","",209,[[],["result",4]]],[11,"type_id","","",209,[[],["typeid",3]]],[11,"into_future","","",209,[[]]],[11,"from","","",210,[[]]],[11,"into","","",210,[[]]],[11,"borrow","","",210,[[]]],[11,"borrow_mut","","",210,[[]]],[11,"try_from","","",210,[[],["result",4]]],[11,"try_into","","",210,[[],["result",4]]],[11,"type_id","","",210,[[],["typeid",3]]],[11,"from","","",211,[[]]],[11,"into","","",211,[[]]],[11,"borrow","","",211,[[]]],[11,"borrow_mut","","",211,[[]]],[11,"try_from","","",211,[[],["result",4]]],[11,"try_into","","",211,[[],["result",4]]],[11,"type_id","","",211,[[],["typeid",3]]],[11,"description","futures_util::io","",176,[[]]],[11,"cause","","",176,[[],[["option",4],["error",8]]]],[11,"source","","",176,[[],[["option",4],["error",8]]]],[11,"deref","","",177,[[]]],[11,"deref","","",178,[[]]],[11,"from","","",176,[[["intoinnererror",3]],["error",3]]],[11,"from","","Converts an [<code>ErrorKind</code>] into an [<code>Error</code>].",176,[[["errorkind",4]],["error",3]]],[11,"from","","Converts a [<code>NulError</code>] into a [<code>io::Error</code>].",176,[[["nulerror",3]],["error",3]]],[11,"hash","","",28,[[]]],[11,"deref_mut","","",178,[[]]],[11,"partial_cmp","","",28,[[["errorkind",4]],[["option",4],["ordering",4]]]],[11,"cmp","","",28,[[["errorkind",4]],["ordering",4]]],[11,"fmt","","",177,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",29,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",28,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",178,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",176,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",176,[[["formatter",3]],[["result",4],["error",3]]]],[11,"eq","","",29,[[["seekfrom",4]]]],[11,"ne","","",29,[[["seekfrom",4]]]],[11,"eq","","",28,[[["errorkind",4]]]],[11,"clone","","",177,[[],["ioslice",3]]],[11,"clone","","",29,[[],["seekfrom",4]]],[11,"clone","","",28,[[],["errorkind",4]]],[11,"fmt","futures_util::task","",174,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",171,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",19,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",172,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",173,[[["formatter",3]],[["result",4],["error",3]]]],[11,"cmp","","",19,[[["poll",4]],["ordering",4]]],[11,"clone","","",172,[[],["waker",3]]],[11,"clone","","",19,[[],["poll",4]]],[11,"clone","","",174,[[],["rawwakervtable",3]]],[11,"from","","Convert to a <code>Ready</code> variant.",19,[[],["poll",4]]],[11,"hash","","",19,[[]]],[11,"drop","","",172,[[]]],[11,"into_result","","",19,[[],["result",4]]],[11,"from_error","","",19,[[],[["poll",4],["result",4]]]],[11,"from_ok","","",19,[[],[["poll",4],["result",4]]]],[11,"into_result","","",19,[[],["result",4]]],[11,"from_error","","",19,[[],[["poll",4],["option",4]]]],[11,"from_ok","","",19,[[],[["poll",4],["option",4]]]],[11,"eq","","",19,[[["poll",4]]]],[11,"ne","","",19,[[["poll",4]]]],[11,"eq","","",173,[[["rawwaker",3]]]],[11,"ne","","",173,[[["rawwaker",3]]]],[11,"eq","","",174,[[["rawwakervtable",3]]]],[11,"ne","","",174,[[["rawwakervtable",3]]]],[11,"partial_cmp","","",19,[[["poll",4]],[["option",4],["ordering",4]]]],[11,"lt","","",19,[[["poll",4]]]],[11,"le","","",19,[[["poll",4]]]],[11,"gt","","",19,[[["poll",4]]]],[11,"ge","","",19,[[["poll",4]]]],[11,"from","","",172,[[["arc",3]],["waker",3]]],[11,"from","","",173,[[["arc",3]],["rawwaker",3]]],[11,"fmt","","",170,[[["formatter",3]],[["result",4],["error",3]]]],[11,"default","","",170,[[],["atomicwaker",3]]],[11,"drop","","",36,[[]]],[11,"from","","",36,[[["box",3],["pin",3]],["localfutureobj",3]]],[11,"from","","",35,[[["box",3],["future",8],["global",3]],["futureobj",3]]],[11,"from","","",35,[[["box",3],["global",3]],["futureobj",3]]],[11,"from","","",36,[[["futureobj",3]],["localfutureobj",3]]],[11,"from","","",35,[[["pin",3],["box",3]],["futureobj",3]]],[11,"from","","",35,[[["pin",3],["box",3]],["futureobj",3]]],[11,"from","","",36,[[["box",3],["global",3]],["localfutureobj",3]]],[11,"from","","",36,[[["box",3],["future",8],["global",3]],["localfutureobj",3]]],[11,"from","","",36,[[["pin",3],["box",3]],["localfutureobj",3]]],[11,"deref","","",169,[[],["waker",3]]],[11,"fmt","","",175,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",36,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",169,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",35,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",175,[[["formatter",3]],[["result",4],["error",3]]]],[11,"poll","","",35,[[["context",3],["pin",3],["futureobj",3]],["poll",4]]],[11,"poll","","",36,[[["context",3],["pin",3],["localfutureobj",3]],["poll",4]]],[11,"drop","futures_util::future","",41,[[]]],[11,"drop","futures_util::stream","",12,[[]]],[11,"drop","futures_util::lock","",209,[[]]],[11,"drop","","",210,[[]]],[11,"drop","","",211,[[]]],[11,"as_mut","futures_util::io","",204,[[]]],[11,"as_ref","","",204,[[]]],[11,"from","futures_util::future","",67,[[["option",4]]]],[11,"from","futures_util::lock","",208,[[]]],[11,"extend","futures_util::stream","",152,[[]]],[11,"extend","","",12,[[]]],[11,"extend","","",157,[[["intoiterator",8]]]],[11,"next","futures_util::stream::futures_unordered","",153,[[],[["option",4],["pin",3]]]],[11,"size_hint","","",153,[[]]],[11,"next","","",154,[[],["option",4]]],[11,"size_hint","","",154,[[]]],[11,"next","","",155,[[],[["pin",3],["option",4]]]],[11,"size_hint","","",155,[[]]],[11,"next","","",156,[[],["option",4]]],[11,"size_hint","","",156,[[]]],[11,"clone","futures_util::future","",41,[[]]],[11,"clone","","",66,[[]]],[11,"clone","","",67,[[],["optionfuture",3]]],[11,"clone","","",69,[[],["ready",3]]],[11,"clone","","",8,[[],["either",4]]],[11,"clone","","",84,[[],["abortable",3]]],[11,"clone","","",86,[[],["aborthandle",3]]],[11,"clone","","",87,[[],["aborted",3]]],[11,"clone","futures_util::sink","",163,[[],["sinkmaperr",3]]],[11,"clone","futures_util::io","",179,[[],["allowstdio",3]]],[11,"clone","","",186,[[],["cursor",3]]],[11,"default","futures_util::stream","",152,[[],["futuresordered",3]]],[11,"default","","",12,[[],["futuresunordered",3]]],[11,"default","","",157,[[],["selectall",3]]],[11,"default","futures_util::io","",186,[[],["cursor",3]]],[11,"default","futures_util::lock","",208,[[],["mutex",3]]],[11,"cmp","futures_util::io","",179,[[["allowstdio",3]],["ordering",4]]],[11,"eq","futures_util::future","",87,[[["aborted",3]]]],[11,"eq","futures_util::io","",179,[[["allowstdio",3]]]],[11,"ne","","",179,[[["allowstdio",3]]]],[11,"partial_cmp","","",179,[[["allowstdio",3]],[["option",4],["ordering",4]]]],[11,"lt","","",179,[[["allowstdio",3]]]],[11,"le","","",179,[[["allowstdio",3]]]],[11,"gt","","",179,[[["allowstdio",3]]]],[11,"ge","","",179,[[["allowstdio",3]]]],[11,"deref","futures_util::lock","",210,[[]]],[11,"deref","","",211,[[]]],[11,"deref_mut","","",210,[[]]],[11,"deref_mut","","",211,[[]]],[11,"fmt","futures_util::future","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","","",45,[[["formatter",3]],["result",6]]],[11,"fmt","","",46,[[["formatter",3]],["result",6]]],[11,"fmt","","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",49,[[["formatter",3]],["result",6]]],[11,"fmt","","",50,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],["result",6]]],[11,"fmt","","",51,[[["formatter",3]],["result",6]]],[11,"fmt","","",52,[[["formatter",3]],["result",6]]],[11,"fmt","","",53,[[["formatter",3]],["result",6]]],[11,"fmt","","",54,[[["formatter",3]],["result",6]]],[11,"fmt","","",55,[[["formatter",3]],["result",6]]],[11,"fmt","","",56,[[["formatter",3]],["result",6]]],[11,"fmt","","",57,[[["formatter",3]],["result",6]]],[11,"fmt","","",58,[[["formatter",3]],["result",6]]],[11,"fmt","","",59,[[["formatter",3]],["result",6]]],[11,"fmt","","",60,[[["formatter",3]],["result",6]]],[11,"fmt","","",61,[[["formatter",3]],["result",6]]],[11,"fmt","","",62,[[["formatter",3]],["result",6]]],[11,"fmt","","",63,[[["formatter",3]],["result",6]]],[11,"fmt","","",64,[[["formatter",3]],["result",6]]],[11,"fmt","","",65,[[["formatter",3]],["result",6]]],[11,"fmt","","",66,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",67,[[["formatter",3]],["result",6]]],[11,"fmt","","",68,[[["formatter",3]],["result",6]]],[11,"fmt","","",69,[[["formatter",3]],["result",6]]],[11,"fmt","","",70,[[["formatter",3]],["result",6]]],[11,"fmt","","",71,[[["formatter",3]],["result",6]]],[11,"fmt","","",72,[[["formatter",3]],["result",6]]],[11,"fmt","","",73,[[["formatter",3]],["result",6]]],[11,"fmt","","",74,[[["formatter",3]],["result",6]]],[11,"fmt","","",75,[[["formatter",3]],["result",6]]],[11,"fmt","","",76,[[["formatter",3]],["result",6]]],[11,"fmt","","",77,[[["formatter",3]],["result",6]]],[11,"fmt","","",78,[[["formatter",3]],["result",6]]],[11,"fmt","","",79,[[["formatter",3]],["result",6]]],[11,"fmt","","",80,[[["formatter",3]],["result",6]]],[11,"fmt","","",81,[[["formatter",3]],["result",6]]],[11,"fmt","","",82,[[["formatter",3]],["result",6]]],[11,"fmt","","",83,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",84,[[["formatter",3]],["result",6]]],[11,"fmt","","",85,[[["formatter",3]],["result",6]]],[11,"fmt","","",86,[[["formatter",3]],["result",6]]],[11,"fmt","","",87,[[["formatter",3]],["result",6]]],[11,"fmt","futures_util::stream","",88,[[["formatter",3]],["result",6]]],[11,"fmt","","",89,[[["formatter",3]],["result",6]]],[11,"fmt","","",90,[[["formatter",3]],["result",6]]],[11,"fmt","","",91,[[["formatter",3]],["result",6]]],[11,"fmt","","",92,[[["formatter",3]],["result",6]]],[11,"fmt","","",93,[[["formatter",3]],["result",6]]],[11,"fmt","","",119,[[["formatter",3]],["result",6]]],[11,"fmt","","",94,[[["formatter",3]],["result",6]]],[11,"fmt","","",120,[[["formatter",3]],["result",6]]],[11,"fmt","","",95,[[["formatter",3]],["result",6]]],[11,"fmt","","",96,[[["formatter",3]],["result",6]]],[11,"fmt","","",97,[[["formatter",3]],["result",6]]],[11,"fmt","","",121,[[["formatter",3]],["result",6]]],[11,"fmt","","",98,[[["formatter",3]],["result",6]]],[11,"fmt","","",122,[[["formatter",3]],["result",6]]],[11,"fmt","","",99,[[["formatter",3]],["result",6]]],[11,"fmt","","",100,[[["formatter",3]],["result",6]]],[11,"fmt","","",101,[[["formatter",3]],["result",6]]],[11,"fmt","","",102,[[["formatter",3]],["result",6]]],[11,"fmt","","",103,[[["formatter",3]],["result",6]]],[11,"fmt","","",104,[[["formatter",3]],["result",6]]],[11,"fmt","","",105,[[["formatter",3]],["result",6]]],[11,"fmt","","",106,[[["formatter",3]],["result",6]]],[11,"fmt","","",107,[[["formatter",3]],["result",6]]],[11,"fmt","","",108,[[["formatter",3]],["result",6]]],[11,"fmt","","",109,[[["formatter",3]],["result",6]]],[11,"fmt","","",110,[[["formatter",3]],["result",6]]],[11,"fmt","","",111,[[["formatter",3]],["result",6]]],[11,"fmt","","",112,[[["formatter",3]],["result",6]]],[11,"fmt","","",113,[[["formatter",3]],["result",6]]],[11,"fmt","","",114,[[["formatter",3]],["result",6]]],[11,"fmt","","",115,[[["formatter",3]],["result",6]]],[11,"fmt","","",116,[[["formatter",3]],["result",6]]],[11,"fmt","","",117,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",118,[[["formatter",3]],["result",6]]],[11,"fmt","","",123,[[["formatter",3]],["result",6]]],[11,"fmt","","",139,[[["formatter",3]],["result",6]]],[11,"fmt","","",140,[[["formatter",3]],["result",6]]],[11,"fmt","","",141,[[["formatter",3]],["result",6]]],[11,"fmt","","",124,[[["formatter",3]],["result",6]]],[11,"fmt","","",142,[[["formatter",3]],["result",6]]],[11,"fmt","","",143,[[["formatter",3]],["result",6]]],[11,"fmt","","",125,[[["formatter",3]],["result",6]]],[11,"fmt","","",126,[[["formatter",3]],["result",6]]],[11,"fmt","","",127,[[["formatter",3]],["result",6]]],[11,"fmt","","",128,[[["formatter",3]],["result",6]]],[11,"fmt","","",129,[[["formatter",3]],["result",6]]],[11,"fmt","","",130,[[["formatter",3]],["result",6]]],[11,"fmt","","",131,[[["formatter",3]],["result",6]]],[11,"fmt","","",132,[[["formatter",3]],["result",6]]],[11,"fmt","","",133,[[["formatter",3]],["result",6]]],[11,"fmt","","",134,[[["formatter",3]],["result",6]]],[11,"fmt","","",135,[[["formatter",3]],["result",6]]],[11,"fmt","","",136,[[["formatter",3]],["result",6]]],[11,"fmt","","",137,[[["formatter",3]],["result",6]]],[11,"fmt","","",138,[[["formatter",3]],["result",6]]],[11,"fmt","","",144,[[["formatter",3]],["result",6]]],[11,"fmt","","",145,[[["formatter",3]],["result",6]]],[11,"fmt","","",146,[[["formatter",3]],["result",6]]],[11,"fmt","","",147,[[["formatter",3]],["result",6]]],[11,"fmt","","",148,[[["formatter",3]],["result",6]]],[11,"fmt","","",149,[[["formatter",3]],["result",6]]],[11,"fmt","","",150,[[["formatter",3]],["result",6]]],[11,"fmt","","",151,[[["formatter",3]],["result",6]]],[11,"fmt","","",152,[[["formatter",3]],["result",6]]],[11,"fmt","futures_util::stream::futures_unordered","",153,[[["formatter",3]],["result",6]]],[11,"fmt","","",154,[[["formatter",3]],["result",6]]],[11,"fmt","","",155,[[["formatter",3]],["result",6]]],[11,"fmt","","",156,[[["formatter",3]],["result",6]]],[11,"fmt","futures_util::stream","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",157,[[["formatter",3]],["result",6]]],[11,"fmt","futures_util::sink","",158,[[["formatter",3]],["result",6]]],[11,"fmt","","",159,[[["formatter",3]],["result",6]]],[11,"fmt","","",160,[[["formatter",3]],["fmtresult",6]]],[11,"fmt","","",161,[[["formatter",3]],["result",6]]],[11,"fmt","","",162,[[["formatter",3]],["result",6]]],[11,"fmt","","",163,[[["formatter",3]],["result",6]]],[11,"fmt","","",164,[[["formatter",3]],["result",6]]],[11,"fmt","","",165,[[["formatter",3]],["result",6]]],[11,"fmt","","",166,[[["formatter",3]],["result",6]]],[11,"fmt","","",167,[[["formatter",3]],["result",6]]],[11,"fmt","","",168,[[["formatter",3]],["result",6]]],[11,"fmt","futures_util::io","",179,[[["formatter",3]],["result",6]]],[11,"fmt","","",180,[[["formatter",3]],["result",6]]],[11,"fmt","","",181,[[["formatter",3]],["result",6]]],[11,"fmt","","",182,[[["formatter",3]],["result",6]]],[11,"fmt","","",183,[[["formatter",3]],["result",6]]],[11,"fmt","","",184,[[["formatter",3]],["result",6]]],[11,"fmt","","",185,[[["formatter",3]],["result",6]]],[11,"fmt","","",186,[[["formatter",3]],["result",6]]],[11,"fmt","","",187,[[["formatter",3]],["result",6]]],[11,"fmt","","",188,[[["formatter",3]],["result",6]]],[11,"fmt","","",189,[[["formatter",3]],["result",6]]],[11,"fmt","","",190,[[["formatter",3]],["result",6]]],[11,"fmt","","",191,[[["formatter",3]],["result",6]]],[11,"fmt","","",192,[[["formatter",3]],["result",6]]],[11,"fmt","","",193,[[["formatter",3]],["result",6]]],[11,"fmt","","",194,[[["formatter",3]],["result",6]]],[11,"fmt","","",195,[[["formatter",3]],["result",6]]],[11,"fmt","","",196,[[["formatter",3]],["result",6]]],[11,"fmt","","",197,[[["formatter",3]],["result",6]]],[11,"fmt","","",198,[[["formatter",3]],["result",6]]],[11,"fmt","","",199,[[["formatter",3]],["result",6]]],[11,"fmt","","",200,[[["formatter",3]],["result",6]]],[11,"fmt","","",201,[[["formatter",3]],["result",6]]],[11,"fmt","","",202,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",203,[[["formatter",3]],["result",6]]],[11,"fmt","","",204,[[["formatter",3]],["result",6]]],[11,"fmt","","",205,[[["formatter",3]],["result",6]]],[11,"fmt","","",206,[[["formatter",3]],["result",6]]],[11,"fmt","","",207,[[["formatter",3]],["result",6]]],[11,"fmt","futures_util::lock","",208,[[["formatter",3]],["result",6]]],[11,"fmt","","",209,[[["formatter",3]],["result",6]]],[11,"fmt","","",210,[[["formatter",3]],["result",6]]],[11,"fmt","","",211,[[["formatter",3]],["result",6]]],[11,"fmt","futures_util::future","",87,[[["formatter",3]],["result",6]]],[11,"fmt","futures_util::stream","",14,[[["formatter",3]],["result",6]]],[11,"fmt","futures_util::io","",30,[[["formatter",3]],["result",6]]],[11,"hash","","",179,[[]]],[11,"from_iter","futures_util::future","",74,[[["intoiterator",8]]]],[11,"from_iter","","",76,[[["intoiterator",8]]]],[11,"from_iter","","",81,[[["intoiterator",8]]]],[11,"from_iter","","",83,[[["intoiterator",8]]]],[11,"from_iter","futures_util::stream","",152,[[]]],[11,"from_iter","","",12,[[]]],[11,"from_iter","","",157,[[["intoiterator",8]]]],[11,"fill_buf","futures_util::io","",179,[[],["result",6]]],[11,"consume","","",179,[[]]],[11,"read","","",179,[[],["result",6]]],[11,"read_vectored","","",179,[[],["result",6]]],[11,"read_to_end","","",179,[[["vec",3]],["result",6]]],[11,"read_to_string","","",179,[[["string",3]],["result",6]]],[11,"read_exact","","",179,[[],["result",6]]],[11,"seek","","",179,[[["seekfrom",4]],["result",6]]],[11,"write","","",179,[[],["result",6]]],[11,"write_vectored","","",179,[[],["result",6]]],[11,"flush","","",179,[[],["result",6]]],[11,"write_all","","",179,[[],["result",6]]],[11,"write_fmt","","",179,[[["arguments",3]],["result",6]]],[11,"poll","futures_util::future","",37,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",42,[[["context",3],["pin",3]],["poll",4]]],[11,"poll","","",44,[[["context",3],["pin",3]],["poll",4]]],[11,"poll","","",46,[[["context",3],["pin",3]],["poll",4]]],[11,"poll","","",47,[[["context",3],["pin",3]],["poll",4]]],[11,"poll","","",48,[[["context",3],["pin",3]],["poll",4]]],[11,"poll","","",49,[[["context",3],["pin",3]],["poll",4]]],[11,"poll","","",50,[[["context",3],["pin",3]],["poll",4]]],[11,"poll","","",38,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",39,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",40,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",41,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",51,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",52,[[["context",3],["pin",3]],["poll",4]]],[11,"poll","","",55,[[["context",3],["pin",3]],["poll",4]]],[11,"poll","","",56,[[["context",3],["pin",3]],["poll",4]]],[11,"poll","","",57,[[["context",3],["pin",3]],["poll",4]]],[11,"poll","","",58,[[["context",3],["pin",3]],["poll",4]]],[11,"poll","","",59,[[["context",3],["pin",3]],["poll",4]]],[11,"poll","","",60,[[["context",3],["pin",3]],["poll",4]]],[11,"poll","","",61,[[["context",3],["pin",3]],["poll",4]]],[11,"poll","","",62,[[["context",3],["pin",3]],["poll",4]]],[11,"poll","","",63,[[["context",3],["pin",3]],["poll",4]]],[11,"poll","","",64,[[["context",3],["pin",3]],["poll",4]]],[11,"poll","","",65,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",66,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",6,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",7,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",67,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",68,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",69,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",70,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",71,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",72,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",73,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",74,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",75,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",76,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",77,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",78,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",79,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",80,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",81,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",82,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",83,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",8,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",84,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","futures_util::stream","",89,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",90,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",94,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",120,[[["context",3],["pin",3]],["poll",4]]],[11,"poll","","",95,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",97,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",99,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",100,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",102,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",115,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",126,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",127,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",131,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",132,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",133,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",137,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","futures_util::sink","",158,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",161,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",164,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",165,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","futures_util::io","",183,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",184,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",185,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",188,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",191,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",192,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",193,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",194,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",195,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",196,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",197,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",199,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",205,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",206,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",207,[[["pin",3],["context",3]],[["result",6],["poll",4]]]],[11,"poll","futures_util::lock","",209,[[["pin",3],["context",3]],["poll",4]]],[11,"is_terminated","futures_util::future","",37,[[]]],[11,"is_terminated","","",42,[[]]],[11,"is_terminated","","",44,[[]]],[11,"is_terminated","","",46,[[]]],[11,"is_terminated","","",47,[[]]],[11,"is_terminated","","",48,[[]]],[11,"is_terminated","","",49,[[]]],[11,"is_terminated","","",50,[[]]],[11,"is_terminated","","",41,[[]]],[11,"is_terminated","","",51,[[]]],[11,"is_terminated","","",52,[[]]],[11,"is_terminated","","",55,[[]]],[11,"is_terminated","","",56,[[]]],[11,"is_terminated","","",57,[[]]],[11,"is_terminated","","",58,[[]]],[11,"is_terminated","","",59,[[]]],[11,"is_terminated","","",60,[[]]],[11,"is_terminated","","",61,[[]]],[11,"is_terminated","","",62,[[]]],[11,"is_terminated","","",63,[[]]],[11,"is_terminated","","",64,[[]]],[11,"is_terminated","","",65,[[]]],[11,"is_terminated","","",66,[[]]],[11,"is_terminated","","",6,[[]]],[11,"is_terminated","","",7,[[]]],[11,"is_terminated","","",67,[[]]],[11,"is_terminated","","",69,[[]]],[11,"is_terminated","","",70,[[]]],[11,"is_terminated","","",71,[[]]],[11,"is_terminated","","",72,[[]]],[11,"is_terminated","","",73,[[]]],[11,"is_terminated","","",75,[[]]],[11,"is_terminated","","",8,[[]]],[11,"is_terminated","futures_util::stream","",89,[[]]],[11,"is_terminated","","",90,[[]]],[11,"is_terminated","","",94,[[]]],[11,"is_terminated","","",120,[[]]],[11,"is_terminated","","",95,[[]]],[11,"is_terminated","","",97,[[]]],[11,"is_terminated","","",99,[[]]],[11,"is_terminated","","",100,[[]]],[11,"is_terminated","","",102,[[]]],[11,"is_terminated","","",115,[[]]],[11,"is_terminated","","",126,[[]]],[11,"is_terminated","","",131,[[]]],[11,"is_terminated","","",133,[[]]],[11,"is_terminated","","",137,[[]]],[11,"is_terminated","futures_util::lock","",209,[[]]],[11,"poll_next","futures_util::future","",43,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",43,[[]]],[11,"poll_next","","",45,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",45,[[]]],[11,"poll_next","","",53,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",53,[[]]],[11,"poll_next","","",54,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",54,[[]]],[11,"poll_next","","",8,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"poll_next","futures_util::stream","",88,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",88,[[]]],[11,"poll_next","","",91,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",91,[[]]],[11,"poll_next","","",92,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",92,[[]]],[11,"poll_next","","",93,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",93,[[]]],[11,"poll_next","","",119,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",119,[[]]],[11,"poll_next","","",96,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",96,[[]]],[11,"poll_next","","",121,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",121,[[]]],[11,"poll_next","","",98,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",98,[[]]],[11,"poll_next","","",122,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",122,[[]]],[11,"poll_next","","",101,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",101,[[]]],[11,"poll_next","","",103,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",103,[[]]],[11,"poll_next","","",104,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",104,[[]]],[11,"poll_next","","",105,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",105,[[]]],[11,"poll_next","","",106,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",106,[[]]],[11,"poll_next","","",107,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",107,[[]]],[11,"poll_next","","",108,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",108,[[]]],[11,"poll_next","","",109,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",109,[[]]],[11,"poll_next","","",110,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",110,[[]]],[11,"poll_next","","",111,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",111,[[]]],[11,"poll_next","","",112,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",112,[[]]],[11,"poll_next","","",113,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",113,[[]]],[11,"poll_next","","",114,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",114,[[]]],[11,"poll_next","","",116,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"poll_next","","",118,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",118,[[]]],[11,"poll_next","","",123,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",123,[[]]],[11,"poll_next","","",139,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",139,[[]]],[11,"poll_next","","",140,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",140,[[]]],[11,"poll_next","","",141,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",141,[[]]],[11,"poll_next","","",124,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",124,[[]]],[11,"poll_next","","",142,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",142,[[]]],[11,"poll_next","","",143,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",143,[[]]],[11,"poll_next","","",125,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",125,[[]]],[11,"poll_next","","",128,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",128,[[]]],[11,"poll_next","","",129,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",129,[[]]],[11,"poll_next","","",130,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"poll_next","","",134,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"poll_next","","",135,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",135,[[]]],[11,"poll_next","","",136,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"poll_next","","",144,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",144,[[]]],[11,"poll_next","","",145,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",145,[[]]],[11,"poll_next","","",146,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",146,[[]]],[11,"poll_next","","",147,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",147,[[]]],[11,"poll_next","","",148,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",148,[[]]],[11,"poll_next","","",149,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"poll_next","","",150,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"poll_next","","",151,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"poll_next","","",152,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",152,[[]]],[11,"poll_next","","",12,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",12,[[]]],[11,"poll_next","","",157,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"poll_next","futures_util::sink","",162,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",162,[[]]],[11,"poll_next","","",163,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",163,[[]]],[11,"poll_next","","",166,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",166,[[]]],[11,"poll_next","","",167,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",167,[[]]],[11,"poll_next","","",168,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",168,[[]]],[11,"poll_next","futures_util::io","",190,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"is_terminated","futures_util::future","",43,[[]]],[11,"is_terminated","","",45,[[]]],[11,"is_terminated","","",53,[[]]],[11,"is_terminated","","",54,[[]]],[11,"is_terminated","","",8,[[]]],[11,"is_terminated","futures_util::stream","",88,[[]]],[11,"is_terminated","","",91,[[]]],[11,"is_terminated","","",92,[[]]],[11,"is_terminated","","",93,[[]]],[11,"is_terminated","","",119,[[]]],[11,"is_terminated","","",96,[[]]],[11,"is_terminated","","",121,[[]]],[11,"is_terminated","","",98,[[]]],[11,"is_terminated","","",122,[[]]],[11,"is_terminated","","",101,[[]]],[11,"is_terminated","","",103,[[]]],[11,"is_terminated","","",104,[[]]],[11,"is_terminated","","",105,[[]]],[11,"is_terminated","","",106,[[]]],[11,"is_terminated","","",107,[[]]],[11,"is_terminated","","",108,[[]]],[11,"is_terminated","","",109,[[]]],[11,"is_terminated","","",110,[[]]],[11,"is_terminated","","",111,[[]]],[11,"is_terminated","","",112,[[]]],[11,"is_terminated","","",113,[[]]],[11,"is_terminated","","",118,[[]]],[11,"is_terminated","","",123,[[]]],[11,"is_terminated","","",139,[[]]],[11,"is_terminated","","",140,[[]]],[11,"is_terminated","","",141,[[]]],[11,"is_terminated","","",124,[[]]],[11,"is_terminated","","",142,[[]]],[11,"is_terminated","","",143,[[]]],[11,"is_terminated","","",125,[[]]],[11,"is_terminated","","",128,[[]]],[11,"is_terminated","","",129,[[]]],[11,"is_terminated","","",130,[[]]],[11,"is_terminated","","",135,[[]]],[11,"is_terminated","","",145,[[]]],[11,"is_terminated","","",146,[[]]],[11,"is_terminated","","",147,[[]]],[11,"is_terminated","","",148,[[]]],[11,"is_terminated","","",150,[[]]],[11,"is_terminated","","",151,[[]]],[11,"is_terminated","","",12,[[]]],[11,"is_terminated","","",157,[[]]],[11,"is_terminated","futures_util::sink","",162,[[]]],[11,"is_terminated","","",163,[[]]],[11,"is_terminated","","",167,[[]]],[11,"is_terminated","","",168,[[]]],[11,"spawn_obj","futures_util::stream","",12,[[["futureobj",3]],[["spawnerror",3],["result",4]]]],[11,"spawn_local_obj","","",12,[[["localfutureobj",3]],[["spawnerror",3],["result",4]]]],[11,"poll_ready","futures_util::future","",43,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"start_send","","",43,[[["pin",3]],["result",4]]],[11,"poll_flush","","",43,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",43,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_ready","","",53,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"start_send","","",53,[[["pin",3]],["result",4]]],[11,"poll_flush","","",53,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",53,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_ready","","",54,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"start_send","","",54,[[["pin",3]],["result",4]]],[11,"poll_flush","","",54,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",54,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_ready","","",8,[[["pin",3],["context",3]],[["result",4],["poll",4]]]],[11,"start_send","","",8,[[["pin",3]],["result",4]]],[11,"poll_flush","","",8,[[["pin",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",8,[[["pin",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_ready","futures_util::stream","",91,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"start_send","","",91,[[["pin",3]],["result",4]]],[11,"poll_flush","","",91,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",91,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_ready","","",92,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"start_send","","",92,[[["pin",3]],["result",4]]],[11,"poll_flush","","",92,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",92,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_ready","","",93,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"start_send","","",93,[[["pin",3]],["result",4]]],[11,"poll_flush","","",93,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",93,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_ready","","",119,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"start_send","","",119,[[["pin",3]],["result",4]]],[11,"poll_flush","","",119,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",119,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_ready","","",96,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"start_send","","",96,[[["pin",3]],["result",4]]],[11,"poll_flush","","",96,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",96,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_ready","","",121,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"start_send","","",121,[[["pin",3]],["result",4]]],[11,"poll_flush","","",121,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",121,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_ready","","",98,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"start_send","","",98,[[["pin",3]],["result",4]]],[11,"poll_flush","","",98,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",98,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_ready","","",122,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"start_send","","",122,[[["pin",3]],["result",4]]],[11,"poll_flush","","",122,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",122,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_ready","","",101,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"start_send","","",101,[[["pin",3]],["result",4]]],[11,"poll_flush","","",101,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",101,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_ready","","",103,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"start_send","","",103,[[["pin",3]],["result",4]]],[11,"poll_flush","","",103,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",103,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_ready","","",104,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"start_send","","",104,[[["pin",3]],["result",4]]],[11,"poll_flush","","",104,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",104,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_ready","","",105,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"start_send","","",105,[[["pin",3]],["result",4]]],[11,"poll_flush","","",105,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",105,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_ready","","",106,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"start_send","","",106,[[["pin",3]],["result",4]]],[11,"poll_flush","","",106,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",106,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_ready","","",107,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"start_send","","",107,[[["pin",3]],["result",4]]],[11,"poll_flush","","",107,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",107,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_ready","","",108,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"start_send","","",108,[[["pin",3]],["result",4]]],[11,"poll_flush","","",108,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",108,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_ready","","",110,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"start_send","","",110,[[["pin",3]],["result",4]]],[11,"poll_flush","","",110,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",110,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_ready","","",111,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"start_send","","",111,[[["pin",3]],["result",4]]],[11,"poll_flush","","",111,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",111,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_ready","","",112,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"start_send","","",112,[[["pin",3]],["result",4]]],[11,"poll_flush","","",112,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",112,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_ready","","",113,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"start_send","","",113,[[["pin",3]],["result",4]]],[11,"poll_flush","","",113,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",113,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_ready","","",114,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"start_send","","",114,[[["pin",3]],["result",4]]],[11,"poll_flush","","",114,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",114,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_ready","","",117,[[["pin",3],["context",3]],[["result",4],["poll",4]]]],[11,"start_send","","",117,[[["pin",3]],["result",4]]],[11,"poll_flush","","",117,[[["pin",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",117,[[["pin",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_ready","","",123,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"start_send","","",123,[[["pin",3]],["result",4]]],[11,"poll_flush","","",123,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",123,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_ready","","",139,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"start_send","","",139,[[["pin",3]],["result",4]]],[11,"poll_flush","","",139,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",139,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_ready","","",140,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"start_send","","",140,[[["pin",3]],["result",4]]],[11,"poll_flush","","",140,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",140,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_ready","","",141,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"start_send","","",141,[[["pin",3]],["result",4]]],[11,"poll_flush","","",141,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",141,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_ready","","",124,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"start_send","","",124,[[["pin",3]],["result",4]]],[11,"poll_flush","","",124,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",124,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_ready","","",142,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"start_send","","",142,[[["pin",3]],["result",4]]],[11,"poll_flush","","",142,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",142,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_ready","","",143,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"start_send","","",143,[[["pin",3]],["result",4]]],[11,"poll_flush","","",143,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",143,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_ready","","",125,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"start_send","","",125,[[["pin",3]],["result",4]]],[11,"poll_flush","","",125,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",125,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_ready","","",128,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"start_send","","",128,[[["pin",3]],["result",4]]],[11,"poll_flush","","",128,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",128,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_ready","","",129,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"start_send","","",129,[[["pin",3]],["result",4]]],[11,"poll_flush","","",129,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",129,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_ready","","",130,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"start_send","","",130,[[["pin",3]],["result",4]]],[11,"poll_flush","","",130,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",130,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_ready","","",135,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"start_send","","",135,[[["pin",3]],["result",4]]],[11,"poll_flush","","",135,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",135,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_ready","","",136,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"start_send","","",136,[[["pin",3]],["result",4]]],[11,"poll_flush","","",136,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",136,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_ready","futures_util::sink","",159,[[["pin",3],["context",3]],[["result",4],["poll",4]]]],[11,"start_send","","",159,[[["pin",3]],["result",4]]],[11,"poll_flush","","",159,[[["pin",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",159,[[["pin",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_ready","","",160,[[["pin",3],["context",3]],[["result",4],["poll",4]]]],[11,"start_send","","",160,[[["pin",3]],["result",4]]],[11,"poll_flush","","",160,[[["pin",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",160,[[["pin",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_ready","","",162,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"start_send","","",162,[[["pin",3]],["result",4]]],[11,"poll_flush","","",162,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",162,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_ready","","",163,[[["pin",3],["context",3]],[["result",4],["poll",4]]]],[11,"start_send","","",163,[[["pin",3]],["result",4]]],[11,"poll_flush","","",163,[[["pin",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",163,[[["pin",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_ready","","",166,[[["pin",3],["context",3]],[["result",4],["poll",4]]]],[11,"start_send","","",166,[[["pin",3]],["result",4]]],[11,"poll_flush","","",166,[[["pin",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",166,[[["pin",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_ready","","",167,[[["pin",3],["context",3]],[["result",4],["poll",4]]]],[11,"start_send","","",167,[[["pin",3]],["result",4]]],[11,"poll_flush","","",167,[[["pin",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",167,[[["pin",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_ready","","",168,[[["pin",3],["context",3]],[["result",4],["poll",4]]]],[11,"start_send","","",168,[[["pin",3]],["result",4]]],[11,"poll_flush","","",168,[[["pin",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",168,[[["pin",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_ready","futures_util::io","",189,[[["pin",3],["context",3]],[["result",4],["poll",4]]]],[11,"start_send","","",189,[[["pin",3]],["result",4]]],[11,"poll_flush","","",189,[[["pin",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",189,[[["pin",3],["context",3]],[["result",4],["poll",4]]]],[11,"drop","futures_util::future","",37,[[["pin",3]]]],[11,"drop","","",42,[[["pin",3]]]],[11,"drop","","",43,[[["pin",3]]]],[11,"drop","","",44,[[["pin",3]]]],[11,"drop","","",45,[[["pin",3]]]],[11,"drop","","",46,[[["pin",3]]]],[11,"drop","","",47,[[["pin",3]]]],[11,"drop","","",48,[[["pin",3]]]],[11,"drop","","",49,[[["pin",3]]]],[11,"drop","","",50,[[["pin",3]]]],[11,"drop","","",38,[[["pin",3]]]],[11,"drop","","",40,[[["pin",3]]]],[11,"drop","","",51,[[["pin",3]]]],[11,"drop","","",52,[[["pin",3]]]],[11,"drop","","",53,[[["pin",3]]]],[11,"drop","","",54,[[["pin",3]]]],[11,"drop","","",55,[[["pin",3]]]],[11,"drop","","",56,[[["pin",3]]]],[11,"drop","","",57,[[["pin",3]]]],[11,"drop","","",58,[[["pin",3]]]],[11,"drop","","",59,[[["pin",3]]]],[11,"drop","","",60,[[["pin",3]]]],[11,"drop","","",61,[[["pin",3]]]],[11,"drop","","",62,[[["pin",3]]]],[11,"drop","","",63,[[["pin",3]]]],[11,"drop","","",64,[[["pin",3]]]],[11,"drop","","",6,[[["pin",3]]]],[11,"drop","","",7,[[["pin",3]]]],[11,"drop","","",67,[[["pin",3]]]],[11,"drop","","",70,[[["pin",3]]]],[11,"drop","","",71,[[["pin",3]]]],[11,"drop","","",72,[[["pin",3]]]],[11,"drop","","",73,[[["pin",3]]]],[11,"drop","","",77,[[["pin",3]]]],[11,"drop","","",78,[[["pin",3]]]],[11,"drop","","",79,[[["pin",3]]]],[11,"drop","","",80,[[["pin",3]]]],[11,"drop","","",8,[[["pin",3]]]],[11,"drop","","",84,[[["pin",3]]]],[11,"drop","futures_util::stream","",88,[[["pin",3]]]],[11,"drop","","",89,[[["pin",3]]]],[11,"drop","","",90,[[["pin",3]]]],[11,"drop","","",91,[[["pin",3]]]],[11,"drop","","",92,[[["pin",3]]]],[11,"drop","","",93,[[["pin",3]]]],[11,"drop","","",119,[[["pin",3]]]],[11,"drop","","",94,[[["pin",3]]]],[11,"drop","","",120,[[["pin",3]]]],[11,"drop","","",95,[[["pin",3]]]],[11,"drop","","",96,[[["pin",3]]]],[11,"drop","","",121,[[["pin",3]]]],[11,"drop","","",98,[[["pin",3]]]],[11,"drop","","",122,[[["pin",3]]]],[11,"drop","","",101,[[["pin",3]]]],[11,"drop","","",102,[[["pin",3]]]],[11,"drop","","",103,[[["pin",3]]]],[11,"drop","","",104,[[["pin",3]]]],[11,"drop","","",105,[[["pin",3]]]],[11,"drop","","",106,[[["pin",3]]]],[11,"drop","","",107,[[["pin",3]]]],[11,"drop","","",108,[[["pin",3]]]],[11,"drop","","",109,[[["pin",3]]]],[11,"drop","","",110,[[["pin",3]]]],[11,"drop","","",111,[[["pin",3]]]],[11,"drop","","",112,[[["pin",3]]]],[11,"drop","","",113,[[["pin",3]]]],[11,"drop","","",114,[[["pin",3]]]],[11,"drop","","",115,[[["pin",3]]]],[11,"drop","","",118,[[["pin",3]]]],[11,"drop","","",123,[[["pin",3]]]],[11,"drop","","",139,[[["pin",3]]]],[11,"drop","","",140,[[["pin",3]]]],[11,"drop","","",141,[[["pin",3]]]],[11,"drop","","",124,[[["pin",3]]]],[11,"drop","","",142,[[["pin",3]]]],[11,"drop","","",143,[[["pin",3]]]],[11,"drop","","",125,[[["pin",3]]]],[11,"drop","","",127,[[["pin",3]]]],[11,"drop","","",128,[[["pin",3]]]],[11,"drop","","",129,[[["pin",3]]]],[11,"drop","","",130,[[["pin",3]]]],[11,"drop","","",131,[[["pin",3]]]],[11,"drop","","",132,[[["pin",3]]]],[11,"drop","","",133,[[["pin",3]]]],[11,"drop","","",134,[[["pin",3]]]],[11,"drop","","",135,[[["pin",3]]]],[11,"drop","","",136,[[["pin",3]]]],[11,"drop","","",137,[[["pin",3]]]],[11,"drop","","",147,[[["pin",3]]]],[11,"drop","","",150,[[["pin",3]]]],[11,"drop","","",151,[[["pin",3]]]],[11,"drop","futures_util::sink","",160,[[["pin",3]]]],[11,"drop","","",162,[[["pin",3]]]],[11,"drop","","",163,[[["pin",3]]]],[11,"drop","","",166,[[["pin",3]]]],[11,"drop","","",167,[[["pin",3]]]],[11,"drop","","",168,[[["pin",3]]]],[11,"drop","futures_util::io","",180,[[["pin",3]]]],[11,"drop","","",181,[[["pin",3]]]],[11,"drop","","",182,[[["pin",3]]]],[11,"drop","","",184,[[["pin",3]]]],[11,"drop","","",185,[[["pin",3]]]],[11,"drop","","",189,[[["pin",3]]]],[11,"drop","","",190,[[["pin",3]]]],[11,"drop","","",203,[[["pin",3]]]],[11,"poll_read","futures_util::future","",8,[[["pin",3],["context",3]],[["result",6],["poll",4]]]],[11,"poll_read_vectored","","",8,[[["pin",3],["context",3]],[["result",6],["poll",4]]]],[11,"poll_read","futures_util::stream","",138,[[["pin",3],["context",3]],[["result",6],["poll",4]]]],[11,"poll_read","futures_util::io","",179,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_read_vectored","","",179,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_read","","",180,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_read_vectored","","",180,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_read","","",181,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"poll_read_vectored","","",181,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"poll_read","","",182,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_read_vectored","","",182,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_read","","",186,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_read_vectored","","",186,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_read","","",187,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_read","","",198,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_read_vectored","","",198,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_read","","",201,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_read_vectored","","",201,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_read","","",203,[[["pin",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_write","futures_util::future","",8,[[["pin",3],["context",3]],[["result",6],["poll",4]]]],[11,"poll_write_vectored","","",8,[[["pin",3],["context",3]],[["result",6],["poll",4]]]],[11,"poll_flush","","",8,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_close","","",8,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_write","futures_util::stream","",138,[[["pin",3],["context",3]],[["result",6],["poll",4]]]],[11,"poll_flush","","",138,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_close","","",138,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_write","futures_util::io","",179,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_write_vectored","","",179,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_flush","","",179,[[["pin",3],["context",3]],[["result",6],["poll",4]]]],[11,"poll_close","","",179,[[["pin",3],["context",3]],[["result",6],["poll",4]]]],[11,"poll_write","","",180,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"poll_write_vectored","","",180,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"poll_flush","","",180,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"poll_close","","",180,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"poll_write","","",181,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_write_vectored","","",181,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_flush","","",181,[[["pin",3],["context",3]],[["result",6],["poll",4]]]],[11,"poll_close","","",181,[[["pin",3],["context",3]],[["result",6],["poll",4]]]],[11,"poll_write","","",186,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_write_vectored","","",186,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_flush","","",186,[[["pin",3],["context",3]],[["result",6],["poll",4]]]],[11,"poll_close","","",186,[[["pin",3],["context",3]],[["result",6],["poll",4]]]],[11,"poll_write","","",186,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_write_vectored","","",186,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_flush","","",186,[[["pin",3],["context",3]],[["result",6],["poll",4]]]],[11,"poll_close","","",186,[[["pin",3],["context",3]],[["result",6],["poll",4]]]],[11,"poll_write","","",186,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_write_vectored","","",186,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_flush","","",186,[[["pin",3],["context",3]],[["result",6],["poll",4]]]],[11,"poll_close","","",186,[[["pin",3],["context",3]],[["result",6],["poll",4]]]],[11,"poll_write","","",186,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_write_vectored","","",186,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_flush","","",186,[[["pin",3],["context",3]],[["result",6],["poll",4]]]],[11,"poll_close","","",186,[[["pin",3],["context",3]],[["result",6],["poll",4]]]],[11,"poll_write","","",200,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_write_vectored","","",200,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_flush","","",200,[[["pin",3],["context",3]],[["result",6],["poll",4]]]],[11,"poll_close","","",200,[[["pin",3],["context",3]],[["result",6],["poll",4]]]],[11,"poll_write","","",202,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_write_vectored","","",202,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_flush","","",202,[[["pin",3],["context",3]],[["result",6],["poll",4]]]],[11,"poll_close","","",202,[[["pin",3],["context",3]],[["result",6],["poll",4]]]],[11,"poll_seek","futures_util::future","",8,[[["pin",3],["context",3],["seekfrom",4]],[["result",6],["poll",4]]]],[11,"poll_seek","futures_util::io","",179,[[["pin",3],["context",3],["seekfrom",4]],[["result",6],["poll",4]]]],[11,"poll_seek","","Seek to an offset, in bytes, in the underlying reader.",180,[[["pin",3],["context",3],["seekfrom",4]],[["result",6],["poll",4]]]],[11,"poll_seek","","Seek to the offset, in bytes, in the underlying writer.",181,[[["pin",3],["context",3],["seekfrom",4]],[["result",6],["poll",4]]]],[11,"poll_seek","","",186,[[["pin",3],["context",3],["seekfrom",4]],[["result",6],["poll",4]]]],[11,"poll_fill_buf","futures_util::future","",8,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"consume","","",8,[[["pin",3]]]],[11,"poll_fill_buf","futures_util::stream","",138,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"consume","","",138,[[["pin",3]]]],[11,"poll_fill_buf","futures_util::io","",179,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"consume","","",179,[[["pin",3]]]],[11,"poll_fill_buf","","",180,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"consume","","",180,[[["pin",3]]]],[11,"poll_fill_buf","","",181,[[["context",3],["pin",3]],[["poll",4],["result",6]]]],[11,"consume","","",181,[[["pin",3]]]],[11,"poll_fill_buf","","",182,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"consume","","",182,[[["pin",3]]]],[11,"poll_fill_buf","","",186,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"consume","","",186,[[["pin",3]]]],[11,"poll_fill_buf","","",187,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"consume","","",187,[[["pin",3]]]],[11,"poll_fill_buf","","",203,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"consume","","",203,[[["pin",3]]]],[11,"new","futures_util::task","Create a <code>FutureObj</code> from a custom trait object …",35,[[],["futureobj",3]]],[11,"new","","Create a <code>LocalFutureObj</code> from a custom trait object …",36,[[],["localfutureobj",3]]],[11,"into_future_obj","","Converts the <code>LocalFutureObj</code> into a <code>FutureObj</code>.",36,[[],["futureobj",3]]],[11,"terminated","futures_util::future","Creates a new <code>Fuse</code>-wrapped future which is already …",37,[[],["fuse",3]]],[11,"forget","","Drops this handle <em>without</em> canceling the underlying future.",39,[[]]],[11,"peek","","Returns [<code>Some</code>] containing a reference to this [<code>Shared</code>]\'s …",41,[[],["option",4]]],[11,"map","","Map this future\'s output to a different type, returning a …",4,[[],["map",3]]],[11,"map_into","","Map this future\'s output to a different type, returning a …",4,[[],["mapinto",3]]],[11,"then","","Chain on a computation for when a future finished, …",4,[[],["then",3]]],[11,"left_future","","Wrap this future in an <code>Either</code> future, making it the …",4,[[],["either",4]]],[11,"right_future","","Wrap this future in an <code>Either</code> future, making it the …",4,[[],["either",4]]],[11,"into_stream","","Convert this future into a single element stream.",4,[[],["intostream",3]]],[11,"flatten","","Flatten the execution of this future when the output of …",4,[[],["flatten",3]]],[11,"flatten_stream","","Flatten the execution of this future when the successful …",4,[[],["flattenstream",3]]],[11,"fuse","","Fuse a future such that <code>poll</code> will never again be called …",4,[[],["fuse",3]]],[11,"inspect","","Do something with the output of a future before passing …",4,[[],["inspect",3]]],[11,"catch_unwind","","Catches unwinding panics while polling the future.",4,[[],["catchunwind",3]]],[11,"shared","","Create a cloneable handle to this future where all …",4,[[],["shared",3]]],[11,"remote_handle","","Turn this future into a future that yields <code>()</code> on …",4,[[]]],[11,"boxed","","Wrap the future in a Box, pinning it.",4,[[],["boxfuture",6]]],[11,"boxed_local","","Wrap the future in a Box, pinning it.",4,[[],["localboxfuture",6]]],[11,"unit_error","","Turns a <code>Future<Output = T></code> into a …",4,[[],["uniterror",3]]],[11,"never_error","","Turns a <code>Future<Output = T></code> into a …",4,[[],["nevererror",3]]],[11,"poll_unpin","","A convenience for calling <code>Future::poll</code> on <code>Unpin</code> future …",4,[[["context",3]],["poll",4]]],[11,"now_or_never","","Evaluates and consumes the future, returning the …",4,[[],["option",4]]],[11,"flatten_sink","","Flattens the execution of this future when the successful …",5,[[],["flattensink",3]]],[11,"map_ok","","Maps this future\'s success value to a different value.",5,[[],["mapok",3]]],[11,"map_ok_or_else","","Maps this future\'s success value to a different value, …",5,[[],["mapokorelse",3]]],[11,"map_err","","Maps this future\'s error value to a different value.",5,[[],["maperr",3]]],[11,"err_into","","Maps this future\'s <code>Error</code> to a new error type using the …",5,[[],["errinto",3]]],[11,"ok_into","","Maps this future\'s <code>Ok</code> to a new type using the <code>Into</code> trait.",5,[[],["okinto",3]]],[11,"and_then","","Executes another future after this one resolves …",5,[[],["andthen",3]]],[11,"or_else","","Executes another future if this one resolves to an error. …",5,[[],["orelse",3]]],[11,"inspect_ok","","Do something with the success value of a future before …",5,[[],["inspectok",3]]],[11,"inspect_err","","Do something with the error value of a future before …",5,[[],["inspecterr",3]]],[11,"try_flatten","","Flatten the execution of this future when the successful …",5,[[],["tryflatten",3]]],[11,"try_flatten_stream","","Flatten the execution of this future when the successful …",5,[[],["tryflattenstream",3]]],[11,"unwrap_or_else","","Unwraps this future\'s ouput, producing a future with this …",5,[[],["unwraporelse",3]]],[11,"into_future","","Wraps a [<code>TryFuture</code>] into a type that implements <code>Future</code>.",5,[[],["intofuture",3]]],[11,"try_poll_unpin","","A convenience method for calling [<code>TryFuture::try_poll</code>] on …",5,[[["context",3]],[["result",4],["poll",4]]]],[11,"output_mut","","Returns an [<code>Option</code>] containing a mutable reference to the …",6,[[["pin",3]],["option",4]]],[11,"take_output","","Attempt to take the output of a <code>MaybeDone</code> without driving …",6,[[["pin",3]],["option",4]]],[11,"output_mut","","Returns an [<code>Option</code>] containing a mutable reference to the …",7,[[["pin",3]],["option",4]]],[11,"take_output","","Attempt to take the output of a <code>TryMaybeDone</code> without …",7,[[["pin",3]],["option",4]]],[11,"into_inner","","Unwraps the value from this immediately ready future.",69,[[]]],[11,"factor_first","","Factor out a homogeneous type from an either of pairs.",8,[[]]],[11,"factor_second","","Factor out a homogeneous type from an either of pairs.",8,[[]]],[11,"into_inner","","Extract the value of an either over two equivalent types.",8,[[]]],[11,"new","","Creates a new <code>Abortable</code> future using an existing …",84,[[["abortregistration",3]]]],[11,"new_pair","","Creates an (<code>AbortHandle</code>, <code>AbortRegistration</code>) pair which …",86,[[]]],[11,"abort","","Abort the <code>Abortable</code> future associated with this handle.",86,[[]]],[11,"get_ref","futures_util::stream","Acquires a reference to the underlying sink or stream …",91,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",91,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",91,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",91,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",92,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",92,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",92,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",92,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",93,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",93,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",93,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",93,[[]]],[11,"is_done","","Returns whether the underlying stream has finished or not.",96,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",96,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",96,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",96,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",96,[[]]],[11,"get_ref","","Acquires a reference to the underlying stream that this …",97,[[],["option",4]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream …",97,[[],["option",4]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",97,[[["pin",3]],[["option",4],["pin",3]]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",97,[[],["option",4]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",98,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",98,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",98,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",98,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",101,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",101,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",101,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",101,[[]]],[11,"peek","","Produces a <code>Peek</code> future which retrieves a reference to the …",101,[[["pin",3]],["peek",3]]],[11,"poll_peek","","Peek retrieves a reference to the next item in the stream.",101,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",103,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",103,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",103,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",103,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",104,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",104,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",104,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",104,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",105,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",105,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",105,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",105,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",106,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",106,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",106,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",106,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",107,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",107,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",107,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",107,[[]]],[11,"take_future","","Extract the stopping future out of the combinator. The …",107,[[],["option",4]]],[11,"take_result","","Once the stopping future is resolved, this method can be …",107,[[],["option",4]]],[11,"is_stopped","","Whether the stream was stopped yet by the stopping future …",107,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",108,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",108,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",108,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",108,[[]]],[11,"get_ref","","Acquires a reference to the underlying streams that this …",109,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying streams …",109,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",109,[[["pin",3]]]],[11,"into_inner","","Consumes this combinator, returning the underlying …",109,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",110,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",110,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",110,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",110,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",111,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",111,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",111,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",111,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",112,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",112,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",112,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",112,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",113,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",113,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",113,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",113,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",114,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",114,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",114,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",114,[[]]],[11,"reunite","","Attempts to put the two \\\"halves\\\" of a split <code>Stream + Sink</code> …",116,[[["splitsink",3]],[["reuniteerror",3],["result",4]]]],[11,"reunite","","Attempts to put the two \\\"halves\\\" of a split <code>Stream + Sink</code> …",117,[[["splitstream",3]],[["reuniteerror",3],["result",4]]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",118,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",118,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",118,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",118,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",119,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",119,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",119,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",119,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",121,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",121,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",121,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",121,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",122,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",122,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",122,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",122,[[]]],[11,"next","","Creates a future that resolves to the next item in the …",13,[[],["next",3]]],[11,"into_future","","Converts this stream into a future of …",13,[[],["streamfuture",3]]],[11,"map","","Maps this stream\'s items to a different type, returning a …",13,[[],["map",3]]],[11,"enumerate","","Creates a stream which gives the current iteration count …",13,[[],["enumerate",3]]],[11,"filter","","Filters the values produced by this stream according to …",13,[[],["filter",3]]],[11,"filter_map","","Filters the values produced by this stream while …",13,[[],["filtermap",3]]],[11,"then","","Computes from this stream\'s items new items of a …",13,[[],["then",3]]],[11,"collect","","Transforms a stream into a collection, returning a future …",13,[[],[["extend",8],["collect",3],["default",8]]]],[11,"concat","","Concatenate all items of a stream into a single extendable…",13,[[],["concat",3]]],[11,"fold","","Execute an accumulating asynchronous computation over a …",13,[[],["fold",3]]],[11,"flatten","","Flattens a stream of streams into just one continuous …",13,[[],["flatten",3]]],[11,"flat_map","","Maps a stream like [<code>StreamExt::map</code>] but flattens nested …",13,[[],["flatmap",3]]],[11,"scan","","Combinator similar to [<code>StreamExt::fold</code>] that holds …",13,[[],["scan",3]]],[11,"skip_while","","Skip elements on this stream while the provided …",13,[[],["skipwhile",3]]],[11,"take_while","","Take elements from this stream while the provided …",13,[[],["takewhile",3]]],[11,"take_until","","Take elements from this stream until the provided future …",13,[[],["takeuntil",3]]],[11,"for_each","","Runs this stream to completion, executing the provided …",13,[[],["foreach",3]]],[11,"for_each_concurrent","","Runs this stream to completion, executing the provided …",13,[[],["foreachconcurrent",3]]],[11,"take","","Creates a new stream of at most <code>n</code> items of the underlying …",13,[[],["take",3]]],[11,"skip","","Creates a new stream which skips <code>n</code> items of the …",13,[[],["skip",3]]],[11,"fuse","","Fuse a stream such that <code>poll_next</code> will never again be …",13,[[],["fuse",3]]],[11,"by_ref","","Borrows a stream, rather than consuming it.",13,[[]]],[11,"catch_unwind","","Catches unwinding panics while polling the stream.",13,[[],["catchunwind",3]]],[11,"boxed","","Wrap the stream in a Box, pinning it.",13,[[],["boxstream",6]]],[11,"boxed_local","","Wrap the stream in a Box, pinning it.",13,[[],["localboxstream",6]]],[11,"buffered","","An adaptor for creating a buffered list of pending …",13,[[],["buffered",3]]],[11,"buffer_unordered","","An adaptor for creating a buffered list of pending …",13,[[],["bufferunordered",3]]],[11,"zip","","An adapter for zipping two streams together.",13,[[],["zip",3]]],[11,"chain","","Adapter for chaining two streams.",13,[[],["chain",3]]],[11,"peekable","","Creates a new stream which exposes a <code>peek</code> method.",13,[[],["peekable",3]]],[11,"chunks","","An adaptor for chunking up items of the stream inside a …",13,[[],["chunks",3]]],[11,"ready_chunks","","An adaptor for chunking up ready items of the stream …",13,[[],["readychunks",3]]],[11,"forward","","A future that completes after the given stream has been …",13,[[],["forward",3]]],[11,"split","","Splits this <code>Stream + Sink</code> object into separate <code>Sink</code> and …",13,[[]]],[11,"inspect","","Do something with each item of this stream, afterwards …",13,[[],["inspect",3]]],[11,"left_stream","","Wrap this stream in an <code>Either</code> stream, making it the …",13,[[],["either",4]]],[11,"right_stream","","Wrap this stream in an <code>Either</code> stream, making it the …",13,[[],["either",4]]],[11,"poll_next_unpin","","A convenience method for calling [<code>Stream::poll_next</code>] on […",13,[[["context",3]],[["option",4],["poll",4]]]],[11,"select_next_some","","Returns a [<code>Future</code>] that resolves when the next item in …",13,[[],["selectnextsome",3]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",123,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",123,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",123,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",123,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",124,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",124,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",124,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",124,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",125,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",125,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",125,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",125,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",128,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",128,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",128,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",128,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",129,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",129,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",129,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",129,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",130,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",130,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",130,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",130,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",135,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",135,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",135,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",135,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",136,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",136,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",136,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",136,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",139,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",139,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",139,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",139,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",140,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",140,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",140,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",140,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",141,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",141,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",141,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",141,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",142,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",142,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",142,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",142,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",143,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",143,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",143,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",143,[[]]],[11,"err_into","","Wraps the current stream in a new stream which converts …",15,[[],["errinto",3]]],[11,"map_ok","","Wraps the current stream in a new stream which maps the …",15,[[],["mapok",3]]],[11,"map_err","","Wraps the current stream in a new stream which maps the …",15,[[],["maperr",3]]],[11,"and_then","","Chain on a computation for when a value is ready, passing …",15,[[],["andthen",3]]],[11,"or_else","","Chain on a computation for when an error happens, passing …",15,[[],["orelse",3]]],[11,"inspect_ok","","Do something with the success value of this stream, …",15,[[],["inspectok",3]]],[11,"inspect_err","","Do something with the error value of this stream, …",15,[[],["inspecterr",3]]],[11,"into_stream","","Wraps a [<code>TryStream</code>] into a type that implements <code>Stream</code>",15,[[],["intostream",3]]],[11,"try_next","","Creates a future that attempts to resolve the next item …",15,[[],["trynext",3]]],[11,"try_for_each","","Attempts to run this stream to completion, executing the …",15,[[],["tryforeach",3]]],[11,"try_skip_while","","Skip elements on this stream while the provided …",15,[[],["tryskipwhile",3]]],[11,"try_for_each_concurrent","","Attempts to run this stream to completion, executing the …",15,[[],["tryforeachconcurrent",3]]],[11,"try_collect","","Attempt to transform a stream into a collection, …",15,[[],[["trycollect",3],["extend",8],["default",8]]]],[11,"try_filter","","Attempt to filter the values produced by this stream …",15,[[],["tryfilter",3]]],[11,"try_filter_map","","Attempt to filter the values produced by this stream while…",15,[[],["tryfiltermap",3]]],[11,"try_flatten","","Flattens a stream of streams into just one continuous …",15,[[],["tryflatten",3]]],[11,"try_fold","","Attempt to execute an accumulating asynchronous …",15,[[],["tryfold",3]]],[11,"try_concat","","Attempt to concatenate all items of a stream into a single…",15,[[],["tryconcat",3]]],[11,"try_buffer_unordered","","Attempt to execute several futures from a stream …",15,[[],["trybufferunordered",3]]],[11,"try_poll_next_unpin","","A convenience method for calling [<code>TryStream::try_poll_next</code>…",15,[[["context",3]],[["option",4],["poll",4]]]],[11,"into_async_read","","Adapter that converts this stream into an <code>AsyncRead</code>.",15,[[],["intoasyncread",3]]],[11,"get_ref","","Acquires a reference to the underlying streams that this …",150,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying streams …",150,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",150,[[["pin",3]]]],[11,"into_inner","","Consumes this combinator, returning the underlying …",150,[[]]],[11,"new","","Constructs a new, empty <code>FuturesOrdered</code>",152,[[],["futuresordered",3]]],[11,"len","","Returns the number of futures contained in the queue.",152,[[]]],[11,"is_empty","","Returns <code>true</code> if the queue contains no futures",152,[[]]],[11,"push","","Push a future into the queue.",152,[[]]],[11,"new","","Constructs a new, empty <code>SelectAll</code>",157,[[],["selectall",3]]],[11,"len","","Returns the number of streams contained in the set.",157,[[]]],[11,"is_empty","","Returns <code>true</code> if the set contains no streams",157,[[]]],[11,"push","","Push a stream into the set.",157,[[]]],[11,"get_ref","futures_util::sink","Get a shared reference to the inner sinks.",160,[[]]],[11,"get_mut","","Get a mutable reference to the inner sinks.",160,[[]]],[11,"get_pin_mut","","Get a pinned mutable reference to the inner sinks.",160,[[["pin",3]]]],[11,"into_inner","","Consumes this combinator, returning the underlying sinks.",160,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",162,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",162,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",162,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",162,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",163,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",163,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",163,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",163,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",166,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",166,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",166,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",166,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",167,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",167,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",167,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",167,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",168,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",168,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",168,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",168,[[]]],[11,"new","futures_util::task","Create a new [<code>WakerRef</code>] from a [<code>Waker</code>] reference.",169,[[["waker",3]],["wakerref",3]]],[11,"new_unowned","","Create a new [<code>WakerRef</code>] from a [<code>Waker</code>] that must not be …",169,[[["manuallydrop",3],["waker",3]],["wakerref",3]]],[11,"new","","Create an <code>AtomicWaker</code>.",170,[[],["atomicwaker",3]]],[11,"register","","Registers the waker to be notified on calls to <code>wake</code>.",170,[[["waker",3]]]],[11,"wake","","Calls <code>wake</code> on the last <code>Waker</code> passed to <code>register</code>.",170,[[]]],[11,"take","","Returns the last <code>Waker</code> passed to <code>register</code>, so that the …",170,[[],[["option",4],["waker",3]]]],[11,"from_waker","","Create a new <code>Context</code> from a <code>&Waker</code>.",171,[[["waker",3]],["context",3]]],[11,"waker","","Returns a reference to the <code>Waker</code> for the current task.",171,[[],["waker",3]]],[11,"map","","Changes the ready value of this <code>Poll</code> with the closure …",19,[[],["poll",4]]],[11,"is_ready","","Returns <code>true</code> if this is <code>Poll::Ready</code>",19,[[]]],[11,"is_pending","","Returns <code>true</code> if this is <code>Poll::Pending</code>",19,[[]]],[11,"map_ok","","Changes the success value of this <code>Poll</code> with the closure …",19,[[],[["result",4],["poll",4]]]],[11,"map_err","","Changes the error value of this <code>Poll</code> with the closure …",19,[[],[["poll",4],["result",4]]]],[11,"map_ok","","Changes the success value of this <code>Poll</code> with the closure …",19,[[],[["poll",4],["option",4]]]],[11,"map_err","","Changes the error value of this <code>Poll</code> with the closure …",19,[[],[["option",4],["poll",4]]]],[11,"wake","","Wake up the task associated with this <code>Waker</code>.",172,[[]]],[11,"wake_by_ref","","Wake up the task associated with this <code>Waker</code> without …",172,[[]]],[11,"will_wake","","Returns <code>true</code> if this <code>Waker</code> and another <code>Waker</code> have awoken …",172,[[["waker",3]]]],[11,"from_raw","","Creates a new <code>Waker</code> from [<code>RawWaker</code>].",172,[[["rawwaker",3]],["waker",3]]],[11,"new","","Creates a new <code>RawWaker</code> from the provided <code>data</code> pointer and …",173,[[["rawwakervtable",3]],["rawwaker",3]]],[11,"new","","Creates a new <code>RawWakerVTable</code> from the provided <code>clone</code>, <code>wake</code>…",174,[[],["rawwakervtable",3]]],[11,"shutdown","","Spawning failed because the executor has been shut down.",175,[[],["spawnerror",3]]],[11,"is_shutdown","","Check whether spawning failed to the executor being shut …",175,[[]]],[11,"spawn","","Spawns a task that polls the given future with output <code>()</code> …",22,[[],[["spawnerror",3],["result",4]]]],[11,"spawn_with_handle","","Spawns a task that polls the given future to completion …",22,[[],[["result",4],["remotehandle",3],["spawnerror",3]]]],[11,"spawn_local","","Spawns a task that polls the given future with output <code>()</code> …",23,[[],[["spawnerror",3],["result",4]]]],[11,"spawn_local_with_handle","","Spawns a task that polls the given future to completion …",23,[[],[["result",4],["remotehandle",3],["spawnerror",3]]]],[11,"new","futures_util::io","Creates a new I/O error from a known kind of error as …",176,[[["errorkind",4]],["error",3]]],[11,"last_os_error","","Returns an error representing the last OS error which …",176,[[],["error",3]]],[11,"from_raw_os_error","","Creates a new instance of an [<code>Error</code>] from a particular OS …",176,[[],["error",3]]],[11,"raw_os_error","","Returns the OS error that this error represents (if any).",176,[[],["option",4]]],[11,"get_ref","","Returns a reference to the inner error wrapped by this …",176,[[],[["error",8],["option",4]]]],[11,"get_mut","","Returns a mutable reference to the inner error wrapped by …",176,[[],[["option",4],["error",8]]]],[11,"into_inner","","Consumes the <code>Error</code>, returning its inner error (if any).",176,[[],[["option",4],["box",3]]]],[11,"kind","","Returns the corresponding [<code>ErrorKind</code>] for this error.",176,[[],["errorkind",4]]],[11,"new","","Creates a new <code>IoSlice</code> wrapping a byte slice.",177,[[],["ioslice",3]]],[11,"advance","","Advance the internal cursor of the slice.",177,[[]]],[11,"new","","Creates a new <code>IoSliceMut</code> wrapping a byte slice.",178,[[],["ioslicemut",3]]],[11,"advance","","Advance the internal cursor of the slice.",178,[[]]],[11,"new","","Creates a new <code>AllowStdIo</code> from an existing IO object.",179,[[]]],[11,"get_ref","","Returns a reference to the contained IO object.",179,[[]]],[11,"get_mut","","Returns a mutable reference to the contained IO object.",179,[[]]],[11,"into_inner","","Consumes self and returns the contained IO object.",179,[[]]],[11,"new","","Creates a new <code>BufReader</code> with a default buffer capacity. …",180,[[]]],[11,"with_capacity","","Creates a new <code>BufReader</code> with the specified buffer …",180,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",180,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",180,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",180,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",180,[[]]],[11,"buffer","","Returns a reference to the internally buffered data.",180,[[]]],[11,"new","","Creates a new <code>BufWriter</code> with a default buffer capacity. …",181,[[]]],[11,"with_capacity","","Creates a new <code>BufWriter</code> with the specified buffer …",181,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",181,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",181,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",181,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",181,[[]]],[11,"buffer","","Returns a reference to the internally buffered data.",181,[[]]],[11,"get_ref","","Gets references to the underlying readers in this <code>Chain</code>.",182,[[]]],[11,"get_mut","","Gets mutable references to the underlying readers in this …",182,[[]]],[11,"get_pin_mut","","Gets pinned mutable references to the underlying readers …",182,[[["pin",3]]]],[11,"into_inner","","Consumes the <code>Chain</code>, returning the wrapped readers.",182,[[]]],[11,"new","","Creates a new cursor wrapping the provided underlying …",186,[[],["cursor",3]]],[11,"into_inner","","Consumes this cursor, returning the underlying value.",186,[[]]],[11,"get_ref","","Gets a reference to the underlying value in this cursor.",186,[[]]],[11,"get_mut","","Gets a mutable reference to the underlying value in this …",186,[[]]],[11,"position","","Returns the current position of this cursor.",186,[[]]],[11,"set_position","","Sets the position of this cursor.",186,[[]]],[11,"reunite","","Attempts to put the two \\\"halves\\\" of a split …",201,[[["writehalf",3]],[["result",4],["reuniteerror",3]]]],[11,"reunite","","Attempts to put the two \\\"halves\\\" of a split …",202,[[["readhalf",3]],[["result",4],["reuniteerror",3]]]],[11,"limit","","Returns the remaining number of bytes that can be read …",203,[[]]],[11,"set_limit","","Sets the number of bytes that can be read before this …",203,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",203,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",203,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",203,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",203,[[]]],[11,"new","","Creates a new window around the buffer <code>t</code> defaulting to …",204,[[]]],[11,"get_ref","","Gets a shared reference to the underlying buffer inside …",204,[[]]],[11,"get_mut","","Gets a mutable reference to the underlying buffer inside …",204,[[]]],[11,"into_inner","","Consumes this <code>Window</code>, returning the underlying buffer.",204,[[]]],[11,"start","","Returns the starting index of this window into the …",204,[[]]],[11,"end","","Returns the end index of this window into the underlying …",204,[[]]],[11,"set","","Changes the range of this window to the range specified.",204,[[["rangebounds",8]]]],[11,"new","futures_util::lock","Creates a new futures-aware mutex.",208,[[],["mutex",3]]],[11,"into_inner","","Consumes this mutex, returning the underlying data.",208,[[]]],[11,"try_lock","","Attempt to acquire the lock immediately.",208,[[],[["mutexguard",3],["option",4]]]],[11,"lock","","Acquire the lock asynchronously.",208,[[],["mutexlockfuture",3]]],[11,"get_mut","","Returns a mutable reference to the underlying data.",208,[[]]],[11,"map","","Returns a locked view over a portion of the locked data.",210,[[],[["mappedmutexguard",3],["sized",8]]]],[11,"map","","Returns a locked view over a portion of the locked data.",211,[[],[["sized",8],["mappedmutexguard",3]]]]],"p":[[8,"FusedFuture"],[8,"Future"],[8,"TryFuture"],[8,"UnsafeFutureObj"],[8,"FutureExt"],[8,"TryFutureExt"],[4,"MaybeDone"],[4,"TryMaybeDone"],[4,"Either"],[8,"FusedStream"],[8,"Stream"],[8,"TryStream"],[3,"FuturesUnordered"],[8,"StreamExt"],[3,"ReuniteError"],[8,"TryStreamExt"],[8,"Sink"],[8,"SinkExt"],[8,"ArcWake"],[4,"Poll"],[8,"Spawn"],[8,"LocalSpawn"],[8,"SpawnExt"],[8,"LocalSpawnExt"],[8,"AsyncRead"],[8,"AsyncWrite"],[8,"AsyncSeek"],[8,"AsyncBufRead"],[4,"ErrorKind"],[4,"SeekFrom"],[3,"ReuniteError"],[8,"AsyncReadExt"],[8,"AsyncWriteExt"],[8,"AsyncSeekExt"],[8,"AsyncBufReadExt"],[3,"FutureObj"],[3,"LocalFutureObj"],[3,"Fuse"],[3,"CatchUnwind"],[3,"RemoteHandle"],[3,"Remote"],[3,"Shared"],[3,"Flatten"],[3,"FlattenStream"],[3,"Map"],[3,"IntoStream"],[3,"MapInto"],[3,"Then"],[3,"Inspect"],[3,"NeverError"],[3,"UnitError"],[3,"IntoFuture"],[3,"TryFlatten"],[3,"TryFlattenStream"],[3,"FlattenSink"],[3,"AndThen"],[3,"OrElse"],[3,"ErrInto"],[3,"OkInto"],[3,"InspectOk"],[3,"InspectErr"],[3,"MapOk"],[3,"MapErr"],[3,"MapOkOrElse"],[3,"UnwrapOrElse"],[3,"Lazy"],[3,"Pending"],[3,"OptionFuture"],[3,"PollFn"],[3,"Ready"],[3,"Join"],[3,"Join3"],[3,"Join4"],[3,"Join5"],[3,"JoinAll"],[3,"Select"],[3,"SelectAll"],[3,"TryJoin"],[3,"TryJoin3"],[3,"TryJoin4"],[3,"TryJoin5"],[3,"TryJoinAll"],[3,"TrySelect"],[3,"SelectOk"],[3,"Abortable"],[3,"AbortRegistration"],[3,"AbortHandle"],[3,"Aborted"],[3,"Chain"],[3,"Collect"],[3,"Concat"],[3,"Enumerate"],[3,"Filter"],[3,"FilterMap"],[3,"Fold"],[3,"ForEach"],[3,"Fuse"],[3,"StreamFuture"],[3,"Map"],[3,"Next"],[3,"SelectNextSome"],[3,"Peekable"],[3,"Peek"],[3,"Skip"],[3,"SkipWhile"],[3,"Take"],[3,"TakeWhile"],[3,"TakeUntil"],[3,"Then"],[3,"Zip"],[3,"Chunks"],[3,"ReadyChunks"],[3,"Scan"],[3,"BufferUnordered"],[3,"Buffered"],[3,"ForEachConcurrent"],[3,"SplitStream"],[3,"SplitSink"],[3,"CatchUnwind"],[3,"Flatten"],[3,"Forward"],[3,"Inspect"],[3,"FlatMap"],[3,"AndThen"],[3,"IntoStream"],[3,"OrElse"],[3,"TryNext"],[3,"TryForEach"],[3,"TryFilter"],[3,"TryFilterMap"],[3,"TryFlatten"],[3,"TryCollect"],[3,"TryConcat"],[3,"TryFold"],[3,"TryUnfold"],[3,"TrySkipWhile"],[3,"TryBufferUnordered"],[3,"TryForEachConcurrent"],[3,"IntoAsyncRead"],[3,"ErrInto"],[3,"InspectOk"],[3,"InspectErr"],[3,"MapOk"],[3,"MapErr"],[3,"Iter"],[3,"Repeat"],[3,"Empty"],[3,"Once"],[3,"Pending"],[3,"PollFn"],[3,"Select"],[3,"Unfold"],[3,"FuturesOrdered"],[3,"IterPinMut"],[3,"IterMut"],[3,"IterPinRef"],[3,"Iter"],[3,"SelectAll"],[3,"Close"],[3,"Drain"],[3,"Fanout"],[3,"Flush"],[3,"SinkErrInto"],[3,"SinkMapErr"],[3,"Send"],[3,"SendAll"],[3,"With"],[3,"WithFlatMap"],[3,"Buffer"],[3,"WakerRef"],[3,"AtomicWaker"],[3,"Context"],[3,"Waker"],[3,"RawWaker"],[3,"RawWakerVTable"],[3,"SpawnError"],[3,"Error"],[3,"IoSlice"],[3,"IoSliceMut"],[3,"AllowStdIo"],[3,"BufReader"],[3,"BufWriter"],[3,"Chain"],[3,"Close"],[3,"Copy"],[3,"CopyBuf"],[3,"Cursor"],[3,"Empty"],[3,"Flush"],[3,"IntoSink"],[3,"Lines"],[3,"Read"],[3,"ReadVectored"],[3,"ReadExact"],[3,"ReadLine"],[3,"ReadToEnd"],[3,"ReadToString"],[3,"ReadUntil"],[3,"Repeat"],[3,"Seek"],[3,"Sink"],[3,"ReadHalf"],[3,"WriteHalf"],[3,"Take"],[3,"Window"],[3,"Write"],[3,"WriteVectored"],[3,"WriteAll"],[3,"Mutex"],[3,"MutexLockFuture"],[3,"MutexGuard"],[3,"MappedMutexGuard"]]},\
"iovec":{"doc":"A specialized byte slice type for performing vectored I/O …","i":[[0,"unix","iovec","IoVec extensions for Unix platforms.",null,null],[5,"as_os_slice","iovec::unix","Convert a slice of <code>IoVec</code> refs to a slice of <code>libc::iovec</code>.",null,[[]]],[5,"as_os_slice_mut","","Convert a mutable slice of <code>IoVec</code> refs to a mutable slice …",null,[[]]],[17,"MAX_LENGTH","iovec","Max length of an <code>IoVec</code> slice.",null,null],[3,"IoVec","","A specialized byte slice type for performing vectored I/O …",null,null],[11,"from_bytes","","",0,[[],[["iovec",3],["option",4]]]],[11,"from_bytes_mut","","",0,[[],[["option",4],["iovec",3]]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]]],"p":[[3,"IoVec"]]},\
"lazy_static":{"doc":"A macro for declaring lazily evaluated statics.","i":[[8,"LazyStatic","lazy_static","Support trait for enabling a few common operation on lazy …",null,null],[5,"initialize","","Takes a shared reference to a lazy static and initializes …",null,[[]]],[14,"lazy_static","","",null,null]],"p":[]},\
"libc":{"doc":"libc - Raw FFI bindings to platforms\' system libraries","i":[[4,"c_void","libc","Equivalent to C\'s <code>void</code> type when used as a pointer.",null,null],[5,"isalnum","","",null,null],[5,"isalpha","","",null,null],[5,"iscntrl","","",null,null],[5,"isdigit","","",null,null],[5,"isgraph","","",null,null],[5,"islower","","",null,null],[5,"isprint","","",null,null],[5,"ispunct","","",null,null],[5,"isspace","","",null,null],[5,"isupper","","",null,null],[5,"isxdigit","","",null,null],[5,"isblank","","",null,null],[5,"tolower","","",null,null],[5,"toupper","","",null,null],[5,"qsort","","",null,null],[5,"bsearch","","",null,null],[5,"fopen","","",null,null],[5,"freopen","","",null,null],[5,"fmemopen","","",null,null],[5,"open_memstream","","",null,null],[5,"open_wmemstream","","",null,null],[5,"fflush","","",null,null],[5,"fclose","","",null,null],[5,"remove","","",null,null],[5,"rename","","",null,null],[5,"tmpfile","","",null,null],[5,"setvbuf","","",null,null],[5,"setbuf","","",null,null],[5,"getchar","","",null,null],[5,"putchar","","",null,null],[5,"fgetc","","",null,null],[5,"fgets","","",null,null],[5,"fputc","","",null,null],[5,"fputs","","",null,null],[5,"puts","","",null,null],[5,"ungetc","","",null,null],[5,"fread","","",null,null],[5,"fwrite","","",null,null],[5,"fseek","","",null,null],[5,"ftell","","",null,null],[5,"rewind","","",null,null],[5,"fgetpos","","",null,null],[5,"fsetpos","","",null,null],[5,"feof","","",null,null],[5,"ferror","","",null,null],[5,"perror","","",null,null],[5,"atoi","","",null,null],[5,"strtod","","",null,null],[5,"strtol","","",null,null],[5,"strtoul","","",null,null],[5,"calloc","","",null,null],[5,"malloc","","",null,null],[5,"realloc","","",null,null],[5,"free","","",null,null],[5,"abort","","",null,null],[5,"exit","","",null,null],[5,"_exit","","",null,null],[5,"atexit","","",null,null],[5,"system","","",null,null],[5,"getenv","","",null,null],[5,"strcpy","","",null,null],[5,"strncpy","","",null,null],[5,"strcat","","",null,null],[5,"strncat","","",null,null],[5,"strcmp","","",null,null],[5,"strncmp","","",null,null],[5,"strcoll","","",null,null],[5,"strchr","","",null,null],[5,"strrchr","","",null,null],[5,"strspn","","",null,null],[5,"strcspn","","",null,null],[5,"strdup","","",null,null],[5,"strndup","","",null,null],[5,"strpbrk","","",null,null],[5,"strstr","","",null,null],[5,"strcasecmp","","",null,null],[5,"strncasecmp","","",null,null],[5,"strlen","","",null,null],[5,"strnlen","","",null,null],[5,"strerror","","",null,null],[5,"strtok","","",null,null],[5,"strxfrm","","",null,null],[5,"strsignal","","",null,null],[5,"wcslen","","",null,null],[5,"wcstombs","","",null,null],[5,"memchr","","",null,null],[5,"wmemchr","","",null,null],[5,"memcmp","","",null,null],[5,"memcpy","","",null,null],[5,"memmove","","",null,null],[5,"memset","","",null,null],[5,"getpwnam","","",null,null],[5,"getpwuid","","",null,null],[5,"fprintf","","",null,null],[5,"printf","","",null,null],[5,"snprintf","","",null,null],[5,"sprintf","","",null,null],[5,"fscanf","","",null,null],[5,"scanf","","",null,null],[5,"sscanf","","",null,null],[5,"getchar_unlocked","","",null,null],[5,"putchar_unlocked","","",null,null],[5,"socket","","",null,null],[5,"connect","","",null,null],[5,"listen","","",null,null],[5,"accept","","",null,null],[5,"getpeername","","",null,null],[5,"getsockname","","",null,null],[5,"setsockopt","","",null,null],[5,"socketpair","","",null,null],[5,"sendto","","",null,null],[5,"shutdown","","",null,null],[5,"chmod","","",null,null],[5,"fchmod","","",null,null],[5,"fstat","","",null,null],[5,"mkdir","","",null,null],[5,"stat","","",null,null],[5,"pclose","","",null,null],[5,"fdopen","","",null,null],[5,"fileno","","",null,null],[5,"open","","",null,null],[5,"creat","","",null,null],[5,"fcntl","","",null,null],[5,"opendir","","",null,null],[5,"readdir","","",null,null],[5,"closedir","","",null,null],[5,"rewinddir","","",null,null],[5,"fchmodat","","",null,null],[5,"fchown","","",null,null],[5,"fchownat","","",null,null],[5,"fstatat","","",null,null],[5,"linkat","","",null,null],[5,"renameat","","",null,null],[5,"symlinkat","","",null,null],[5,"unlinkat","","",null,null],[5,"access","","",null,null],[5,"alarm","","",null,null],[5,"chdir","","",null,null],[5,"fchdir","","",null,null],[5,"chown","","",null,null],[5,"lchown","","",null,null],[5,"close","","",null,null],[5,"dup","","",null,null],[5,"dup2","","",null,null],[5,"execl","","",null,null],[5,"execle","","",null,null],[5,"execlp","","",null,null],[5,"execv","","",null,null],[5,"execve","","",null,null],[5,"execvp","","",null,null],[5,"fork","","",null,null],[5,"fpathconf","","",null,null],[5,"getcwd","","",null,null],[5,"getegid","","",null,null],[5,"geteuid","","",null,null],[5,"getgid","","",null,null],[5,"getgroups","","",null,null],[5,"getlogin","","",null,null],[5,"getopt","","",null,null],[5,"getpgid","","",null,null],[5,"getpgrp","","",null,null],[5,"getpid","","",null,null],[5,"getppid","","",null,null],[5,"getuid","","",null,null],[5,"isatty","","",null,null],[5,"link","","",null,null],[5,"lseek","","",null,null],[5,"pathconf","","",null,null],[5,"pipe","","",null,null],[5,"posix_memalign","","",null,null],[5,"read","","",null,null],[5,"rmdir","","",null,null],[5,"seteuid","","",null,null],[5,"setegid","","",null,null],[5,"setgid","","",null,null],[5,"setpgid","","",null,null],[5,"setsid","","",null,null],[5,"setuid","","",null,null],[5,"sleep","","",null,null],[5,"nanosleep","","",null,null],[5,"tcgetpgrp","","",null,null],[5,"tcsetpgrp","","",null,null],[5,"ttyname","","",null,null],[5,"ttyname_r","","",null,null],[5,"unlink","","",null,null],[5,"wait","","",null,null],[5,"waitpid","","",null,null],[5,"write","","",null,null],[5,"pread","","",null,null],[5,"pwrite","","",null,null],[5,"umask","","",null,null],[5,"utime","","",null,null],[5,"kill","","",null,null],[5,"killpg","","",null,null],[5,"mlock","","",null,null],[5,"munlock","","",null,null],[5,"mlockall","","",null,null],[5,"munlockall","","",null,null],[5,"mmap","","",null,null],[5,"munmap","","",null,null],[5,"if_nametoindex","","",null,null],[5,"if_indextoname","","",null,null],[5,"lstat","","",null,null],[5,"fsync","","",null,null],[5,"setenv","","",null,null],[5,"unsetenv","","",null,null],[5,"symlink","","",null,null],[5,"ftruncate","","",null,null],[5,"signal","","",null,null],[5,"getrusage","","",null,null],[5,"realpath","","",null,null],[5,"flock","","",null,null],[5,"times","","",null,null],[5,"pthread_self","","",null,null],[5,"pthread_join","","",null,null],[5,"pthread_exit","","",null,null],[5,"pthread_attr_init","","",null,null],[5,"pthread_attr_destroy","","",null,null],[5,"pthread_attr_setstacksize","","",null,null],[5,"pthread_attr_setdetachstate","","",null,null],[5,"pthread_detach","","",null,null],[5,"sched_yield","","",null,null],[5,"pthread_key_create","","",null,null],[5,"pthread_key_delete","","",null,null],[5,"pthread_getspecific","","",null,null],[5,"pthread_setspecific","","",null,null],[5,"pthread_mutex_init","","",null,null],[5,"pthread_mutex_destroy","","",null,null],[5,"pthread_mutex_lock","","",null,null],[5,"pthread_mutex_trylock","","",null,null],[5,"pthread_mutex_unlock","","",null,null],[5,"pthread_mutexattr_init","","",null,null],[5,"pthread_mutexattr_destroy","","",null,null],[5,"pthread_mutexattr_settype","","",null,null],[5,"pthread_cond_init","","",null,null],[5,"pthread_cond_wait","","",null,null],[5,"pthread_cond_timedwait","","",null,null],[5,"pthread_cond_signal","","",null,null],[5,"pthread_cond_broadcast","","",null,null],[5,"pthread_cond_destroy","","",null,null],[5,"pthread_condattr_init","","",null,null],[5,"pthread_condattr_destroy","","",null,null],[5,"pthread_rwlock_init","","",null,null],[5,"pthread_rwlock_destroy","","",null,null],[5,"pthread_rwlock_rdlock","","",null,null],[5,"pthread_rwlock_tryrdlock","","",null,null],[5,"pthread_rwlock_wrlock","","",null,null],[5,"pthread_rwlock_trywrlock","","",null,null],[5,"pthread_rwlock_unlock","","",null,null],[5,"pthread_rwlockattr_init","","",null,null],[5,"pthread_rwlockattr_destroy","","",null,null],[5,"getsockopt","","",null,null],[5,"raise","","",null,null],[5,"sigaction","","",null,null],[5,"utimes","","",null,null],[5,"dlopen","","",null,null],[5,"dlerror","","",null,null],[5,"dlsym","","",null,null],[5,"dlclose","","",null,null],[5,"dladdr","","",null,null],[5,"getaddrinfo","","",null,null],[5,"freeaddrinfo","","",null,null],[5,"gai_strerror","","",null,null],[5,"res_init","","",null,null],[5,"gmtime_r","","",null,null],[5,"localtime_r","","",null,null],[5,"mktime","","",null,null],[5,"time","","",null,null],[5,"gmtime","","",null,null],[5,"localtime","","",null,null],[5,"difftime","","",null,null],[5,"mknod","","",null,null],[5,"gethostname","","",null,null],[5,"getservbyname","","",null,null],[5,"getprotobyname","","",null,null],[5,"getprotobynumber","","",null,null],[5,"chroot","","",null,null],[5,"usleep","","",null,null],[5,"send","","",null,null],[5,"recv","","",null,null],[5,"putenv","","",null,null],[5,"poll","","",null,null],[5,"select","","",null,null],[5,"setlocale","","",null,null],[5,"localeconv","","",null,null],[5,"sem_wait","","",null,null],[5,"sem_trywait","","",null,null],[5,"sem_post","","",null,null],[5,"statvfs","","",null,null],[5,"fstatvfs","","",null,null],[5,"readlink","","",null,null],[5,"sigemptyset","","",null,null],[5,"sigaddset","","",null,null],[5,"sigfillset","","",null,null],[5,"sigdelset","","",null,null],[5,"sigismember","","",null,null],[5,"sigprocmask","","",null,null],[5,"sigpending","","",null,null],[5,"timegm","","",null,null],[5,"sysconf","","",null,null],[5,"mkfifo","","",null,null],[5,"pselect","","",null,null],[5,"fseeko","","",null,null],[5,"ftello","","",null,null],[5,"tcdrain","","",null,null],[5,"cfgetispeed","","",null,null],[5,"cfgetospeed","","",null,null],[5,"cfsetispeed","","",null,null],[5,"cfsetospeed","","",null,null],[5,"tcgetattr","","",null,null],[5,"tcsetattr","","",null,null],[5,"tcflow","","",null,null],[5,"tcflush","","",null,null],[5,"tcgetsid","","",null,null],[5,"tcsendbreak","","",null,null],[5,"mkstemp","","",null,null],[5,"mkdtemp","","",null,null],[5,"tmpnam","","",null,null],[5,"openlog","","",null,null],[5,"closelog","","",null,null],[5,"setlogmask","","",null,null],[5,"syslog","","",null,null],[5,"nice","","",null,null],[5,"grantpt","","",null,null],[5,"posix_openpt","","",null,null],[5,"ptsname","","",null,null],[5,"unlockpt","","",null,null],[5,"strcasestr","","",null,null],[5,"getline","","",null,null],[5,"lockf","","",null,null],[5,"getsid","","",null,null],[5,"truncate","","",null,null],[5,"pause","","",null,null],[5,"readlinkat","","",null,null],[5,"mkdirat","","",null,null],[5,"openat","","",null,null],[5,"fdopendir","","",null,null],[5,"readdir_r","","The 64-bit libc on Solaris and illumos only has …",null,null],[5,"cfmakeraw","","",null,null],[5,"cfsetspeed","","",null,null],[5,"sem_destroy","","",null,null],[5,"sem_init","","",null,null],[5,"fdatasync","","",null,null],[5,"mincore","","",null,null],[5,"clock_getres","","",null,null],[5,"clock_gettime","","",null,null],[5,"clock_settime","","",null,null],[5,"clock_getcpuclockid","","",null,null],[5,"dirfd","","",null,null],[5,"pthread_getattr_np","","",null,null],[5,"pthread_attr_getstack","","",null,null],[5,"memalign","","",null,null],[5,"setgroups","","",null,null],[5,"pipe2","","",null,null],[5,"statfs","","",null,null],[5,"statfs64","","",null,null],[5,"fstatfs","","",null,null],[5,"fstatfs64","","",null,null],[5,"statvfs64","","",null,null],[5,"fstatvfs64","","",null,null],[5,"memrchr","","",null,null],[5,"posix_fadvise","","",null,null],[5,"posix_fadvise64","","",null,null],[5,"futimens","","",null,null],[5,"utimensat","","",null,null],[5,"duplocale","","",null,null],[5,"freelocale","","",null,null],[5,"newlocale","","",null,null],[5,"uselocale","","",null,null],[5,"creat64","","",null,null],[5,"fstat64","","",null,null],[5,"fstatat64","","",null,null],[5,"ftruncate64","","",null,null],[5,"lseek64","","",null,null],[5,"lstat64","","",null,null],[5,"mmap64","","",null,null],[5,"open64","","",null,null],[5,"openat64","","",null,null],[5,"pread64","","",null,null],[5,"preadv64","","",null,null],[5,"pwrite64","","",null,null],[5,"pwritev64","","",null,null],[5,"readdir64","","",null,null],[5,"readdir64_r","","",null,null],[5,"stat64","","",null,null],[5,"truncate64","","",null,null],[5,"mknodat","","",null,null],[5,"pthread_condattr_getclock","","",null,null],[5,"pthread_condattr_setclock","","",null,null],[5,"pthread_condattr_setpshared","","",null,null],[5,"accept4","","",null,null],[5,"pthread_mutexattr_setpshared","","",null,null],[5,"pthread_rwlockattr_getpshared","","",null,null],[5,"pthread_rwlockattr_setpshared","","",null,null],[5,"ptsname_r","","",null,null],[5,"clearenv","","",null,null],[5,"waitid","","",null,null],[5,"setreuid","","",null,null],[5,"setregid","","",null,null],[5,"getresuid","","",null,null],[5,"getresgid","","",null,null],[5,"acct","","",null,null],[5,"brk","","",null,null],[5,"sbrk","","",null,null],[5,"vfork","","",null,null],[5,"setresgid","","",null,null],[5,"setresuid","","",null,null],[5,"wait4","","",null,null],[5,"openpty","","",null,null],[5,"forkpty","","",null,null],[5,"login_tty","","",null,null],[5,"execvpe","","",null,null],[5,"fexecve","","",null,null],[5,"getifaddrs","","",null,null],[5,"freeifaddrs","","",null,null],[5,"bind","","",null,null],[5,"writev","","",null,null],[5,"readv","","",null,null],[5,"sendmsg","","",null,null],[5,"recvmsg","","",null,null],[5,"uname","","",null,null],[5,"strerror_r","","",null,null],[5,"abs","","",null,null],[5,"atof","","",null,null],[5,"labs","","",null,null],[5,"rand","","",null,null],[5,"srand","","",null,null],[5,"aio_read","","",null,null],[5,"aio_write","","",null,null],[5,"aio_fsync","","",null,null],[5,"aio_error","","",null,null],[5,"aio_return","","",null,null],[5,"aio_suspend","","",null,null],[5,"aio_cancel","","",null,null],[5,"lio_listio","","",null,null],[5,"lutimes","","",null,null],[5,"setpwent","","",null,null],[5,"endpwent","","",null,null],[5,"getpwent","","",null,null],[5,"setgrent","","",null,null],[5,"endgrent","","",null,null],[5,"getgrent","","",null,null],[5,"setspent","","",null,null],[5,"endspent","","",null,null],[5,"getspent","","",null,null],[5,"getspnam","","",null,null],[5,"getspnam_r","","",null,null],[5,"shm_open","","",null,null],[5,"shmget","","",null,null],[5,"shmat","","",null,null],[5,"shmdt","","",null,null],[5,"shmctl","","",null,null],[5,"ftok","","",null,null],[5,"semget","","",null,null],[5,"semop","","",null,null],[5,"semctl","","",null,null],[5,"msgctl","","",null,null],[5,"msgget","","",null,null],[5,"msgrcv","","",null,null],[5,"msgsnd","","",null,null],[5,"mprotect","","",null,null],[5,"__errno_location","","",null,null],[5,"fopen64","","",null,null],[5,"freopen64","","",null,null],[5,"tmpfile64","","",null,null],[5,"fgetpos64","","",null,null],[5,"fsetpos64","","",null,null],[5,"fseeko64","","",null,null],[5,"ftello64","","",null,null],[5,"fallocate","","",null,null],[5,"fallocate64","","",null,null],[5,"posix_fallocate","","",null,null],[5,"posix_fallocate64","","",null,null],[5,"readahead","","",null,null],[5,"getxattr","","",null,null],[5,"lgetxattr","","",null,null],[5,"fgetxattr","","",null,null],[5,"setxattr","","",null,null],[5,"lsetxattr","","",null,null],[5,"fsetxattr","","",null,null],[5,"listxattr","","",null,null],[5,"llistxattr","","",null,null],[5,"flistxattr","","",null,null],[5,"removexattr","","",null,null],[5,"lremovexattr","","",null,null],[5,"fremovexattr","","",null,null],[5,"signalfd","","",null,null],[5,"timerfd_create","","",null,null],[5,"timerfd_gettime","","",null,null],[5,"timerfd_settime","","",null,null],[5,"pwritev","","",null,null],[5,"preadv","","",null,null],[5,"quotactl","","",null,null],[5,"mq_open","","",null,null],[5,"mq_close","","",null,null],[5,"mq_unlink","","",null,null],[5,"mq_receive","","",null,null],[5,"mq_timedreceive","","",null,null],[5,"mq_send","","",null,null],[5,"mq_timedsend","","",null,null],[5,"mq_getattr","","",null,null],[5,"mq_setattr","","",null,null],[5,"epoll_pwait","","",null,null],[5,"dup3","","",null,null],[5,"mkostemp","","",null,null],[5,"mkostemps","","",null,null],[5,"sigtimedwait","","",null,null],[5,"sigwaitinfo","","",null,null],[5,"nl_langinfo_l","","",null,null],[5,"getnameinfo","","",null,null],[5,"pthread_setschedprio","","",null,null],[5,"getloadavg","","",null,null],[5,"process_vm_readv","","",null,null],[5,"process_vm_writev","","",null,null],[5,"reboot","","",null,null],[5,"setfsgid","","",null,null],[5,"setfsuid","","",null,null],[5,"mkfifoat","","",null,null],[5,"if_nameindex","","",null,null],[5,"if_freenameindex","","",null,null],[5,"sync_file_range","","",null,null],[5,"mremap","","",null,null],[5,"glob","","",null,null],[5,"globfree","","",null,null],[5,"posix_madvise","","",null,null],[5,"shm_unlink","","",null,null],[5,"seekdir","","",null,null],[5,"telldir","","",null,null],[5,"madvise","","",null,null],[5,"msync","","",null,null],[5,"remap_file_pages","","",null,null],[5,"recvfrom","","",null,null],[5,"mkstemps","","",null,null],[5,"futimes","","",null,null],[5,"nl_langinfo","","",null,null],[5,"getdomainname","","",null,null],[5,"setdomainname","","",null,null],[5,"vhangup","","",null,null],[5,"sync","","",null,null],[5,"syscall","","",null,null],[5,"sched_getaffinity","","",null,null],[5,"sched_setaffinity","","",null,null],[5,"epoll_create","","",null,null],[5,"epoll_create1","","",null,null],[5,"epoll_wait","","",null,null],[5,"epoll_ctl","","",null,null],[5,"pthread_getschedparam","","",null,null],[5,"unshare","","",null,null],[5,"umount","","",null,null],[5,"sched_get_priority_max","","",null,null],[5,"tee","","",null,null],[5,"settimeofday","","",null,null],[5,"splice","","",null,null],[5,"eventfd","","",null,null],[5,"sched_rr_get_interval","","",null,null],[5,"sem_timedwait","","",null,null],[5,"sem_getvalue","","",null,null],[5,"sched_setparam","","",null,null],[5,"setns","","",null,null],[5,"swapoff","","",null,null],[5,"vmsplice","","",null,null],[5,"mount","","",null,null],[5,"personality","","",null,null],[5,"prctl","","",null,null],[5,"sched_getparam","","",null,null],[5,"ppoll","","",null,null],[5,"pthread_mutex_timedlock","","",null,null],[5,"clone","","",null,null],[5,"sched_getscheduler","","",null,null],[5,"clock_nanosleep","","",null,null],[5,"pthread_attr_getguardsize","","",null,null],[5,"sethostname","","",null,null],[5,"sched_get_priority_min","","",null,null],[5,"pthread_condattr_getpshared","","",null,null],[5,"sysinfo","","",null,null],[5,"umount2","","",null,null],[5,"pthread_setschedparam","","",null,null],[5,"swapon","","",null,null],[5,"sched_setscheduler","","",null,null],[5,"sendfile","","",null,null],[5,"sigsuspend","","",null,null],[5,"getgrgid_r","","",null,null],[5,"sigaltstack","","",null,null],[5,"sem_close","","",null,null],[5,"getdtablesize","","",null,null],[5,"getgrnam_r","","",null,null],[5,"initgroups","","",null,null],[5,"pthread_sigmask","","",null,null],[5,"sem_open","","",null,null],[5,"getgrnam","","",null,null],[5,"pthread_cancel","","",null,null],[5,"pthread_kill","","",null,null],[5,"sem_unlink","","",null,null],[5,"daemon","","",null,null],[5,"getpwnam_r","","",null,null],[5,"getpwuid_r","","",null,null],[5,"sigwait","","",null,null],[5,"pthread_atfork","","",null,null],[5,"getgrgid","","",null,null],[5,"getgrouplist","","",null,null],[5,"pthread_mutexattr_getpshared","","",null,null],[5,"popen","","",null,null],[5,"faccessat","","",null,null],[5,"pthread_create","","",null,null],[5,"dl_iterate_phdr","","",null,null],[5,"setmntent","","",null,null],[5,"getmntent","","",null,null],[5,"addmntent","","",null,null],[5,"endmntent","","",null,null],[5,"hasmntopt","","",null,null],[5,"posix_spawn","","",null,null],[5,"posix_spawnp","","",null,null],[5,"posix_spawnattr_init","","",null,null],[5,"posix_spawnattr_destroy","","",null,null],[5,"posix_spawnattr_getsigdefault","","",null,null],[5,"posix_spawnattr_setsigdefault","","",null,null],[5,"posix_spawnattr_getsigmask","","",null,null],[5,"posix_spawnattr_setsigmask","","",null,null],[5,"posix_spawnattr_getflags","","",null,null],[5,"posix_spawnattr_setflags","","",null,null],[5,"posix_spawnattr_getpgroup","","",null,null],[5,"posix_spawnattr_setpgroup","","",null,null],[5,"posix_spawnattr_getschedpolicy","","",null,null],[5,"posix_spawnattr_setschedpolicy","","",null,null],[5,"posix_spawnattr_getschedparam","","",null,null],[5,"posix_spawnattr_setschedparam","","",null,null],[5,"posix_spawn_file_actions_init","","",null,null],[5,"posix_spawn_file_actions_destroy","","",null,null],[5,"posix_spawn_file_actions_addopen","","",null,null],[5,"posix_spawn_file_actions_addclose","","",null,null],[5,"posix_spawn_file_actions_adddup2","","",null,null],[5,"fread_unlocked","","",null,null],[5,"inotify_rm_watch","","",null,null],[5,"inotify_init","","",null,null],[5,"inotify_init1","","",null,null],[5,"inotify_add_watch","","",null,null],[5,"fanotify_init","","",null,null],[5,"regcomp","","",null,null],[5,"regexec","","",null,null],[5,"regerror","","",null,null],[5,"regfree","","",null,null],[5,"fgetspent_r","","",null,null],[5,"sgetspent_r","","",null,null],[5,"getspent_r","","",null,null],[5,"qsort_r","","",null,null],[5,"sendmmsg","","",null,null],[5,"recvmmsg","","",null,null],[5,"getrlimit64","","",null,null],[5,"setrlimit64","","",null,null],[5,"getrlimit","","",null,null],[5,"setrlimit","","",null,null],[5,"prlimit","","",null,null],[5,"prlimit64","","",null,null],[5,"utmpname","","",null,null],[5,"utmpxname","","",null,null],[5,"getutxent","","",null,null],[5,"getutxid","","",null,null],[5,"getutxline","","",null,null],[5,"pututxline","","",null,null],[5,"setutxent","","",null,null],[5,"endutxent","","",null,null],[5,"getpt","","",null,null],[5,"mallopt","","",null,null],[5,"gettimeofday","","",null,null],[5,"statx","","",null,null],[5,"getrandom","","",null,null],[5,"memmem","","",null,null],[5,"getauxval","","",null,null],[5,"adjtimex","","",null,null],[5,"ntp_adjtime","","",null,null],[5,"ntp_gettime","","",null,null],[5,"copy_file_range","","",null,null],[5,"fanotify_mark","","",null,null],[5,"ioctl","","",null,null],[5,"backtrace","","",null,null],[5,"glob64","","",null,null],[5,"globfree64","","",null,null],[5,"ptrace","","",null,null],[5,"pthread_attr_getaffinity_np","","",null,null],[5,"pthread_attr_setaffinity_np","","",null,null],[5,"getpriority","","",null,null],[5,"setpriority","","",null,null],[5,"pthread_getaffinity_np","","",null,null],[5,"pthread_setaffinity_np","","",null,null],[5,"pthread_rwlockattr_getkind_np","","",null,null],[5,"pthread_rwlockattr_setkind_np","","",null,null],[5,"sched_getcpu","","",null,null],[5,"mallinfo","","",null,null],[5,"malloc_usable_size","","",null,null],[5,"getpwent_r","","",null,null],[5,"getgrent_r","","",null,null],[5,"pthread_getname_np","","",null,null],[5,"pthread_setname_np","","",null,null],[5,"dlmopen","","",null,null],[5,"dlinfo","","",null,null],[5,"getcontext","","",null,null],[5,"setcontext","","",null,null],[5,"makecontext","","",null,null],[5,"swapcontext","","",null,null],[5,"iopl","","",null,null],[5,"ioperm","","",null,null],[5,"sysctl","","",null,null],[6,"int8_t","","",null,null],[6,"int16_t","","",null,null],[6,"int32_t","","",null,null],[6,"int64_t","","",null,null],[6,"uint8_t","","",null,null],[6,"uint16_t","","",null,null],[6,"uint32_t","","",null,null],[6,"uint64_t","","",null,null],[6,"c_schar","","",null,null],[6,"c_uchar","","",null,null],[6,"c_short","","",null,null],[6,"c_ushort","","",null,null],[6,"c_int","","",null,null],[6,"c_uint","","",null,null],[6,"c_float","","",null,null],[6,"c_double","","",null,null],[6,"c_longlong","","",null,null],[6,"c_ulonglong","","",null,null],[6,"intmax_t","","",null,null],[6,"uintmax_t","","",null,null],[6,"size_t","","",null,null],[6,"ptrdiff_t","","",null,null],[6,"intptr_t","","",null,null],[6,"uintptr_t","","",null,null],[6,"ssize_t","","",null,null],[6,"pid_t","","",null,null],[6,"uid_t","","",null,null],[6,"gid_t","","",null,null],[6,"in_addr_t","","",null,null],[6,"in_port_t","","",null,null],[6,"sighandler_t","","",null,null],[6,"cc_t","","",null,null],[4,"DIR","","",null,null],[6,"locale_t","","",null,null],[3,"group","","",null,null],[12,"gr_name","","",0,null],[12,"gr_passwd","","",0,null],[12,"gr_gid","","",0,null],[12,"gr_mem","","",0,null],[3,"utimbuf","","",null,null],[12,"actime","","",1,null],[12,"modtime","","",1,null],[3,"timeval","","",null,null],[12,"tv_sec","","",2,null],[12,"tv_usec","","",2,null],[3,"timespec","","",null,null],[12,"tv_sec","","",3,null],[12,"tv_nsec","","",3,null],[3,"rlimit","","",null,null],[12,"rlim_cur","","",4,null],[12,"rlim_max","","",4,null],[3,"rusage","","",null,null],[12,"ru_utime","","",5,null],[12,"ru_stime","","",5,null],[12,"ru_maxrss","","",5,null],[12,"ru_ixrss","","",5,null],[12,"ru_idrss","","",5,null],[12,"ru_isrss","","",5,null],[12,"ru_minflt","","",5,null],[12,"ru_majflt","","",5,null],[12,"ru_nswap","","",5,null],[12,"ru_inblock","","",5,null],[12,"ru_oublock","","",5,null],[12,"ru_msgsnd","","",5,null],[12,"ru_msgrcv","","",5,null],[12,"ru_nsignals","","",5,null],[12,"ru_nvcsw","","",5,null],[12,"ru_nivcsw","","",5,null],[3,"ipv6_mreq","","",null,null],[12,"ipv6mr_multiaddr","","",6,null],[12,"ipv6mr_interface","","",6,null],[3,"hostent","","",null,null],[12,"h_name","","",7,null],[12,"h_aliases","","",7,null],[12,"h_addrtype","","",7,null],[12,"h_length","","",7,null],[12,"h_addr_list","","",7,null],[3,"iovec","","",null,null],[12,"iov_base","","",8,null],[12,"iov_len","","",8,null],[3,"pollfd","","",null,null],[12,"fd","","",9,null],[12,"events","","",9,null],[12,"revents","","",9,null],[3,"winsize","","",null,null],[12,"ws_row","","",10,null],[12,"ws_col","","",10,null],[12,"ws_xpixel","","",10,null],[12,"ws_ypixel","","",10,null],[3,"linger","","",null,null],[12,"l_onoff","","",11,null],[12,"l_linger","","",11,null],[3,"sigval","","",null,null],[12,"sival_ptr","","",12,null],[3,"itimerval","","",null,null],[12,"it_interval","","",13,null],[12,"it_value","","",13,null],[3,"tms","","",null,null],[12,"tms_utime","","",14,null],[12,"tms_stime","","",14,null],[12,"tms_cutime","","",14,null],[12,"tms_cstime","","",14,null],[3,"servent","","",null,null],[12,"s_name","","",15,null],[12,"s_aliases","","",15,null],[12,"s_port","","",15,null],[12,"s_proto","","",15,null],[3,"protoent","","",null,null],[12,"p_name","","",16,null],[12,"p_aliases","","",16,null],[12,"p_proto","","",16,null],[17,"INT_MIN","","",null,null],[17,"INT_MAX","","",null,null],[17,"SIG_DFL","","",null,null],[17,"SIG_IGN","","",null,null],[17,"SIG_ERR","","",null,null],[17,"DT_UNKNOWN","","",null,null],[17,"DT_FIFO","","",null,null],[17,"DT_CHR","","",null,null],[17,"DT_DIR","","",null,null],[17,"DT_BLK","","",null,null],[17,"DT_REG","","",null,null],[17,"DT_LNK","","",null,null],[17,"DT_SOCK","","",null,null],[17,"FD_CLOEXEC","","",null,null],[17,"USRQUOTA","","",null,null],[17,"GRPQUOTA","","",null,null],[17,"SIGIOT","","",null,null],[17,"S_ISUID","","",null,null],[17,"S_ISGID","","",null,null],[17,"S_ISVTX","","",null,null],[17,"IF_NAMESIZE","","",null,null],[17,"IFNAMSIZ","","",null,null],[17,"LOG_EMERG","","",null,null],[17,"LOG_ALERT","","",null,null],[17,"LOG_CRIT","","",null,null],[17,"LOG_ERR","","",null,null],[17,"LOG_WARNING","","",null,null],[17,"LOG_NOTICE","","",null,null],[17,"LOG_INFO","","",null,null],[17,"LOG_DEBUG","","",null,null],[17,"LOG_KERN","","",null,null],[17,"LOG_USER","","",null,null],[17,"LOG_MAIL","","",null,null],[17,"LOG_DAEMON","","",null,null],[17,"LOG_AUTH","","",null,null],[17,"LOG_SYSLOG","","",null,null],[17,"LOG_LPR","","",null,null],[17,"LOG_NEWS","","",null,null],[17,"LOG_UUCP","","",null,null],[17,"LOG_LOCAL0","","",null,null],[17,"LOG_LOCAL1","","",null,null],[17,"LOG_LOCAL2","","",null,null],[17,"LOG_LOCAL3","","",null,null],[17,"LOG_LOCAL4","","",null,null],[17,"LOG_LOCAL5","","",null,null],[17,"LOG_LOCAL6","","",null,null],[17,"LOG_LOCAL7","","",null,null],[17,"LOG_PID","","",null,null],[17,"LOG_CONS","","",null,null],[17,"LOG_ODELAY","","",null,null],[17,"LOG_NDELAY","","",null,null],[17,"LOG_NOWAIT","","",null,null],[17,"LOG_PRIMASK","","",null,null],[17,"LOG_FACMASK","","",null,null],[17,"PRIO_MIN","","",null,null],[17,"PRIO_MAX","","",null,null],[17,"IPPROTO_ICMP","","",null,null],[17,"IPPROTO_ICMPV6","","",null,null],[17,"IPPROTO_TCP","","",null,null],[17,"IPPROTO_UDP","","",null,null],[17,"IPPROTO_IP","","",null,null],[17,"IPPROTO_IPV6","","",null,null],[17,"INADDR_LOOPBACK","","",null,null],[17,"INADDR_ANY","","",null,null],[17,"INADDR_BROADCAST","","",null,null],[17,"INADDR_NONE","","",null,null],[17,"ARPOP_REQUEST","","",null,null],[17,"ARPOP_REPLY","","",null,null],[17,"ATF_COM","","",null,null],[17,"ATF_PERM","","",null,null],[17,"ATF_PUBL","","",null,null],[17,"ATF_USETRAILERS","","",null,null],[4,"FILE","","",null,null],[4,"fpos_t","","",null,null],[6,"sa_family_t","","",null,null],[6,"speed_t","","",null,null],[6,"tcflag_t","","",null,null],[6,"clockid_t","","",null,null],[6,"key_t","","",null,null],[6,"id_t","","",null,null],[4,"timezone","","",null,null],[3,"in_addr","","",null,null],[12,"s_addr","","",17,null],[3,"ip_mreq","","",null,null],[12,"imr_multiaddr","","",18,null],[12,"imr_interface","","",18,null],[3,"ip_mreq_source","","",null,null],[12,"imr_multiaddr","","",19,null],[12,"imr_interface","","",19,null],[12,"imr_sourceaddr","","",19,null],[3,"sockaddr","","",null,null],[12,"sa_family","","",20,null],[12,"sa_data","","",20,null],[3,"sockaddr_in","","",null,null],[12,"sin_family","","",21,null],[12,"sin_port","","",21,null],[12,"sin_addr","","",21,null],[12,"sin_zero","","",21,null],[3,"sockaddr_in6","","",null,null],[12,"sin6_family","","",22,null],[12,"sin6_port","","",22,null],[12,"sin6_flowinfo","","",22,null],[12,"sin6_addr","","",22,null],[12,"sin6_scope_id","","",22,null],[3,"addrinfo","","",null,null],[12,"ai_flags","","",23,null],[12,"ai_family","","",23,null],[12,"ai_socktype","","",23,null],[12,"ai_protocol","","",23,null],[12,"ai_addrlen","","",23,null],[12,"ai_addr","","",23,null],[12,"ai_canonname","","",23,null],[12,"ai_next","","",23,null],[3,"sockaddr_ll","","",null,null],[12,"sll_family","","",24,null],[12,"sll_protocol","","",24,null],[12,"sll_ifindex","","",24,null],[12,"sll_hatype","","",24,null],[12,"sll_pkttype","","",24,null],[12,"sll_halen","","",24,null],[12,"sll_addr","","",24,null],[3,"fd_set","","",null,null],[3,"tm","","",null,null],[12,"tm_sec","","",25,null],[12,"tm_min","","",25,null],[12,"tm_hour","","",25,null],[12,"tm_mday","","",25,null],[12,"tm_mon","","",25,null],[12,"tm_year","","",25,null],[12,"tm_wday","","",25,null],[12,"tm_yday","","",25,null],[12,"tm_isdst","","",25,null],[12,"tm_gmtoff","","",25,null],[12,"tm_zone","","",25,null],[3,"sched_param","","",null,null],[12,"sched_priority","","",26,null],[3,"Dl_info","","",null,null],[12,"dli_fname","","",27,null],[12,"dli_fbase","","",27,null],[12,"dli_sname","","",27,null],[12,"dli_saddr","","",27,null],[3,"lconv","","",null,null],[12,"decimal_point","","",28,null],[12,"thousands_sep","","",28,null],[12,"grouping","","",28,null],[12,"int_curr_symbol","","",28,null],[12,"currency_symbol","","",28,null],[12,"mon_decimal_point","","",28,null],[12,"mon_thousands_sep","","",28,null],[12,"mon_grouping","","",28,null],[12,"positive_sign","","",28,null],[12,"negative_sign","","",28,null],[12,"int_frac_digits","","",28,null],[12,"frac_digits","","",28,null],[12,"p_cs_precedes","","",28,null],[12,"p_sep_by_space","","",28,null],[12,"n_cs_precedes","","",28,null],[12,"n_sep_by_space","","",28,null],[12,"p_sign_posn","","",28,null],[12,"n_sign_posn","","",28,null],[12,"int_p_cs_precedes","","",28,null],[12,"int_p_sep_by_space","","",28,null],[12,"int_n_cs_precedes","","",28,null],[12,"int_n_sep_by_space","","",28,null],[12,"int_p_sign_posn","","",28,null],[12,"int_n_sign_posn","","",28,null],[3,"in_pktinfo","","",null,null],[12,"ipi_ifindex","","",29,null],[12,"ipi_spec_dst","","",29,null],[12,"ipi_addr","","",29,null],[3,"ifaddrs","","",null,null],[12,"ifa_next","","",30,null],[12,"ifa_name","","",30,null],[12,"ifa_flags","","",30,null],[12,"ifa_addr","","",30,null],[12,"ifa_netmask","","",30,null],[12,"ifa_ifu","","",30,null],[12,"ifa_data","","",30,null],[3,"in6_rtmsg","","",null,null],[3,"arpreq","","",null,null],[12,"arp_pa","","",31,null],[12,"arp_ha","","",31,null],[12,"arp_flags","","",31,null],[12,"arp_netmask","","",31,null],[12,"arp_dev","","",31,null],[3,"arpreq_old","","",null,null],[12,"arp_pa","","",32,null],[12,"arp_ha","","",32,null],[12,"arp_flags","","",32,null],[12,"arp_netmask","","",32,null],[3,"arphdr","","",null,null],[12,"ar_hrd","","",33,null],[12,"ar_pro","","",33,null],[12,"ar_hln","","",33,null],[12,"ar_pln","","",33,null],[12,"ar_op","","",33,null],[3,"mmsghdr","","",null,null],[12,"msg_hdr","","",34,null],[12,"msg_len","","",34,null],[3,"epoll_event","","",null,null],[12,"events","","",35,null],[12,"u64","","",35,null],[3,"sockaddr_un","","",null,null],[12,"sun_family","","",36,null],[12,"sun_path","","",36,null],[3,"sockaddr_storage","","",null,null],[12,"ss_family","","",37,null],[3,"utsname","","",null,null],[12,"sysname","","",38,null],[12,"nodename","","",38,null],[12,"release","","",38,null],[12,"version","","",38,null],[12,"machine","","",38,null],[12,"domainname","","",38,null],[3,"sigevent","","",null,null],[12,"sigev_value","","",39,null],[12,"sigev_signo","","",39,null],[12,"sigev_notify","","",39,null],[12,"sigev_notify_thread_id","","",39,null],[17,"EXIT_FAILURE","","",null,null],[17,"EXIT_SUCCESS","","",null,null],[17,"RAND_MAX","","",null,null],[17,"EOF","","",null,null],[17,"SEEK_SET","","",null,null],[17,"SEEK_CUR","","",null,null],[17,"SEEK_END","","",null,null],[17,"_IOFBF","","",null,null],[17,"_IONBF","","",null,null],[17,"_IOLBF","","",null,null],[17,"F_DUPFD","","",null,null],[17,"F_GETFD","","",null,null],[17,"F_SETFD","","",null,null],[17,"F_GETFL","","",null,null],[17,"F_SETFL","","",null,null],[17,"F_SETLEASE","","",null,null],[17,"F_GETLEASE","","",null,null],[17,"F_NOTIFY","","",null,null],[17,"F_CANCELLK","","",null,null],[17,"F_DUPFD_CLOEXEC","","",null,null],[17,"F_SETPIPE_SZ","","",null,null],[17,"F_GETPIPE_SZ","","",null,null],[17,"F_ADD_SEALS","","",null,null],[17,"F_GET_SEALS","","",null,null],[17,"F_SEAL_SEAL","","",null,null],[17,"F_SEAL_SHRINK","","",null,null],[17,"F_SEAL_GROW","","",null,null],[17,"F_SEAL_WRITE","","",null,null],[17,"SIGTRAP","","",null,null],[17,"PTHREAD_CREATE_JOINABLE","","",null,null],[17,"PTHREAD_CREATE_DETACHED","","",null,null],[17,"CLOCK_REALTIME","","",null,null],[17,"CLOCK_MONOTONIC","","",null,null],[17,"CLOCK_PROCESS_CPUTIME_ID","","",null,null],[17,"CLOCK_THREAD_CPUTIME_ID","","",null,null],[17,"CLOCK_MONOTONIC_RAW","","",null,null],[17,"CLOCK_REALTIME_COARSE","","",null,null],[17,"CLOCK_MONOTONIC_COARSE","","",null,null],[17,"CLOCK_BOOTTIME","","",null,null],[17,"CLOCK_REALTIME_ALARM","","",null,null],[17,"CLOCK_BOOTTIME_ALARM","","",null,null],[17,"CLOCK_TAI","","",null,null],[17,"TIMER_ABSTIME","","",null,null],[17,"RUSAGE_SELF","","",null,null],[17,"O_RDONLY","","",null,null],[17,"O_WRONLY","","",null,null],[17,"O_RDWR","","",null,null],[17,"SOCK_CLOEXEC","","",null,null],[17,"S_IFIFO","","",null,null],[17,"S_IFCHR","","",null,null],[17,"S_IFBLK","","",null,null],[17,"S_IFDIR","","",null,null],[17,"S_IFREG","","",null,null],[17,"S_IFLNK","","",null,null],[17,"S_IFSOCK","","",null,null],[17,"S_IFMT","","",null,null],[17,"S_IRWXU","","",null,null],[17,"S_IXUSR","","",null,null],[17,"S_IWUSR","","",null,null],[17,"S_IRUSR","","",null,null],[17,"S_IRWXG","","",null,null],[17,"S_IXGRP","","",null,null],[17,"S_IWGRP","","",null,null],[17,"S_IRGRP","","",null,null],[17,"S_IRWXO","","",null,null],[17,"S_IXOTH","","",null,null],[17,"S_IWOTH","","",null,null],[17,"S_IROTH","","",null,null],[17,"F_OK","","",null,null],[17,"R_OK","","",null,null],[17,"W_OK","","",null,null],[17,"X_OK","","",null,null],[17,"STDIN_FILENO","","",null,null],[17,"STDOUT_FILENO","","",null,null],[17,"STDERR_FILENO","","",null,null],[17,"SIGHUP","","",null,null],[17,"SIGINT","","",null,null],[17,"SIGQUIT","","",null,null],[17,"SIGILL","","",null,null],[17,"SIGABRT","","",null,null],[17,"SIGFPE","","",null,null],[17,"SIGKILL","","",null,null],[17,"SIGSEGV","","",null,null],[17,"SIGPIPE","","",null,null],[17,"SIGALRM","","",null,null],[17,"SIGTERM","","",null,null],[17,"PROT_NONE","","",null,null],[17,"PROT_READ","","",null,null],[17,"PROT_WRITE","","",null,null],[17,"PROT_EXEC","","",null,null],[17,"LC_CTYPE","","",null,null],[17,"LC_NUMERIC","","",null,null],[17,"LC_TIME","","",null,null],[17,"LC_COLLATE","","",null,null],[17,"LC_MONETARY","","",null,null],[17,"LC_MESSAGES","","",null,null],[17,"LC_ALL","","",null,null],[17,"LC_CTYPE_MASK","","",null,null],[17,"LC_NUMERIC_MASK","","",null,null],[17,"LC_TIME_MASK","","",null,null],[17,"LC_COLLATE_MASK","","",null,null],[17,"LC_MONETARY_MASK","","",null,null],[17,"LC_MESSAGES_MASK","","",null,null],[17,"MAP_FILE","","",null,null],[17,"MAP_SHARED","","",null,null],[17,"MAP_PRIVATE","","",null,null],[17,"MAP_FIXED","","",null,null],[17,"MAP_FAILED","","",null,null],[17,"MS_ASYNC","","",null,null],[17,"MS_INVALIDATE","","",null,null],[17,"MS_SYNC","","",null,null],[17,"MS_RDONLY","","",null,null],[17,"MS_NOSUID","","",null,null],[17,"MS_NODEV","","",null,null],[17,"MS_NOEXEC","","",null,null],[17,"MS_SYNCHRONOUS","","",null,null],[17,"MS_REMOUNT","","",null,null],[17,"MS_MANDLOCK","","",null,null],[17,"MS_DIRSYNC","","",null,null],[17,"MS_NOATIME","","",null,null],[17,"MS_NODIRATIME","","",null,null],[17,"MS_BIND","","",null,null],[17,"MS_MOVE","","",null,null],[17,"MS_REC","","",null,null],[17,"MS_SILENT","","",null,null],[17,"MS_POSIXACL","","",null,null],[17,"MS_UNBINDABLE","","",null,null],[17,"MS_PRIVATE","","",null,null],[17,"MS_SLAVE","","",null,null],[17,"MS_SHARED","","",null,null],[17,"MS_RELATIME","","",null,null],[17,"MS_KERNMOUNT","","",null,null],[17,"MS_I_VERSION","","",null,null],[17,"MS_STRICTATIME","","",null,null],[17,"MS_ACTIVE","","",null,null],[17,"MS_MGC_VAL","","",null,null],[17,"MS_MGC_MSK","","",null,null],[17,"SCM_RIGHTS","","",null,null],[17,"SCM_CREDENTIALS","","",null,null],[17,"PROT_GROWSDOWN","","",null,null],[17,"PROT_GROWSUP","","",null,null],[17,"MAP_TYPE","","",null,null],[17,"MADV_NORMAL","","",null,null],[17,"MADV_RANDOM","","",null,null],[17,"MADV_SEQUENTIAL","","",null,null],[17,"MADV_WILLNEED","","",null,null],[17,"MADV_DONTNEED","","",null,null],[17,"MADV_FREE","","",null,null],[17,"MADV_REMOVE","","",null,null],[17,"MADV_DONTFORK","","",null,null],[17,"MADV_DOFORK","","",null,null],[17,"MADV_MERGEABLE","","",null,null],[17,"MADV_UNMERGEABLE","","",null,null],[17,"MADV_HUGEPAGE","","",null,null],[17,"MADV_NOHUGEPAGE","","",null,null],[17,"MADV_DONTDUMP","","",null,null],[17,"MADV_DODUMP","","",null,null],[17,"MADV_HWPOISON","","",null,null],[17,"IFF_UP","","",null,null],[17,"IFF_BROADCAST","","",null,null],[17,"IFF_DEBUG","","",null,null],[17,"IFF_LOOPBACK","","",null,null],[17,"IFF_POINTOPOINT","","",null,null],[17,"IFF_NOTRAILERS","","",null,null],[17,"IFF_RUNNING","","",null,null],[17,"IFF_NOARP","","",null,null],[17,"IFF_PROMISC","","",null,null],[17,"IFF_ALLMULTI","","",null,null],[17,"IFF_MASTER","","",null,null],[17,"IFF_SLAVE","","",null,null],[17,"IFF_MULTICAST","","",null,null],[17,"IFF_PORTSEL","","",null,null],[17,"IFF_AUTOMEDIA","","",null,null],[17,"IFF_DYNAMIC","","",null,null],[17,"SOL_IP","","",null,null],[17,"SOL_TCP","","",null,null],[17,"SOL_UDP","","",null,null],[17,"SOL_IPV6","","",null,null],[17,"SOL_ICMPV6","","",null,null],[17,"SOL_RAW","","",null,null],[17,"SOL_DECNET","","",null,null],[17,"SOL_X25","","",null,null],[17,"SOL_PACKET","","",null,null],[17,"SOL_ATM","","",null,null],[17,"SOL_AAL","","",null,null],[17,"SOL_IRDA","","",null,null],[17,"SOL_NETBEUI","","",null,null],[17,"SOL_LLC","","",null,null],[17,"SOL_DCCP","","",null,null],[17,"SOL_NETLINK","","",null,null],[17,"SOL_TIPC","","",null,null],[17,"SOL_BLUETOOTH","","",null,null],[17,"SOL_ALG","","",null,null],[17,"AF_UNSPEC","","",null,null],[17,"AF_UNIX","","",null,null],[17,"AF_LOCAL","","",null,null],[17,"AF_INET","","",null,null],[17,"AF_AX25","","",null,null],[17,"AF_IPX","","",null,null],[17,"AF_APPLETALK","","",null,null],[17,"AF_NETROM","","",null,null],[17,"AF_BRIDGE","","",null,null],[17,"AF_ATMPVC","","",null,null],[17,"AF_X25","","",null,null],[17,"AF_INET6","","",null,null],[17,"AF_ROSE","","",null,null],[17,"AF_DECnet","","",null,null],[17,"AF_NETBEUI","","",null,null],[17,"AF_SECURITY","","",null,null],[17,"AF_KEY","","",null,null],[17,"AF_NETLINK","","",null,null],[17,"AF_ROUTE","","",null,null],[17,"AF_PACKET","","",null,null],[17,"AF_ASH","","",null,null],[17,"AF_ECONET","","",null,null],[17,"AF_ATMSVC","","",null,null],[17,"AF_RDS","","",null,null],[17,"AF_SNA","","",null,null],[17,"AF_IRDA","","",null,null],[17,"AF_PPPOX","","",null,null],[17,"AF_WANPIPE","","",null,null],[17,"AF_LLC","","",null,null],[17,"AF_CAN","","",null,null],[17,"AF_TIPC","","",null,null],[17,"AF_BLUETOOTH","","",null,null],[17,"AF_IUCV","","",null,null],[17,"AF_RXRPC","","",null,null],[17,"AF_ISDN","","",null,null],[17,"AF_PHONET","","",null,null],[17,"AF_IEEE802154","","",null,null],[17,"AF_CAIF","","",null,null],[17,"AF_ALG","","",null,null],[17,"PF_UNSPEC","","",null,null],[17,"PF_UNIX","","",null,null],[17,"PF_LOCAL","","",null,null],[17,"PF_INET","","",null,null],[17,"PF_AX25","","",null,null],[17,"PF_IPX","","",null,null],[17,"PF_APPLETALK","","",null,null],[17,"PF_NETROM","","",null,null],[17,"PF_BRIDGE","","",null,null],[17,"PF_ATMPVC","","",null,null],[17,"PF_X25","","",null,null],[17,"PF_INET6","","",null,null],[17,"PF_ROSE","","",null,null],[17,"PF_DECnet","","",null,null],[17,"PF_NETBEUI","","",null,null],[17,"PF_SECURITY","","",null,null],[17,"PF_KEY","","",null,null],[17,"PF_NETLINK","","",null,null],[17,"PF_ROUTE","","",null,null],[17,"PF_PACKET","","",null,null],[17,"PF_ASH","","",null,null],[17,"PF_ECONET","","",null,null],[17,"PF_ATMSVC","","",null,null],[17,"PF_RDS","","",null,null],[17,"PF_SNA","","",null,null],[17,"PF_IRDA","","",null,null],[17,"PF_PPPOX","","",null,null],[17,"PF_WANPIPE","","",null,null],[17,"PF_LLC","","",null,null],[17,"PF_CAN","","",null,null],[17,"PF_TIPC","","",null,null],[17,"PF_BLUETOOTH","","",null,null],[17,"PF_IUCV","","",null,null],[17,"PF_RXRPC","","",null,null],[17,"PF_ISDN","","",null,null],[17,"PF_PHONET","","",null,null],[17,"PF_IEEE802154","","",null,null],[17,"PF_CAIF","","",null,null],[17,"PF_ALG","","",null,null],[17,"SOMAXCONN","","",null,null],[17,"MSG_OOB","","",null,null],[17,"MSG_PEEK","","",null,null],[17,"MSG_DONTROUTE","","",null,null],[17,"MSG_CTRUNC","","",null,null],[17,"MSG_TRUNC","","",null,null],[17,"MSG_DONTWAIT","","",null,null],[17,"MSG_EOR","","",null,null],[17,"MSG_WAITALL","","",null,null],[17,"MSG_FIN","","",null,null],[17,"MSG_SYN","","",null,null],[17,"MSG_CONFIRM","","",null,null],[17,"MSG_RST","","",null,null],[17,"MSG_ERRQUEUE","","",null,null],[17,"MSG_NOSIGNAL","","",null,null],[17,"MSG_MORE","","",null,null],[17,"MSG_WAITFORONE","","",null,null],[17,"MSG_FASTOPEN","","",null,null],[17,"MSG_CMSG_CLOEXEC","","",null,null],[17,"SCM_TIMESTAMP","","",null,null],[17,"SOCK_RAW","","",null,null],[17,"SOCK_RDM","","",null,null],[17,"IP_MULTICAST_IF","","",null,null],[17,"IP_MULTICAST_TTL","","",null,null],[17,"IP_MULTICAST_LOOP","","",null,null],[17,"IP_TOS","","",null,null],[17,"IP_TTL","","",null,null],[17,"IP_HDRINCL","","",null,null],[17,"IP_PKTINFO","","",null,null],[17,"IP_MTU_DISCOVER","","",null,null],[17,"IP_RECVTOS","","",null,null],[17,"IP_RECVERR","","",null,null],[17,"IP_FREEBIND","","",null,null],[17,"IP_ADD_MEMBERSHIP","","",null,null],[17,"IP_DROP_MEMBERSHIP","","",null,null],[17,"IP_ADD_SOURCE_MEMBERSHIP","","",null,null],[17,"IP_DROP_SOURCE_MEMBERSHIP","","",null,null],[17,"IP_TRANSPARENT","","",null,null],[17,"IPV6_ADDRFORM","","",null,null],[17,"IPV6_2292PKTINFO","","",null,null],[17,"IPV6_2292HOPOPTS","","",null,null],[17,"IPV6_2292DSTOPTS","","",null,null],[17,"IPV6_2292RTHDR","","",null,null],[17,"IPV6_2292PKTOPTIONS","","",null,null],[17,"IPV6_CHECKSUM","","",null,null],[17,"IPV6_2292HOPLIMIT","","",null,null],[17,"IPV6_NEXTHOP","","",null,null],[17,"IPV6_UNICAST_HOPS","","",null,null],[17,"IPV6_MULTICAST_IF","","",null,null],[17,"IPV6_MULTICAST_HOPS","","",null,null],[17,"IPV6_MULTICAST_LOOP","","",null,null],[17,"IPV6_ADD_MEMBERSHIP","","",null,null],[17,"IPV6_DROP_MEMBERSHIP","","",null,null],[17,"IPV6_ROUTER_ALERT","","",null,null],[17,"IPV6_MTU_DISCOVER","","",null,null],[17,"IPV6_MTU","","",null,null],[17,"IPV6_RECVERR","","",null,null],[17,"IPV6_V6ONLY","","",null,null],[17,"IPV6_JOIN_ANYCAST","","",null,null],[17,"IPV6_LEAVE_ANYCAST","","",null,null],[17,"IPV6_RECVPKTINFO","","",null,null],[17,"IPV6_PKTINFO","","",null,null],[17,"IPV6_HOPLIMIT","","",null,null],[17,"IPV6_RECVTCLASS","","",null,null],[17,"IPV6_TCLASS","","",null,null],[17,"IP_PMTUDISC_DONT","","",null,null],[17,"IP_PMTUDISC_WANT","","",null,null],[17,"IP_PMTUDISC_DO","","",null,null],[17,"IP_PMTUDISC_PROBE","","",null,null],[17,"TCP_NODELAY","","",null,null],[17,"TCP_MAXSEG","","",null,null],[17,"TCP_CORK","","",null,null],[17,"TCP_KEEPIDLE","","",null,null],[17,"TCP_KEEPINTVL","","",null,null],[17,"TCP_KEEPCNT","","",null,null],[17,"TCP_SYNCNT","","",null,null],[17,"TCP_LINGER2","","",null,null],[17,"TCP_DEFER_ACCEPT","","",null,null],[17,"TCP_WINDOW_CLAMP","","",null,null],[17,"TCP_INFO","","",null,null],[17,"TCP_QUICKACK","","",null,null],[17,"TCP_CONGESTION","","",null,null],[17,"SO_DEBUG","","",null,null],[17,"SHUT_RD","","",null,null],[17,"SHUT_WR","","",null,null],[17,"SHUT_RDWR","","",null,null],[17,"LOCK_SH","","",null,null],[17,"LOCK_EX","","",null,null],[17,"LOCK_NB","","",null,null],[17,"LOCK_UN","","",null,null],[17,"SS_ONSTACK","","",null,null],[17,"SS_DISABLE","","",null,null],[17,"PATH_MAX","","",null,null],[17,"UIO_MAXIOV","","",null,null],[17,"FD_SETSIZE","","",null,null],[17,"EPOLLIN","","",null,null],[17,"EPOLLPRI","","",null,null],[17,"EPOLLOUT","","",null,null],[17,"EPOLLRDNORM","","",null,null],[17,"EPOLLRDBAND","","",null,null],[17,"EPOLLWRNORM","","",null,null],[17,"EPOLLWRBAND","","",null,null],[17,"EPOLLMSG","","",null,null],[17,"EPOLLERR","","",null,null],[17,"EPOLLHUP","","",null,null],[17,"EPOLLET","","",null,null],[17,"EPOLL_CTL_ADD","","",null,null],[17,"EPOLL_CTL_MOD","","",null,null],[17,"EPOLL_CTL_DEL","","",null,null],[17,"MNT_DETACH","","",null,null],[17,"MNT_EXPIRE","","",null,null],[17,"Q_GETFMT","","",null,null],[17,"Q_GETINFO","","",null,null],[17,"Q_SETINFO","","",null,null],[17,"QIF_BLIMITS","","",null,null],[17,"QIF_SPACE","","",null,null],[17,"QIF_ILIMITS","","",null,null],[17,"QIF_INODES","","",null,null],[17,"QIF_BTIME","","",null,null],[17,"QIF_ITIME","","",null,null],[17,"QIF_LIMITS","","",null,null],[17,"QIF_USAGE","","",null,null],[17,"QIF_TIMES","","",null,null],[17,"QIF_ALL","","",null,null],[17,"MNT_FORCE","","",null,null],[17,"Q_SYNC","","",null,null],[17,"Q_QUOTAON","","",null,null],[17,"Q_QUOTAOFF","","",null,null],[17,"Q_GETQUOTA","","",null,null],[17,"Q_SETQUOTA","","",null,null],[17,"TCIOFF","","",null,null],[17,"TCION","","",null,null],[17,"TCOOFF","","",null,null],[17,"TCOON","","",null,null],[17,"TCIFLUSH","","",null,null],[17,"TCOFLUSH","","",null,null],[17,"TCIOFLUSH","","",null,null],[17,"NL0","","",null,null],[17,"NL1","","",null,null],[17,"TAB0","","",null,null],[17,"CR0","","",null,null],[17,"FF0","","",null,null],[17,"BS0","","",null,null],[17,"VT0","","",null,null],[17,"VERASE","","",null,null],[17,"VKILL","","",null,null],[17,"VINTR","","",null,null],[17,"VQUIT","","",null,null],[17,"VLNEXT","","",null,null],[17,"IGNBRK","","",null,null],[17,"BRKINT","","",null,null],[17,"IGNPAR","","",null,null],[17,"PARMRK","","",null,null],[17,"INPCK","","",null,null],[17,"ISTRIP","","",null,null],[17,"INLCR","","",null,null],[17,"IGNCR","","",null,null],[17,"ICRNL","","",null,null],[17,"IXANY","","",null,null],[17,"IMAXBEL","","",null,null],[17,"OPOST","","",null,null],[17,"CS5","","",null,null],[17,"CRTSCTS","","",null,null],[17,"ECHO","","",null,null],[17,"OCRNL","","",null,null],[17,"ONOCR","","",null,null],[17,"ONLRET","","",null,null],[17,"OFILL","","",null,null],[17,"OFDEL","","",null,null],[17,"CLONE_VM","","",null,null],[17,"CLONE_FS","","",null,null],[17,"CLONE_FILES","","",null,null],[17,"CLONE_SIGHAND","","",null,null],[17,"CLONE_PTRACE","","",null,null],[17,"CLONE_VFORK","","",null,null],[17,"CLONE_PARENT","","",null,null],[17,"CLONE_THREAD","","",null,null],[17,"CLONE_NEWNS","","",null,null],[17,"CLONE_SYSVSEM","","",null,null],[17,"CLONE_SETTLS","","",null,null],[17,"CLONE_PARENT_SETTID","","",null,null],[17,"CLONE_CHILD_CLEARTID","","",null,null],[17,"CLONE_DETACHED","","",null,null],[17,"CLONE_UNTRACED","","",null,null],[17,"CLONE_CHILD_SETTID","","",null,null],[17,"CLONE_NEWUTS","","",null,null],[17,"CLONE_NEWIPC","","",null,null],[17,"CLONE_NEWUSER","","",null,null],[17,"CLONE_NEWPID","","",null,null],[17,"CLONE_NEWNET","","",null,null],[17,"CLONE_IO","","",null,null],[17,"CLONE_NEWCGROUP","","",null,null],[17,"WNOHANG","","",null,null],[17,"WUNTRACED","","",null,null],[17,"WSTOPPED","","",null,null],[17,"WEXITED","","",null,null],[17,"WCONTINUED","","",null,null],[17,"WNOWAIT","","",null,null],[17,"ADDR_NO_RANDOMIZE","","",null,null],[17,"MMAP_PAGE_ZERO","","",null,null],[17,"ADDR_COMPAT_LAYOUT","","",null,null],[17,"READ_IMPLIES_EXEC","","",null,null],[17,"ADDR_LIMIT_32BIT","","",null,null],[17,"SHORT_INODE","","",null,null],[17,"WHOLE_SECONDS","","",null,null],[17,"STICKY_TIMEOUTS","","",null,null],[17,"ADDR_LIMIT_3GB","","",null,null],[17,"PTRACE_O_TRACESYSGOOD","","",null,null],[17,"PTRACE_O_TRACEFORK","","",null,null],[17,"PTRACE_O_TRACEVFORK","","",null,null],[17,"PTRACE_O_TRACECLONE","","",null,null],[17,"PTRACE_O_TRACEEXEC","","",null,null],[17,"PTRACE_O_TRACEVFORKDONE","","",null,null],[17,"PTRACE_O_TRACEEXIT","","",null,null],[17,"PTRACE_O_TRACESECCOMP","","",null,null],[17,"PTRACE_O_EXITKILL","","",null,null],[17,"PTRACE_O_SUSPEND_SECCOMP","","",null,null],[17,"PTRACE_O_MASK","","",null,null],[17,"PTRACE_EVENT_FORK","","",null,null],[17,"PTRACE_EVENT_VFORK","","",null,null],[17,"PTRACE_EVENT_CLONE","","",null,null],[17,"PTRACE_EVENT_EXEC","","",null,null],[17,"PTRACE_EVENT_VFORK_DONE","","",null,null],[17,"PTRACE_EVENT_EXIT","","",null,null],[17,"PTRACE_EVENT_SECCOMP","","",null,null],[17,"__WNOTHREAD","","",null,null],[17,"__WALL","","",null,null],[17,"__WCLONE","","",null,null],[17,"SPLICE_F_MOVE","","",null,null],[17,"SPLICE_F_NONBLOCK","","",null,null],[17,"SPLICE_F_MORE","","",null,null],[17,"SPLICE_F_GIFT","","",null,null],[17,"RTLD_LOCAL","","",null,null],[17,"RTLD_LAZY","","",null,null],[17,"POSIX_FADV_NORMAL","","",null,null],[17,"POSIX_FADV_RANDOM","","",null,null],[17,"POSIX_FADV_SEQUENTIAL","","",null,null],[17,"POSIX_FADV_WILLNEED","","",null,null],[17,"AT_FDCWD","","",null,null],[17,"AT_SYMLINK_NOFOLLOW","","",null,null],[17,"AT_REMOVEDIR","","",null,null],[17,"AT_SYMLINK_FOLLOW","","",null,null],[17,"AT_NO_AUTOMOUNT","","",null,null],[17,"AT_EMPTY_PATH","","",null,null],[17,"LOG_CRON","","",null,null],[17,"LOG_AUTHPRIV","","",null,null],[17,"LOG_FTP","","",null,null],[17,"LOG_PERROR","","",null,null],[17,"PIPE_BUF","","",null,null],[17,"SI_LOAD_SHIFT","","",null,null],[17,"CLD_EXITED","","",null,null],[17,"CLD_KILLED","","",null,null],[17,"CLD_DUMPED","","",null,null],[17,"CLD_TRAPPED","","",null,null],[17,"CLD_STOPPED","","",null,null],[17,"CLD_CONTINUED","","",null,null],[17,"SIGEV_SIGNAL","","",null,null],[17,"SIGEV_NONE","","",null,null],[17,"SIGEV_THREAD","","",null,null],[17,"P_ALL","","",null,null],[17,"P_PID","","",null,null],[17,"P_PGID","","",null,null],[17,"P_PIDFD","","",null,null],[17,"UTIME_OMIT","","",null,null],[17,"UTIME_NOW","","",null,null],[17,"POLLIN","","",null,null],[17,"POLLPRI","","",null,null],[17,"POLLOUT","","",null,null],[17,"POLLERR","","",null,null],[17,"POLLHUP","","",null,null],[17,"POLLNVAL","","",null,null],[17,"POLLRDNORM","","",null,null],[17,"POLLRDBAND","","",null,null],[17,"IPTOS_LOWDELAY","","",null,null],[17,"IPTOS_THROUGHPUT","","",null,null],[17,"IPTOS_RELIABILITY","","",null,null],[17,"IPTOS_MINCOST","","",null,null],[17,"IPTOS_PREC_NETCONTROL","","",null,null],[17,"IPTOS_PREC_INTERNETCONTROL","","",null,null],[17,"IPTOS_PREC_CRITIC_ECP","","",null,null],[17,"IPTOS_PREC_FLASHOVERRIDE","","",null,null],[17,"IPTOS_PREC_FLASH","","",null,null],[17,"IPTOS_PREC_IMMEDIATE","","",null,null],[17,"IPTOS_PREC_PRIORITY","","",null,null],[17,"IPTOS_PREC_ROUTINE","","",null,null],[17,"IPTOS_ECN_MASK","","",null,null],[17,"IPTOS_ECN_ECT1","","",null,null],[17,"IPTOS_ECN_ECT0","","",null,null],[17,"IPTOS_ECN_CE","","",null,null],[17,"IPOPT_COPY","","",null,null],[17,"IPOPT_CLASS_MASK","","",null,null],[17,"IPOPT_NUMBER_MASK","","",null,null],[17,"IPOPT_CONTROL","","",null,null],[17,"IPOPT_RESERVED1","","",null,null],[17,"IPOPT_MEASUREMENT","","",null,null],[17,"IPOPT_RESERVED2","","",null,null],[17,"IPOPT_END","","",null,null],[17,"IPOPT_NOOP","","",null,null],[17,"IPOPT_SEC","","",null,null],[17,"IPOPT_LSRR","","",null,null],[17,"IPOPT_TIMESTAMP","","",null,null],[17,"IPOPT_RR","","",null,null],[17,"IPOPT_SID","","",null,null],[17,"IPOPT_SSRR","","",null,null],[17,"IPOPT_RA","","",null,null],[17,"IPVERSION","","",null,null],[17,"MAXTTL","","",null,null],[17,"IPDEFTTL","","",null,null],[17,"IPOPT_OPTVAL","","",null,null],[17,"IPOPT_OLEN","","",null,null],[17,"IPOPT_OFFSET","","",null,null],[17,"IPOPT_MINOFF","","",null,null],[17,"MAX_IPOPTLEN","","",null,null],[17,"IPOPT_NOP","","",null,null],[17,"IPOPT_EOL","","",null,null],[17,"IPOPT_TS","","",null,null],[17,"IPOPT_TS_TSONLY","","",null,null],[17,"IPOPT_TS_TSANDADDR","","",null,null],[17,"IPOPT_TS_PRESPEC","","",null,null],[17,"ARPOP_RREQUEST","","",null,null],[17,"ARPOP_RREPLY","","",null,null],[17,"ARPOP_InREQUEST","","",null,null],[17,"ARPOP_InREPLY","","",null,null],[17,"ARPOP_NAK","","",null,null],[17,"ATF_NETMASK","","",null,null],[17,"ATF_DONTPUB","","",null,null],[17,"ARPHRD_NETROM","","",null,null],[17,"ARPHRD_ETHER","","",null,null],[17,"ARPHRD_EETHER","","",null,null],[17,"ARPHRD_AX25","","",null,null],[17,"ARPHRD_PRONET","","",null,null],[17,"ARPHRD_CHAOS","","",null,null],[17,"ARPHRD_IEEE802","","",null,null],[17,"ARPHRD_ARCNET","","",null,null],[17,"ARPHRD_APPLETLK","","",null,null],[17,"ARPHRD_DLCI","","",null,null],[17,"ARPHRD_ATM","","",null,null],[17,"ARPHRD_METRICOM","","",null,null],[17,"ARPHRD_IEEE1394","","",null,null],[17,"ARPHRD_EUI64","","",null,null],[17,"ARPHRD_INFINIBAND","","",null,null],[17,"ARPHRD_SLIP","","",null,null],[17,"ARPHRD_CSLIP","","",null,null],[17,"ARPHRD_SLIP6","","",null,null],[17,"ARPHRD_CSLIP6","","",null,null],[17,"ARPHRD_RSRVD","","",null,null],[17,"ARPHRD_ADAPT","","",null,null],[17,"ARPHRD_ROSE","","",null,null],[17,"ARPHRD_X25","","",null,null],[17,"ARPHRD_HWX25","","",null,null],[17,"ARPHRD_PPP","","",null,null],[17,"ARPHRD_CISCO","","",null,null],[17,"ARPHRD_HDLC","","",null,null],[17,"ARPHRD_LAPB","","",null,null],[17,"ARPHRD_DDCMP","","",null,null],[17,"ARPHRD_RAWHDLC","","",null,null],[17,"ARPHRD_TUNNEL","","",null,null],[17,"ARPHRD_TUNNEL6","","",null,null],[17,"ARPHRD_FRAD","","",null,null],[17,"ARPHRD_SKIP","","",null,null],[17,"ARPHRD_LOOPBACK","","",null,null],[17,"ARPHRD_LOCALTLK","","",null,null],[17,"ARPHRD_FDDI","","",null,null],[17,"ARPHRD_BIF","","",null,null],[17,"ARPHRD_SIT","","",null,null],[17,"ARPHRD_IPDDP","","",null,null],[17,"ARPHRD_IPGRE","","",null,null],[17,"ARPHRD_PIMREG","","",null,null],[17,"ARPHRD_HIPPI","","",null,null],[17,"ARPHRD_ASH","","",null,null],[17,"ARPHRD_ECONET","","",null,null],[17,"ARPHRD_IRDA","","",null,null],[17,"ARPHRD_FCPP","","",null,null],[17,"ARPHRD_FCAL","","",null,null],[17,"ARPHRD_FCPL","","",null,null],[17,"ARPHRD_FCFABRIC","","",null,null],[17,"ARPHRD_IEEE802_TR","","",null,null],[17,"ARPHRD_IEEE80211","","",null,null],[17,"ARPHRD_IEEE80211_PRISM","","",null,null],[17,"ARPHRD_IEEE80211_RADIOTAP","","",null,null],[17,"ARPHRD_IEEE802154","","",null,null],[17,"ARPHRD_VOID","","",null,null],[17,"ARPHRD_NONE","","",null,null],[5,"CMSG_FIRSTHDR","","",null,[[]]],[5,"CMSG_DATA","","",null,[[]]],[5,"CMSG_SPACE","","",null,[[["c_uint",6]],["c_uint",6]]],[5,"CMSG_LEN","","",null,[[["c_uint",6]],["c_uint",6]]],[5,"FD_CLR","","",null,[[["c_int",6]]]],[5,"FD_ISSET","","",null,[[["c_int",6]]]],[5,"FD_SET","","",null,[[["c_int",6]]]],[5,"FD_ZERO","","",null,[[]]],[5,"WIFSTOPPED","","",null,[[["c_int",6]]]],[5,"WSTOPSIG","","",null,[[["c_int",6]],["c_int",6]]],[5,"WIFCONTINUED","","",null,[[["c_int",6]]]],[5,"WIFSIGNALED","","",null,[[["c_int",6]]]],[5,"WTERMSIG","","",null,[[["c_int",6]],["c_int",6]]],[5,"WIFEXITED","","",null,[[["c_int",6]]]],[5,"WEXITSTATUS","","",null,[[["c_int",6]],["c_int",6]]],[5,"WCOREDUMP","","",null,[[["c_int",6]]]],[5,"W_EXITCODE","","",null,[[["c_int",6]],["c_int",6]]],[5,"W_STOPCODE","","",null,[[["c_int",6]],["c_int",6]]],[5,"QCMD","","",null,[[["c_int",6]],["c_int",6]]],[5,"IPOPT_COPIED","","",null,[[]]],[5,"IPOPT_CLASS","","",null,[[]]],[5,"IPOPT_NUMBER","","",null,[[]]],[5,"IPTOS_ECN","","",null,[[]]],[6,"useconds_t","","",null,null],[6,"dev_t","","",null,null],[6,"socklen_t","","",null,null],[6,"mode_t","","",null,null],[6,"ino64_t","","",null,null],[6,"off64_t","","",null,null],[6,"blkcnt64_t","","",null,null],[6,"rlim64_t","","",null,null],[6,"mqd_t","","",null,null],[6,"nfds_t","","",null,null],[6,"nl_item","","",null,null],[6,"idtype_t","","",null,null],[6,"loff_t","","",null,null],[6,"pthread_key_t","","",null,null],[6,"__u8","","",null,null],[6,"__u16","","",null,null],[6,"__s16","","",null,null],[6,"__u32","","",null,null],[6,"__s32","","",null,null],[6,"Elf32_Half","","",null,null],[6,"Elf32_Word","","",null,null],[6,"Elf32_Off","","",null,null],[6,"Elf32_Addr","","",null,null],[6,"Elf64_Half","","",null,null],[6,"Elf64_Word","","",null,null],[6,"Elf64_Off","","",null,null],[6,"Elf64_Addr","","",null,null],[6,"Elf64_Xword","","",null,null],[6,"Elf64_Sxword","","",null,null],[6,"Elf32_Section","","",null,null],[6,"Elf64_Section","","",null,null],[4,"fpos64_t","","",null,null],[3,"rlimit64","","",null,null],[12,"rlim_cur","","",40,null],[12,"rlim_max","","",40,null],[3,"glob_t","","",null,null],[12,"gl_pathc","","",41,null],[12,"gl_pathv","","",41,null],[12,"gl_offs","","",41,null],[12,"gl_flags","","",41,null],[3,"passwd","","",null,null],[12,"pw_name","","",42,null],[12,"pw_passwd","","",42,null],[12,"pw_uid","","",42,null],[12,"pw_gid","","",42,null],[12,"pw_gecos","","",42,null],[12,"pw_dir","","",42,null],[12,"pw_shell","","",42,null],[3,"spwd","","",null,null],[12,"sp_namp","","",43,null],[12,"sp_pwdp","","",43,null],[12,"sp_lstchg","","",43,null],[12,"sp_min","","",43,null],[12,"sp_max","","",43,null],[12,"sp_warn","","",43,null],[12,"sp_inact","","",43,null],[12,"sp_expire","","",43,null],[12,"sp_flag","","",43,null],[3,"dqblk","","",null,null],[12,"dqb_bhardlimit","","",44,null],[12,"dqb_bsoftlimit","","",44,null],[12,"dqb_curspace","","",44,null],[12,"dqb_ihardlimit","","",44,null],[12,"dqb_isoftlimit","","",44,null],[12,"dqb_curinodes","","",44,null],[12,"dqb_btime","","",44,null],[12,"dqb_itime","","",44,null],[12,"dqb_valid","","",44,null],[3,"signalfd_siginfo","","",null,null],[12,"ssi_signo","","",45,null],[12,"ssi_errno","","",45,null],[12,"ssi_code","","",45,null],[12,"ssi_pid","","",45,null],[12,"ssi_uid","","",45,null],[12,"ssi_fd","","",45,null],[12,"ssi_tid","","",45,null],[12,"ssi_band","","",45,null],[12,"ssi_overrun","","",45,null],[12,"ssi_trapno","","",45,null],[12,"ssi_status","","",45,null],[12,"ssi_int","","",45,null],[12,"ssi_ptr","","",45,null],[12,"ssi_utime","","",45,null],[12,"ssi_stime","","",45,null],[12,"ssi_addr","","",45,null],[12,"ssi_addr_lsb","","",45,null],[12,"ssi_syscall","","",45,null],[12,"ssi_call_addr","","",45,null],[12,"ssi_arch","","",45,null],[3,"itimerspec","","",null,null],[12,"it_interval","","",46,null],[12,"it_value","","",46,null],[3,"fsid_t","","",null,null],[3,"packet_mreq","","",null,null],[12,"mr_ifindex","","",47,null],[12,"mr_type","","",47,null],[12,"mr_alen","","",47,null],[12,"mr_address","","",47,null],[3,"cpu_set_t","","",null,null],[3,"if_nameindex","","",null,null],[12,"if_index","","",48,null],[12,"if_name","","",48,null],[3,"msginfo","","",null,null],[12,"msgpool","","",49,null],[12,"msgmap","","",49,null],[12,"msgmax","","",49,null],[12,"msgmnb","","",49,null],[12,"msgmni","","",49,null],[12,"msgssz","","",49,null],[12,"msgtql","","",49,null],[12,"msgseg","","",49,null],[3,"sembuf","","",null,null],[12,"sem_num","","",50,null],[12,"sem_op","","",50,null],[12,"sem_flg","","",50,null],[3,"input_event","","",null,null],[12,"time","","",51,null],[12,"type_","","",51,null],[12,"code","","",51,null],[12,"value","","",51,null],[3,"input_id","","",null,null],[12,"bustype","","",52,null],[12,"vendor","","",52,null],[12,"product","","",52,null],[12,"version","","",52,null],[3,"input_absinfo","","",null,null],[12,"value","","",53,null],[12,"minimum","","",53,null],[12,"maximum","","",53,null],[12,"fuzz","","",53,null],[12,"flat","","",53,null],[12,"resolution","","",53,null],[3,"input_keymap_entry","","",null,null],[12,"flags","","",54,null],[12,"len","","",54,null],[12,"index","","",54,null],[12,"keycode","","",54,null],[12,"scancode","","",54,null],[3,"input_mask","","",null,null],[12,"type_","","",55,null],[12,"codes_size","","",55,null],[12,"codes_ptr","","",55,null],[3,"ff_replay","","",null,null],[12,"length","","",56,null],[12,"delay","","",56,null],[3,"ff_trigger","","",null,null],[12,"button","","",57,null],[12,"interval","","",57,null],[3,"ff_envelope","","",null,null],[12,"attack_length","","",58,null],[12,"attack_level","","",58,null],[12,"fade_length","","",58,null],[12,"fade_level","","",58,null],[3,"ff_constant_effect","","",null,null],[12,"level","","",59,null],[12,"envelope","","",59,null],[3,"ff_ramp_effect","","",null,null],[12,"start_level","","",60,null],[12,"end_level","","",60,null],[12,"envelope","","",60,null],[3,"ff_condition_effect","","",null,null],[12,"right_saturation","","",61,null],[12,"left_saturation","","",61,null],[12,"right_coeff","","",61,null],[12,"left_coeff","","",61,null],[12,"deadband","","",61,null],[12,"center","","",61,null],[3,"ff_periodic_effect","","",null,null],[12,"waveform","","",62,null],[12,"period","","",62,null],[12,"magnitude","","",62,null],[12,"offset","","",62,null],[12,"phase","","",62,null],[12,"envelope","","",62,null],[12,"custom_len","","",62,null],[12,"custom_data","","",62,null],[3,"ff_rumble_effect","","",null,null],[12,"strong_magnitude","","",63,null],[12,"weak_magnitude","","",63,null],[3,"ff_effect","","",null,null],[12,"type_","","",64,null],[12,"id","","",64,null],[12,"direction","","",64,null],[12,"trigger","","",64,null],[12,"replay","","",64,null],[12,"u","","",64,null],[3,"dl_phdr_info","","",null,null],[12,"dlpi_addr","","",65,null],[12,"dlpi_name","","",65,null],[12,"dlpi_phdr","","",65,null],[12,"dlpi_phnum","","",65,null],[12,"dlpi_adds","","",65,null],[12,"dlpi_subs","","",65,null],[12,"dlpi_tls_modid","","",65,null],[12,"dlpi_tls_data","","",65,null],[3,"Elf32_Ehdr","","",null,null],[12,"e_ident","","",66,null],[12,"e_type","","",66,null],[12,"e_machine","","",66,null],[12,"e_version","","",66,null],[12,"e_entry","","",66,null],[12,"e_phoff","","",66,null],[12,"e_shoff","","",66,null],[12,"e_flags","","",66,null],[12,"e_ehsize","","",66,null],[12,"e_phentsize","","",66,null],[12,"e_phnum","","",66,null],[12,"e_shentsize","","",66,null],[12,"e_shnum","","",66,null],[12,"e_shstrndx","","",66,null],[3,"Elf64_Ehdr","","",null,null],[12,"e_ident","","",67,null],[12,"e_type","","",67,null],[12,"e_machine","","",67,null],[12,"e_version","","",67,null],[12,"e_entry","","",67,null],[12,"e_phoff","","",67,null],[12,"e_shoff","","",67,null],[12,"e_flags","","",67,null],[12,"e_ehsize","","",67,null],[12,"e_phentsize","","",67,null],[12,"e_phnum","","",67,null],[12,"e_shentsize","","",67,null],[12,"e_shnum","","",67,null],[12,"e_shstrndx","","",67,null],[3,"Elf32_Sym","","",null,null],[12,"st_name","","",68,null],[12,"st_value","","",68,null],[12,"st_size","","",68,null],[12,"st_info","","",68,null],[12,"st_other","","",68,null],[12,"st_shndx","","",68,null],[3,"Elf64_Sym","","",null,null],[12,"st_name","","",69,null],[12,"st_info","","",69,null],[12,"st_other","","",69,null],[12,"st_shndx","","",69,null],[12,"st_value","","",69,null],[12,"st_size","","",69,null],[3,"Elf32_Phdr","","",null,null],[12,"p_type","","",70,null],[12,"p_offset","","",70,null],[12,"p_vaddr","","",70,null],[12,"p_paddr","","",70,null],[12,"p_filesz","","",70,null],[12,"p_memsz","","",70,null],[12,"p_flags","","",70,null],[12,"p_align","","",70,null],[3,"Elf64_Phdr","","",null,null],[12,"p_type","","",71,null],[12,"p_flags","","",71,null],[12,"p_offset","","",71,null],[12,"p_vaddr","","",71,null],[12,"p_paddr","","",71,null],[12,"p_filesz","","",71,null],[12,"p_memsz","","",71,null],[12,"p_align","","",71,null],[3,"Elf32_Shdr","","",null,null],[12,"sh_name","","",72,null],[12,"sh_type","","",72,null],[12,"sh_flags","","",72,null],[12,"sh_addr","","",72,null],[12,"sh_offset","","",72,null],[12,"sh_size","","",72,null],[12,"sh_link","","",72,null],[12,"sh_info","","",72,null],[12,"sh_addralign","","",72,null],[12,"sh_entsize","","",72,null],[3,"Elf64_Shdr","","",null,null],[12,"sh_name","","",73,null],[12,"sh_type","","",73,null],[12,"sh_flags","","",73,null],[12,"sh_addr","","",73,null],[12,"sh_offset","","",73,null],[12,"sh_size","","",73,null],[12,"sh_link","","",73,null],[12,"sh_info","","",73,null],[12,"sh_addralign","","",73,null],[12,"sh_entsize","","",73,null],[3,"Elf32_Chdr","","",null,null],[12,"ch_type","","",74,null],[12,"ch_size","","",74,null],[12,"ch_addralign","","",74,null],[3,"Elf64_Chdr","","",null,null],[12,"ch_type","","",75,null],[12,"ch_reserved","","",75,null],[12,"ch_size","","",75,null],[12,"ch_addralign","","",75,null],[3,"ucred","","",null,null],[12,"pid","","",76,null],[12,"uid","","",76,null],[12,"gid","","",76,null],[3,"mntent","","",null,null],[12,"mnt_fsname","","",77,null],[12,"mnt_dir","","",77,null],[12,"mnt_type","","",77,null],[12,"mnt_opts","","",77,null],[12,"mnt_freq","","",77,null],[12,"mnt_passno","","",77,null],[3,"posix_spawn_file_actions_t","","",null,null],[3,"posix_spawnattr_t","","",null,null],[3,"genlmsghdr","","",null,null],[12,"cmd","","",78,null],[12,"version","","",78,null],[12,"reserved","","",78,null],[3,"in6_pktinfo","","",null,null],[12,"ipi6_addr","","",79,null],[12,"ipi6_ifindex","","",79,null],[3,"arpd_request","","",null,null],[12,"req","","",80,null],[12,"ip","","",80,null],[12,"dev","","",80,null],[12,"stamp","","",80,null],[12,"updated","","",80,null],[12,"ha","","",80,null],[3,"inotify_event","","",null,null],[12,"wd","","",81,null],[12,"mask","","",81,null],[12,"cookie","","",81,null],[12,"len","","",81,null],[3,"fanotify_response","","",null,null],[12,"fd","","",82,null],[12,"response","","",82,null],[3,"sockaddr_vm","","",null,null],[12,"svm_family","","",83,null],[12,"svm_reserved1","","",83,null],[12,"svm_port","","",83,null],[12,"svm_cid","","",83,null],[12,"svm_zero","","",83,null],[3,"regmatch_t","","",null,null],[12,"rm_so","","",84,null],[12,"rm_eo","","",84,null],[3,"sock_extended_err","","",null,null],[12,"ee_errno","","",85,null],[12,"ee_origin","","",85,null],[12,"ee_type","","",85,null],[12,"ee_code","","",85,null],[12,"ee_pad","","",85,null],[12,"ee_info","","",85,null],[12,"ee_data","","",85,null],[3,"sockaddr_nl","","",null,null],[12,"nl_family","","",86,null],[12,"nl_pid","","",86,null],[12,"nl_groups","","",86,null],[3,"dirent","","",null,null],[12,"d_ino","","",87,null],[12,"d_off","","",87,null],[12,"d_reclen","","",87,null],[12,"d_type","","",87,null],[12,"d_name","","",87,null],[3,"dirent64","","",null,null],[12,"d_ino","","",88,null],[12,"d_off","","",88,null],[12,"d_reclen","","",88,null],[12,"d_type","","",88,null],[12,"d_name","","",88,null],[3,"sockaddr_alg","","",null,null],[12,"salg_family","","",89,null],[12,"salg_type","","",89,null],[12,"salg_feat","","",89,null],[12,"salg_mask","","",89,null],[12,"salg_name","","",89,null],[3,"af_alg_iv","","",null,null],[12,"ivlen","","",90,null],[12,"iv","","",90,null],[3,"mq_attr","","",null,null],[12,"mq_flags","","",91,null],[12,"mq_maxmsg","","",91,null],[12,"mq_msgsize","","",91,null],[12,"mq_curmsgs","","",91,null],[17,"ABDAY_1","","",null,null],[17,"ABDAY_2","","",null,null],[17,"ABDAY_3","","",null,null],[17,"ABDAY_4","","",null,null],[17,"ABDAY_5","","",null,null],[17,"ABDAY_6","","",null,null],[17,"ABDAY_7","","",null,null],[17,"DAY_1","","",null,null],[17,"DAY_2","","",null,null],[17,"DAY_3","","",null,null],[17,"DAY_4","","",null,null],[17,"DAY_5","","",null,null],[17,"DAY_6","","",null,null],[17,"DAY_7","","",null,null],[17,"ABMON_1","","",null,null],[17,"ABMON_2","","",null,null],[17,"ABMON_3","","",null,null],[17,"ABMON_4","","",null,null],[17,"ABMON_5","","",null,null],[17,"ABMON_6","","",null,null],[17,"ABMON_7","","",null,null],[17,"ABMON_8","","",null,null],[17,"ABMON_9","","",null,null],[17,"ABMON_10","","",null,null],[17,"ABMON_11","","",null,null],[17,"ABMON_12","","",null,null],[17,"MON_1","","",null,null],[17,"MON_2","","",null,null],[17,"MON_3","","",null,null],[17,"MON_4","","",null,null],[17,"MON_5","","",null,null],[17,"MON_6","","",null,null],[17,"MON_7","","",null,null],[17,"MON_8","","",null,null],[17,"MON_9","","",null,null],[17,"MON_10","","",null,null],[17,"MON_11","","",null,null],[17,"MON_12","","",null,null],[17,"AM_STR","","",null,null],[17,"PM_STR","","",null,null],[17,"D_T_FMT","","",null,null],[17,"D_FMT","","",null,null],[17,"T_FMT","","",null,null],[17,"T_FMT_AMPM","","",null,null],[17,"ERA","","",null,null],[17,"ERA_D_FMT","","",null,null],[17,"ALT_DIGITS","","",null,null],[17,"ERA_D_T_FMT","","",null,null],[17,"ERA_T_FMT","","",null,null],[17,"CODESET","","",null,null],[17,"CRNCYSTR","","",null,null],[17,"RUSAGE_THREAD","","",null,null],[17,"RUSAGE_CHILDREN","","",null,null],[17,"RADIXCHAR","","",null,null],[17,"THOUSEP","","",null,null],[17,"YESEXPR","","",null,null],[17,"NOEXPR","","",null,null],[17,"YESSTR","","",null,null],[17,"NOSTR","","",null,null],[17,"FILENAME_MAX","","",null,null],[17,"L_tmpnam","","",null,null],[17,"_PC_LINK_MAX","","",null,null],[17,"_PC_MAX_CANON","","",null,null],[17,"_PC_MAX_INPUT","","",null,null],[17,"_PC_NAME_MAX","","",null,null],[17,"_PC_PATH_MAX","","",null,null],[17,"_PC_PIPE_BUF","","",null,null],[17,"_PC_CHOWN_RESTRICTED","","",null,null],[17,"_PC_NO_TRUNC","","",null,null],[17,"_PC_VDISABLE","","",null,null],[17,"_PC_SYNC_IO","","",null,null],[17,"_PC_ASYNC_IO","","",null,null],[17,"_PC_PRIO_IO","","",null,null],[17,"_PC_SOCK_MAXBUF","","",null,null],[17,"_PC_FILESIZEBITS","","",null,null],[17,"_PC_REC_INCR_XFER_SIZE","","",null,null],[17,"_PC_REC_MAX_XFER_SIZE","","",null,null],[17,"_PC_REC_MIN_XFER_SIZE","","",null,null],[17,"_PC_REC_XFER_ALIGN","","",null,null],[17,"_PC_ALLOC_SIZE_MIN","","",null,null],[17,"_PC_SYMLINK_MAX","","",null,null],[17,"_PC_2_SYMLINKS","","",null,null],[17,"MS_NOUSER","","",null,null],[17,"_SC_ARG_MAX","","",null,null],[17,"_SC_CHILD_MAX","","",null,null],[17,"_SC_CLK_TCK","","",null,null],[17,"_SC_NGROUPS_MAX","","",null,null],[17,"_SC_OPEN_MAX","","",null,null],[17,"_SC_STREAM_MAX","","",null,null],[17,"_SC_TZNAME_MAX","","",null,null],[17,"_SC_JOB_CONTROL","","",null,null],[17,"_SC_SAVED_IDS","","",null,null],[17,"_SC_REALTIME_SIGNALS","","",null,null],[17,"_SC_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_TIMERS","","",null,null],[17,"_SC_ASYNCHRONOUS_IO","","",null,null],[17,"_SC_PRIORITIZED_IO","","",null,null],[17,"_SC_SYNCHRONIZED_IO","","",null,null],[17,"_SC_FSYNC","","",null,null],[17,"_SC_MAPPED_FILES","","",null,null],[17,"_SC_MEMLOCK","","",null,null],[17,"_SC_MEMLOCK_RANGE","","",null,null],[17,"_SC_MEMORY_PROTECTION","","",null,null],[17,"_SC_MESSAGE_PASSING","","",null,null],[17,"_SC_SEMAPHORES","","",null,null],[17,"_SC_SHARED_MEMORY_OBJECTS","","",null,null],[17,"_SC_AIO_LISTIO_MAX","","",null,null],[17,"_SC_AIO_MAX","","",null,null],[17,"_SC_AIO_PRIO_DELTA_MAX","","",null,null],[17,"_SC_DELAYTIMER_MAX","","",null,null],[17,"_SC_MQ_OPEN_MAX","","",null,null],[17,"_SC_MQ_PRIO_MAX","","",null,null],[17,"_SC_VERSION","","",null,null],[17,"_SC_PAGESIZE","","",null,null],[17,"_SC_PAGE_SIZE","","",null,null],[17,"_SC_RTSIG_MAX","","",null,null],[17,"_SC_SEM_NSEMS_MAX","","",null,null],[17,"_SC_SEM_VALUE_MAX","","",null,null],[17,"_SC_SIGQUEUE_MAX","","",null,null],[17,"_SC_TIMER_MAX","","",null,null],[17,"_SC_BC_BASE_MAX","","",null,null],[17,"_SC_BC_DIM_MAX","","",null,null],[17,"_SC_BC_SCALE_MAX","","",null,null],[17,"_SC_BC_STRING_MAX","","",null,null],[17,"_SC_COLL_WEIGHTS_MAX","","",null,null],[17,"_SC_EXPR_NEST_MAX","","",null,null],[17,"_SC_LINE_MAX","","",null,null],[17,"_SC_RE_DUP_MAX","","",null,null],[17,"_SC_2_VERSION","","",null,null],[17,"_SC_2_C_BIND","","",null,null],[17,"_SC_2_C_DEV","","",null,null],[17,"_SC_2_FORT_DEV","","",null,null],[17,"_SC_2_FORT_RUN","","",null,null],[17,"_SC_2_SW_DEV","","",null,null],[17,"_SC_2_LOCALEDEF","","",null,null],[17,"_SC_UIO_MAXIOV","","",null,null],[17,"_SC_IOV_MAX","","",null,null],[17,"_SC_THREADS","","",null,null],[17,"_SC_THREAD_SAFE_FUNCTIONS","","",null,null],[17,"_SC_GETGR_R_SIZE_MAX","","",null,null],[17,"_SC_GETPW_R_SIZE_MAX","","",null,null],[17,"_SC_LOGIN_NAME_MAX","","",null,null],[17,"_SC_TTY_NAME_MAX","","",null,null],[17,"_SC_THREAD_DESTRUCTOR_ITERATIONS","","",null,null],[17,"_SC_THREAD_KEYS_MAX","","",null,null],[17,"_SC_THREAD_STACK_MIN","","",null,null],[17,"_SC_THREAD_THREADS_MAX","","",null,null],[17,"_SC_THREAD_ATTR_STACKADDR","","",null,null],[17,"_SC_THREAD_ATTR_STACKSIZE","","",null,null],[17,"_SC_THREAD_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_THREAD_PRIO_INHERIT","","",null,null],[17,"_SC_THREAD_PRIO_PROTECT","","",null,null],[17,"_SC_THREAD_PROCESS_SHARED","","",null,null],[17,"_SC_NPROCESSORS_CONF","","",null,null],[17,"_SC_NPROCESSORS_ONLN","","",null,null],[17,"_SC_PHYS_PAGES","","",null,null],[17,"_SC_AVPHYS_PAGES","","",null,null],[17,"_SC_ATEXIT_MAX","","",null,null],[17,"_SC_PASS_MAX","","",null,null],[17,"_SC_XOPEN_VERSION","","",null,null],[17,"_SC_XOPEN_XCU_VERSION","","",null,null],[17,"_SC_XOPEN_UNIX","","",null,null],[17,"_SC_XOPEN_CRYPT","","",null,null],[17,"_SC_XOPEN_ENH_I18N","","",null,null],[17,"_SC_XOPEN_SHM","","",null,null],[17,"_SC_2_CHAR_TERM","","",null,null],[17,"_SC_2_UPE","","",null,null],[17,"_SC_XOPEN_XPG2","","",null,null],[17,"_SC_XOPEN_XPG3","","",null,null],[17,"_SC_XOPEN_XPG4","","",null,null],[17,"_SC_NZERO","","",null,null],[17,"_SC_XBS5_ILP32_OFF32","","",null,null],[17,"_SC_XBS5_ILP32_OFFBIG","","",null,null],[17,"_SC_XBS5_LP64_OFF64","","",null,null],[17,"_SC_XBS5_LPBIG_OFFBIG","","",null,null],[17,"_SC_XOPEN_LEGACY","","",null,null],[17,"_SC_XOPEN_REALTIME","","",null,null],[17,"_SC_XOPEN_REALTIME_THREADS","","",null,null],[17,"_SC_ADVISORY_INFO","","",null,null],[17,"_SC_BARRIERS","","",null,null],[17,"_SC_CLOCK_SELECTION","","",null,null],[17,"_SC_CPUTIME","","",null,null],[17,"_SC_THREAD_CPUTIME","","",null,null],[17,"_SC_MONOTONIC_CLOCK","","",null,null],[17,"_SC_READER_WRITER_LOCKS","","",null,null],[17,"_SC_SPIN_LOCKS","","",null,null],[17,"_SC_REGEXP","","",null,null],[17,"_SC_SHELL","","",null,null],[17,"_SC_SPAWN","","",null,null],[17,"_SC_SPORADIC_SERVER","","",null,null],[17,"_SC_THREAD_SPORADIC_SERVER","","",null,null],[17,"_SC_TIMEOUTS","","",null,null],[17,"_SC_TYPED_MEMORY_OBJECTS","","",null,null],[17,"_SC_2_PBS","","",null,null],[17,"_SC_2_PBS_ACCOUNTING","","",null,null],[17,"_SC_2_PBS_LOCATE","","",null,null],[17,"_SC_2_PBS_MESSAGE","","",null,null],[17,"_SC_2_PBS_TRACK","","",null,null],[17,"_SC_SYMLOOP_MAX","","",null,null],[17,"_SC_STREAMS","","",null,null],[17,"_SC_2_PBS_CHECKPOINT","","",null,null],[17,"_SC_V6_ILP32_OFF32","","",null,null],[17,"_SC_V6_ILP32_OFFBIG","","",null,null],[17,"_SC_V6_LP64_OFF64","","",null,null],[17,"_SC_V6_LPBIG_OFFBIG","","",null,null],[17,"_SC_HOST_NAME_MAX","","",null,null],[17,"_SC_TRACE","","",null,null],[17,"_SC_TRACE_EVENT_FILTER","","",null,null],[17,"_SC_TRACE_INHERIT","","",null,null],[17,"_SC_TRACE_LOG","","",null,null],[17,"_SC_IPV6","","",null,null],[17,"_SC_RAW_SOCKETS","","",null,null],[17,"_SC_V7_ILP32_OFF32","","",null,null],[17,"_SC_V7_ILP32_OFFBIG","","",null,null],[17,"_SC_V7_LP64_OFF64","","",null,null],[17,"_SC_V7_LPBIG_OFFBIG","","",null,null],[17,"_SC_SS_REPL_MAX","","",null,null],[17,"_SC_TRACE_EVENT_NAME_MAX","","",null,null],[17,"_SC_TRACE_NAME_MAX","","",null,null],[17,"_SC_TRACE_SYS_MAX","","",null,null],[17,"_SC_TRACE_USER_EVENT_MAX","","",null,null],[17,"_SC_XOPEN_STREAMS","","",null,null],[17,"_SC_THREAD_ROBUST_PRIO_INHERIT","","",null,null],[17,"_SC_THREAD_ROBUST_PRIO_PROTECT","","",null,null],[17,"RLIM_SAVED_MAX","","",null,null],[17,"RLIM_SAVED_CUR","","",null,null],[17,"GLOB_ERR","","",null,null],[17,"GLOB_MARK","","",null,null],[17,"GLOB_NOSORT","","",null,null],[17,"GLOB_DOOFFS","","",null,null],[17,"GLOB_NOCHECK","","",null,null],[17,"GLOB_APPEND","","",null,null],[17,"GLOB_NOESCAPE","","",null,null],[17,"GLOB_NOSPACE","","",null,null],[17,"GLOB_ABORTED","","",null,null],[17,"GLOB_NOMATCH","","",null,null],[17,"POSIX_MADV_NORMAL","","",null,null],[17,"POSIX_MADV_RANDOM","","",null,null],[17,"POSIX_MADV_SEQUENTIAL","","",null,null],[17,"POSIX_MADV_WILLNEED","","",null,null],[17,"S_IEXEC","","",null,null],[17,"S_IWRITE","","",null,null],[17,"S_IREAD","","",null,null],[17,"F_LOCK","","",null,null],[17,"F_TEST","","",null,null],[17,"F_TLOCK","","",null,null],[17,"F_ULOCK","","",null,null],[17,"F_SEAL_FUTURE_WRITE","","",null,null],[17,"IFF_LOWER_UP","","",null,null],[17,"IFF_DORMANT","","",null,null],[17,"IFF_ECHO","","",null,null],[17,"IFA_UNSPEC","","",null,null],[17,"IFA_ADDRESS","","",null,null],[17,"IFA_LOCAL","","",null,null],[17,"IFA_LABEL","","",null,null],[17,"IFA_BROADCAST","","",null,null],[17,"IFA_ANYCAST","","",null,null],[17,"IFA_CACHEINFO","","",null,null],[17,"IFA_MULTICAST","","",null,null],[17,"IFA_F_SECONDARY","","",null,null],[17,"IFA_F_TEMPORARY","","",null,null],[17,"IFA_F_NODAD","","",null,null],[17,"IFA_F_OPTIMISTIC","","",null,null],[17,"IFA_F_DADFAILED","","",null,null],[17,"IFA_F_HOMEADDRESS","","",null,null],[17,"IFA_F_DEPRECATED","","",null,null],[17,"IFA_F_TENTATIVE","","",null,null],[17,"IFA_F_PERMANENT","","",null,null],[17,"IFLA_UNSPEC","","",null,null],[17,"IFLA_ADDRESS","","",null,null],[17,"IFLA_BROADCAST","","",null,null],[17,"IFLA_IFNAME","","",null,null],[17,"IFLA_MTU","","",null,null],[17,"IFLA_LINK","","",null,null],[17,"IFLA_QDISC","","",null,null],[17,"IFLA_STATS","","",null,null],[17,"IFLA_COST","","",null,null],[17,"IFLA_PRIORITY","","",null,null],[17,"IFLA_MASTER","","",null,null],[17,"IFLA_WIRELESS","","",null,null],[17,"IFLA_PROTINFO","","",null,null],[17,"IFLA_TXQLEN","","",null,null],[17,"IFLA_MAP","","",null,null],[17,"IFLA_WEIGHT","","",null,null],[17,"IFLA_OPERSTATE","","",null,null],[17,"IFLA_LINKMODE","","",null,null],[17,"IFLA_LINKINFO","","",null,null],[17,"IFLA_NET_NS_PID","","",null,null],[17,"IFLA_IFALIAS","","",null,null],[17,"IFLA_NUM_VF","","",null,null],[17,"IFLA_VFINFO_LIST","","",null,null],[17,"IFLA_STATS64","","",null,null],[17,"IFLA_VF_PORTS","","",null,null],[17,"IFLA_PORT_SELF","","",null,null],[17,"IFLA_AF_SPEC","","",null,null],[17,"IFLA_GROUP","","",null,null],[17,"IFLA_NET_NS_FD","","",null,null],[17,"IFLA_EXT_MASK","","",null,null],[17,"IFLA_PROMISCUITY","","",null,null],[17,"IFLA_NUM_TX_QUEUES","","",null,null],[17,"IFLA_NUM_RX_QUEUES","","",null,null],[17,"IFLA_CARRIER","","",null,null],[17,"IFLA_PHYS_PORT_ID","","",null,null],[17,"IFLA_CARRIER_CHANGES","","",null,null],[17,"IFLA_PHYS_SWITCH_ID","","",null,null],[17,"IFLA_LINK_NETNSID","","",null,null],[17,"IFLA_PHYS_PORT_NAME","","",null,null],[17,"IFLA_PROTO_DOWN","","",null,null],[17,"IFLA_INFO_UNSPEC","","",null,null],[17,"IFLA_INFO_KIND","","",null,null],[17,"IFLA_INFO_DATA","","",null,null],[17,"IFLA_INFO_XSTATS","","",null,null],[17,"IFLA_INFO_SLAVE_KIND","","",null,null],[17,"IFLA_INFO_SLAVE_DATA","","",null,null],[17,"IFF_TUN","","",null,null],[17,"IFF_TAP","","",null,null],[17,"IFF_NO_PI","","",null,null],[17,"TUN_READQ_SIZE","","",null,null],[17,"TUN_TUN_DEV","","",null,null],[17,"TUN_TAP_DEV","","",null,null],[17,"TUN_TYPE_MASK","","",null,null],[17,"IFF_ONE_QUEUE","","",null,null],[17,"IFF_VNET_HDR","","",null,null],[17,"IFF_TUN_EXCL","","",null,null],[17,"IFF_MULTI_QUEUE","","",null,null],[17,"IFF_ATTACH_QUEUE","","",null,null],[17,"IFF_DETACH_QUEUE","","",null,null],[17,"IFF_PERSIST","","",null,null],[17,"IFF_NOFILTER","","",null,null],[17,"ST_RDONLY","","",null,null],[17,"ST_NOSUID","","",null,null],[17,"ST_NODEV","","",null,null],[17,"ST_NOEXEC","","",null,null],[17,"ST_SYNCHRONOUS","","",null,null],[17,"ST_MANDLOCK","","",null,null],[17,"ST_WRITE","","",null,null],[17,"ST_APPEND","","",null,null],[17,"ST_IMMUTABLE","","",null,null],[17,"ST_NOATIME","","",null,null],[17,"ST_NODIRATIME","","",null,null],[17,"RTLD_NEXT","","",null,null],[17,"RTLD_DEFAULT","","",null,null],[17,"RTLD_NODELETE","","",null,null],[17,"RTLD_NOW","","",null,null],[17,"AT_EACCESS","","",null,null],[17,"TCP_MD5SIG","","",null,null],[17,"PTHREAD_MUTEX_INITIALIZER","","",null,null],[17,"PTHREAD_COND_INITIALIZER","","",null,null],[17,"PTHREAD_RWLOCK_INITIALIZER","","",null,null],[17,"PTHREAD_MUTEX_NORMAL","","",null,null],[17,"PTHREAD_MUTEX_RECURSIVE","","",null,null],[17,"PTHREAD_MUTEX_ERRORCHECK","","",null,null],[17,"PTHREAD_MUTEX_DEFAULT","","",null,null],[17,"PTHREAD_PROCESS_PRIVATE","","",null,null],[17,"PTHREAD_PROCESS_SHARED","","",null,null],[17,"__SIZEOF_PTHREAD_COND_T","","",null,null],[17,"RENAME_NOREPLACE","","",null,null],[17,"RENAME_EXCHANGE","","",null,null],[17,"RENAME_WHITEOUT","","",null,null],[17,"SCHED_OTHER","","",null,null],[17,"SCHED_FIFO","","",null,null],[17,"SCHED_RR","","",null,null],[17,"SCHED_BATCH","","",null,null],[17,"SCHED_IDLE","","",null,null],[17,"SCHED_RESET_ON_FORK","","",null,null],[17,"IPPROTO_HOPOPTS","","Hop-by-hop option header",null,null],[17,"IPPROTO_IGMP","","group mgmt protocol",null,null],[17,"IPPROTO_IPIP","","for compatibility",null,null],[17,"IPPROTO_EGP","","exterior gateway protocol",null,null],[17,"IPPROTO_PUP","","pup",null,null],[17,"IPPROTO_IDP","","xns idp",null,null],[17,"IPPROTO_TP","","tp-4 w/ class negotiation",null,null],[17,"IPPROTO_DCCP","","DCCP",null,null],[17,"IPPROTO_ROUTING","","IP6 routing header",null,null],[17,"IPPROTO_FRAGMENT","","IP6 fragmentation header",null,null],[17,"IPPROTO_RSVP","","resource reservation",null,null],[17,"IPPROTO_GRE","","General Routing Encap.",null,null],[17,"IPPROTO_ESP","","IP6 Encap Sec. Payload",null,null],[17,"IPPROTO_AH","","IP6 Auth Header",null,null],[17,"IPPROTO_NONE","","IP6 no next header",null,null],[17,"IPPROTO_DSTOPTS","","IP6 destination option",null,null],[17,"IPPROTO_MTP","","",null,null],[17,"IPPROTO_BEETPH","","",null,null],[17,"IPPROTO_ENCAP","","encapsulation header",null,null],[17,"IPPROTO_PIM","","Protocol indep. multicast",null,null],[17,"IPPROTO_COMP","","IP Payload Comp. Protocol",null,null],[17,"IPPROTO_SCTP","","SCTP",null,null],[17,"IPPROTO_MH","","",null,null],[17,"IPPROTO_UDPLITE","","",null,null],[17,"IPPROTO_MPLS","","",null,null],[17,"IPPROTO_RAW","","raw IP packet",null,null],[17,"IPPROTO_MAX","","",null,null],[17,"IP_MSFILTER","","",null,null],[17,"MCAST_JOIN_GROUP","","",null,null],[17,"MCAST_BLOCK_SOURCE","","",null,null],[17,"MCAST_UNBLOCK_SOURCE","","",null,null],[17,"MCAST_LEAVE_GROUP","","",null,null],[17,"MCAST_JOIN_SOURCE_GROUP","","",null,null],[17,"MCAST_LEAVE_SOURCE_GROUP","","",null,null],[17,"MCAST_MSFILTER","","",null,null],[17,"IP_MULTICAST_ALL","","",null,null],[17,"IP_UNICAST_IF","","",null,null],[17,"AF_IB","","",null,null],[17,"AF_MPLS","","",null,null],[17,"AF_NFC","","",null,null],[17,"AF_VSOCK","","",null,null],[17,"AF_XDP","","",null,null],[17,"PF_IB","","",null,null],[17,"PF_MPLS","","",null,null],[17,"PF_NFC","","",null,null],[17,"PF_VSOCK","","",null,null],[17,"PF_XDP","","",null,null],[17,"IPC_PRIVATE","","",null,null],[17,"IPC_CREAT","","",null,null],[17,"IPC_EXCL","","",null,null],[17,"IPC_NOWAIT","","",null,null],[17,"IPC_RMID","","",null,null],[17,"IPC_SET","","",null,null],[17,"IPC_STAT","","",null,null],[17,"IPC_INFO","","",null,null],[17,"MSG_STAT","","",null,null],[17,"MSG_INFO","","",null,null],[17,"MSG_NOERROR","","",null,null],[17,"MSG_EXCEPT","","",null,null],[17,"MSG_COPY","","",null,null],[17,"SHM_R","","",null,null],[17,"SHM_W","","",null,null],[17,"SHM_RDONLY","","",null,null],[17,"SHM_RND","","",null,null],[17,"SHM_REMAP","","",null,null],[17,"SHM_EXEC","","",null,null],[17,"SHM_LOCK","","",null,null],[17,"SHM_UNLOCK","","",null,null],[17,"SHM_HUGETLB","","",null,null],[17,"SHM_NORESERVE","","",null,null],[17,"EPOLLRDHUP","","",null,null],[17,"EPOLLEXCLUSIVE","","",null,null],[17,"EPOLLONESHOT","","",null,null],[17,"QFMT_VFS_OLD","","",null,null],[17,"QFMT_VFS_V0","","",null,null],[17,"QFMT_VFS_V1","","",null,null],[17,"EFD_SEMAPHORE","","",null,null],[17,"LOG_NFACILITIES","","",null,null],[17,"SEM_FAILED","","",null,null],[17,"RB_AUTOBOOT","","",null,null],[17,"RB_HALT_SYSTEM","","",null,null],[17,"RB_ENABLE_CAD","","",null,null],[17,"RB_DISABLE_CAD","","",null,null],[17,"RB_POWER_OFF","","",null,null],[17,"RB_SW_SUSPEND","","",null,null],[17,"RB_KEXEC","","",null,null],[17,"AI_PASSIVE","","",null,null],[17,"AI_CANONNAME","","",null,null],[17,"AI_NUMERICHOST","","",null,null],[17,"AI_V4MAPPED","","",null,null],[17,"AI_ALL","","",null,null],[17,"AI_ADDRCONFIG","","",null,null],[17,"AI_NUMERICSERV","","",null,null],[17,"EAI_BADFLAGS","","",null,null],[17,"EAI_NONAME","","",null,null],[17,"EAI_AGAIN","","",null,null],[17,"EAI_FAIL","","",null,null],[17,"EAI_NODATA","","",null,null],[17,"EAI_FAMILY","","",null,null],[17,"EAI_SOCKTYPE","","",null,null],[17,"EAI_SERVICE","","",null,null],[17,"EAI_MEMORY","","",null,null],[17,"EAI_SYSTEM","","",null,null],[17,"EAI_OVERFLOW","","",null,null],[17,"NI_NUMERICHOST","","",null,null],[17,"NI_NUMERICSERV","","",null,null],[17,"NI_NOFQDN","","",null,null],[17,"NI_NAMEREQD","","",null,null],[17,"NI_DGRAM","","",null,null],[17,"SYNC_FILE_RANGE_WAIT_BEFORE","","",null,null],[17,"SYNC_FILE_RANGE_WRITE","","",null,null],[17,"SYNC_FILE_RANGE_WAIT_AFTER","","",null,null],[17,"AIO_CANCELED","","",null,null],[17,"AIO_NOTCANCELED","","",null,null],[17,"AIO_ALLDONE","","",null,null],[17,"LIO_READ","","",null,null],[17,"LIO_WRITE","","",null,null],[17,"LIO_NOP","","",null,null],[17,"LIO_WAIT","","",null,null],[17,"LIO_NOWAIT","","",null,null],[17,"MREMAP_MAYMOVE","","",null,null],[17,"MREMAP_FIXED","","",null,null],[17,"PR_SET_PDEATHSIG","","",null,null],[17,"PR_GET_PDEATHSIG","","",null,null],[17,"PR_GET_DUMPABLE","","",null,null],[17,"PR_SET_DUMPABLE","","",null,null],[17,"PR_GET_UNALIGN","","",null,null],[17,"PR_SET_UNALIGN","","",null,null],[17,"PR_UNALIGN_NOPRINT","","",null,null],[17,"PR_UNALIGN_SIGBUS","","",null,null],[17,"PR_GET_KEEPCAPS","","",null,null],[17,"PR_SET_KEEPCAPS","","",null,null],[17,"PR_GET_FPEMU","","",null,null],[17,"PR_SET_FPEMU","","",null,null],[17,"PR_FPEMU_NOPRINT","","",null,null],[17,"PR_FPEMU_SIGFPE","","",null,null],[17,"PR_GET_FPEXC","","",null,null],[17,"PR_SET_FPEXC","","",null,null],[17,"PR_FP_EXC_SW_ENABLE","","",null,null],[17,"PR_FP_EXC_DIV","","",null,null],[17,"PR_FP_EXC_OVF","","",null,null],[17,"PR_FP_EXC_UND","","",null,null],[17,"PR_FP_EXC_RES","","",null,null],[17,"PR_FP_EXC_INV","","",null,null],[17,"PR_FP_EXC_DISABLED","","",null,null],[17,"PR_FP_EXC_NONRECOV","","",null,null],[17,"PR_FP_EXC_ASYNC","","",null,null],[17,"PR_FP_EXC_PRECISE","","",null,null],[17,"PR_GET_TIMING","","",null,null],[17,"PR_SET_TIMING","","",null,null],[17,"PR_TIMING_STATISTICAL","","",null,null],[17,"PR_TIMING_TIMESTAMP","","",null,null],[17,"PR_SET_NAME","","",null,null],[17,"PR_GET_NAME","","",null,null],[17,"PR_GET_ENDIAN","","",null,null],[17,"PR_SET_ENDIAN","","",null,null],[17,"PR_ENDIAN_BIG","","",null,null],[17,"PR_ENDIAN_LITTLE","","",null,null],[17,"PR_ENDIAN_PPC_LITTLE","","",null,null],[17,"PR_GET_SECCOMP","","",null,null],[17,"PR_SET_SECCOMP","","",null,null],[17,"PR_CAPBSET_READ","","",null,null],[17,"PR_CAPBSET_DROP","","",null,null],[17,"PR_GET_TSC","","",null,null],[17,"PR_SET_TSC","","",null,null],[17,"PR_TSC_ENABLE","","",null,null],[17,"PR_TSC_SIGSEGV","","",null,null],[17,"PR_GET_SECUREBITS","","",null,null],[17,"PR_SET_SECUREBITS","","",null,null],[17,"PR_SET_TIMERSLACK","","",null,null],[17,"PR_GET_TIMERSLACK","","",null,null],[17,"PR_TASK_PERF_EVENTS_DISABLE","","",null,null],[17,"PR_TASK_PERF_EVENTS_ENABLE","","",null,null],[17,"PR_MCE_KILL","","",null,null],[17,"PR_MCE_KILL_CLEAR","","",null,null],[17,"PR_MCE_KILL_SET","","",null,null],[17,"PR_MCE_KILL_LATE","","",null,null],[17,"PR_MCE_KILL_EARLY","","",null,null],[17,"PR_MCE_KILL_DEFAULT","","",null,null],[17,"PR_MCE_KILL_GET","","",null,null],[17,"PR_SET_MM","","",null,null],[17,"PR_SET_MM_START_CODE","","",null,null],[17,"PR_SET_MM_END_CODE","","",null,null],[17,"PR_SET_MM_START_DATA","","",null,null],[17,"PR_SET_MM_END_DATA","","",null,null],[17,"PR_SET_MM_START_STACK","","",null,null],[17,"PR_SET_MM_START_BRK","","",null,null],[17,"PR_SET_MM_BRK","","",null,null],[17,"PR_SET_MM_ARG_START","","",null,null],[17,"PR_SET_MM_ARG_END","","",null,null],[17,"PR_SET_MM_ENV_START","","",null,null],[17,"PR_SET_MM_ENV_END","","",null,null],[17,"PR_SET_MM_AUXV","","",null,null],[17,"PR_SET_MM_EXE_FILE","","",null,null],[17,"PR_SET_MM_MAP","","",null,null],[17,"PR_SET_MM_MAP_SIZE","","",null,null],[17,"PR_SET_PTRACER","","",null,null],[17,"PR_SET_CHILD_SUBREAPER","","",null,null],[17,"PR_GET_CHILD_SUBREAPER","","",null,null],[17,"PR_SET_NO_NEW_PRIVS","","",null,null],[17,"PR_GET_NO_NEW_PRIVS","","",null,null],[17,"PR_GET_TID_ADDRESS","","",null,null],[17,"PR_SET_THP_DISABLE","","",null,null],[17,"PR_GET_THP_DISABLE","","",null,null],[17,"PR_MPX_ENABLE_MANAGEMENT","","",null,null],[17,"PR_MPX_DISABLE_MANAGEMENT","","",null,null],[17,"PR_SET_FP_MODE","","",null,null],[17,"PR_GET_FP_MODE","","",null,null],[17,"PR_FP_MODE_FR","","",null,null],[17,"PR_FP_MODE_FRE","","",null,null],[17,"PR_CAP_AMBIENT","","",null,null],[17,"PR_CAP_AMBIENT_IS_SET","","",null,null],[17,"PR_CAP_AMBIENT_RAISE","","",null,null],[17,"PR_CAP_AMBIENT_LOWER","","",null,null],[17,"PR_CAP_AMBIENT_CLEAR_ALL","","",null,null],[17,"GRND_NONBLOCK","","",null,null],[17,"GRND_RANDOM","","",null,null],[17,"SECCOMP_MODE_DISABLED","","",null,null],[17,"SECCOMP_MODE_STRICT","","",null,null],[17,"SECCOMP_MODE_FILTER","","",null,null],[17,"ITIMER_REAL","","",null,null],[17,"ITIMER_VIRTUAL","","",null,null],[17,"ITIMER_PROF","","",null,null],[17,"TFD_CLOEXEC","","",null,null],[17,"TFD_NONBLOCK","","",null,null],[17,"TFD_TIMER_ABSTIME","","",null,null],[17,"XATTR_CREATE","","",null,null],[17,"XATTR_REPLACE","","",null,null],[17,"_POSIX_VDISABLE","","",null,null],[17,"FALLOC_FL_KEEP_SIZE","","",null,null],[17,"FALLOC_FL_PUNCH_HOLE","","",null,null],[17,"FALLOC_FL_COLLAPSE_RANGE","","",null,null],[17,"FALLOC_FL_ZERO_RANGE","","",null,null],[17,"FALLOC_FL_INSERT_RANGE","","",null,null],[17,"FALLOC_FL_UNSHARE_RANGE","","",null,null],[17,"ENOATTR","","",null,null],[17,"SO_ORIGINAL_DST","","",null,null],[17,"IP_ORIGDSTADDR","","",null,null],[17,"IP_RECVORIGDSTADDR","","",null,null],[17,"IPV6_FLOWINFO","","",null,null],[17,"IPV6_ORIGDSTADDR","","",null,null],[17,"IPV6_RECVORIGDSTADDR","","",null,null],[17,"IPV6_FLOWLABEL_MGR","","",null,null],[17,"IPV6_FLOWINFO_SEND","","",null,null],[17,"IPV6_FLOWINFO_FLOWLABEL","","",null,null],[17,"IPV6_FLOWINFO_PRIORITY","","",null,null],[17,"IUTF8","","",null,null],[17,"CMSPAR","","",null,null],[17,"MFD_CLOEXEC","","",null,null],[17,"MFD_ALLOW_SEALING","","",null,null],[17,"MFD_HUGETLB","","",null,null],[17,"PT_NULL","","",null,null],[17,"PT_LOAD","","",null,null],[17,"PT_DYNAMIC","","",null,null],[17,"PT_INTERP","","",null,null],[17,"PT_NOTE","","",null,null],[17,"PT_SHLIB","","",null,null],[17,"PT_PHDR","","",null,null],[17,"PT_TLS","","",null,null],[17,"PT_NUM","","",null,null],[17,"PT_LOOS","","",null,null],[17,"PT_GNU_EH_FRAME","","",null,null],[17,"PT_GNU_STACK","","",null,null],[17,"PT_GNU_RELRO","","",null,null],[17,"ETH_ALEN","","",null,null],[17,"ETH_HLEN","","",null,null],[17,"ETH_ZLEN","","",null,null],[17,"ETH_DATA_LEN","","",null,null],[17,"ETH_FRAME_LEN","","",null,null],[17,"ETH_FCS_LEN","","",null,null],[17,"ETH_P_LOOP","","",null,null],[17,"ETH_P_PUP","","",null,null],[17,"ETH_P_PUPAT","","",null,null],[17,"ETH_P_IP","","",null,null],[17,"ETH_P_X25","","",null,null],[17,"ETH_P_ARP","","",null,null],[17,"ETH_P_BPQ","","",null,null],[17,"ETH_P_IEEEPUP","","",null,null],[17,"ETH_P_IEEEPUPAT","","",null,null],[17,"ETH_P_BATMAN","","",null,null],[17,"ETH_P_DEC","","",null,null],[17,"ETH_P_DNA_DL","","",null,null],[17,"ETH_P_DNA_RC","","",null,null],[17,"ETH_P_DNA_RT","","",null,null],[17,"ETH_P_LAT","","",null,null],[17,"ETH_P_DIAG","","",null,null],[17,"ETH_P_CUST","","",null,null],[17,"ETH_P_SCA","","",null,null],[17,"ETH_P_TEB","","",null,null],[17,"ETH_P_RARP","","",null,null],[17,"ETH_P_ATALK","","",null,null],[17,"ETH_P_AARP","","",null,null],[17,"ETH_P_8021Q","","",null,null],[17,"ETH_P_IPX","","",null,null],[17,"ETH_P_IPV6","","",null,null],[17,"ETH_P_PAUSE","","",null,null],[17,"ETH_P_SLOW","","",null,null],[17,"ETH_P_WCCP","","",null,null],[17,"ETH_P_MPLS_UC","","",null,null],[17,"ETH_P_MPLS_MC","","",null,null],[17,"ETH_P_ATMMPOA","","",null,null],[17,"ETH_P_PPP_DISC","","",null,null],[17,"ETH_P_PPP_SES","","",null,null],[17,"ETH_P_LINK_CTL","","",null,null],[17,"ETH_P_ATMFATE","","",null,null],[17,"ETH_P_PAE","","",null,null],[17,"ETH_P_AOE","","",null,null],[17,"ETH_P_8021AD","","",null,null],[17,"ETH_P_802_EX1","","",null,null],[17,"ETH_P_TIPC","","",null,null],[17,"ETH_P_MACSEC","","",null,null],[17,"ETH_P_8021AH","","",null,null],[17,"ETH_P_MVRP","","",null,null],[17,"ETH_P_1588","","",null,null],[17,"ETH_P_PRP","","",null,null],[17,"ETH_P_FCOE","","",null,null],[17,"ETH_P_TDLS","","",null,null],[17,"ETH_P_FIP","","",null,null],[17,"ETH_P_80221","","",null,null],[17,"ETH_P_LOOPBACK","","",null,null],[17,"ETH_P_QINQ1","","",null,null],[17,"ETH_P_QINQ2","","",null,null],[17,"ETH_P_QINQ3","","",null,null],[17,"ETH_P_EDSA","","",null,null],[17,"ETH_P_AF_IUCV","","",null,null],[17,"ETH_P_802_3_MIN","","",null,null],[17,"ETH_P_802_3","","",null,null],[17,"ETH_P_AX25","","",null,null],[17,"ETH_P_ALL","","",null,null],[17,"ETH_P_802_2","","",null,null],[17,"ETH_P_SNAP","","",null,null],[17,"ETH_P_DDCMP","","",null,null],[17,"ETH_P_WAN_PPP","","",null,null],[17,"ETH_P_PPP_MP","","",null,null],[17,"ETH_P_LOCALTALK","","",null,null],[17,"ETH_P_CANFD","","",null,null],[17,"ETH_P_PPPTALK","","",null,null],[17,"ETH_P_TR_802_2","","",null,null],[17,"ETH_P_MOBITEX","","",null,null],[17,"ETH_P_CONTROL","","",null,null],[17,"ETH_P_IRDA","","",null,null],[17,"ETH_P_ECONET","","",null,null],[17,"ETH_P_HDLC","","",null,null],[17,"ETH_P_ARCNET","","",null,null],[17,"ETH_P_DSA","","",null,null],[17,"ETH_P_TRAILER","","",null,null],[17,"ETH_P_PHONET","","",null,null],[17,"ETH_P_IEEE802154","","",null,null],[17,"ETH_P_CAIF","","",null,null],[17,"POSIX_SPAWN_RESETIDS","","",null,null],[17,"POSIX_SPAWN_SETPGROUP","","",null,null],[17,"POSIX_SPAWN_SETSIGDEF","","",null,null],[17,"POSIX_SPAWN_SETSIGMASK","","",null,null],[17,"POSIX_SPAWN_SETSCHEDPARAM","","",null,null],[17,"POSIX_SPAWN_SETSCHEDULER","","",null,null],[17,"NLMSG_NOOP","","",null,null],[17,"NLMSG_ERROR","","",null,null],[17,"NLMSG_DONE","","",null,null],[17,"NLMSG_OVERRUN","","",null,null],[17,"NLMSG_MIN_TYPE","","",null,null],[17,"NFNLGRP_NONE","","",null,null],[17,"NFNLGRP_CONNTRACK_NEW","","",null,null],[17,"NFNLGRP_CONNTRACK_UPDATE","","",null,null],[17,"NFNLGRP_CONNTRACK_DESTROY","","",null,null],[17,"NFNLGRP_CONNTRACK_EXP_NEW","","",null,null],[17,"NFNLGRP_CONNTRACK_EXP_UPDATE","","",null,null],[17,"NFNLGRP_CONNTRACK_EXP_DESTROY","","",null,null],[17,"NFNLGRP_NFTABLES","","",null,null],[17,"NFNLGRP_ACCT_QUOTA","","",null,null],[17,"NFNETLINK_V0","","",null,null],[17,"NFNL_SUBSYS_NONE","","",null,null],[17,"NFNL_SUBSYS_CTNETLINK","","",null,null],[17,"NFNL_SUBSYS_CTNETLINK_EXP","","",null,null],[17,"NFNL_SUBSYS_QUEUE","","",null,null],[17,"NFNL_SUBSYS_ULOG","","",null,null],[17,"NFNL_SUBSYS_OSF","","",null,null],[17,"NFNL_SUBSYS_IPSET","","",null,null],[17,"NFNL_SUBSYS_ACCT","","",null,null],[17,"NFNL_SUBSYS_CTNETLINK_TIMEOUT","","",null,null],[17,"NFNL_SUBSYS_CTHELPER","","",null,null],[17,"NFNL_SUBSYS_NFTABLES","","",null,null],[17,"NFNL_SUBSYS_NFT_COMPAT","","",null,null],[17,"NFNL_SUBSYS_COUNT","","",null,null],[17,"NFNL_MSG_BATCH_BEGIN","","",null,null],[17,"NFNL_MSG_BATCH_END","","",null,null],[17,"NFULNL_MSG_PACKET","","",null,null],[17,"NFULNL_MSG_CONFIG","","",null,null],[17,"NFULA_UNSPEC","","",null,null],[17,"NFULA_PACKET_HDR","","",null,null],[17,"NFULA_MARK","","",null,null],[17,"NFULA_TIMESTAMP","","",null,null],[17,"NFULA_IFINDEX_INDEV","","",null,null],[17,"NFULA_IFINDEX_OUTDEV","","",null,null],[17,"NFULA_IFINDEX_PHYSINDEV","","",null,null],[17,"NFULA_IFINDEX_PHYSOUTDEV","","",null,null],[17,"NFULA_HWADDR","","",null,null],[17,"NFULA_PAYLOAD","","",null,null],[17,"NFULA_PREFIX","","",null,null],[17,"NFULA_UID","","",null,null],[17,"NFULA_SEQ","","",null,null],[17,"NFULA_SEQ_GLOBAL","","",null,null],[17,"NFULA_GID","","",null,null],[17,"NFULA_HWTYPE","","",null,null],[17,"NFULA_HWHEADER","","",null,null],[17,"NFULA_HWLEN","","",null,null],[17,"NFULA_CT","","",null,null],[17,"NFULA_CT_INFO","","",null,null],[17,"NFULNL_CFG_CMD_NONE","","",null,null],[17,"NFULNL_CFG_CMD_BIND","","",null,null],[17,"NFULNL_CFG_CMD_UNBIND","","",null,null],[17,"NFULNL_CFG_CMD_PF_BIND","","",null,null],[17,"NFULNL_CFG_CMD_PF_UNBIND","","",null,null],[17,"NFULA_CFG_UNSPEC","","",null,null],[17,"NFULA_CFG_CMD","","",null,null],[17,"NFULA_CFG_MODE","","",null,null],[17,"NFULA_CFG_NLBUFSIZ","","",null,null],[17,"NFULA_CFG_TIMEOUT","","",null,null],[17,"NFULA_CFG_QTHRESH","","",null,null],[17,"NFULA_CFG_FLAGS","","",null,null],[17,"NFULNL_COPY_NONE","","",null,null],[17,"NFULNL_COPY_META","","",null,null],[17,"NFULNL_COPY_PACKET","","",null,null],[17,"NFULNL_CFG_F_SEQ","","",null,null],[17,"NFULNL_CFG_F_SEQ_GLOBAL","","",null,null],[17,"NFULNL_CFG_F_CONNTRACK","","",null,null],[17,"NFQNL_MSG_PACKET","","",null,null],[17,"NFQNL_MSG_VERDICT","","",null,null],[17,"NFQNL_MSG_CONFIG","","",null,null],[17,"NFQNL_MSG_VERDICT_BATCH","","",null,null],[17,"NFQA_UNSPEC","","",null,null],[17,"NFQA_PACKET_HDR","","",null,null],[17,"NFQA_VERDICT_HDR","","",null,null],[17,"NFQA_MARK","","",null,null],[17,"NFQA_TIMESTAMP","","",null,null],[17,"NFQA_IFINDEX_INDEV","","",null,null],[17,"NFQA_IFINDEX_OUTDEV","","",null,null],[17,"NFQA_IFINDEX_PHYSINDEV","","",null,null],[17,"NFQA_IFINDEX_PHYSOUTDEV","","",null,null],[17,"NFQA_HWADDR","","",null,null],[17,"NFQA_PAYLOAD","","",null,null],[17,"NFQA_CT","","",null,null],[17,"NFQA_CT_INFO","","",null,null],[17,"NFQA_CAP_LEN","","",null,null],[17,"NFQA_SKB_INFO","","",null,null],[17,"NFQA_EXP","","",null,null],[17,"NFQA_UID","","",null,null],[17,"NFQA_GID","","",null,null],[17,"NFQA_SECCTX","","",null,null],[17,"NFQNL_CFG_CMD_NONE","","",null,null],[17,"NFQNL_CFG_CMD_BIND","","",null,null],[17,"NFQNL_CFG_CMD_UNBIND","","",null,null],[17,"NFQNL_CFG_CMD_PF_BIND","","",null,null],[17,"NFQNL_CFG_CMD_PF_UNBIND","","",null,null],[17,"NFQNL_COPY_NONE","","",null,null],[17,"NFQNL_COPY_META","","",null,null],[17,"NFQNL_COPY_PACKET","","",null,null],[17,"NFQA_CFG_UNSPEC","","",null,null],[17,"NFQA_CFG_CMD","","",null,null],[17,"NFQA_CFG_PARAMS","","",null,null],[17,"NFQA_CFG_QUEUE_MAXLEN","","",null,null],[17,"NFQA_CFG_MASK","","",null,null],[17,"NFQA_CFG_FLAGS","","",null,null],[17,"NFQA_CFG_F_FAIL_OPEN","","",null,null],[17,"NFQA_CFG_F_CONNTRACK","","",null,null],[17,"NFQA_CFG_F_GSO","","",null,null],[17,"NFQA_CFG_F_UID_GID","","",null,null],[17,"NFQA_CFG_F_SECCTX","","",null,null],[17,"NFQA_CFG_F_MAX","","",null,null],[17,"NFQA_SKB_CSUMNOTREADY","","",null,null],[17,"NFQA_SKB_GSO","","",null,null],[17,"NFQA_SKB_CSUM_NOTVERIFIED","","",null,null],[17,"GENL_NAMSIZ","","",null,null],[17,"GENL_MIN_ID","","",null,null],[17,"GENL_MAX_ID","","",null,null],[17,"GENL_ADMIN_PERM","","",null,null],[17,"GENL_CMD_CAP_DO","","",null,null],[17,"GENL_CMD_CAP_DUMP","","",null,null],[17,"GENL_CMD_CAP_HASPOL","","",null,null],[17,"GENL_ID_CTRL","","",null,null],[17,"CTRL_CMD_UNSPEC","","",null,null],[17,"CTRL_CMD_NEWFAMILY","","",null,null],[17,"CTRL_CMD_DELFAMILY","","",null,null],[17,"CTRL_CMD_GETFAMILY","","",null,null],[17,"CTRL_CMD_NEWOPS","","",null,null],[17,"CTRL_CMD_DELOPS","","",null,null],[17,"CTRL_CMD_GETOPS","","",null,null],[17,"CTRL_CMD_NEWMCAST_GRP","","",null,null],[17,"CTRL_CMD_DELMCAST_GRP","","",null,null],[17,"CTRL_CMD_GETMCAST_GRP","","",null,null],[17,"CTRL_ATTR_UNSPEC","","",null,null],[17,"CTRL_ATTR_FAMILY_ID","","",null,null],[17,"CTRL_ATTR_FAMILY_NAME","","",null,null],[17,"CTRL_ATTR_VERSION","","",null,null],[17,"CTRL_ATTR_HDRSIZE","","",null,null],[17,"CTRL_ATTR_MAXATTR","","",null,null],[17,"CTRL_ATTR_OPS","","",null,null],[17,"CTRL_ATTR_MCAST_GROUPS","","",null,null],[17,"CTRL_ATTR_OP_UNSPEC","","",null,null],[17,"CTRL_ATTR_OP_ID","","",null,null],[17,"CTRL_ATTR_OP_FLAGS","","",null,null],[17,"CTRL_ATTR_MCAST_GRP_UNSPEC","","",null,null],[17,"CTRL_ATTR_MCAST_GRP_NAME","","",null,null],[17,"CTRL_ATTR_MCAST_GRP_ID","","",null,null],[17,"PACKET_ADD_MEMBERSHIP","","",null,null],[17,"PACKET_DROP_MEMBERSHIP","","",null,null],[17,"PACKET_MR_MULTICAST","","",null,null],[17,"PACKET_MR_PROMISC","","",null,null],[17,"PACKET_MR_ALLMULTI","","",null,null],[17,"PACKET_MR_UNICAST","","",null,null],[17,"NF_DROP","","",null,null],[17,"NF_ACCEPT","","",null,null],[17,"NF_STOLEN","","",null,null],[17,"NF_QUEUE","","",null,null],[17,"NF_REPEAT","","",null,null],[17,"NF_STOP","","",null,null],[17,"NF_MAX_VERDICT","","",null,null],[17,"NF_VERDICT_MASK","","",null,null],[17,"NF_VERDICT_FLAG_QUEUE_BYPASS","","",null,null],[17,"NF_VERDICT_QMASK","","",null,null],[17,"NF_VERDICT_QBITS","","",null,null],[17,"NF_VERDICT_BITS","","",null,null],[17,"NF_INET_PRE_ROUTING","","",null,null],[17,"NF_INET_LOCAL_IN","","",null,null],[17,"NF_INET_FORWARD","","",null,null],[17,"NF_INET_LOCAL_OUT","","",null,null],[17,"NF_INET_POST_ROUTING","","",null,null],[17,"NF_INET_NUMHOOKS","","",null,null],[17,"NFPROTO_UNSPEC","","",null,null],[17,"NFPROTO_IPV4","","",null,null],[17,"NFPROTO_ARP","","",null,null],[17,"NFPROTO_BRIDGE","","",null,null],[17,"NFPROTO_IPV6","","",null,null],[17,"NFPROTO_DECNET","","",null,null],[17,"NFPROTO_NUMPROTO","","",null,null],[17,"NF_IP_PRE_ROUTING","","",null,null],[17,"NF_IP_LOCAL_IN","","",null,null],[17,"NF_IP_FORWARD","","",null,null],[17,"NF_IP_LOCAL_OUT","","",null,null],[17,"NF_IP_POST_ROUTING","","",null,null],[17,"NF_IP_NUMHOOKS","","",null,null],[17,"NF_IP_PRI_FIRST","","",null,null],[17,"NF_IP_PRI_CONNTRACK_DEFRAG","","",null,null],[17,"NF_IP_PRI_RAW","","",null,null],[17,"NF_IP_PRI_SELINUX_FIRST","","",null,null],[17,"NF_IP_PRI_CONNTRACK","","",null,null],[17,"NF_IP_PRI_MANGLE","","",null,null],[17,"NF_IP_PRI_NAT_DST","","",null,null],[17,"NF_IP_PRI_FILTER","","",null,null],[17,"NF_IP_PRI_SECURITY","","",null,null],[17,"NF_IP_PRI_NAT_SRC","","",null,null],[17,"NF_IP_PRI_SELINUX_LAST","","",null,null],[17,"NF_IP_PRI_CONNTRACK_HELPER","","",null,null],[17,"NF_IP_PRI_CONNTRACK_CONFIRM","","",null,null],[17,"NF_IP_PRI_LAST","","",null,null],[17,"NF_IP6_PRE_ROUTING","","",null,null],[17,"NF_IP6_LOCAL_IN","","",null,null],[17,"NF_IP6_FORWARD","","",null,null],[17,"NF_IP6_LOCAL_OUT","","",null,null],[17,"NF_IP6_POST_ROUTING","","",null,null],[17,"NF_IP6_NUMHOOKS","","",null,null],[17,"NF_IP6_PRI_FIRST","","",null,null],[17,"NF_IP6_PRI_CONNTRACK_DEFRAG","","",null,null],[17,"NF_IP6_PRI_RAW","","",null,null],[17,"NF_IP6_PRI_SELINUX_FIRST","","",null,null],[17,"NF_IP6_PRI_CONNTRACK","","",null,null],[17,"NF_IP6_PRI_MANGLE","","",null,null],[17,"NF_IP6_PRI_NAT_DST","","",null,null],[17,"NF_IP6_PRI_FILTER","","",null,null],[17,"NF_IP6_PRI_SECURITY","","",null,null],[17,"NF_IP6_PRI_NAT_SRC","","",null,null],[17,"NF_IP6_PRI_SELINUX_LAST","","",null,null],[17,"NF_IP6_PRI_CONNTRACK_HELPER","","",null,null],[17,"NF_IP6_PRI_LAST","","",null,null],[17,"IP6T_SO_ORIGINAL_DST","","",null,null],[17,"SIOCADDRT","","",null,null],[17,"SIOCDELRT","","",null,null],[17,"SIOCGIFNAME","","",null,null],[17,"SIOCSIFLINK","","",null,null],[17,"SIOCGIFCONF","","",null,null],[17,"SIOCGIFFLAGS","","",null,null],[17,"SIOCSIFFLAGS","","",null,null],[17,"SIOCGIFADDR","","",null,null],[17,"SIOCSIFADDR","","",null,null],[17,"SIOCGIFDSTADDR","","",null,null],[17,"SIOCSIFDSTADDR","","",null,null],[17,"SIOCGIFBRDADDR","","",null,null],[17,"SIOCSIFBRDADDR","","",null,null],[17,"SIOCGIFNETMASK","","",null,null],[17,"SIOCSIFNETMASK","","",null,null],[17,"SIOCGIFMETRIC","","",null,null],[17,"SIOCSIFMETRIC","","",null,null],[17,"SIOCGIFMEM","","",null,null],[17,"SIOCSIFMEM","","",null,null],[17,"SIOCGIFMTU","","",null,null],[17,"SIOCSIFMTU","","",null,null],[17,"SIOCSIFHWADDR","","",null,null],[17,"SIOCGIFENCAP","","",null,null],[17,"SIOCSIFENCAP","","",null,null],[17,"SIOCGIFHWADDR","","",null,null],[17,"SIOCGIFSLAVE","","",null,null],[17,"SIOCSIFSLAVE","","",null,null],[17,"SIOCADDMULTI","","",null,null],[17,"SIOCDELMULTI","","",null,null],[17,"SIOCDARP","","",null,null],[17,"SIOCGARP","","",null,null],[17,"SIOCSARP","","",null,null],[17,"SIOCDRARP","","",null,null],[17,"SIOCGRARP","","",null,null],[17,"SIOCSRARP","","",null,null],[17,"SIOCGIFMAP","","",null,null],[17,"SIOCSIFMAP","","",null,null],[17,"PTRACE_EVENT_STOP","","",null,null],[17,"IPTOS_TOS_MASK","","",null,null],[17,"IPTOS_PREC_MASK","","",null,null],[17,"IPTOS_ECN_NOT_ECT","","",null,null],[17,"RTF_UP","","",null,null],[17,"RTF_GATEWAY","","",null,null],[17,"RTF_HOST","","",null,null],[17,"RTF_REINSTATE","","",null,null],[17,"RTF_DYNAMIC","","",null,null],[17,"RTF_MODIFIED","","",null,null],[17,"RTF_MTU","","",null,null],[17,"RTF_MSS","","",null,null],[17,"RTF_WINDOW","","",null,null],[17,"RTF_IRTT","","",null,null],[17,"RTF_REJECT","","",null,null],[17,"RTF_STATIC","","",null,null],[17,"RTF_XRESOLVE","","",null,null],[17,"RTF_NOFORWARD","","",null,null],[17,"RTF_THROW","","",null,null],[17,"RTF_NOPMTUDISC","","",null,null],[17,"RTF_DEFAULT","","",null,null],[17,"RTF_ALLONLINK","","",null,null],[17,"RTF_ADDRCONF","","",null,null],[17,"RTF_LINKRT","","",null,null],[17,"RTF_NONEXTHOP","","",null,null],[17,"RTF_CACHE","","",null,null],[17,"RTF_FLOW","","",null,null],[17,"RTF_POLICY","","",null,null],[17,"RTCF_VALVE","","",null,null],[17,"RTCF_MASQ","","",null,null],[17,"RTCF_NAT","","",null,null],[17,"RTCF_DOREDIRECT","","",null,null],[17,"RTCF_LOG","","",null,null],[17,"RTCF_DIRECTSRC","","",null,null],[17,"RTF_LOCAL","","",null,null],[17,"RTF_INTERFACE","","",null,null],[17,"RTF_MULTICAST","","",null,null],[17,"RTF_BROADCAST","","",null,null],[17,"RTF_NAT","","",null,null],[17,"RTF_ADDRCLASSMASK","","",null,null],[17,"RT_CLASS_UNSPEC","","",null,null],[17,"RT_CLASS_DEFAULT","","",null,null],[17,"RT_CLASS_MAIN","","",null,null],[17,"RT_CLASS_LOCAL","","",null,null],[17,"RT_CLASS_MAX","","",null,null],[17,"NUD_NONE","","",null,null],[17,"NUD_INCOMPLETE","","",null,null],[17,"NUD_REACHABLE","","",null,null],[17,"NUD_STALE","","",null,null],[17,"NUD_DELAY","","",null,null],[17,"NUD_PROBE","","",null,null],[17,"NUD_FAILED","","",null,null],[17,"NUD_NOARP","","",null,null],[17,"NUD_PERMANENT","","",null,null],[17,"NTF_USE","","",null,null],[17,"NTF_SELF","","",null,null],[17,"NTF_MASTER","","",null,null],[17,"NTF_PROXY","","",null,null],[17,"NTF_ROUTER","","",null,null],[17,"NDA_UNSPEC","","",null,null],[17,"NDA_DST","","",null,null],[17,"NDA_LLADDR","","",null,null],[17,"NDA_CACHEINFO","","",null,null],[17,"NDA_PROBES","","",null,null],[17,"NDA_VLAN","","",null,null],[17,"NDA_PORT","","",null,null],[17,"NDA_VNI","","",null,null],[17,"NDA_IFINDEX","","",null,null],[17,"NLA_ALIGNTO","","",null,null],[17,"NETLINK_ROUTE","","",null,null],[17,"NETLINK_UNUSED","","",null,null],[17,"NETLINK_USERSOCK","","",null,null],[17,"NETLINK_FIREWALL","","",null,null],[17,"NETLINK_SOCK_DIAG","","",null,null],[17,"NETLINK_NFLOG","","",null,null],[17,"NETLINK_XFRM","","",null,null],[17,"NETLINK_SELINUX","","",null,null],[17,"NETLINK_ISCSI","","",null,null],[17,"NETLINK_AUDIT","","",null,null],[17,"NETLINK_FIB_LOOKUP","","",null,null],[17,"NETLINK_CONNECTOR","","",null,null],[17,"NETLINK_NETFILTER","","",null,null],[17,"NETLINK_IP6_FW","","",null,null],[17,"NETLINK_DNRTMSG","","",null,null],[17,"NETLINK_KOBJECT_UEVENT","","",null,null],[17,"NETLINK_GENERIC","","",null,null],[17,"NETLINK_SCSITRANSPORT","","",null,null],[17,"NETLINK_ECRYPTFS","","",null,null],[17,"NETLINK_RDMA","","",null,null],[17,"NETLINK_CRYPTO","","",null,null],[17,"NETLINK_INET_DIAG","","",null,null],[17,"NLM_F_REQUEST","","",null,null],[17,"NLM_F_MULTI","","",null,null],[17,"NLM_F_ACK","","",null,null],[17,"NLM_F_ECHO","","",null,null],[17,"NLM_F_DUMP_INTR","","",null,null],[17,"NLM_F_DUMP_FILTERED","","",null,null],[17,"NLM_F_ROOT","","",null,null],[17,"NLM_F_MATCH","","",null,null],[17,"NLM_F_ATOMIC","","",null,null],[17,"NLM_F_DUMP","","",null,null],[17,"NLM_F_REPLACE","","",null,null],[17,"NLM_F_EXCL","","",null,null],[17,"NLM_F_CREATE","","",null,null],[17,"NLM_F_APPEND","","",null,null],[17,"NETLINK_ADD_MEMBERSHIP","","",null,null],[17,"NETLINK_DROP_MEMBERSHIP","","",null,null],[17,"NETLINK_PKTINFO","","",null,null],[17,"NETLINK_BROADCAST_ERROR","","",null,null],[17,"NETLINK_NO_ENOBUFS","","",null,null],[17,"NETLINK_RX_RING","","",null,null],[17,"NETLINK_TX_RING","","",null,null],[17,"NETLINK_LISTEN_ALL_NSID","","",null,null],[17,"NETLINK_LIST_MEMBERSHIPS","","",null,null],[17,"NETLINK_CAP_ACK","","",null,null],[17,"NLA_F_NESTED","","",null,null],[17,"NLA_F_NET_BYTEORDER","","",null,null],[17,"NLA_TYPE_MASK","","",null,null],[17,"TCA_UNSPEC","","",null,null],[17,"TCA_KIND","","",null,null],[17,"TCA_OPTIONS","","",null,null],[17,"TCA_STATS","","",null,null],[17,"TCA_XSTATS","","",null,null],[17,"TCA_RATE","","",null,null],[17,"TCA_FCNT","","",null,null],[17,"TCA_STATS2","","",null,null],[17,"TCA_STAB","","",null,null],[17,"RTM_NEWLINK","","",null,null],[17,"RTM_DELLINK","","",null,null],[17,"RTM_GETLINK","","",null,null],[17,"RTM_SETLINK","","",null,null],[17,"RTM_NEWADDR","","",null,null],[17,"RTM_DELADDR","","",null,null],[17,"RTM_GETADDR","","",null,null],[17,"RTM_NEWROUTE","","",null,null],[17,"RTM_DELROUTE","","",null,null],[17,"RTM_GETROUTE","","",null,null],[17,"RTM_NEWNEIGH","","",null,null],[17,"RTM_DELNEIGH","","",null,null],[17,"RTM_GETNEIGH","","",null,null],[17,"RTM_NEWRULE","","",null,null],[17,"RTM_DELRULE","","",null,null],[17,"RTM_GETRULE","","",null,null],[17,"RTM_NEWQDISC","","",null,null],[17,"RTM_DELQDISC","","",null,null],[17,"RTM_GETQDISC","","",null,null],[17,"RTM_NEWTCLASS","","",null,null],[17,"RTM_DELTCLASS","","",null,null],[17,"RTM_GETTCLASS","","",null,null],[17,"RTM_NEWTFILTER","","",null,null],[17,"RTM_DELTFILTER","","",null,null],[17,"RTM_GETTFILTER","","",null,null],[17,"RTM_NEWACTION","","",null,null],[17,"RTM_DELACTION","","",null,null],[17,"RTM_GETACTION","","",null,null],[17,"RTM_NEWPREFIX","","",null,null],[17,"RTM_GETMULTICAST","","",null,null],[17,"RTM_GETANYCAST","","",null,null],[17,"RTM_NEWNEIGHTBL","","",null,null],[17,"RTM_GETNEIGHTBL","","",null,null],[17,"RTM_SETNEIGHTBL","","",null,null],[17,"RTM_NEWNDUSEROPT","","",null,null],[17,"RTM_NEWADDRLABEL","","",null,null],[17,"RTM_DELADDRLABEL","","",null,null],[17,"RTM_GETADDRLABEL","","",null,null],[17,"RTM_GETDCB","","",null,null],[17,"RTM_SETDCB","","",null,null],[17,"RTM_NEWNETCONF","","",null,null],[17,"RTM_GETNETCONF","","",null,null],[17,"RTM_NEWMDB","","",null,null],[17,"RTM_DELMDB","","",null,null],[17,"RTM_GETMDB","","",null,null],[17,"RTM_NEWNSID","","",null,null],[17,"RTM_DELNSID","","",null,null],[17,"RTM_GETNSID","","",null,null],[17,"RTM_F_NOTIFY","","",null,null],[17,"RTM_F_CLONED","","",null,null],[17,"RTM_F_EQUALIZE","","",null,null],[17,"RTM_F_PREFIX","","",null,null],[17,"RTA_UNSPEC","","",null,null],[17,"RTA_DST","","",null,null],[17,"RTA_SRC","","",null,null],[17,"RTA_IIF","","",null,null],[17,"RTA_OIF","","",null,null],[17,"RTA_GATEWAY","","",null,null],[17,"RTA_PRIORITY","","",null,null],[17,"RTA_PREFSRC","","",null,null],[17,"RTA_METRICS","","",null,null],[17,"RTA_MULTIPATH","","",null,null],[17,"RTA_PROTOINFO","","",null,null],[17,"RTA_FLOW","","",null,null],[17,"RTA_CACHEINFO","","",null,null],[17,"RTA_SESSION","","",null,null],[17,"RTA_MP_ALGO","","",null,null],[17,"RTA_TABLE","","",null,null],[17,"RTA_MARK","","",null,null],[17,"RTA_MFC_STATS","","",null,null],[17,"RTN_UNSPEC","","",null,null],[17,"RTN_UNICAST","","",null,null],[17,"RTN_LOCAL","","",null,null],[17,"RTN_BROADCAST","","",null,null],[17,"RTN_ANYCAST","","",null,null],[17,"RTN_MULTICAST","","",null,null],[17,"RTN_BLACKHOLE","","",null,null],[17,"RTN_UNREACHABLE","","",null,null],[17,"RTN_PROHIBIT","","",null,null],[17,"RTN_THROW","","",null,null],[17,"RTN_NAT","","",null,null],[17,"RTN_XRESOLVE","","",null,null],[17,"RTPROT_UNSPEC","","",null,null],[17,"RTPROT_REDIRECT","","",null,null],[17,"RTPROT_KERNEL","","",null,null],[17,"RTPROT_BOOT","","",null,null],[17,"RTPROT_STATIC","","",null,null],[17,"RT_SCOPE_UNIVERSE","","",null,null],[17,"RT_SCOPE_SITE","","",null,null],[17,"RT_SCOPE_LINK","","",null,null],[17,"RT_SCOPE_HOST","","",null,null],[17,"RT_SCOPE_NOWHERE","","",null,null],[17,"RT_TABLE_UNSPEC","","",null,null],[17,"RT_TABLE_COMPAT","","",null,null],[17,"RT_TABLE_DEFAULT","","",null,null],[17,"RT_TABLE_MAIN","","",null,null],[17,"RT_TABLE_LOCAL","","",null,null],[17,"RTMSG_OVERRUN","","",null,null],[17,"RTMSG_NEWDEVICE","","",null,null],[17,"RTMSG_DELDEVICE","","",null,null],[17,"RTMSG_NEWROUTE","","",null,null],[17,"RTMSG_DELROUTE","","",null,null],[17,"RTMSG_NEWRULE","","",null,null],[17,"RTMSG_DELRULE","","",null,null],[17,"RTMSG_CONTROL","","",null,null],[17,"RTMSG_AR_FAILED","","",null,null],[17,"MAX_ADDR_LEN","","",null,null],[17,"ARPD_UPDATE","","",null,null],[17,"ARPD_LOOKUP","","",null,null],[17,"ARPD_FLUSH","","",null,null],[17,"ATF_MAGIC","","",null,null],[17,"SO_TIMESTAMPING","","",null,null],[17,"SCM_TIMESTAMPING","","",null,null],[17,"MODULE_INIT_IGNORE_MODVERSIONS","","",null,null],[17,"MODULE_INIT_IGNORE_VERMAGIC","","",null,null],[17,"SOF_TIMESTAMPING_TX_HARDWARE","","",null,null],[17,"SOF_TIMESTAMPING_TX_SOFTWARE","","",null,null],[17,"SOF_TIMESTAMPING_RX_HARDWARE","","",null,null],[17,"SOF_TIMESTAMPING_RX_SOFTWARE","","",null,null],[17,"SOF_TIMESTAMPING_SOFTWARE","","",null,null],[17,"SOF_TIMESTAMPING_SYS_HARDWARE","","",null,null],[17,"SOF_TIMESTAMPING_RAW_HARDWARE","","",null,null],[17,"ALG_SET_KEY","","",null,null],[17,"ALG_SET_IV","","",null,null],[17,"ALG_SET_OP","","",null,null],[17,"ALG_SET_AEAD_ASSOCLEN","","",null,null],[17,"ALG_SET_AEAD_AUTHSIZE","","",null,null],[17,"ALG_OP_DECRYPT","","",null,null],[17,"ALG_OP_ENCRYPT","","",null,null],[17,"UDP_CORK","","",null,null],[17,"UDP_ENCAP","","",null,null],[17,"UDP_NO_CHECK6_TX","","",null,null],[17,"UDP_NO_CHECK6_RX","","",null,null],[17,"UDP_SEGMENT","","",null,null],[17,"UDP_GRO","","",null,null],[17,"MAP_SHARED_VALIDATE","","",null,null],[17,"MAP_FIXED_NOREPLACE","","",null,null],[17,"VMADDR_CID_ANY","","",null,null],[17,"VMADDR_CID_HYPERVISOR","","",null,null],[17,"VMADDR_CID_RESERVED","","",null,null],[17,"VMADDR_CID_LOCAL","","",null,null],[17,"VMADDR_CID_HOST","","",null,null],[17,"VMADDR_PORT_ANY","","",null,null],[17,"IN_ACCESS","","",null,null],[17,"IN_MODIFY","","",null,null],[17,"IN_ATTRIB","","",null,null],[17,"IN_CLOSE_WRITE","","",null,null],[17,"IN_CLOSE_NOWRITE","","",null,null],[17,"IN_CLOSE","","",null,null],[17,"IN_OPEN","","",null,null],[17,"IN_MOVED_FROM","","",null,null],[17,"IN_MOVED_TO","","",null,null],[17,"IN_MOVE","","",null,null],[17,"IN_CREATE","","",null,null],[17,"IN_DELETE","","",null,null],[17,"IN_DELETE_SELF","","",null,null],[17,"IN_MOVE_SELF","","",null,null],[17,"IN_UNMOUNT","","",null,null],[17,"IN_Q_OVERFLOW","","",null,null],[17,"IN_IGNORED","","",null,null],[17,"IN_ONLYDIR","","",null,null],[17,"IN_DONT_FOLLOW","","",null,null],[17,"KEY_SPEC_THREAD_KEYRING","","",null,null],[17,"KEY_SPEC_PROCESS_KEYRING","","",null,null],[17,"KEY_SPEC_SESSION_KEYRING","","",null,null],[17,"KEY_SPEC_USER_KEYRING","","",null,null],[17,"KEY_SPEC_USER_SESSION_KEYRING","","",null,null],[17,"KEY_SPEC_GROUP_KEYRING","","",null,null],[17,"KEY_SPEC_REQKEY_AUTH_KEY","","",null,null],[17,"KEY_SPEC_REQUESTOR_KEYRING","","",null,null],[17,"KEY_REQKEY_DEFL_NO_CHANGE","","",null,null],[17,"KEY_REQKEY_DEFL_DEFAULT","","",null,null],[17,"KEY_REQKEY_DEFL_THREAD_KEYRING","","",null,null],[17,"KEY_REQKEY_DEFL_PROCESS_KEYRING","","",null,null],[17,"KEY_REQKEY_DEFL_SESSION_KEYRING","","",null,null],[17,"KEY_REQKEY_DEFL_USER_KEYRING","","",null,null],[17,"KEY_REQKEY_DEFL_USER_SESSION_KEYRING","","",null,null],[17,"KEY_REQKEY_DEFL_GROUP_KEYRING","","",null,null],[17,"KEY_REQKEY_DEFL_REQUESTOR_KEYRING","","",null,null],[17,"KEYCTL_GET_KEYRING_ID","","",null,null],[17,"KEYCTL_JOIN_SESSION_KEYRING","","",null,null],[17,"KEYCTL_UPDATE","","",null,null],[17,"KEYCTL_REVOKE","","",null,null],[17,"KEYCTL_CHOWN","","",null,null],[17,"KEYCTL_SETPERM","","",null,null],[17,"KEYCTL_DESCRIBE","","",null,null],[17,"KEYCTL_CLEAR","","",null,null],[17,"KEYCTL_LINK","","",null,null],[17,"KEYCTL_UNLINK","","",null,null],[17,"KEYCTL_SEARCH","","",null,null],[17,"KEYCTL_READ","","",null,null],[17,"KEYCTL_INSTANTIATE","","",null,null],[17,"KEYCTL_NEGATE","","",null,null],[17,"KEYCTL_SET_REQKEY_KEYRING","","",null,null],[17,"KEYCTL_SET_TIMEOUT","","",null,null],[17,"KEYCTL_ASSUME_AUTHORITY","","",null,null],[17,"KEYCTL_GET_SECURITY","","",null,null],[17,"KEYCTL_SESSION_TO_PARENT","","",null,null],[17,"KEYCTL_REJECT","","",null,null],[17,"KEYCTL_INSTANTIATE_IOV","","",null,null],[17,"KEYCTL_INVALIDATE","","",null,null],[17,"KEYCTL_GET_PERSISTENT","","",null,null],[17,"IN_ISDIR","","",null,null],[17,"IN_ONESHOT","","",null,null],[17,"IN_ALL_EVENTS","","",null,null],[17,"IN_CLOEXEC","","",null,null],[17,"IN_NONBLOCK","","",null,null],[17,"FAN_ACCESS","","",null,null],[17,"FAN_MODIFY","","",null,null],[17,"FAN_CLOSE_WRITE","","",null,null],[17,"FAN_CLOSE_NOWRITE","","",null,null],[17,"FAN_OPEN","","",null,null],[17,"FAN_Q_OVERFLOW","","",null,null],[17,"FAN_OPEN_PERM","","",null,null],[17,"FAN_ACCESS_PERM","","",null,null],[17,"FAN_ONDIR","","",null,null],[17,"FAN_EVENT_ON_CHILD","","",null,null],[17,"FAN_CLOSE","","",null,null],[17,"FAN_CLOEXEC","","",null,null],[17,"FAN_NONBLOCK","","",null,null],[17,"FAN_CLASS_NOTIF","","",null,null],[17,"FAN_CLASS_CONTENT","","",null,null],[17,"FAN_CLASS_PRE_CONTENT","","",null,null],[17,"FAN_UNLIMITED_QUEUE","","",null,null],[17,"FAN_UNLIMITED_MARKS","","",null,null],[17,"FAN_MARK_ADD","","",null,null],[17,"FAN_MARK_REMOVE","","",null,null],[17,"FAN_MARK_DONT_FOLLOW","","",null,null],[17,"FAN_MARK_ONLYDIR","","",null,null],[17,"FAN_MARK_INODE","","",null,null],[17,"FAN_MARK_MOUNT","","",null,null],[17,"FAN_MARK_FILESYSTEM","","",null,null],[17,"FAN_MARK_IGNORED_MASK","","",null,null],[17,"FAN_MARK_IGNORED_SURV_MODIFY","","",null,null],[17,"FAN_MARK_FLUSH","","",null,null],[17,"FANOTIFY_METADATA_VERSION","","",null,null],[17,"FAN_ALLOW","","",null,null],[17,"FAN_DENY","","",null,null],[17,"FAN_NOFD","","",null,null],[17,"FUTEX_WAIT","","",null,null],[17,"FUTEX_WAKE","","",null,null],[17,"FUTEX_FD","","",null,null],[17,"FUTEX_REQUEUE","","",null,null],[17,"FUTEX_CMP_REQUEUE","","",null,null],[17,"FUTEX_WAKE_OP","","",null,null],[17,"FUTEX_LOCK_PI","","",null,null],[17,"FUTEX_UNLOCK_PI","","",null,null],[17,"FUTEX_TRYLOCK_PI","","",null,null],[17,"FUTEX_WAIT_BITSET","","",null,null],[17,"FUTEX_WAKE_BITSET","","",null,null],[17,"FUTEX_WAIT_REQUEUE_PI","","",null,null],[17,"FUTEX_CMP_REQUEUE_PI","","",null,null],[17,"FUTEX_PRIVATE_FLAG","","",null,null],[17,"FUTEX_CLOCK_REALTIME","","",null,null],[17,"FUTEX_CMD_MASK","","",null,null],[17,"LINUX_REBOOT_MAGIC1","","",null,null],[17,"LINUX_REBOOT_MAGIC2","","",null,null],[17,"LINUX_REBOOT_MAGIC2A","","",null,null],[17,"LINUX_REBOOT_MAGIC2B","","",null,null],[17,"LINUX_REBOOT_MAGIC2C","","",null,null],[17,"LINUX_REBOOT_CMD_RESTART","","",null,null],[17,"LINUX_REBOOT_CMD_HALT","","",null,null],[17,"LINUX_REBOOT_CMD_CAD_ON","","",null,null],[17,"LINUX_REBOOT_CMD_CAD_OFF","","",null,null],[17,"LINUX_REBOOT_CMD_POWER_OFF","","",null,null],[17,"LINUX_REBOOT_CMD_RESTART2","","",null,null],[17,"LINUX_REBOOT_CMD_SW_SUSPEND","","",null,null],[17,"LINUX_REBOOT_CMD_KEXEC","","",null,null],[17,"REG_EXTENDED","","",null,null],[17,"REG_ICASE","","",null,null],[17,"REG_NEWLINE","","",null,null],[17,"REG_NOSUB","","",null,null],[17,"REG_NOTBOL","","",null,null],[17,"REG_NOTEOL","","",null,null],[17,"REG_ENOSYS","","",null,null],[17,"REG_NOMATCH","","",null,null],[17,"REG_BADPAT","","",null,null],[17,"REG_ECOLLATE","","",null,null],[17,"REG_ECTYPE","","",null,null],[17,"REG_EESCAPE","","",null,null],[17,"REG_ESUBREG","","",null,null],[17,"REG_EBRACK","","",null,null],[17,"REG_EPAREN","","",null,null],[17,"REG_EBRACE","","",null,null],[17,"REG_BADBR","","",null,null],[17,"REG_ERANGE","","",null,null],[17,"REG_ESPACE","","",null,null],[17,"REG_BADRPT","","",null,null],[17,"SO_EE_ORIGIN_NONE","","",null,null],[17,"SO_EE_ORIGIN_LOCAL","","",null,null],[17,"SO_EE_ORIGIN_ICMP","","",null,null],[17,"SO_EE_ORIGIN_ICMP6","","",null,null],[17,"SO_EE_ORIGIN_TXSTATUS","","",null,null],[17,"SO_EE_ORIGIN_TIMESTAMPING","","",null,null],[17,"EPERM","","",null,null],[17,"ENOENT","","",null,null],[17,"ESRCH","","",null,null],[17,"EINTR","","",null,null],[17,"EIO","","",null,null],[17,"ENXIO","","",null,null],[17,"E2BIG","","",null,null],[17,"ENOEXEC","","",null,null],[17,"EBADF","","",null,null],[17,"ECHILD","","",null,null],[17,"EAGAIN","","",null,null],[17,"ENOMEM","","",null,null],[17,"EACCES","","",null,null],[17,"EFAULT","","",null,null],[17,"ENOTBLK","","",null,null],[17,"EBUSY","","",null,null],[17,"EEXIST","","",null,null],[17,"EXDEV","","",null,null],[17,"ENODEV","","",null,null],[17,"ENOTDIR","","",null,null],[17,"EISDIR","","",null,null],[17,"EINVAL","","",null,null],[17,"ENFILE","","",null,null],[17,"EMFILE","","",null,null],[17,"ENOTTY","","",null,null],[17,"ETXTBSY","","",null,null],[17,"EFBIG","","",null,null],[17,"ENOSPC","","",null,null],[17,"ESPIPE","","",null,null],[17,"EROFS","","",null,null],[17,"EMLINK","","",null,null],[17,"EPIPE","","",null,null],[17,"EDOM","","",null,null],[17,"ERANGE","","",null,null],[17,"EWOULDBLOCK","","",null,null],[5,"NLA_ALIGN","","",null,[[["c_int",6]],["c_int",6]]],[5,"CMSG_NXTHDR","","",null,[[]]],[5,"CPU_ALLOC_SIZE","","",null,[[["c_int",6]],["size_t",6]]],[5,"CPU_ZERO","","",null,[[["cpu_set_t",3]]]],[5,"CPU_SET","","",null,[[["cpu_set_t",3]]]],[5,"CPU_CLR","","",null,[[["cpu_set_t",3]]]],[5,"CPU_ISSET","","",null,[[["cpu_set_t",3]]]],[5,"CPU_COUNT_S","","",null,[[["cpu_set_t",3]],["c_int",6]]],[5,"CPU_COUNT","","",null,[[["cpu_set_t",3]],["c_int",6]]],[5,"CPU_EQUAL","","",null,[[["cpu_set_t",3]]]],[5,"major","","",null,[[["dev_t",6]],["c_uint",6]]],[5,"minor","","",null,[[["dev_t",6]],["c_uint",6]]],[5,"makedev","","",null,[[["c_uint",6]],["dev_t",6]]],[5,"IPTOS_TOS","","",null,[[]]],[5,"IPTOS_PREC","","",null,[[]]],[5,"RT_TOS","","",null,[[]]],[5,"RT_ADDRCLASS","","",null,[[]]],[5,"RT_LOCALADDR","","",null,[[]]],[5,"SO_EE_OFFENDER","","",null,[[]]],[6,"pthread_t","","",null,null],[6,"__priority_which_t","","",null,null],[6,"__rlimit_resource_t","","",null,null],[6,"Lmid_t","","",null,null],[6,"regoff_t","","",null,null],[3,"statx","","",null,null],[12,"stx_mask","","",92,null],[12,"stx_blksize","","",92,null],[12,"stx_attributes","","",92,null],[12,"stx_nlink","","",92,null],[12,"stx_uid","","",92,null],[12,"stx_gid","","",92,null],[12,"stx_mode","","",92,null],[12,"__statx_pad1","","",92,null],[12,"stx_ino","","",92,null],[12,"stx_size","","",92,null],[12,"stx_blocks","","",92,null],[12,"stx_attributes_mask","","",92,null],[12,"stx_atime","","",92,null],[12,"stx_btime","","",92,null],[12,"stx_ctime","","",92,null],[12,"stx_mtime","","",92,null],[12,"stx_rdev_major","","",92,null],[12,"stx_rdev_minor","","",92,null],[12,"stx_dev_major","","",92,null],[12,"stx_dev_minor","","",92,null],[12,"__statx_pad2","","",92,null],[3,"statx_timestamp","","",null,null],[12,"tv_sec","","",93,null],[12,"tv_nsec","","",93,null],[12,"__statx_timestamp_pad1","","",93,null],[3,"aiocb","","",null,null],[12,"aio_fildes","","",94,null],[12,"aio_lio_opcode","","",94,null],[12,"aio_reqprio","","",94,null],[12,"aio_buf","","",94,null],[12,"aio_nbytes","","",94,null],[12,"aio_sigevent","","",94,null],[12,"aio_offset","","",94,null],[3,"__exit_status","","",null,null],[12,"e_termination","","",95,null],[12,"e_exit","","",95,null],[3,"__timeval","","",null,null],[12,"tv_sec","","",96,null],[12,"tv_usec","","",96,null],[3,"glob64_t","","",null,null],[12,"gl_pathc","","",97,null],[12,"gl_pathv","","",97,null],[12,"gl_offs","","",97,null],[12,"gl_flags","","",97,null],[3,"msghdr","","",null,null],[12,"msg_name","","",98,null],[12,"msg_namelen","","",98,null],[12,"msg_iov","","",98,null],[12,"msg_iovlen","","",98,null],[12,"msg_control","","",98,null],[12,"msg_controllen","","",98,null],[12,"msg_flags","","",98,null],[3,"cmsghdr","","",null,null],[12,"cmsg_len","","",99,null],[12,"cmsg_level","","",99,null],[12,"cmsg_type","","",99,null],[3,"termios","","",null,null],[12,"c_iflag","","",100,null],[12,"c_oflag","","",100,null],[12,"c_cflag","","",100,null],[12,"c_lflag","","",100,null],[12,"c_line","","",100,null],[12,"c_cc","","",100,null],[12,"c_ispeed","","",100,null],[12,"c_ospeed","","",100,null],[3,"mallinfo","","",null,null],[12,"arena","","",101,null],[12,"ordblks","","",101,null],[12,"smblks","","",101,null],[12,"hblks","","",101,null],[12,"hblkhd","","",101,null],[12,"usmblks","","",101,null],[12,"fsmblks","","",101,null],[12,"uordblks","","",101,null],[12,"fordblks","","",101,null],[12,"keepcost","","",101,null],[3,"nlmsghdr","","",null,null],[12,"nlmsg_len","","",102,null],[12,"nlmsg_type","","",102,null],[12,"nlmsg_flags","","",102,null],[12,"nlmsg_seq","","",102,null],[12,"nlmsg_pid","","",102,null],[3,"nlmsgerr","","",null,null],[12,"error","","",103,null],[12,"msg","","",103,null],[3,"nl_pktinfo","","",null,null],[12,"group","","",104,null],[3,"nl_mmap_req","","",null,null],[12,"nm_block_size","","",105,null],[12,"nm_block_nr","","",105,null],[12,"nm_frame_size","","",105,null],[12,"nm_frame_nr","","",105,null],[3,"nl_mmap_hdr","","",null,null],[12,"nm_status","","",106,null],[12,"nm_len","","",106,null],[12,"nm_group","","",106,null],[12,"nm_pid","","",106,null],[12,"nm_uid","","",106,null],[12,"nm_gid","","",106,null],[3,"nlattr","","",null,null],[12,"nla_len","","",107,null],[12,"nla_type","","",107,null],[3,"rtentry","","",null,null],[12,"rt_pad1","","",108,null],[12,"rt_dst","","",108,null],[12,"rt_gateway","","",108,null],[12,"rt_genmask","","",108,null],[12,"rt_flags","","",108,null],[12,"rt_pad2","","",108,null],[12,"rt_pad3","","",108,null],[12,"rt_tos","","",108,null],[12,"rt_class","","",108,null],[12,"rt_pad4","","",108,null],[12,"rt_metric","","",108,null],[12,"rt_dev","","",108,null],[12,"rt_mtu","","",108,null],[12,"rt_window","","",108,null],[12,"rt_irtt","","",108,null],[3,"timex","","",null,null],[12,"modes","","",109,null],[12,"offset","","",109,null],[12,"freq","","",109,null],[12,"maxerror","","",109,null],[12,"esterror","","",109,null],[12,"status","","",109,null],[12,"constant","","",109,null],[12,"precision","","",109,null],[12,"tolerance","","",109,null],[12,"time","","",109,null],[12,"tick","","",109,null],[12,"ppsfreq","","",109,null],[12,"jitter","","",109,null],[12,"shift","","",109,null],[12,"stabil","","",109,null],[12,"jitcnt","","",109,null],[12,"calcnt","","",109,null],[12,"errcnt","","",109,null],[12,"stbcnt","","",109,null],[12,"tai","","",109,null],[12,"__unused1","","",109,null],[12,"__unused2","","",109,null],[12,"__unused3","","",109,null],[12,"__unused4","","",109,null],[12,"__unused5","","",109,null],[12,"__unused6","","",109,null],[12,"__unused7","","",109,null],[12,"__unused8","","",109,null],[12,"__unused9","","",109,null],[12,"__unused10","","",109,null],[12,"__unused11","","",109,null],[3,"ntptimeval","","",null,null],[12,"time","","",110,null],[12,"maxerror","","",110,null],[12,"esterror","","",110,null],[12,"tai","","",110,null],[12,"__glibc_reserved1","","",110,null],[12,"__glibc_reserved2","","",110,null],[12,"__glibc_reserved3","","",110,null],[12,"__glibc_reserved4","","",110,null],[3,"regex_t","","",null,null],[3,"utmpx","","",null,null],[12,"ut_type","","",111,null],[12,"ut_pid","","",111,null],[12,"ut_line","","",111,null],[12,"ut_id","","",111,null],[12,"ut_user","","",111,null],[12,"ut_host","","",111,null],[12,"ut_exit","","",111,null],[12,"ut_session","","",111,null],[12,"ut_tv","","",111,null],[12,"ut_addr_v6","","",111,null],[17,"HUGETLB_FLAG_ENCODE_SHIFT","","",null,null],[17,"HUGETLB_FLAG_ENCODE_MASK","","",null,null],[17,"HUGETLB_FLAG_ENCODE_64KB","","",null,null],[17,"HUGETLB_FLAG_ENCODE_512KB","","",null,null],[17,"HUGETLB_FLAG_ENCODE_1MB","","",null,null],[17,"HUGETLB_FLAG_ENCODE_2MB","","",null,null],[17,"HUGETLB_FLAG_ENCODE_8MB","","",null,null],[17,"HUGETLB_FLAG_ENCODE_16MB","","",null,null],[17,"HUGETLB_FLAG_ENCODE_32MB","","",null,null],[17,"HUGETLB_FLAG_ENCODE_256MB","","",null,null],[17,"HUGETLB_FLAG_ENCODE_512MB","","",null,null],[17,"HUGETLB_FLAG_ENCODE_1GB","","",null,null],[17,"HUGETLB_FLAG_ENCODE_2GB","","",null,null],[17,"HUGETLB_FLAG_ENCODE_16GB","","",null,null],[17,"MAP_HUGE_SHIFT","","",null,null],[17,"MAP_HUGE_MASK","","",null,null],[17,"MAP_HUGE_64KB","","",null,null],[17,"MAP_HUGE_512KB","","",null,null],[17,"MAP_HUGE_1MB","","",null,null],[17,"MAP_HUGE_2MB","","",null,null],[17,"MAP_HUGE_8MB","","",null,null],[17,"MAP_HUGE_16MB","","",null,null],[17,"MAP_HUGE_32MB","","",null,null],[17,"MAP_HUGE_256MB","","",null,null],[17,"MAP_HUGE_512MB","","",null,null],[17,"MAP_HUGE_1GB","","",null,null],[17,"MAP_HUGE_2GB","","",null,null],[17,"MAP_HUGE_16GB","","",null,null],[17,"RLIMIT_CPU","","",null,null],[17,"RLIMIT_FSIZE","","",null,null],[17,"RLIMIT_DATA","","",null,null],[17,"RLIMIT_STACK","","",null,null],[17,"RLIMIT_CORE","","",null,null],[17,"RLIMIT_LOCKS","","",null,null],[17,"RLIMIT_SIGPENDING","","",null,null],[17,"RLIMIT_MSGQUEUE","","",null,null],[17,"RLIMIT_NICE","","",null,null],[17,"RLIMIT_RTPRIO","","",null,null],[17,"RLIMIT_RTTIME","","",null,null],[17,"RLIMIT_NLIMITS","","",null,null],[17,"PRIO_PROCESS","","",null,null],[17,"PRIO_PGRP","","",null,null],[17,"PRIO_USER","","",null,null],[17,"MS_RMT_MASK","","",null,null],[17,"__UT_LINESIZE","","",null,null],[17,"__UT_NAMESIZE","","",null,null],[17,"__UT_HOSTSIZE","","",null,null],[17,"EMPTY","","",null,null],[17,"RUN_LVL","","",null,null],[17,"BOOT_TIME","","",null,null],[17,"NEW_TIME","","",null,null],[17,"OLD_TIME","","",null,null],[17,"INIT_PROCESS","","",null,null],[17,"LOGIN_PROCESS","","",null,null],[17,"USER_PROCESS","","",null,null],[17,"DEAD_PROCESS","","",null,null],[17,"ACCOUNTING","","",null,null],[17,"LM_ID_BASE","","",null,null],[17,"LM_ID_NEWLM","","",null,null],[17,"RTLD_DI_LMID","","",null,null],[17,"RTLD_DI_LINKMAP","","",null,null],[17,"RTLD_DI_CONFIGADDR","","",null,null],[17,"RTLD_DI_SERINFO","","",null,null],[17,"RTLD_DI_SERINFOSIZE","","",null,null],[17,"RTLD_DI_ORIGIN","","",null,null],[17,"RTLD_DI_PROFILENAME","","",null,null],[17,"RTLD_DI_PROFILEOUT","","",null,null],[17,"RTLD_DI_TLS_MODID","","",null,null],[17,"RTLD_DI_TLS_DATA","","",null,null],[17,"SOCK_NONBLOCK","","",null,null],[17,"SOL_RXRPC","","",null,null],[17,"SOL_PPPOL2TP","","",null,null],[17,"SOL_PNPIPE","","",null,null],[17,"SOL_RDS","","",null,null],[17,"SOL_IUCV","","",null,null],[17,"SOL_CAIF","","",null,null],[17,"SOL_NFC","","",null,null],[17,"SOL_XDP","","",null,null],[17,"MSG_TRYHARD","","",null,null],[17,"LC_PAPER","","",null,null],[17,"LC_NAME","","",null,null],[17,"LC_ADDRESS","","",null,null],[17,"LC_TELEPHONE","","",null,null],[17,"LC_MEASUREMENT","","",null,null],[17,"LC_IDENTIFICATION","","",null,null],[17,"LC_PAPER_MASK","","",null,null],[17,"LC_NAME_MASK","","",null,null],[17,"LC_ADDRESS_MASK","","",null,null],[17,"LC_TELEPHONE_MASK","","",null,null],[17,"LC_MEASUREMENT_MASK","","",null,null],[17,"LC_IDENTIFICATION_MASK","","",null,null],[17,"LC_ALL_MASK","","",null,null],[17,"ENOTSUP","","",null,null],[17,"SOCK_SEQPACKET","","",null,null],[17,"SOCK_DCCP","","",null,null],[17,"SOCK_PACKET","","",null,null],[17,"TCP_COOKIE_TRANSACTIONS","","",null,null],[17,"TCP_THIN_LINEAR_TIMEOUTS","","",null,null],[17,"TCP_THIN_DUPACK","","",null,null],[17,"TCP_USER_TIMEOUT","","",null,null],[17,"TCP_REPAIR","","",null,null],[17,"TCP_REPAIR_QUEUE","","",null,null],[17,"TCP_QUEUE_SEQ","","",null,null],[17,"TCP_REPAIR_OPTIONS","","",null,null],[17,"TCP_FASTOPEN","","",null,null],[17,"TCP_TIMESTAMP","","",null,null],[17,"TCP_FASTOPEN_CONNECT","","",null,null],[17,"DCCP_SOCKOPT_PACKET_SIZE","","",null,null],[17,"DCCP_SOCKOPT_SERVICE","","",null,null],[17,"DCCP_SOCKOPT_CHANGE_L","","",null,null],[17,"DCCP_SOCKOPT_CHANGE_R","","",null,null],[17,"DCCP_SOCKOPT_GET_CUR_MPS","","",null,null],[17,"DCCP_SOCKOPT_SERVER_TIMEWAIT","","",null,null],[17,"DCCP_SOCKOPT_SEND_CSCOV","","",null,null],[17,"DCCP_SOCKOPT_RECV_CSCOV","","",null,null],[17,"DCCP_SOCKOPT_AVAILABLE_CCIDS","","",null,null],[17,"DCCP_SOCKOPT_CCID","","",null,null],[17,"DCCP_SOCKOPT_TX_CCID","","",null,null],[17,"DCCP_SOCKOPT_RX_CCID","","",null,null],[17,"DCCP_SOCKOPT_QPOLICY_ID","","",null,null],[17,"DCCP_SOCKOPT_QPOLICY_TXQLEN","","",null,null],[17,"DCCP_SOCKOPT_CCID_RX_INFO","","",null,null],[17,"DCCP_SOCKOPT_CCID_TX_INFO","","",null,null],[17,"DCCP_SERVICE_LIST_MAX_LEN","","maximum number of services provided on the same listening …",null,null],[17,"SIGEV_THREAD_ID","","",null,null],[17,"BUFSIZ","","",null,null],[17,"TMP_MAX","","",null,null],[17,"FOPEN_MAX","","",null,null],[17,"POSIX_MADV_DONTNEED","","",null,null],[17,"_SC_EQUIV_CLASS_MAX","","",null,null],[17,"_SC_CHARCLASS_NAME_MAX","","",null,null],[17,"_SC_PII","","",null,null],[17,"_SC_PII_XTI","","",null,null],[17,"_SC_PII_SOCKET","","",null,null],[17,"_SC_PII_INTERNET","","",null,null],[17,"_SC_PII_OSI","","",null,null],[17,"_SC_POLL","","",null,null],[17,"_SC_SELECT","","",null,null],[17,"_SC_PII_INTERNET_STREAM","","",null,null],[17,"_SC_PII_INTERNET_DGRAM","","",null,null],[17,"_SC_PII_OSI_COTS","","",null,null],[17,"_SC_PII_OSI_CLTS","","",null,null],[17,"_SC_PII_OSI_M","","",null,null],[17,"_SC_T_IOV_MAX","","",null,null],[17,"_SC_2_C_VERSION","","",null,null],[17,"_SC_CHAR_BIT","","",null,null],[17,"_SC_CHAR_MAX","","",null,null],[17,"_SC_CHAR_MIN","","",null,null],[17,"_SC_INT_MAX","","",null,null],[17,"_SC_INT_MIN","","",null,null],[17,"_SC_LONG_BIT","","",null,null],[17,"_SC_WORD_BIT","","",null,null],[17,"_SC_MB_LEN_MAX","","",null,null],[17,"_SC_SSIZE_MAX","","",null,null],[17,"_SC_SCHAR_MAX","","",null,null],[17,"_SC_SCHAR_MIN","","",null,null],[17,"_SC_SHRT_MAX","","",null,null],[17,"_SC_SHRT_MIN","","",null,null],[17,"_SC_UCHAR_MAX","","",null,null],[17,"_SC_UINT_MAX","","",null,null],[17,"_SC_ULONG_MAX","","",null,null],[17,"_SC_USHRT_MAX","","",null,null],[17,"_SC_NL_ARGMAX","","",null,null],[17,"_SC_NL_LANGMAX","","",null,null],[17,"_SC_NL_MSGMAX","","",null,null],[17,"_SC_NL_NMAX","","",null,null],[17,"_SC_NL_SETMAX","","",null,null],[17,"_SC_NL_TEXTMAX","","",null,null],[17,"_SC_BASE","","",null,null],[17,"_SC_C_LANG_SUPPORT","","",null,null],[17,"_SC_C_LANG_SUPPORT_R","","",null,null],[17,"_SC_DEVICE_IO","","",null,null],[17,"_SC_DEVICE_SPECIFIC","","",null,null],[17,"_SC_DEVICE_SPECIFIC_R","","",null,null],[17,"_SC_FD_MGMT","","",null,null],[17,"_SC_FIFO","","",null,null],[17,"_SC_PIPE","","",null,null],[17,"_SC_FILE_ATTRIBUTES","","",null,null],[17,"_SC_FILE_LOCKING","","",null,null],[17,"_SC_FILE_SYSTEM","","",null,null],[17,"_SC_MULTI_PROCESS","","",null,null],[17,"_SC_SINGLE_PROCESS","","",null,null],[17,"_SC_NETWORKING","","",null,null],[17,"_SC_REGEX_VERSION","","",null,null],[17,"_SC_SIGNALS","","",null,null],[17,"_SC_SYSTEM_DATABASE","","",null,null],[17,"_SC_SYSTEM_DATABASE_R","","",null,null],[17,"_SC_USER_GROUPS","","",null,null],[17,"_SC_USER_GROUPS_R","","",null,null],[17,"_SC_LEVEL1_ICACHE_SIZE","","",null,null],[17,"_SC_LEVEL1_ICACHE_ASSOC","","",null,null],[17,"_SC_LEVEL1_ICACHE_LINESIZE","","",null,null],[17,"_SC_LEVEL1_DCACHE_SIZE","","",null,null],[17,"_SC_LEVEL1_DCACHE_ASSOC","","",null,null],[17,"_SC_LEVEL1_DCACHE_LINESIZE","","",null,null],[17,"_SC_LEVEL2_CACHE_SIZE","","",null,null],[17,"_SC_LEVEL2_CACHE_ASSOC","","",null,null],[17,"_SC_LEVEL2_CACHE_LINESIZE","","",null,null],[17,"_SC_LEVEL3_CACHE_SIZE","","",null,null],[17,"_SC_LEVEL3_CACHE_ASSOC","","",null,null],[17,"_SC_LEVEL3_CACHE_LINESIZE","","",null,null],[17,"_SC_LEVEL4_CACHE_SIZE","","",null,null],[17,"_SC_LEVEL4_CACHE_ASSOC","","",null,null],[17,"_SC_LEVEL4_CACHE_LINESIZE","","",null,null],[17,"O_ACCMODE","","",null,null],[17,"ST_RELATIME","","",null,null],[17,"NI_MAXHOST","","",null,null],[17,"ADFS_SUPER_MAGIC","","",null,null],[17,"AFFS_SUPER_MAGIC","","",null,null],[17,"AFS_SUPER_MAGIC","","",null,null],[17,"AUTOFS_SUPER_MAGIC","","",null,null],[17,"BINDERFS_SUPER_MAGIC","","",null,null],[17,"BTRFS_SUPER_MAGIC","","",null,null],[17,"CGROUP2_SUPER_MAGIC","","",null,null],[17,"CGROUP_SUPER_MAGIC","","",null,null],[17,"CODA_SUPER_MAGIC","","",null,null],[17,"CRAMFS_MAGIC","","",null,null],[17,"DEVPTS_SUPER_MAGIC","","",null,null],[17,"ECRYPTFS_SUPER_MAGIC","","",null,null],[17,"EFS_SUPER_MAGIC","","",null,null],[17,"EXT2_SUPER_MAGIC","","",null,null],[17,"EXT3_SUPER_MAGIC","","",null,null],[17,"EXT4_SUPER_MAGIC","","",null,null],[17,"F2FS_SUPER_MAGIC","","",null,null],[17,"FUTEXFS_SUPER_MAGIC","","",null,null],[17,"HOSTFS_SUPER_MAGIC","","",null,null],[17,"HPFS_SUPER_MAGIC","","",null,null],[17,"HUGETLBFS_MAGIC","","",null,null],[17,"ISOFS_SUPER_MAGIC","","",null,null],[17,"JFFS2_SUPER_MAGIC","","",null,null],[17,"MINIX2_SUPER_MAGIC2","","",null,null],[17,"MINIX2_SUPER_MAGIC","","",null,null],[17,"MINIX3_SUPER_MAGIC","","",null,null],[17,"MINIX_SUPER_MAGIC2","","",null,null],[17,"MINIX_SUPER_MAGIC","","",null,null],[17,"MSDOS_SUPER_MAGIC","","",null,null],[17,"NCP_SUPER_MAGIC","","",null,null],[17,"NFS_SUPER_MAGIC","","",null,null],[17,"NILFS_SUPER_MAGIC","","",null,null],[17,"OCFS2_SUPER_MAGIC","","",null,null],[17,"OPENPROM_SUPER_MAGIC","","",null,null],[17,"OVERLAYFS_SUPER_MAGIC","","",null,null],[17,"PROC_SUPER_MAGIC","","",null,null],[17,"QNX4_SUPER_MAGIC","","",null,null],[17,"QNX6_SUPER_MAGIC","","",null,null],[17,"RDTGROUP_SUPER_MAGIC","","",null,null],[17,"REISERFS_SUPER_MAGIC","","",null,null],[17,"SMB_SUPER_MAGIC","","",null,null],[17,"TMPFS_MAGIC","","",null,null],[17,"UDF_SUPER_MAGIC","","",null,null],[17,"USBDEVICE_SUPER_MAGIC","","",null,null],[17,"XENFS_SUPER_MAGIC","","",null,null],[17,"XFS_SUPER_MAGIC","","",null,null],[17,"CPU_SETSIZE","","",null,null],[17,"PTRACE_TRACEME","","",null,null],[17,"PTRACE_PEEKTEXT","","",null,null],[17,"PTRACE_PEEKDATA","","",null,null],[17,"PTRACE_PEEKUSER","","",null,null],[17,"PTRACE_POKETEXT","","",null,null],[17,"PTRACE_POKEDATA","","",null,null],[17,"PTRACE_POKEUSER","","",null,null],[17,"PTRACE_CONT","","",null,null],[17,"PTRACE_KILL","","",null,null],[17,"PTRACE_SINGLESTEP","","",null,null],[17,"PTRACE_ATTACH","","",null,null],[17,"PTRACE_SYSCALL","","",null,null],[17,"PTRACE_SETOPTIONS","","",null,null],[17,"PTRACE_GETEVENTMSG","","",null,null],[17,"PTRACE_GETSIGINFO","","",null,null],[17,"PTRACE_SETSIGINFO","","",null,null],[17,"PTRACE_GETREGSET","","",null,null],[17,"PTRACE_SETREGSET","","",null,null],[17,"PTRACE_SEIZE","","",null,null],[17,"PTRACE_INTERRUPT","","",null,null],[17,"PTRACE_LISTEN","","",null,null],[17,"PTRACE_PEEKSIGINFO","","",null,null],[17,"EPOLLWAKEUP","","",null,null],[17,"SEEK_DATA","","",null,null],[17,"SEEK_HOLE","","",null,null],[17,"TCA_PAD","","",null,null],[17,"TCA_DUMP_INVISIBLE","","",null,null],[17,"TCA_CHAIN","","",null,null],[17,"TCA_HW_OFFLOAD","","",null,null],[17,"RTM_DELNETCONF","","",null,null],[17,"RTM_NEWSTATS","","",null,null],[17,"RTM_GETSTATS","","",null,null],[17,"RTM_NEWCACHEREPORT","","",null,null],[17,"RTM_F_LOOKUP_TABLE","","",null,null],[17,"RTM_F_FIB_MATCH","","",null,null],[17,"RTA_VIA","","",null,null],[17,"RTA_NEWDST","","",null,null],[17,"RTA_PREF","","",null,null],[17,"RTA_ENCAP_TYPE","","",null,null],[17,"RTA_ENCAP","","",null,null],[17,"RTA_EXPIRES","","",null,null],[17,"RTA_PAD","","",null,null],[17,"RTA_UID","","",null,null],[17,"RTA_TTL_PROPAGATE","","",null,null],[17,"NTF_EXT_LEARNED","","",null,null],[17,"NTF_OFFLOADED","","",null,null],[17,"NDA_MASTER","","",null,null],[17,"NDA_LINK_NETNSID","","",null,null],[17,"NDA_SRC_VNI","","",null,null],[17,"UNAME26","","",null,null],[17,"FDPIC_FUNCPTRS","","",null,null],[17,"IFA_FLAGS","","",null,null],[17,"IFA_F_MANAGETEMPADDR","","",null,null],[17,"IFA_F_NOPREFIXROUTE","","",null,null],[17,"IFA_F_MCAUTOJOIN","","",null,null],[17,"IFA_F_STABLE_PRIVACY","","",null,null],[17,"MAX_LINKS","","",null,null],[17,"GENL_UNS_ADMIN_PERM","","",null,null],[17,"GENL_ID_VFS_DQUOT","","",null,null],[17,"GENL_ID_PMCRAID","","",null,null],[17,"TIOCM_LE","","",null,null],[17,"TIOCM_DTR","","",null,null],[17,"TIOCM_RTS","","",null,null],[17,"TIOCM_CD","","",null,null],[17,"TIOCM_RI","","",null,null],[17,"NF_NETDEV_INGRESS","","",null,null],[17,"NF_NETDEV_NUMHOOKS","","",null,null],[17,"NFPROTO_INET","","",null,null],[17,"NFPROTO_NETDEV","","",null,null],[17,"KEYCTL_DH_COMPUTE","","",null,null],[17,"KEYCTL_PKEY_QUERY","","",null,null],[17,"KEYCTL_PKEY_ENCRYPT","","",null,null],[17,"KEYCTL_PKEY_DECRYPT","","",null,null],[17,"KEYCTL_PKEY_SIGN","","",null,null],[17,"KEYCTL_PKEY_VERIFY","","",null,null],[17,"KEYCTL_RESTRICT_KEYRING","","",null,null],[17,"KEYCTL_SUPPORTS_ENCRYPT","","",null,null],[17,"KEYCTL_SUPPORTS_DECRYPT","","",null,null],[17,"KEYCTL_SUPPORTS_SIGN","","",null,null],[17,"KEYCTL_SUPPORTS_VERIFY","","",null,null],[17,"KEYCTL_MOVE","","",null,null],[17,"KEYCTL_CAPABILITIES","","",null,null],[17,"KEYCTL_CAPS0_CAPABILITIES","","",null,null],[17,"KEYCTL_CAPS0_PERSISTENT_KEYRINGS","","",null,null],[17,"KEYCTL_CAPS0_DIFFIE_HELLMAN","","",null,null],[17,"KEYCTL_CAPS0_PUBLIC_KEY","","",null,null],[17,"KEYCTL_CAPS0_BIG_KEY","","",null,null],[17,"KEYCTL_CAPS0_INVALIDATE","","",null,null],[17,"KEYCTL_CAPS0_RESTRICT_KEYRING","","",null,null],[17,"KEYCTL_CAPS0_MOVE","","",null,null],[17,"KEYCTL_CAPS1_NS_KEYRING_NAME","","",null,null],[17,"KEYCTL_CAPS1_NS_KEY_TAG","","",null,null],[17,"NFT_TABLE_MAXNAMELEN","","",null,null],[17,"NFT_CHAIN_MAXNAMELEN","","",null,null],[17,"NFT_SET_MAXNAMELEN","","",null,null],[17,"NFT_OBJ_MAXNAMELEN","","",null,null],[17,"NFT_USERDATA_MAXLEN","","",null,null],[17,"NFT_REG_VERDICT","","",null,null],[17,"NFT_REG_1","","",null,null],[17,"NFT_REG_2","","",null,null],[17,"NFT_REG_3","","",null,null],[17,"NFT_REG_4","","",null,null],[17,"__NFT_REG_MAX","","",null,null],[17,"NFT_REG32_00","","",null,null],[17,"NFT_REG32_01","","",null,null],[17,"NFT_REG32_02","","",null,null],[17,"NFT_REG32_03","","",null,null],[17,"NFT_REG32_04","","",null,null],[17,"NFT_REG32_05","","",null,null],[17,"NFT_REG32_06","","",null,null],[17,"NFT_REG32_07","","",null,null],[17,"NFT_REG32_08","","",null,null],[17,"NFT_REG32_09","","",null,null],[17,"NFT_REG32_10","","",null,null],[17,"NFT_REG32_11","","",null,null],[17,"NFT_REG32_12","","",null,null],[17,"NFT_REG32_13","","",null,null],[17,"NFT_REG32_14","","",null,null],[17,"NFT_REG32_15","","",null,null],[17,"NFT_REG_SIZE","","",null,null],[17,"NFT_REG32_SIZE","","",null,null],[17,"NFT_CONTINUE","","",null,null],[17,"NFT_BREAK","","",null,null],[17,"NFT_JUMP","","",null,null],[17,"NFT_GOTO","","",null,null],[17,"NFT_RETURN","","",null,null],[17,"NFT_MSG_NEWTABLE","","",null,null],[17,"NFT_MSG_GETTABLE","","",null,null],[17,"NFT_MSG_DELTABLE","","",null,null],[17,"NFT_MSG_NEWCHAIN","","",null,null],[17,"NFT_MSG_GETCHAIN","","",null,null],[17,"NFT_MSG_DELCHAIN","","",null,null],[17,"NFT_MSG_NEWRULE","","",null,null],[17,"NFT_MSG_GETRULE","","",null,null],[17,"NFT_MSG_DELRULE","","",null,null],[17,"NFT_MSG_NEWSET","","",null,null],[17,"NFT_MSG_GETSET","","",null,null],[17,"NFT_MSG_DELSET","","",null,null],[17,"NFT_MSG_NEWSETELEM","","",null,null],[17,"NFT_MSG_GETSETELEM","","",null,null],[17,"NFT_MSG_DELSETELEM","","",null,null],[17,"NFT_MSG_NEWGEN","","",null,null],[17,"NFT_MSG_GETGEN","","",null,null],[17,"NFT_MSG_TRACE","","",null,null],[17,"NFT_MSG_NEWOBJ","","",null,null],[17,"NFT_MSG_GETOBJ","","",null,null],[17,"NFT_MSG_DELOBJ","","",null,null],[17,"NFT_MSG_GETOBJ_RESET","","",null,null],[17,"NFT_MSG_MAX","","",null,null],[17,"NFT_SET_ANONYMOUS","","",null,null],[17,"NFT_SET_CONSTANT","","",null,null],[17,"NFT_SET_INTERVAL","","",null,null],[17,"NFT_SET_MAP","","",null,null],[17,"NFT_SET_TIMEOUT","","",null,null],[17,"NFT_SET_EVAL","","",null,null],[17,"NFT_SET_POL_PERFORMANCE","","",null,null],[17,"NFT_SET_POL_MEMORY","","",null,null],[17,"NFT_SET_ELEM_INTERVAL_END","","",null,null],[17,"NFT_DATA_VALUE","","",null,null],[17,"NFT_DATA_VERDICT","","",null,null],[17,"NFT_DATA_RESERVED_MASK","","",null,null],[17,"NFT_DATA_VALUE_MAXLEN","","",null,null],[17,"NFT_BYTEORDER_NTOH","","",null,null],[17,"NFT_BYTEORDER_HTON","","",null,null],[17,"NFT_CMP_EQ","","",null,null],[17,"NFT_CMP_NEQ","","",null,null],[17,"NFT_CMP_LT","","",null,null],[17,"NFT_CMP_LTE","","",null,null],[17,"NFT_CMP_GT","","",null,null],[17,"NFT_CMP_GTE","","",null,null],[17,"NFT_RANGE_EQ","","",null,null],[17,"NFT_RANGE_NEQ","","",null,null],[17,"NFT_LOOKUP_F_INV","","",null,null],[17,"NFT_DYNSET_OP_ADD","","",null,null],[17,"NFT_DYNSET_OP_UPDATE","","",null,null],[17,"NFT_DYNSET_F_INV","","",null,null],[17,"NFT_PAYLOAD_LL_HEADER","","",null,null],[17,"NFT_PAYLOAD_NETWORK_HEADER","","",null,null],[17,"NFT_PAYLOAD_TRANSPORT_HEADER","","",null,null],[17,"NFT_PAYLOAD_CSUM_NONE","","",null,null],[17,"NFT_PAYLOAD_CSUM_INET","","",null,null],[17,"NFT_META_LEN","","",null,null],[17,"NFT_META_PROTOCOL","","",null,null],[17,"NFT_META_PRIORITY","","",null,null],[17,"NFT_META_MARK","","",null,null],[17,"NFT_META_IIF","","",null,null],[17,"NFT_META_OIF","","",null,null],[17,"NFT_META_IIFNAME","","",null,null],[17,"NFT_META_OIFNAME","","",null,null],[17,"NFT_META_IIFTYPE","","",null,null],[17,"NFT_META_OIFTYPE","","",null,null],[17,"NFT_META_SKUID","","",null,null],[17,"NFT_META_SKGID","","",null,null],[17,"NFT_META_NFTRACE","","",null,null],[17,"NFT_META_RTCLASSID","","",null,null],[17,"NFT_META_SECMARK","","",null,null],[17,"NFT_META_NFPROTO","","",null,null],[17,"NFT_META_L4PROTO","","",null,null],[17,"NFT_META_BRI_IIFNAME","","",null,null],[17,"NFT_META_BRI_OIFNAME","","",null,null],[17,"NFT_META_PKTTYPE","","",null,null],[17,"NFT_META_CPU","","",null,null],[17,"NFT_META_IIFGROUP","","",null,null],[17,"NFT_META_OIFGROUP","","",null,null],[17,"NFT_META_CGROUP","","",null,null],[17,"NFT_META_PRANDOM","","",null,null],[17,"NFT_CT_STATE","","",null,null],[17,"NFT_CT_DIRECTION","","",null,null],[17,"NFT_CT_STATUS","","",null,null],[17,"NFT_CT_MARK","","",null,null],[17,"NFT_CT_SECMARK","","",null,null],[17,"NFT_CT_EXPIRATION","","",null,null],[17,"NFT_CT_HELPER","","",null,null],[17,"NFT_CT_L3PROTOCOL","","",null,null],[17,"NFT_CT_SRC","","",null,null],[17,"NFT_CT_DST","","",null,null],[17,"NFT_CT_PROTOCOL","","",null,null],[17,"NFT_CT_PROTO_SRC","","",null,null],[17,"NFT_CT_PROTO_DST","","",null,null],[17,"NFT_CT_LABELS","","",null,null],[17,"NFT_CT_PKTS","","",null,null],[17,"NFT_CT_BYTES","","",null,null],[17,"NFT_LIMIT_PKTS","","",null,null],[17,"NFT_LIMIT_PKT_BYTES","","",null,null],[17,"NFT_LIMIT_F_INV","","",null,null],[17,"NFT_QUEUE_FLAG_BYPASS","","",null,null],[17,"NFT_QUEUE_FLAG_CPU_FANOUT","","",null,null],[17,"NFT_QUEUE_FLAG_MASK","","",null,null],[17,"NFT_QUOTA_F_INV","","",null,null],[17,"NFT_REJECT_ICMP_UNREACH","","",null,null],[17,"NFT_REJECT_TCP_RST","","",null,null],[17,"NFT_REJECT_ICMPX_UNREACH","","",null,null],[17,"NFT_REJECT_ICMPX_NO_ROUTE","","",null,null],[17,"NFT_REJECT_ICMPX_PORT_UNREACH","","",null,null],[17,"NFT_REJECT_ICMPX_HOST_UNREACH","","",null,null],[17,"NFT_REJECT_ICMPX_ADMIN_PROHIBITED","","",null,null],[17,"NFT_NAT_SNAT","","",null,null],[17,"NFT_NAT_DNAT","","",null,null],[17,"NFT_TRACETYPE_UNSPEC","","",null,null],[17,"NFT_TRACETYPE_POLICY","","",null,null],[17,"NFT_TRACETYPE_RETURN","","",null,null],[17,"NFT_TRACETYPE_RULE","","",null,null],[17,"NFT_NG_INCREMENTAL","","",null,null],[17,"NFT_NG_RANDOM","","",null,null],[17,"M_MXFAST","","",null,null],[17,"M_NLBLKS","","",null,null],[17,"M_GRAIN","","",null,null],[17,"M_KEEP","","",null,null],[17,"M_TRIM_THRESHOLD","","",null,null],[17,"M_TOP_PAD","","",null,null],[17,"M_MMAP_THRESHOLD","","",null,null],[17,"M_MMAP_MAX","","",null,null],[17,"M_CHECK_ACTION","","",null,null],[17,"M_PERTURB","","",null,null],[17,"M_ARENA_TEST","","",null,null],[17,"M_ARENA_MAX","","",null,null],[17,"AT_STATX_SYNC_TYPE","","",null,null],[17,"AT_STATX_SYNC_AS_STAT","","",null,null],[17,"AT_STATX_FORCE_SYNC","","",null,null],[17,"AT_STATX_DONT_SYNC","","",null,null],[17,"STATX_TYPE","","",null,null],[17,"STATX_MODE","","",null,null],[17,"STATX_NLINK","","",null,null],[17,"STATX_UID","","",null,null],[17,"STATX_GID","","",null,null],[17,"STATX_ATIME","","",null,null],[17,"STATX_MTIME","","",null,null],[17,"STATX_CTIME","","",null,null],[17,"STATX_INO","","",null,null],[17,"STATX_SIZE","","",null,null],[17,"STATX_BLOCKS","","",null,null],[17,"STATX_BASIC_STATS","","",null,null],[17,"STATX_BTIME","","",null,null],[17,"STATX_ALL","","",null,null],[17,"STATX__RESERVED","","",null,null],[17,"STATX_ATTR_COMPRESSED","","",null,null],[17,"STATX_ATTR_IMMUTABLE","","",null,null],[17,"STATX_ATTR_APPEND","","",null,null],[17,"STATX_ATTR_NODUMP","","",null,null],[17,"STATX_ATTR_ENCRYPTED","","",null,null],[17,"STATX_ATTR_AUTOMOUNT","","",null,null],[17,"AT_NULL","","",null,null],[17,"AT_IGNORE","","",null,null],[17,"AT_EXECFD","","",null,null],[17,"AT_PHDR","","",null,null],[17,"AT_PHENT","","",null,null],[17,"AT_PHNUM","","",null,null],[17,"AT_PAGESZ","","",null,null],[17,"AT_BASE","","",null,null],[17,"AT_FLAGS","","",null,null],[17,"AT_ENTRY","","",null,null],[17,"AT_NOTELF","","",null,null],[17,"AT_UID","","",null,null],[17,"AT_EUID","","",null,null],[17,"AT_GID","","",null,null],[17,"AT_EGID","","",null,null],[17,"AT_PLATFORM","","",null,null],[17,"AT_HWCAP","","",null,null],[17,"AT_CLKTCK","","",null,null],[17,"AT_SECURE","","",null,null],[17,"AT_BASE_PLATFORM","","",null,null],[17,"AT_RANDOM","","",null,null],[17,"AT_HWCAP2","","",null,null],[17,"AT_EXECFN","","",null,null],[17,"ADJ_OFFSET","","",null,null],[17,"ADJ_FREQUENCY","","",null,null],[17,"ADJ_MAXERROR","","",null,null],[17,"ADJ_ESTERROR","","",null,null],[17,"ADJ_STATUS","","",null,null],[17,"ADJ_TIMECONST","","",null,null],[17,"ADJ_TAI","","",null,null],[17,"ADJ_SETOFFSET","","",null,null],[17,"ADJ_MICRO","","",null,null],[17,"ADJ_NANO","","",null,null],[17,"ADJ_TICK","","",null,null],[17,"ADJ_OFFSET_SINGLESHOT","","",null,null],[17,"ADJ_OFFSET_SS_READ","","",null,null],[17,"MOD_OFFSET","","",null,null],[17,"MOD_FREQUENCY","","",null,null],[17,"MOD_MAXERROR","","",null,null],[17,"MOD_ESTERROR","","",null,null],[17,"MOD_STATUS","","",null,null],[17,"MOD_TIMECONST","","",null,null],[17,"MOD_CLKB","","",null,null],[17,"MOD_CLKA","","",null,null],[17,"MOD_TAI","","",null,null],[17,"MOD_MICRO","","",null,null],[17,"MOD_NANO","","",null,null],[17,"STA_PLL","","",null,null],[17,"STA_PPSFREQ","","",null,null],[17,"STA_PPSTIME","","",null,null],[17,"STA_FLL","","",null,null],[17,"STA_INS","","",null,null],[17,"STA_DEL","","",null,null],[17,"STA_UNSYNC","","",null,null],[17,"STA_FREQHOLD","","",null,null],[17,"STA_PPSSIGNAL","","",null,null],[17,"STA_PPSJITTER","","",null,null],[17,"STA_PPSWANDER","","",null,null],[17,"STA_PPSERROR","","",null,null],[17,"STA_CLOCKERR","","",null,null],[17,"STA_NANO","","",null,null],[17,"STA_MODE","","",null,null],[17,"STA_CLK","","",null,null],[17,"STA_RONLY","","",null,null],[17,"NTP_API","","",null,null],[17,"TIME_OK","","",null,null],[17,"TIME_INS","","",null,null],[17,"TIME_DEL","","",null,null],[17,"TIME_OOP","","",null,null],[17,"TIME_WAIT","","",null,null],[17,"TIME_ERROR","","",null,null],[17,"TIME_BAD","","",null,null],[17,"MAXTC","","",null,null],[17,"PTHREAD_STACK_MIN","","",null,null],[17,"PTHREAD_MUTEX_ADAPTIVE_NP","","",null,null],[17,"REG_STARTEND","","",null,null],[17,"REG_EEND","","",null,null],[17,"REG_ESIZE","","",null,null],[17,"REG_ERPAREN","","",null,null],[6,"clock_t","","",null,null],[6,"time_t","","",null,null],[6,"ino_t","","",null,null],[6,"off_t","","",null,null],[6,"blkcnt_t","","",null,null],[6,"shmatt_t","","",null,null],[6,"msgqnum_t","","",null,null],[6,"msglen_t","","",null,null],[6,"fsblkcnt_t","","",null,null],[6,"fsfilcnt_t","","",null,null],[6,"rlim_t","","",null,null],[6,"__fsword_t","","",null,null],[3,"sigset_t","","",null,null],[3,"sysinfo","","",null,null],[12,"uptime","","",112,null],[12,"loads","","",112,null],[12,"totalram","","",112,null],[12,"freeram","","",112,null],[12,"sharedram","","",112,null],[12,"bufferram","","",112,null],[12,"totalswap","","",112,null],[12,"freeswap","","",112,null],[12,"procs","","",112,null],[12,"pad","","",112,null],[12,"totalhigh","","",112,null],[12,"freehigh","","",112,null],[12,"mem_unit","","",112,null],[12,"_f","","",112,null],[3,"msqid_ds","","",null,null],[12,"msg_perm","","",113,null],[12,"msg_stime","","",113,null],[12,"msg_rtime","","",113,null],[12,"msg_ctime","","",113,null],[12,"msg_qnum","","",113,null],[12,"msg_qbytes","","",113,null],[12,"msg_lspid","","",113,null],[12,"msg_lrpid","","",113,null],[17,"RLIM_INFINITY","","",null,null],[17,"__SIZEOF_PTHREAD_RWLOCKATTR_T","","",null,null],[17,"O_LARGEFILE","","",null,null],[6,"c_char","","",null,null],[6,"wchar_t","","",null,null],[6,"nlink_t","","",null,null],[6,"blksize_t","","",null,null],[6,"greg_t","","",null,null],[6,"suseconds_t","","",null,null],[6,"__u64","","",null,null],[3,"sigaction","","",null,null],[12,"sa_sigaction","","",114,null],[12,"sa_mask","","",114,null],[12,"sa_flags","","",114,null],[12,"sa_restorer","","",114,null],[3,"statfs","","",null,null],[12,"f_type","","",115,null],[12,"f_bsize","","",115,null],[12,"f_blocks","","",115,null],[12,"f_bfree","","",115,null],[12,"f_bavail","","",115,null],[12,"f_files","","",115,null],[12,"f_ffree","","",115,null],[12,"f_fsid","","",115,null],[12,"f_namelen","","",115,null],[12,"f_frsize","","",115,null],[3,"flock","","",null,null],[12,"l_type","","",116,null],[12,"l_whence","","",116,null],[12,"l_start","","",116,null],[12,"l_len","","",116,null],[12,"l_pid","","",116,null],[3,"flock64","","",null,null],[12,"l_type","","",117,null],[12,"l_whence","","",117,null],[12,"l_start","","",117,null],[12,"l_len","","",117,null],[12,"l_pid","","",117,null],[3,"siginfo_t","","",null,null],[12,"si_signo","","",118,null],[12,"si_errno","","",118,null],[12,"si_code","","",118,null],[3,"stack_t","","",null,null],[12,"ss_sp","","",119,null],[12,"ss_flags","","",119,null],[12,"ss_size","","",119,null],[3,"stat","","",null,null],[12,"st_dev","","",120,null],[12,"st_ino","","",120,null],[12,"st_nlink","","",120,null],[12,"st_mode","","",120,null],[12,"st_uid","","",120,null],[12,"st_gid","","",120,null],[12,"st_rdev","","",120,null],[12,"st_size","","",120,null],[12,"st_blksize","","",120,null],[12,"st_blocks","","",120,null],[12,"st_atime","","",120,null],[12,"st_atime_nsec","","",120,null],[12,"st_mtime","","",120,null],[12,"st_mtime_nsec","","",120,null],[12,"st_ctime","","",120,null],[12,"st_ctime_nsec","","",120,null],[3,"stat64","","",null,null],[12,"st_dev","","",121,null],[12,"st_ino","","",121,null],[12,"st_nlink","","",121,null],[12,"st_mode","","",121,null],[12,"st_uid","","",121,null],[12,"st_gid","","",121,null],[12,"st_rdev","","",121,null],[12,"st_size","","",121,null],[12,"st_blksize","","",121,null],[12,"st_blocks","","",121,null],[12,"st_atime","","",121,null],[12,"st_atime_nsec","","",121,null],[12,"st_mtime","","",121,null],[12,"st_mtime_nsec","","",121,null],[12,"st_ctime","","",121,null],[12,"st_ctime_nsec","","",121,null],[3,"statfs64","","",null,null],[12,"f_type","","",122,null],[12,"f_bsize","","",122,null],[12,"f_blocks","","",122,null],[12,"f_bfree","","",122,null],[12,"f_bavail","","",122,null],[12,"f_files","","",122,null],[12,"f_ffree","","",122,null],[12,"f_fsid","","",122,null],[12,"f_namelen","","",122,null],[12,"f_frsize","","",122,null],[12,"f_flags","","",122,null],[12,"f_spare","","",122,null],[3,"statvfs64","","",null,null],[12,"f_bsize","","",123,null],[12,"f_frsize","","",123,null],[12,"f_blocks","","",123,null],[12,"f_bfree","","",123,null],[12,"f_bavail","","",123,null],[12,"f_files","","",123,null],[12,"f_ffree","","",123,null],[12,"f_favail","","",123,null],[12,"f_fsid","","",123,null],[12,"f_flag","","",123,null],[12,"f_namemax","","",123,null],[3,"pthread_attr_t","","",null,null],[3,"_libc_fpxreg","","",null,null],[12,"significand","","",124,null],[12,"exponent","","",124,null],[3,"_libc_xmmreg","","",null,null],[12,"element","","",125,null],[3,"_libc_fpstate","","",null,null],[12,"cwd","","",126,null],[12,"swd","","",126,null],[12,"ftw","","",126,null],[12,"fop","","",126,null],[12,"rip","","",126,null],[12,"rdp","","",126,null],[12,"mxcsr","","",126,null],[12,"mxcr_mask","","",126,null],[12,"_st","","",126,null],[12,"_xmm","","",126,null],[3,"user_regs_struct","","",null,null],[12,"r15","","",127,null],[12,"r14","","",127,null],[12,"r13","","",127,null],[12,"r12","","",127,null],[12,"rbp","","",127,null],[12,"rbx","","",127,null],[12,"r11","","",127,null],[12,"r10","","",127,null],[12,"r9","","",127,null],[12,"r8","","",127,null],[12,"rax","","",127,null],[12,"rcx","","",127,null],[12,"rdx","","",127,null],[12,"rsi","","",127,null],[12,"rdi","","",127,null],[12,"orig_rax","","",127,null],[12,"rip","","",127,null],[12,"cs","","",127,null],[12,"eflags","","",127,null],[12,"rsp","","",127,null],[12,"ss","","",127,null],[12,"fs_base","","",127,null],[12,"gs_base","","",127,null],[12,"ds","","",127,null],[12,"es","","",127,null],[12,"fs","","",127,null],[12,"gs","","",127,null],[3,"user","","",null,null],[12,"regs","","",128,null],[12,"u_fpvalid","","",128,null],[12,"i387","","",128,null],[12,"u_tsize","","",128,null],[12,"u_dsize","","",128,null],[12,"u_ssize","","",128,null],[12,"start_code","","",128,null],[12,"start_stack","","",128,null],[12,"signal","","",128,null],[12,"u_ar0","","",128,null],[12,"u_fpstate","","",128,null],[12,"magic","","",128,null],[12,"u_comm","","",128,null],[12,"u_debugreg","","",128,null],[3,"mcontext_t","","",null,null],[12,"gregs","","",129,null],[12,"fpregs","","",129,null],[3,"ipc_perm","","",null,null],[12,"__key","","",130,null],[12,"uid","","",130,null],[12,"gid","","",130,null],[12,"cuid","","",130,null],[12,"cgid","","",130,null],[12,"mode","","",130,null],[12,"__seq","","",130,null],[3,"shmid_ds","","",null,null],[12,"shm_perm","","",131,null],[12,"shm_segsz","","",131,null],[12,"shm_atime","","",131,null],[12,"shm_dtime","","",131,null],[12,"shm_ctime","","",131,null],[12,"shm_cpid","","",131,null],[12,"shm_lpid","","",131,null],[12,"shm_nattch","","",131,null],[3,"termios2","","",null,null],[12,"c_iflag","","",132,null],[12,"c_oflag","","",132,null],[12,"c_cflag","","",132,null],[12,"c_lflag","","",132,null],[12,"c_line","","",132,null],[12,"c_cc","","",132,null],[12,"c_ispeed","","",132,null],[12,"c_ospeed","","",132,null],[3,"ip_mreqn","","",null,null],[12,"imr_multiaddr","","",133,null],[12,"imr_address","","",133,null],[12,"imr_ifindex","","",133,null],[3,"user_fpregs_struct","","",null,null],[12,"cwd","","",134,null],[12,"swd","","",134,null],[12,"ftw","","",134,null],[12,"fop","","",134,null],[12,"rip","","",134,null],[12,"rdp","","",134,null],[12,"mxcsr","","",134,null],[12,"mxcr_mask","","",134,null],[12,"st_space","","",134,null],[12,"xmm_space","","",134,null],[3,"ucontext_t","","",null,null],[12,"uc_flags","","",135,null],[12,"uc_link","","",135,null],[12,"uc_stack","","",135,null],[12,"uc_mcontext","","",135,null],[12,"uc_sigmask","","",135,null],[17,"POSIX_FADV_DONTNEED","","",null,null],[17,"POSIX_FADV_NOREUSE","","",null,null],[17,"VEOF","","",null,null],[17,"RTLD_DEEPBIND","","",null,null],[17,"RTLD_GLOBAL","","",null,null],[17,"RTLD_NOLOAD","","",null,null],[17,"TIOCGSOFTCAR","","",null,null],[17,"TIOCSSOFTCAR","","",null,null],[17,"TIOCGRS485","","",null,null],[17,"TIOCSRS485","","",null,null],[17,"RLIMIT_RSS","","",null,null],[17,"RLIMIT_AS","","",null,null],[17,"RLIMIT_MEMLOCK","","",null,null],[17,"RLIMIT_NOFILE","","",null,null],[17,"RLIMIT_NPROC","","",null,null],[17,"O_APPEND","","",null,null],[17,"O_CREAT","","",null,null],[17,"O_EXCL","","",null,null],[17,"O_NOCTTY","","",null,null],[17,"O_NONBLOCK","","",null,null],[17,"O_SYNC","","",null,null],[17,"O_RSYNC","","",null,null],[17,"O_DSYNC","","",null,null],[17,"O_FSYNC","","",null,null],[17,"O_NOATIME","","",null,null],[17,"O_PATH","","",null,null],[17,"O_TMPFILE","","",null,null],[17,"MADV_SOFT_OFFLINE","","",null,null],[17,"MAP_GROWSDOWN","","",null,null],[17,"EDEADLK","","",null,null],[17,"ENAMETOOLONG","","",null,null],[17,"ENOLCK","","",null,null],[17,"ENOSYS","","",null,null],[17,"ENOTEMPTY","","",null,null],[17,"ELOOP","","",null,null],[17,"ENOMSG","","",null,null],[17,"EIDRM","","",null,null],[17,"ECHRNG","","",null,null],[17,"EL2NSYNC","","",null,null],[17,"EL3HLT","","",null,null],[17,"EL3RST","","",null,null],[17,"ELNRNG","","",null,null],[17,"EUNATCH","","",null,null],[17,"ENOCSI","","",null,null],[17,"EL2HLT","","",null,null],[17,"EBADE","","",null,null],[17,"EBADR","","",null,null],[17,"EXFULL","","",null,null],[17,"ENOANO","","",null,null],[17,"EBADRQC","","",null,null],[17,"EBADSLT","","",null,null],[17,"EMULTIHOP","","",null,null],[17,"EOVERFLOW","","",null,null],[17,"ENOTUNIQ","","",null,null],[17,"EBADFD","","",null,null],[17,"EBADMSG","","",null,null],[17,"EREMCHG","","",null,null],[17,"ELIBACC","","",null,null],[17,"ELIBBAD","","",null,null],[17,"ELIBSCN","","",null,null],[17,"ELIBMAX","","",null,null],[17,"ELIBEXEC","","",null,null],[17,"EILSEQ","","",null,null],[17,"ERESTART","","",null,null],[17,"ESTRPIPE","","",null,null],[17,"EUSERS","","",null,null],[17,"ENOTSOCK","","",null,null],[17,"EDESTADDRREQ","","",null,null],[17,"EMSGSIZE","","",null,null],[17,"EPROTOTYPE","","",null,null],[17,"ENOPROTOOPT","","",null,null],[17,"EPROTONOSUPPORT","","",null,null],[17,"ESOCKTNOSUPPORT","","",null,null],[17,"EOPNOTSUPP","","",null,null],[17,"EPFNOSUPPORT","","",null,null],[17,"EAFNOSUPPORT","","",null,null],[17,"EADDRINUSE","","",null,null],[17,"EADDRNOTAVAIL","","",null,null],[17,"ENETDOWN","","",null,null],[17,"ENETUNREACH","","",null,null],[17,"ENETRESET","","",null,null],[17,"ECONNABORTED","","",null,null],[17,"ECONNRESET","","",null,null],[17,"ENOBUFS","","",null,null],[17,"EISCONN","","",null,null],[17,"ENOTCONN","","",null,null],[17,"ESHUTDOWN","","",null,null],[17,"ETOOMANYREFS","","",null,null],[17,"ETIMEDOUT","","",null,null],[17,"ECONNREFUSED","","",null,null],[17,"EHOSTDOWN","","",null,null],[17,"EHOSTUNREACH","","",null,null],[17,"EALREADY","","",null,null],[17,"EINPROGRESS","","",null,null],[17,"ESTALE","","",null,null],[17,"EDQUOT","","",null,null],[17,"ENOMEDIUM","","",null,null],[17,"EMEDIUMTYPE","","",null,null],[17,"ECANCELED","","",null,null],[17,"ENOKEY","","",null,null],[17,"EKEYEXPIRED","","",null,null],[17,"EKEYREVOKED","","",null,null],[17,"EKEYREJECTED","","",null,null],[17,"EOWNERDEAD","","",null,null],[17,"ENOTRECOVERABLE","","",null,null],[17,"EHWPOISON","","",null,null],[17,"ERFKILL","","",null,null],[17,"SOL_SOCKET","","",null,null],[17,"SO_REUSEADDR","","",null,null],[17,"SO_TYPE","","",null,null],[17,"SO_ERROR","","",null,null],[17,"SO_DONTROUTE","","",null,null],[17,"SO_BROADCAST","","",null,null],[17,"SO_SNDBUF","","",null,null],[17,"SO_RCVBUF","","",null,null],[17,"SO_SNDBUFFORCE","","",null,null],[17,"SO_RCVBUFFORCE","","",null,null],[17,"SO_KEEPALIVE","","",null,null],[17,"SO_OOBINLINE","","",null,null],[17,"SO_NO_CHECK","","",null,null],[17,"SO_PRIORITY","","",null,null],[17,"SO_LINGER","","",null,null],[17,"SO_BSDCOMPAT","","",null,null],[17,"SO_REUSEPORT","","",null,null],[17,"SO_PASSCRED","","",null,null],[17,"SO_PEERCRED","","",null,null],[17,"SO_RCVLOWAT","","",null,null],[17,"SO_SNDLOWAT","","",null,null],[17,"SO_RCVTIMEO","","",null,null],[17,"SO_SNDTIMEO","","",null,null],[17,"SO_SECURITY_AUTHENTICATION","","",null,null],[17,"SO_SECURITY_ENCRYPTION_TRANSPORT","","",null,null],[17,"SO_SECURITY_ENCRYPTION_NETWORK","","",null,null],[17,"SO_BINDTODEVICE","","",null,null],[17,"SO_ATTACH_FILTER","","",null,null],[17,"SO_DETACH_FILTER","","",null,null],[17,"SO_GET_FILTER","","",null,null],[17,"SO_PEERNAME","","",null,null],[17,"SO_TIMESTAMP","","",null,null],[17,"SO_ACCEPTCONN","","",null,null],[17,"SO_PEERSEC","","",null,null],[17,"SO_PASSSEC","","",null,null],[17,"SO_TIMESTAMPNS","","",null,null],[17,"SCM_TIMESTAMPNS","","",null,null],[17,"SO_MARK","","",null,null],[17,"SO_PROTOCOL","","",null,null],[17,"SO_DOMAIN","","",null,null],[17,"SO_RXQ_OVFL","","",null,null],[17,"SO_WIFI_STATUS","","",null,null],[17,"SCM_WIFI_STATUS","","",null,null],[17,"SO_PEEK_OFF","","",null,null],[17,"SO_NOFCS","","",null,null],[17,"SO_LOCK_FILTER","","",null,null],[17,"SO_SELECT_ERR_QUEUE","","",null,null],[17,"SO_BUSY_POLL","","",null,null],[17,"SO_MAX_PACING_RATE","","",null,null],[17,"SO_BPF_EXTENSIONS","","",null,null],[17,"SO_INCOMING_CPU","","",null,null],[17,"SO_ATTACH_BPF","","",null,null],[17,"SO_DETACH_BPF","","",null,null],[17,"SOCK_STREAM","","",null,null],[17,"SOCK_DGRAM","","",null,null],[17,"SA_ONSTACK","","",null,null],[17,"SA_SIGINFO","","",null,null],[17,"SA_NOCLDWAIT","","",null,null],[17,"SIGTTIN","","",null,null],[17,"SIGTTOU","","",null,null],[17,"SIGXCPU","","",null,null],[17,"SIGXFSZ","","",null,null],[17,"SIGVTALRM","","",null,null],[17,"SIGPROF","","",null,null],[17,"SIGWINCH","","",null,null],[17,"SIGCHLD","","",null,null],[17,"SIGBUS","","",null,null],[17,"SIGUSR1","","",null,null],[17,"SIGUSR2","","",null,null],[17,"SIGCONT","","",null,null],[17,"SIGSTOP","","",null,null],[17,"SIGTSTP","","",null,null],[17,"SIGURG","","",null,null],[17,"SIGIO","","",null,null],[17,"SIGSYS","","",null,null],[17,"SIGSTKFLT","","",null,null],[17,"SIGUNUSED","","",null,null],[17,"SIGPOLL","","",null,null],[17,"SIGPWR","","",null,null],[17,"SIG_SETMASK","","",null,null],[17,"SIG_BLOCK","","",null,null],[17,"SIG_UNBLOCK","","",null,null],[17,"POLLWRNORM","","",null,null],[17,"POLLWRBAND","","",null,null],[17,"O_ASYNC","","",null,null],[17,"O_NDELAY","","",null,null],[17,"PTRACE_DETACH","","",null,null],[17,"EFD_NONBLOCK","","",null,null],[17,"F_GETLK","","",null,null],[17,"F_GETOWN","","",null,null],[17,"F_SETOWN","","",null,null],[17,"F_SETLK","","",null,null],[17,"F_SETLKW","","",null,null],[17,"F_OFD_GETLK","","",null,null],[17,"F_OFD_SETLK","","",null,null],[17,"F_OFD_SETLKW","","",null,null],[17,"F_RDLCK","","",null,null],[17,"F_WRLCK","","",null,null],[17,"F_UNLCK","","",null,null],[17,"SFD_NONBLOCK","","",null,null],[17,"TCSANOW","","",null,null],[17,"TCSADRAIN","","",null,null],[17,"TCSAFLUSH","","",null,null],[17,"TIOCLINUX","","",null,null],[17,"TIOCGSERIAL","","",null,null],[17,"TIOCEXCL","","",null,null],[17,"TIOCNXCL","","",null,null],[17,"TIOCSCTTY","","",null,null],[17,"TIOCSTI","","",null,null],[17,"TIOCMGET","","",null,null],[17,"TIOCMBIS","","",null,null],[17,"TIOCMBIC","","",null,null],[17,"TIOCMSET","","",null,null],[17,"TIOCCONS","","",null,null],[17,"TIOCM_ST","","",null,null],[17,"TIOCM_SR","","",null,null],[17,"TIOCM_CTS","","",null,null],[17,"TIOCM_CAR","","",null,null],[17,"TIOCM_RNG","","",null,null],[17,"TIOCM_DSR","","",null,null],[17,"SFD_CLOEXEC","","",null,null],[17,"NCCS","","",null,null],[17,"O_TRUNC","","",null,null],[17,"O_CLOEXEC","","",null,null],[17,"EBFONT","","",null,null],[17,"ENOSTR","","",null,null],[17,"ENODATA","","",null,null],[17,"ETIME","","",null,null],[17,"ENOSR","","",null,null],[17,"ENONET","","",null,null],[17,"ENOPKG","","",null,null],[17,"EREMOTE","","",null,null],[17,"ENOLINK","","",null,null],[17,"EADV","","",null,null],[17,"ESRMNT","","",null,null],[17,"ECOMM","","",null,null],[17,"EPROTO","","",null,null],[17,"EDOTDOT","","",null,null],[17,"SA_NODEFER","","",null,null],[17,"SA_RESETHAND","","",null,null],[17,"SA_RESTART","","",null,null],[17,"SA_NOCLDSTOP","","",null,null],[17,"EPOLL_CLOEXEC","","",null,null],[17,"EFD_CLOEXEC","","",null,null],[17,"__SIZEOF_PTHREAD_CONDATTR_T","","",null,null],[17,"__SIZEOF_PTHREAD_MUTEXATTR_T","","",null,null],[17,"O_DIRECT","","",null,null],[17,"O_DIRECTORY","","",null,null],[17,"O_NOFOLLOW","","",null,null],[17,"MAP_HUGETLB","","",null,null],[17,"MAP_LOCKED","","",null,null],[17,"MAP_NORESERVE","","",null,null],[17,"MAP_32BIT","","",null,null],[17,"MAP_ANON","","",null,null],[17,"MAP_ANONYMOUS","","",null,null],[17,"MAP_DENYWRITE","","",null,null],[17,"MAP_EXECUTABLE","","",null,null],[17,"MAP_POPULATE","","",null,null],[17,"MAP_NONBLOCK","","",null,null],[17,"MAP_STACK","","",null,null],[17,"MAP_SYNC","","",null,null],[17,"EDEADLOCK","","",null,null],[17,"EUCLEAN","","",null,null],[17,"ENOTNAM","","",null,null],[17,"ENAVAIL","","",null,null],[17,"EISNAM","","",null,null],[17,"EREMOTEIO","","",null,null],[17,"FIOCLEX","","",null,null],[17,"FIONCLEX","","",null,null],[17,"FIONBIO","","",null,null],[17,"PTRACE_GETFPREGS","","",null,null],[17,"PTRACE_SETFPREGS","","",null,null],[17,"PTRACE_GETFPXREGS","","",null,null],[17,"PTRACE_SETFPXREGS","","",null,null],[17,"PTRACE_GETREGS","","",null,null],[17,"PTRACE_SETREGS","","",null,null],[17,"PTRACE_PEEKSIGINFO_SHARED","","",null,null],[17,"PTRACE_SYSEMU","","",null,null],[17,"PTRACE_SYSEMU_SINGLESTEP","","",null,null],[17,"MCL_CURRENT","","",null,null],[17,"MCL_FUTURE","","",null,null],[17,"SIGSTKSZ","","",null,null],[17,"MINSIGSTKSZ","","",null,null],[17,"CBAUD","","",null,null],[17,"TAB1","","",null,null],[17,"TAB2","","",null,null],[17,"TAB3","","",null,null],[17,"CR1","","",null,null],[17,"CR2","","",null,null],[17,"CR3","","",null,null],[17,"FF1","","",null,null],[17,"BS1","","",null,null],[17,"VT1","","",null,null],[17,"VWERASE","","",null,null],[17,"VREPRINT","","",null,null],[17,"VSUSP","","",null,null],[17,"VSTART","","",null,null],[17,"VSTOP","","",null,null],[17,"VDISCARD","","",null,null],[17,"VTIME","","",null,null],[17,"IXON","","",null,null],[17,"IXOFF","","",null,null],[17,"ONLCR","","",null,null],[17,"CSIZE","","",null,null],[17,"CS6","","",null,null],[17,"CS7","","",null,null],[17,"CS8","","",null,null],[17,"CSTOPB","","",null,null],[17,"CREAD","","",null,null],[17,"PARENB","","",null,null],[17,"PARODD","","",null,null],[17,"HUPCL","","",null,null],[17,"CLOCAL","","",null,null],[17,"ECHOKE","","",null,null],[17,"ECHOE","","",null,null],[17,"ECHOK","","",null,null],[17,"ECHONL","","",null,null],[17,"ECHOPRT","","",null,null],[17,"ECHOCTL","","",null,null],[17,"ISIG","","",null,null],[17,"ICANON","","",null,null],[17,"PENDIN","","",null,null],[17,"NOFLSH","","",null,null],[17,"CIBAUD","","",null,null],[17,"CBAUDEX","","",null,null],[17,"VSWTC","","",null,null],[17,"OLCUC","","",null,null],[17,"NLDLY","","",null,null],[17,"CRDLY","","",null,null],[17,"TABDLY","","",null,null],[17,"BSDLY","","",null,null],[17,"FFDLY","","",null,null],[17,"VTDLY","","",null,null],[17,"XTABS","","",null,null],[17,"B0","","",null,null],[17,"B50","","",null,null],[17,"B75","","",null,null],[17,"B110","","",null,null],[17,"B134","","",null,null],[17,"B150","","",null,null],[17,"B200","","",null,null],[17,"B300","","",null,null],[17,"B600","","",null,null],[17,"B1200","","",null,null],[17,"B1800","","",null,null],[17,"B2400","","",null,null],[17,"B4800","","",null,null],[17,"B9600","","",null,null],[17,"B19200","","",null,null],[17,"B38400","","",null,null],[17,"EXTA","","",null,null],[17,"EXTB","","",null,null],[17,"BOTHER","","",null,null],[17,"B57600","","",null,null],[17,"B115200","","",null,null],[17,"B230400","","",null,null],[17,"B460800","","",null,null],[17,"B500000","","",null,null],[17,"B576000","","",null,null],[17,"B921600","","",null,null],[17,"B1000000","","",null,null],[17,"B1152000","","",null,null],[17,"B1500000","","",null,null],[17,"B2000000","","",null,null],[17,"B2500000","","",null,null],[17,"B3000000","","",null,null],[17,"B3500000","","",null,null],[17,"B4000000","","",null,null],[17,"VEOL","","",null,null],[17,"VEOL2","","",null,null],[17,"VMIN","","",null,null],[17,"IEXTEN","","",null,null],[17,"TOSTOP","","",null,null],[17,"FLUSHO","","",null,null],[17,"EXTPROC","","",null,null],[17,"TCGETS","","",null,null],[17,"TCSETS","","",null,null],[17,"TCSETSW","","",null,null],[17,"TCSETSF","","",null,null],[17,"TCGETA","","",null,null],[17,"TCSETA","","",null,null],[17,"TCSETAW","","",null,null],[17,"TCSETAF","","",null,null],[17,"TCSBRK","","",null,null],[17,"TCXONC","","",null,null],[17,"TCFLSH","","",null,null],[17,"TIOCINQ","","",null,null],[17,"TIOCGPGRP","","",null,null],[17,"TIOCSPGRP","","",null,null],[17,"TIOCOUTQ","","",null,null],[17,"TIOCGWINSZ","","",null,null],[17,"TIOCSWINSZ","","",null,null],[17,"FIONREAD","","",null,null],[17,"TIOCSBRK","","",null,null],[17,"TIOCCBRK","","",null,null],[17,"R15","","",null,null],[17,"R14","","",null,null],[17,"R13","","",null,null],[17,"R12","","",null,null],[17,"RBP","","",null,null],[17,"RBX","","",null,null],[17,"R11","","",null,null],[17,"R10","","",null,null],[17,"R9","","",null,null],[17,"R8","","",null,null],[17,"RAX","","",null,null],[17,"RCX","","",null,null],[17,"RDX","","",null,null],[17,"RSI","","",null,null],[17,"RDI","","",null,null],[17,"ORIG_RAX","","",null,null],[17,"RIP","","",null,null],[17,"CS","","",null,null],[17,"EFLAGS","","",null,null],[17,"RSP","","",null,null],[17,"SS","","",null,null],[17,"FS_BASE","","",null,null],[17,"GS_BASE","","",null,null],[17,"DS","","",null,null],[17,"ES","","",null,null],[17,"FS","","",null,null],[17,"GS","","",null,null],[17,"REG_R8","","",null,null],[17,"REG_R9","","",null,null],[17,"REG_R10","","",null,null],[17,"REG_R11","","",null,null],[17,"REG_R12","","",null,null],[17,"REG_R13","","",null,null],[17,"REG_R14","","",null,null],[17,"REG_R15","","",null,null],[17,"REG_RDI","","",null,null],[17,"REG_RSI","","",null,null],[17,"REG_RBP","","",null,null],[17,"REG_RBX","","",null,null],[17,"REG_RDX","","",null,null],[17,"REG_RAX","","",null,null],[17,"REG_RCX","","",null,null],[17,"REG_RSP","","",null,null],[17,"REG_RIP","","",null,null],[17,"REG_EFL","","",null,null],[17,"REG_CSGSFS","","",null,null],[17,"REG_ERR","","",null,null],[17,"REG_TRAPNO","","",null,null],[17,"REG_OLDMASK","","",null,null],[17,"REG_CR2","","",null,null],[6,"c_long","","",null,null],[6,"c_ulong","","",null,null],[3,"statvfs","","",null,null],[12,"f_bsize","","",136,null],[12,"f_frsize","","",136,null],[12,"f_blocks","","",136,null],[12,"f_bfree","","",136,null],[12,"f_bavail","","",136,null],[12,"f_files","","",136,null],[12,"f_ffree","","",136,null],[12,"f_favail","","",136,null],[12,"f_fsid","","",136,null],[12,"f_flag","","",136,null],[12,"f_namemax","","",136,null],[17,"__SIZEOF_PTHREAD_MUTEX_T","","",null,null],[17,"__SIZEOF_PTHREAD_RWLOCK_T","","",null,null],[17,"PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP","","",null,null],[17,"PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP","","",null,null],[17,"PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP","","",null,null],[17,"SYS_read","","",null,null],[17,"SYS_write","","",null,null],[17,"SYS_open","","",null,null],[17,"SYS_close","","",null,null],[17,"SYS_stat","","",null,null],[17,"SYS_fstat","","",null,null],[17,"SYS_lstat","","",null,null],[17,"SYS_poll","","",null,null],[17,"SYS_lseek","","",null,null],[17,"SYS_mmap","","",null,null],[17,"SYS_mprotect","","",null,null],[17,"SYS_munmap","","",null,null],[17,"SYS_brk","","",null,null],[17,"SYS_rt_sigaction","","",null,null],[17,"SYS_rt_sigprocmask","","",null,null],[17,"SYS_rt_sigreturn","","",null,null],[17,"SYS_ioctl","","",null,null],[17,"SYS_pread64","","",null,null],[17,"SYS_pwrite64","","",null,null],[17,"SYS_readv","","",null,null],[17,"SYS_writev","","",null,null],[17,"SYS_access","","",null,null],[17,"SYS_pipe","","",null,null],[17,"SYS_select","","",null,null],[17,"SYS_sched_yield","","",null,null],[17,"SYS_mremap","","",null,null],[17,"SYS_msync","","",null,null],[17,"SYS_mincore","","",null,null],[17,"SYS_madvise","","",null,null],[17,"SYS_shmget","","",null,null],[17,"SYS_shmat","","",null,null],[17,"SYS_shmctl","","",null,null],[17,"SYS_dup","","",null,null],[17,"SYS_dup2","","",null,null],[17,"SYS_pause","","",null,null],[17,"SYS_nanosleep","","",null,null],[17,"SYS_getitimer","","",null,null],[17,"SYS_alarm","","",null,null],[17,"SYS_setitimer","","",null,null],[17,"SYS_getpid","","",null,null],[17,"SYS_sendfile","","",null,null],[17,"SYS_socket","","",null,null],[17,"SYS_connect","","",null,null],[17,"SYS_accept","","",null,null],[17,"SYS_sendto","","",null,null],[17,"SYS_recvfrom","","",null,null],[17,"SYS_sendmsg","","",null,null],[17,"SYS_recvmsg","","",null,null],[17,"SYS_shutdown","","",null,null],[17,"SYS_bind","","",null,null],[17,"SYS_listen","","",null,null],[17,"SYS_getsockname","","",null,null],[17,"SYS_getpeername","","",null,null],[17,"SYS_socketpair","","",null,null],[17,"SYS_setsockopt","","",null,null],[17,"SYS_getsockopt","","",null,null],[17,"SYS_clone","","",null,null],[17,"SYS_fork","","",null,null],[17,"SYS_vfork","","",null,null],[17,"SYS_execve","","",null,null],[17,"SYS_exit","","",null,null],[17,"SYS_wait4","","",null,null],[17,"SYS_kill","","",null,null],[17,"SYS_uname","","",null,null],[17,"SYS_semget","","",null,null],[17,"SYS_semop","","",null,null],[17,"SYS_semctl","","",null,null],[17,"SYS_shmdt","","",null,null],[17,"SYS_msgget","","",null,null],[17,"SYS_msgsnd","","",null,null],[17,"SYS_msgrcv","","",null,null],[17,"SYS_msgctl","","",null,null],[17,"SYS_fcntl","","",null,null],[17,"SYS_flock","","",null,null],[17,"SYS_fsync","","",null,null],[17,"SYS_fdatasync","","",null,null],[17,"SYS_truncate","","",null,null],[17,"SYS_ftruncate","","",null,null],[17,"SYS_getdents","","",null,null],[17,"SYS_getcwd","","",null,null],[17,"SYS_chdir","","",null,null],[17,"SYS_fchdir","","",null,null],[17,"SYS_rename","","",null,null],[17,"SYS_mkdir","","",null,null],[17,"SYS_rmdir","","",null,null],[17,"SYS_creat","","",null,null],[17,"SYS_link","","",null,null],[17,"SYS_unlink","","",null,null],[17,"SYS_symlink","","",null,null],[17,"SYS_readlink","","",null,null],[17,"SYS_chmod","","",null,null],[17,"SYS_fchmod","","",null,null],[17,"SYS_chown","","",null,null],[17,"SYS_fchown","","",null,null],[17,"SYS_lchown","","",null,null],[17,"SYS_umask","","",null,null],[17,"SYS_gettimeofday","","",null,null],[17,"SYS_getrlimit","","",null,null],[17,"SYS_getrusage","","",null,null],[17,"SYS_sysinfo","","",null,null],[17,"SYS_times","","",null,null],[17,"SYS_ptrace","","",null,null],[17,"SYS_getuid","","",null,null],[17,"SYS_syslog","","",null,null],[17,"SYS_getgid","","",null,null],[17,"SYS_setuid","","",null,null],[17,"SYS_setgid","","",null,null],[17,"SYS_geteuid","","",null,null],[17,"SYS_getegid","","",null,null],[17,"SYS_setpgid","","",null,null],[17,"SYS_getppid","","",null,null],[17,"SYS_getpgrp","","",null,null],[17,"SYS_setsid","","",null,null],[17,"SYS_setreuid","","",null,null],[17,"SYS_setregid","","",null,null],[17,"SYS_getgroups","","",null,null],[17,"SYS_setgroups","","",null,null],[17,"SYS_setresuid","","",null,null],[17,"SYS_getresuid","","",null,null],[17,"SYS_setresgid","","",null,null],[17,"SYS_getresgid","","",null,null],[17,"SYS_getpgid","","",null,null],[17,"SYS_setfsuid","","",null,null],[17,"SYS_setfsgid","","",null,null],[17,"SYS_getsid","","",null,null],[17,"SYS_capget","","",null,null],[17,"SYS_capset","","",null,null],[17,"SYS_rt_sigpending","","",null,null],[17,"SYS_rt_sigtimedwait","","",null,null],[17,"SYS_rt_sigqueueinfo","","",null,null],[17,"SYS_rt_sigsuspend","","",null,null],[17,"SYS_sigaltstack","","",null,null],[17,"SYS_utime","","",null,null],[17,"SYS_mknod","","",null,null],[17,"SYS_uselib","","",null,null],[17,"SYS_personality","","",null,null],[17,"SYS_ustat","","",null,null],[17,"SYS_statfs","","",null,null],[17,"SYS_fstatfs","","",null,null],[17,"SYS_sysfs","","",null,null],[17,"SYS_getpriority","","",null,null],[17,"SYS_setpriority","","",null,null],[17,"SYS_sched_setparam","","",null,null],[17,"SYS_sched_getparam","","",null,null],[17,"SYS_sched_setscheduler","","",null,null],[17,"SYS_sched_getscheduler","","",null,null],[17,"SYS_sched_get_priority_max","","",null,null],[17,"SYS_sched_get_priority_min","","",null,null],[17,"SYS_sched_rr_get_interval","","",null,null],[17,"SYS_mlock","","",null,null],[17,"SYS_munlock","","",null,null],[17,"SYS_mlockall","","",null,null],[17,"SYS_munlockall","","",null,null],[17,"SYS_vhangup","","",null,null],[17,"SYS_modify_ldt","","",null,null],[17,"SYS_pivot_root","","",null,null],[17,"SYS__sysctl","","",null,null],[17,"SYS_prctl","","",null,null],[17,"SYS_arch_prctl","","",null,null],[17,"SYS_adjtimex","","",null,null],[17,"SYS_setrlimit","","",null,null],[17,"SYS_chroot","","",null,null],[17,"SYS_sync","","",null,null],[17,"SYS_acct","","",null,null],[17,"SYS_settimeofday","","",null,null],[17,"SYS_mount","","",null,null],[17,"SYS_umount2","","",null,null],[17,"SYS_swapon","","",null,null],[17,"SYS_swapoff","","",null,null],[17,"SYS_reboot","","",null,null],[17,"SYS_sethostname","","",null,null],[17,"SYS_setdomainname","","",null,null],[17,"SYS_iopl","","",null,null],[17,"SYS_ioperm","","",null,null],[17,"SYS_create_module","","",null,null],[17,"SYS_init_module","","",null,null],[17,"SYS_delete_module","","",null,null],[17,"SYS_get_kernel_syms","","",null,null],[17,"SYS_query_module","","",null,null],[17,"SYS_quotactl","","",null,null],[17,"SYS_nfsservctl","","",null,null],[17,"SYS_getpmsg","","",null,null],[17,"SYS_putpmsg","","",null,null],[17,"SYS_afs_syscall","","",null,null],[17,"SYS_tuxcall","","",null,null],[17,"SYS_security","","",null,null],[17,"SYS_gettid","","",null,null],[17,"SYS_readahead","","",null,null],[17,"SYS_setxattr","","",null,null],[17,"SYS_lsetxattr","","",null,null],[17,"SYS_fsetxattr","","",null,null],[17,"SYS_getxattr","","",null,null],[17,"SYS_lgetxattr","","",null,null],[17,"SYS_fgetxattr","","",null,null],[17,"SYS_listxattr","","",null,null],[17,"SYS_llistxattr","","",null,null],[17,"SYS_flistxattr","","",null,null],[17,"SYS_removexattr","","",null,null],[17,"SYS_lremovexattr","","",null,null],[17,"SYS_fremovexattr","","",null,null],[17,"SYS_tkill","","",null,null],[17,"SYS_time","","",null,null],[17,"SYS_futex","","",null,null],[17,"SYS_sched_setaffinity","","",null,null],[17,"SYS_sched_getaffinity","","",null,null],[17,"SYS_set_thread_area","","",null,null],[17,"SYS_io_setup","","",null,null],[17,"SYS_io_destroy","","",null,null],[17,"SYS_io_getevents","","",null,null],[17,"SYS_io_submit","","",null,null],[17,"SYS_io_cancel","","",null,null],[17,"SYS_get_thread_area","","",null,null],[17,"SYS_lookup_dcookie","","",null,null],[17,"SYS_epoll_create","","",null,null],[17,"SYS_epoll_ctl_old","","",null,null],[17,"SYS_epoll_wait_old","","",null,null],[17,"SYS_remap_file_pages","","",null,null],[17,"SYS_getdents64","","",null,null],[17,"SYS_set_tid_address","","",null,null],[17,"SYS_restart_syscall","","",null,null],[17,"SYS_semtimedop","","",null,null],[17,"SYS_fadvise64","","",null,null],[17,"SYS_timer_create","","",null,null],[17,"SYS_timer_settime","","",null,null],[17,"SYS_timer_gettime","","",null,null],[17,"SYS_timer_getoverrun","","",null,null],[17,"SYS_timer_delete","","",null,null],[17,"SYS_clock_settime","","",null,null],[17,"SYS_clock_gettime","","",null,null],[17,"SYS_clock_getres","","",null,null],[17,"SYS_clock_nanosleep","","",null,null],[17,"SYS_exit_group","","",null,null],[17,"SYS_epoll_wait","","",null,null],[17,"SYS_epoll_ctl","","",null,null],[17,"SYS_tgkill","","",null,null],[17,"SYS_utimes","","",null,null],[17,"SYS_vserver","","",null,null],[17,"SYS_mbind","","",null,null],[17,"SYS_set_mempolicy","","",null,null],[17,"SYS_get_mempolicy","","",null,null],[17,"SYS_mq_open","","",null,null],[17,"SYS_mq_unlink","","",null,null],[17,"SYS_mq_timedsend","","",null,null],[17,"SYS_mq_timedreceive","","",null,null],[17,"SYS_mq_notify","","",null,null],[17,"SYS_mq_getsetattr","","",null,null],[17,"SYS_kexec_load","","",null,null],[17,"SYS_waitid","","",null,null],[17,"SYS_add_key","","",null,null],[17,"SYS_request_key","","",null,null],[17,"SYS_keyctl","","",null,null],[17,"SYS_ioprio_set","","",null,null],[17,"SYS_ioprio_get","","",null,null],[17,"SYS_inotify_init","","",null,null],[17,"SYS_inotify_add_watch","","",null,null],[17,"SYS_inotify_rm_watch","","",null,null],[17,"SYS_migrate_pages","","",null,null],[17,"SYS_openat","","",null,null],[17,"SYS_mkdirat","","",null,null],[17,"SYS_mknodat","","",null,null],[17,"SYS_fchownat","","",null,null],[17,"SYS_futimesat","","",null,null],[17,"SYS_newfstatat","","",null,null],[17,"SYS_unlinkat","","",null,null],[17,"SYS_renameat","","",null,null],[17,"SYS_linkat","","",null,null],[17,"SYS_symlinkat","","",null,null],[17,"SYS_readlinkat","","",null,null],[17,"SYS_fchmodat","","",null,null],[17,"SYS_faccessat","","",null,null],[17,"SYS_pselect6","","",null,null],[17,"SYS_ppoll","","",null,null],[17,"SYS_unshare","","",null,null],[17,"SYS_set_robust_list","","",null,null],[17,"SYS_get_robust_list","","",null,null],[17,"SYS_splice","","",null,null],[17,"SYS_tee","","",null,null],[17,"SYS_sync_file_range","","",null,null],[17,"SYS_vmsplice","","",null,null],[17,"SYS_move_pages","","",null,null],[17,"SYS_utimensat","","",null,null],[17,"SYS_epoll_pwait","","",null,null],[17,"SYS_signalfd","","",null,null],[17,"SYS_timerfd_create","","",null,null],[17,"SYS_eventfd","","",null,null],[17,"SYS_fallocate","","",null,null],[17,"SYS_timerfd_settime","","",null,null],[17,"SYS_timerfd_gettime","","",null,null],[17,"SYS_accept4","","",null,null],[17,"SYS_signalfd4","","",null,null],[17,"SYS_eventfd2","","",null,null],[17,"SYS_epoll_create1","","",null,null],[17,"SYS_dup3","","",null,null],[17,"SYS_pipe2","","",null,null],[17,"SYS_inotify_init1","","",null,null],[17,"SYS_preadv","","",null,null],[17,"SYS_pwritev","","",null,null],[17,"SYS_rt_tgsigqueueinfo","","",null,null],[17,"SYS_perf_event_open","","",null,null],[17,"SYS_recvmmsg","","",null,null],[17,"SYS_fanotify_init","","",null,null],[17,"SYS_fanotify_mark","","",null,null],[17,"SYS_prlimit64","","",null,null],[17,"SYS_name_to_handle_at","","",null,null],[17,"SYS_open_by_handle_at","","",null,null],[17,"SYS_clock_adjtime","","",null,null],[17,"SYS_syncfs","","",null,null],[17,"SYS_sendmmsg","","",null,null],[17,"SYS_setns","","",null,null],[17,"SYS_getcpu","","",null,null],[17,"SYS_process_vm_readv","","",null,null],[17,"SYS_process_vm_writev","","",null,null],[17,"SYS_kcmp","","",null,null],[17,"SYS_finit_module","","",null,null],[17,"SYS_sched_setattr","","",null,null],[17,"SYS_sched_getattr","","",null,null],[17,"SYS_renameat2","","",null,null],[17,"SYS_seccomp","","",null,null],[17,"SYS_getrandom","","",null,null],[17,"SYS_memfd_create","","",null,null],[17,"SYS_kexec_file_load","","",null,null],[17,"SYS_bpf","","",null,null],[17,"SYS_execveat","","",null,null],[17,"SYS_userfaultfd","","",null,null],[17,"SYS_membarrier","","",null,null],[17,"SYS_mlock2","","",null,null],[17,"SYS_copy_file_range","","",null,null],[17,"SYS_preadv2","","",null,null],[17,"SYS_pwritev2","","",null,null],[17,"SYS_pkey_mprotect","","",null,null],[17,"SYS_pkey_alloc","","",null,null],[17,"SYS_pkey_free","","",null,null],[17,"SYS_statx","","",null,null],[3,"max_align_t","","",null,null],[3,"sem_t","","",null,null],[3,"pthread_mutexattr_t","","",null,null],[3,"pthread_rwlockattr_t","","",null,null],[3,"pthread_condattr_t","","",null,null],[3,"fanotify_event_metadata","","",null,null],[12,"event_len","","",137,null],[12,"vers","","",137,null],[12,"reserved","","",137,null],[12,"metadata_len","","",137,null],[12,"mask","","",137,null],[12,"fd","","",137,null],[12,"pid","","",137,null],[3,"pthread_cond_t","","",null,null],[3,"pthread_mutex_t","","",null,null],[3,"pthread_rwlock_t","","",null,null],[3,"in6_addr","","",null,null],[12,"s6_addr","","",138,null],[11,"from","","",139,[[]]],[11,"borrow","","",139,[[]]],[11,"borrow_mut","","",139,[[]]],[11,"try_from","","",139,[[],["result",4]]],[11,"into","","",139,[[]]],[11,"try_into","","",139,[[],["result",4]]],[11,"type_id","","",139,[[],["typeid",3]]],[11,"from","","",136,[[]]],[11,"borrow","","",136,[[]]],[11,"borrow_mut","","",136,[[]]],[11,"try_from","","",136,[[],["result",4]]],[11,"into","","",136,[[]]],[11,"try_into","","",136,[[],["result",4]]],[11,"type_id","","",136,[[],["typeid",3]]],[11,"from","","",140,[[]]],[11,"borrow","","",140,[[]]],[11,"borrow_mut","","",140,[[]]],[11,"try_from","","",140,[[],["result",4]]],[11,"into","","",140,[[]]],[11,"try_into","","",140,[[],["result",4]]],[11,"type_id","","",140,[[],["typeid",3]]],[11,"from","","",114,[[]]],[11,"borrow","","",114,[[]]],[11,"borrow_mut","","",114,[[]]],[11,"try_from","","",114,[[],["result",4]]],[11,"into","","",114,[[]]],[11,"try_into","","",114,[[],["result",4]]],[11,"type_id","","",114,[[],["typeid",3]]],[11,"from","","",115,[[]]],[11,"borrow","","",115,[[]]],[11,"borrow_mut","","",115,[[]]],[11,"try_from","","",115,[[],["result",4]]],[11,"into","","",115,[[]]],[11,"try_into","","",115,[[],["result",4]]],[11,"type_id","","",115,[[],["typeid",3]]],[11,"from","","",116,[[]]],[11,"borrow","","",116,[[]]],[11,"borrow_mut","","",116,[[]]],[11,"try_from","","",116,[[],["result",4]]],[11,"into","","",116,[[]]],[11,"try_into","","",116,[[],["result",4]]],[11,"type_id","","",116,[[],["typeid",3]]],[11,"from","","",117,[[]]],[11,"borrow","","",117,[[]]],[11,"borrow_mut","","",117,[[]]],[11,"try_from","","",117,[[],["result",4]]],[11,"into","","",117,[[]]],[11,"try_into","","",117,[[],["result",4]]],[11,"type_id","","",117,[[],["typeid",3]]],[11,"from","","",118,[[]]],[11,"borrow","","",118,[[]]],[11,"borrow_mut","","",118,[[]]],[11,"try_from","","",118,[[],["result",4]]],[11,"into","","",118,[[]]],[11,"try_into","","",118,[[],["result",4]]],[11,"type_id","","",118,[[],["typeid",3]]],[11,"from","","",119,[[]]],[11,"borrow","","",119,[[]]],[11,"borrow_mut","","",119,[[]]],[11,"try_from","","",119,[[],["result",4]]],[11,"into","","",119,[[]]],[11,"try_into","","",119,[[],["result",4]]],[11,"type_id","","",119,[[],["typeid",3]]],[11,"from","","",120,[[]]],[11,"borrow","","",120,[[]]],[11,"borrow_mut","","",120,[[]]],[11,"try_from","","",120,[[],["result",4]]],[11,"into","","",120,[[]]],[11,"try_into","","",120,[[],["result",4]]],[11,"type_id","","",120,[[],["typeid",3]]],[11,"from","","",121,[[]]],[11,"borrow","","",121,[[]]],[11,"borrow_mut","","",121,[[]]],[11,"try_from","","",121,[[],["result",4]]],[11,"into","","",121,[[]]],[11,"try_into","","",121,[[],["result",4]]],[11,"type_id","","",121,[[],["typeid",3]]],[11,"from","","",122,[[]]],[11,"borrow","","",122,[[]]],[11,"borrow_mut","","",122,[[]]],[11,"try_from","","",122,[[],["result",4]]],[11,"into","","",122,[[]]],[11,"try_into","","",122,[[],["result",4]]],[11,"type_id","","",122,[[],["typeid",3]]],[11,"from","","",123,[[]]],[11,"borrow","","",123,[[]]],[11,"borrow_mut","","",123,[[]]],[11,"try_from","","",123,[[],["result",4]]],[11,"into","","",123,[[]]],[11,"try_into","","",123,[[],["result",4]]],[11,"type_id","","",123,[[],["typeid",3]]],[11,"from","","",141,[[]]],[11,"borrow","","",141,[[]]],[11,"borrow_mut","","",141,[[]]],[11,"try_from","","",141,[[],["result",4]]],[11,"into","","",141,[[]]],[11,"try_into","","",141,[[],["result",4]]],[11,"type_id","","",141,[[],["typeid",3]]],[11,"from","","",124,[[]]],[11,"borrow","","",124,[[]]],[11,"borrow_mut","","",124,[[]]],[11,"try_from","","",124,[[],["result",4]]],[11,"into","","",124,[[]]],[11,"try_into","","",124,[[],["result",4]]],[11,"type_id","","",124,[[],["typeid",3]]],[11,"from","","",125,[[]]],[11,"borrow","","",125,[[]]],[11,"borrow_mut","","",125,[[]]],[11,"try_from","","",125,[[],["result",4]]],[11,"into","","",125,[[]]],[11,"try_into","","",125,[[],["result",4]]],[11,"type_id","","",125,[[],["typeid",3]]],[11,"from","","",126,[[]]],[11,"borrow","","",126,[[]]],[11,"borrow_mut","","",126,[[]]],[11,"try_from","","",126,[[],["result",4]]],[11,"into","","",126,[[]]],[11,"try_into","","",126,[[],["result",4]]],[11,"type_id","","",126,[[],["typeid",3]]],[11,"from","","",127,[[]]],[11,"borrow","","",127,[[]]],[11,"borrow_mut","","",127,[[]]],[11,"try_from","","",127,[[],["result",4]]],[11,"into","","",127,[[]]],[11,"try_into","","",127,[[],["result",4]]],[11,"type_id","","",127,[[],["typeid",3]]],[11,"from","","",128,[[]]],[11,"borrow","","",128,[[]]],[11,"borrow_mut","","",128,[[]]],[11,"try_from","","",128,[[],["result",4]]],[11,"into","","",128,[[]]],[11,"try_into","","",128,[[],["result",4]]],[11,"type_id","","",128,[[],["typeid",3]]],[11,"from","","",129,[[]]],[11,"borrow","","",129,[[]]],[11,"borrow_mut","","",129,[[]]],[11,"try_from","","",129,[[],["result",4]]],[11,"into","","",129,[[]]],[11,"try_into","","",129,[[],["result",4]]],[11,"type_id","","",129,[[],["typeid",3]]],[11,"from","","",130,[[]]],[11,"borrow","","",130,[[]]],[11,"borrow_mut","","",130,[[]]],[11,"try_from","","",130,[[],["result",4]]],[11,"into","","",130,[[]]],[11,"try_into","","",130,[[],["result",4]]],[11,"type_id","","",130,[[],["typeid",3]]],[11,"from","","",131,[[]]],[11,"borrow","","",131,[[]]],[11,"borrow_mut","","",131,[[]]],[11,"try_from","","",131,[[],["result",4]]],[11,"into","","",131,[[]]],[11,"try_into","","",131,[[],["result",4]]],[11,"type_id","","",131,[[],["typeid",3]]],[11,"from","","",132,[[]]],[11,"borrow","","",132,[[]]],[11,"borrow_mut","","",132,[[]]],[11,"try_from","","",132,[[],["result",4]]],[11,"into","","",132,[[]]],[11,"try_into","","",132,[[],["result",4]]],[11,"type_id","","",132,[[],["typeid",3]]],[11,"from","","",133,[[]]],[11,"borrow","","",133,[[]]],[11,"borrow_mut","","",133,[[]]],[11,"try_from","","",133,[[],["result",4]]],[11,"into","","",133,[[]]],[11,"try_into","","",133,[[],["result",4]]],[11,"type_id","","",133,[[],["typeid",3]]],[11,"from","","",134,[[]]],[11,"borrow","","",134,[[]]],[11,"borrow_mut","","",134,[[]]],[11,"try_from","","",134,[[],["result",4]]],[11,"into","","",134,[[]]],[11,"try_into","","",134,[[],["result",4]]],[11,"type_id","","",134,[[],["typeid",3]]],[11,"from","","",135,[[]]],[11,"borrow","","",135,[[]]],[11,"borrow_mut","","",135,[[]]],[11,"try_from","","",135,[[],["result",4]]],[11,"into","","",135,[[]]],[11,"try_into","","",135,[[],["result",4]]],[11,"type_id","","",135,[[],["typeid",3]]],[11,"from","","",142,[[]]],[11,"borrow","","",142,[[]]],[11,"borrow_mut","","",142,[[]]],[11,"try_from","","",142,[[],["result",4]]],[11,"into","","",142,[[]]],[11,"try_into","","",142,[[],["result",4]]],[11,"type_id","","",142,[[],["typeid",3]]],[11,"from","","",112,[[]]],[11,"borrow","","",112,[[]]],[11,"borrow_mut","","",112,[[]]],[11,"try_from","","",112,[[],["result",4]]],[11,"into","","",112,[[]]],[11,"try_into","","",112,[[],["result",4]]],[11,"type_id","","",112,[[],["typeid",3]]],[11,"from","","",113,[[]]],[11,"borrow","","",113,[[]]],[11,"borrow_mut","","",113,[[]]],[11,"try_from","","",113,[[],["result",4]]],[11,"into","","",113,[[]]],[11,"try_into","","",113,[[],["result",4]]],[11,"type_id","","",113,[[],["typeid",3]]],[11,"from","","",143,[[]]],[11,"borrow","","",143,[[]]],[11,"borrow_mut","","",143,[[]]],[11,"try_from","","",143,[[],["result",4]]],[11,"into","","",143,[[]]],[11,"try_into","","",143,[[],["result",4]]],[11,"type_id","","",143,[[],["typeid",3]]],[11,"from","","",92,[[]]],[11,"borrow","","",92,[[]]],[11,"borrow_mut","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"into","","",92,[[]]],[11,"try_into","","",92,[[],["result",4]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"from","","",93,[[]]],[11,"borrow","","",93,[[]]],[11,"borrow_mut","","",93,[[]]],[11,"try_from","","",93,[[],["result",4]]],[11,"into","","",93,[[]]],[11,"try_into","","",93,[[],["result",4]]],[11,"type_id","","",93,[[],["typeid",3]]],[11,"from","","",94,[[]]],[11,"borrow","","",94,[[]]],[11,"borrow_mut","","",94,[[]]],[11,"try_from","","",94,[[],["result",4]]],[11,"into","","",94,[[]]],[11,"try_into","","",94,[[],["result",4]]],[11,"type_id","","",94,[[],["typeid",3]]],[11,"from","","",95,[[]]],[11,"borrow","","",95,[[]]],[11,"borrow_mut","","",95,[[]]],[11,"try_from","","",95,[[],["result",4]]],[11,"into","","",95,[[]]],[11,"try_into","","",95,[[],["result",4]]],[11,"type_id","","",95,[[],["typeid",3]]],[11,"from","","",96,[[]]],[11,"borrow","","",96,[[]]],[11,"borrow_mut","","",96,[[]]],[11,"try_from","","",96,[[],["result",4]]],[11,"into","","",96,[[]]],[11,"try_into","","",96,[[],["result",4]]],[11,"type_id","","",96,[[],["typeid",3]]],[11,"from","","",97,[[]]],[11,"borrow","","",97,[[]]],[11,"borrow_mut","","",97,[[]]],[11,"try_from","","",97,[[],["result",4]]],[11,"into","","",97,[[]]],[11,"try_into","","",97,[[],["result",4]]],[11,"type_id","","",97,[[],["typeid",3]]],[11,"from","","",98,[[]]],[11,"borrow","","",98,[[]]],[11,"borrow_mut","","",98,[[]]],[11,"try_from","","",98,[[],["result",4]]],[11,"into","","",98,[[]]],[11,"try_into","","",98,[[],["result",4]]],[11,"type_id","","",98,[[],["typeid",3]]],[11,"from","","",99,[[]]],[11,"borrow","","",99,[[]]],[11,"borrow_mut","","",99,[[]]],[11,"try_from","","",99,[[],["result",4]]],[11,"into","","",99,[[]]],[11,"try_into","","",99,[[],["result",4]]],[11,"type_id","","",99,[[],["typeid",3]]],[11,"from","","",100,[[]]],[11,"borrow","","",100,[[]]],[11,"borrow_mut","","",100,[[]]],[11,"try_from","","",100,[[],["result",4]]],[11,"into","","",100,[[]]],[11,"try_into","","",100,[[],["result",4]]],[11,"type_id","","",100,[[],["typeid",3]]],[11,"from","","",101,[[]]],[11,"borrow","","",101,[[]]],[11,"borrow_mut","","",101,[[]]],[11,"try_from","","",101,[[],["result",4]]],[11,"into","","",101,[[]]],[11,"try_into","","",101,[[],["result",4]]],[11,"type_id","","",101,[[],["typeid",3]]],[11,"from","","",102,[[]]],[11,"borrow","","",102,[[]]],[11,"borrow_mut","","",102,[[]]],[11,"try_from","","",102,[[],["result",4]]],[11,"into","","",102,[[]]],[11,"try_into","","",102,[[],["result",4]]],[11,"type_id","","",102,[[],["typeid",3]]],[11,"from","","",103,[[]]],[11,"borrow","","",103,[[]]],[11,"borrow_mut","","",103,[[]]],[11,"try_from","","",103,[[],["result",4]]],[11,"into","","",103,[[]]],[11,"try_into","","",103,[[],["result",4]]],[11,"type_id","","",103,[[],["typeid",3]]],[11,"from","","",104,[[]]],[11,"borrow","","",104,[[]]],[11,"borrow_mut","","",104,[[]]],[11,"try_from","","",104,[[],["result",4]]],[11,"into","","",104,[[]]],[11,"try_into","","",104,[[],["result",4]]],[11,"type_id","","",104,[[],["typeid",3]]],[11,"from","","",105,[[]]],[11,"borrow","","",105,[[]]],[11,"borrow_mut","","",105,[[]]],[11,"try_from","","",105,[[],["result",4]]],[11,"into","","",105,[[]]],[11,"try_into","","",105,[[],["result",4]]],[11,"type_id","","",105,[[],["typeid",3]]],[11,"from","","",106,[[]]],[11,"borrow","","",106,[[]]],[11,"borrow_mut","","",106,[[]]],[11,"try_from","","",106,[[],["result",4]]],[11,"into","","",106,[[]]],[11,"try_into","","",106,[[],["result",4]]],[11,"type_id","","",106,[[],["typeid",3]]],[11,"from","","",107,[[]]],[11,"borrow","","",107,[[]]],[11,"borrow_mut","","",107,[[]]],[11,"try_from","","",107,[[],["result",4]]],[11,"into","","",107,[[]]],[11,"try_into","","",107,[[],["result",4]]],[11,"type_id","","",107,[[],["typeid",3]]],[11,"from","","",108,[[]]],[11,"borrow","","",108,[[]]],[11,"borrow_mut","","",108,[[]]],[11,"try_from","","",108,[[],["result",4]]],[11,"into","","",108,[[]]],[11,"try_into","","",108,[[],["result",4]]],[11,"type_id","","",108,[[],["typeid",3]]],[11,"from","","",109,[[]]],[11,"borrow","","",109,[[]]],[11,"borrow_mut","","",109,[[]]],[11,"try_from","","",109,[[],["result",4]]],[11,"into","","",109,[[]]],[11,"try_into","","",109,[[],["result",4]]],[11,"type_id","","",109,[[],["typeid",3]]],[11,"from","","",110,[[]]],[11,"borrow","","",110,[[]]],[11,"borrow_mut","","",110,[[]]],[11,"try_from","","",110,[[],["result",4]]],[11,"into","","",110,[[]]],[11,"try_into","","",110,[[],["result",4]]],[11,"type_id","","",110,[[],["typeid",3]]],[11,"from","","",144,[[]]],[11,"borrow","","",144,[[]]],[11,"borrow_mut","","",144,[[]]],[11,"try_from","","",144,[[],["result",4]]],[11,"into","","",144,[[]]],[11,"try_into","","",144,[[],["result",4]]],[11,"type_id","","",144,[[],["typeid",3]]],[11,"from","","",111,[[]]],[11,"borrow","","",111,[[]]],[11,"borrow_mut","","",111,[[]]],[11,"try_from","","",111,[[],["result",4]]],[11,"into","","",111,[[]]],[11,"try_into","","",111,[[],["result",4]]],[11,"type_id","","",111,[[],["typeid",3]]],[11,"from","","",145,[[]]],[11,"borrow","","",145,[[]]],[11,"borrow_mut","","",145,[[]]],[11,"try_from","","",145,[[],["result",4]]],[11,"into","","",145,[[]]],[11,"try_into","","",145,[[],["result",4]]],[11,"type_id","","",145,[[],["typeid",3]]],[11,"from","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"into","","",40,[[]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"from","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"into","","",41,[[]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"from","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"into","","",42,[[]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"from","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"into","","",43,[[]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"from","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"into","","",44,[[]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"from","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"into","","",45,[[]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"from","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"into","","",46,[[]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"from","","",146,[[]]],[11,"borrow","","",146,[[]]],[11,"borrow_mut","","",146,[[]]],[11,"try_from","","",146,[[],["result",4]]],[11,"into","","",146,[[]]],[11,"try_into","","",146,[[],["result",4]]],[11,"type_id","","",146,[[],["typeid",3]]],[11,"from","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"into","","",47,[[]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"from","","",147,[[]]],[11,"borrow","","",147,[[]]],[11,"borrow_mut","","",147,[[]]],[11,"try_from","","",147,[[],["result",4]]],[11,"into","","",147,[[]]],[11,"try_into","","",147,[[],["result",4]]],[11,"type_id","","",147,[[],["typeid",3]]],[11,"from","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"into","","",48,[[]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"from","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"into","","",49,[[]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"from","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"into","","",50,[[]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"from","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"into","","",51,[[]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"from","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"into","","",52,[[]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"from","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"into","","",53,[[]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"from","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"into","","",54,[[]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"from","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"into","","",55,[[]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"from","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"into","","",56,[[]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"from","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"into","","",57,[[]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"from","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"into","","",58,[[]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"from","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"into","","",59,[[]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"from","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"into","","",60,[[]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"from","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"into","","",61,[[]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"from","","",62,[[]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"into","","",62,[[]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"from","","",63,[[]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"into","","",63,[[]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"from","","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"into","","",64,[[]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"from","","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"into","","",65,[[]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"from","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"into","","",66,[[]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"from","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"into","","",67,[[]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"from","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"into","","",68,[[]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"from","","",69,[[]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"into","","",69,[[]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"from","","",70,[[]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"into","","",70,[[]]],[11,"try_into","","",70,[[],["result",4]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"from","","",71,[[]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"into","","",71,[[]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"from","","",72,[[]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"into","","",72,[[]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"from","","",73,[[]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"into","","",73,[[]]],[11,"try_into","","",73,[[],["result",4]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"from","","",74,[[]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"into","","",74,[[]]],[11,"try_into","","",74,[[],["result",4]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"from","","",75,[[]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"into","","",75,[[]]],[11,"try_into","","",75,[[],["result",4]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"from","","",76,[[]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"into","","",76,[[]]],[11,"try_into","","",76,[[],["result",4]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"from","","",77,[[]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"into","","",77,[[]]],[11,"try_into","","",77,[[],["result",4]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"from","","",148,[[]]],[11,"borrow","","",148,[[]]],[11,"borrow_mut","","",148,[[]]],[11,"try_from","","",148,[[],["result",4]]],[11,"into","","",148,[[]]],[11,"try_into","","",148,[[],["result",4]]],[11,"type_id","","",148,[[],["typeid",3]]],[11,"from","","",149,[[]]],[11,"borrow","","",149,[[]]],[11,"borrow_mut","","",149,[[]]],[11,"try_from","","",149,[[],["result",4]]],[11,"into","","",149,[[]]],[11,"try_into","","",149,[[],["result",4]]],[11,"type_id","","",149,[[],["typeid",3]]],[11,"from","","",78,[[]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"into","","",78,[[]]],[11,"try_into","","",78,[[],["result",4]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"from","","",79,[[]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"into","","",79,[[]]],[11,"try_into","","",79,[[],["result",4]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"from","","",80,[[]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"into","","",80,[[]]],[11,"try_into","","",80,[[],["result",4]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"from","","",81,[[]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"into","","",81,[[]]],[11,"try_into","","",81,[[],["result",4]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"from","","",82,[[]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"into","","",82,[[]]],[11,"try_into","","",82,[[],["result",4]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"from","","",83,[[]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"into","","",83,[[]]],[11,"try_into","","",83,[[],["result",4]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"from","","",84,[[]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"into","","",84,[[]]],[11,"try_into","","",84,[[],["result",4]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"from","","",85,[[]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"into","","",85,[[]]],[11,"try_into","","",85,[[],["result",4]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"from","","",86,[[]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"into","","",86,[[]]],[11,"try_into","","",86,[[],["result",4]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"from","","",87,[[]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"into","","",87,[[]]],[11,"try_into","","",87,[[],["result",4]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"from","","",88,[[]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"into","","",88,[[]]],[11,"try_into","","",88,[[],["result",4]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"from","","",89,[[]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"into","","",89,[[]]],[11,"try_into","","",89,[[],["result",4]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"from","","",90,[[]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"into","","",90,[[]]],[11,"try_into","","",90,[[],["result",4]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"from","","",91,[[]]],[11,"borrow","","",91,[[]]],[11,"borrow_mut","","",91,[[]]],[11,"try_from","","",91,[[],["result",4]]],[11,"into","","",91,[[]]],[11,"try_into","","",91,[[],["result",4]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"from","","",150,[[]]],[11,"borrow","","",150,[[]]],[11,"borrow_mut","","",150,[[]]],[11,"try_from","","",150,[[],["result",4]]],[11,"into","","",150,[[]]],[11,"try_into","","",150,[[],["result",4]]],[11,"type_id","","",150,[[],["typeid",3]]],[11,"from","","",151,[[]]],[11,"borrow","","",151,[[]]],[11,"borrow_mut","","",151,[[]]],[11,"try_from","","",151,[[],["result",4]]],[11,"into","","",151,[[]]],[11,"try_into","","",151,[[],["result",4]]],[11,"type_id","","",151,[[],["typeid",3]]],[11,"from","","",152,[[]]],[11,"borrow","","",152,[[]]],[11,"borrow_mut","","",152,[[]]],[11,"try_from","","",152,[[],["result",4]]],[11,"into","","",152,[[]]],[11,"try_into","","",152,[[],["result",4]]],[11,"type_id","","",152,[[],["typeid",3]]],[11,"from","","",137,[[]]],[11,"borrow","","",137,[[]]],[11,"borrow_mut","","",137,[[]]],[11,"try_from","","",137,[[],["result",4]]],[11,"into","","",137,[[]]],[11,"try_into","","",137,[[],["result",4]]],[11,"type_id","","",137,[[],["typeid",3]]],[11,"from","","",153,[[]]],[11,"borrow","","",153,[[]]],[11,"borrow_mut","","",153,[[]]],[11,"try_from","","",153,[[],["result",4]]],[11,"into","","",153,[[]]],[11,"try_into","","",153,[[],["result",4]]],[11,"type_id","","",153,[[],["typeid",3]]],[11,"from","","",154,[[]]],[11,"borrow","","",154,[[]]],[11,"borrow_mut","","",154,[[]]],[11,"try_from","","",154,[[],["result",4]]],[11,"into","","",154,[[]]],[11,"try_into","","",154,[[],["result",4]]],[11,"type_id","","",154,[[],["typeid",3]]],[11,"from","","",155,[[]]],[11,"borrow","","",155,[[]]],[11,"borrow_mut","","",155,[[]]],[11,"try_from","","",155,[[],["result",4]]],[11,"into","","",155,[[]]],[11,"try_into","","",155,[[],["result",4]]],[11,"type_id","","",155,[[],["typeid",3]]],[11,"from","","",156,[[]]],[11,"borrow","","",156,[[]]],[11,"borrow_mut","","",156,[[]]],[11,"try_from","","",156,[[],["result",4]]],[11,"into","","",156,[[]]],[11,"try_into","","",156,[[],["result",4]]],[11,"type_id","","",156,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"into","","",17,[[]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"into","","",18,[[]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"into","","",19,[[]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"into","","",20,[[]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"into","","",21,[[]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"into","","",22,[[]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"into","","",23,[[]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"into","","",24,[[]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","","",157,[[]]],[11,"borrow","","",157,[[]]],[11,"borrow_mut","","",157,[[]]],[11,"try_from","","",157,[[],["result",4]]],[11,"into","","",157,[[]]],[11,"try_into","","",157,[[],["result",4]]],[11,"type_id","","",157,[[],["typeid",3]]],[11,"from","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"into","","",25,[[]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"into","","",26,[[]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"into","","",27,[[]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"into","","",28,[[]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"into","","",29,[[]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"into","","",30,[[]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","","",158,[[]]],[11,"borrow","","",158,[[]]],[11,"borrow_mut","","",158,[[]]],[11,"try_from","","",158,[[],["result",4]]],[11,"into","","",158,[[]]],[11,"try_into","","",158,[[],["result",4]]],[11,"type_id","","",158,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"into","","",31,[[]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"into","","",32,[[]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"into","","",33,[[]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"into","","",34,[[]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"into","","",35,[[]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"into","","",36,[[]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"from","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"into","","",37,[[]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"into","","",38,[[]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"from","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"into","","",39,[[]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"from","","",138,[[]]],[11,"borrow","","",138,[[]]],[11,"borrow_mut","","",138,[[]]],[11,"try_from","","",138,[[],["result",4]]],[11,"into","","",138,[[]]],[11,"try_into","","",138,[[],["result",4]]],[11,"type_id","","",138,[[],["typeid",3]]],[11,"from","","",159,[[]]],[11,"borrow","","",159,[[]]],[11,"borrow_mut","","",159,[[]]],[11,"try_from","","",159,[[],["result",4]]],[11,"into","","",159,[[]]],[11,"try_into","","",159,[[],["result",4]]],[11,"type_id","","",159,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"into","","",6,[[]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"into","","",7,[[]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"into","","",8,[[]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"into","","",9,[[]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"into","","",10,[[]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"into","","",11,[[]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"into","","",12,[[]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"into","","",13,[[]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"into","","",14,[[]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"into","","",15,[[]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"into","","",16,[[]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",160,[[]]],[11,"borrow","","",160,[[]]],[11,"borrow_mut","","",160,[[]]],[11,"try_from","","",160,[[],["result",4]]],[11,"into","","",160,[[]]],[11,"try_into","","",160,[[],["result",4]]],[11,"type_id","","",160,[[],["typeid",3]]],[11,"from","","",161,[[]]],[11,"borrow","","",161,[[]]],[11,"borrow_mut","","",161,[[]]],[11,"try_from","","",161,[[],["result",4]]],[11,"into","","",161,[[]]],[11,"try_into","","",161,[[],["result",4]]],[11,"type_id","","",161,[[],["typeid",3]]],[11,"fmt","","",139,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",159,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",160,[[["formatter",3]],["result",6]]],[11,"fmt","","",161,[[["formatter",3]],["result",6]]],[11,"fmt","","",156,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",157,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",158,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",145,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","","",45,[[["formatter",3]],["result",6]]],[11,"fmt","","",46,[[["formatter",3]],["result",6]]],[11,"fmt","","",146,[[["formatter",3]],["result",6]]],[11,"fmt","","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",147,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",49,[[["formatter",3]],["result",6]]],[11,"fmt","","",50,[[["formatter",3]],["result",6]]],[11,"fmt","","",51,[[["formatter",3]],["result",6]]],[11,"fmt","","",52,[[["formatter",3]],["result",6]]],[11,"fmt","","",53,[[["formatter",3]],["result",6]]],[11,"fmt","","",54,[[["formatter",3]],["result",6]]],[11,"fmt","","",55,[[["formatter",3]],["result",6]]],[11,"fmt","","",56,[[["formatter",3]],["result",6]]],[11,"fmt","","",57,[[["formatter",3]],["result",6]]],[11,"fmt","","",58,[[["formatter",3]],["result",6]]],[11,"fmt","","",59,[[["formatter",3]],["result",6]]],[11,"fmt","","",60,[[["formatter",3]],["result",6]]],[11,"fmt","","",61,[[["formatter",3]],["result",6]]],[11,"fmt","","",62,[[["formatter",3]],["result",6]]],[11,"fmt","","",63,[[["formatter",3]],["result",6]]],[11,"fmt","","",64,[[["formatter",3]],["result",6]]],[11,"fmt","","",65,[[["formatter",3]],["result",6]]],[11,"fmt","","",66,[[["formatter",3]],["result",6]]],[11,"fmt","","",67,[[["formatter",3]],["result",6]]],[11,"fmt","","",68,[[["formatter",3]],["result",6]]],[11,"fmt","","",69,[[["formatter",3]],["result",6]]],[11,"fmt","","",70,[[["formatter",3]],["result",6]]],[11,"fmt","","",71,[[["formatter",3]],["result",6]]],[11,"fmt","","",72,[[["formatter",3]],["result",6]]],[11,"fmt","","",73,[[["formatter",3]],["result",6]]],[11,"fmt","","",74,[[["formatter",3]],["result",6]]],[11,"fmt","","",75,[[["formatter",3]],["result",6]]],[11,"fmt","","",76,[[["formatter",3]],["result",6]]],[11,"fmt","","",77,[[["formatter",3]],["result",6]]],[11,"fmt","","",148,[[["formatter",3]],["result",6]]],[11,"fmt","","",149,[[["formatter",3]],["result",6]]],[11,"fmt","","",78,[[["formatter",3]],["result",6]]],[11,"fmt","","",79,[[["formatter",3]],["result",6]]],[11,"fmt","","",80,[[["formatter",3]],["result",6]]],[11,"fmt","","",81,[[["formatter",3]],["result",6]]],[11,"fmt","","",82,[[["formatter",3]],["result",6]]],[11,"fmt","","",83,[[["formatter",3]],["result",6]]],[11,"fmt","","",84,[[["formatter",3]],["result",6]]],[11,"fmt","","",85,[[["formatter",3]],["result",6]]],[11,"fmt","","",86,[[["formatter",3]],["result",6]]],[11,"fmt","","",87,[[["formatter",3]],["result",6]]],[11,"fmt","","",88,[[["formatter",3]],["result",6]]],[11,"fmt","","",153,[[["formatter",3]],["result",6]]],[11,"fmt","","",154,[[["formatter",3]],["result",6]]],[11,"fmt","","",155,[[["formatter",3]],["result",6]]],[11,"fmt","","",89,[[["formatter",3]],["result",6]]],[11,"fmt","","",90,[[["formatter",3]],["result",6]]],[11,"fmt","","",91,[[["formatter",3]],["result",6]]],[11,"fmt","","",92,[[["formatter",3]],["result",6]]],[11,"fmt","","",93,[[["formatter",3]],["result",6]]],[11,"fmt","","",94,[[["formatter",3]],["result",6]]],[11,"fmt","","",95,[[["formatter",3]],["result",6]]],[11,"fmt","","",96,[[["formatter",3]],["result",6]]],[11,"fmt","","",97,[[["formatter",3]],["result",6]]],[11,"fmt","","",98,[[["formatter",3]],["result",6]]],[11,"fmt","","",99,[[["formatter",3]],["result",6]]],[11,"fmt","","",100,[[["formatter",3]],["result",6]]],[11,"fmt","","",101,[[["formatter",3]],["result",6]]],[11,"fmt","","",102,[[["formatter",3]],["result",6]]],[11,"fmt","","",103,[[["formatter",3]],["result",6]]],[11,"fmt","","",104,[[["formatter",3]],["result",6]]],[11,"fmt","","",105,[[["formatter",3]],["result",6]]],[11,"fmt","","",106,[[["formatter",3]],["result",6]]],[11,"fmt","","",107,[[["formatter",3]],["result",6]]],[11,"fmt","","",108,[[["formatter",3]],["result",6]]],[11,"fmt","","",109,[[["formatter",3]],["result",6]]],[11,"fmt","","",110,[[["formatter",3]],["result",6]]],[11,"fmt","","",144,[[["formatter",3]],["result",6]]],[11,"fmt","","",111,[[["formatter",3]],["result",6]]],[11,"fmt","","",142,[[["formatter",3]],["result",6]]],[11,"fmt","","",112,[[["formatter",3]],["result",6]]],[11,"fmt","","",113,[[["formatter",3]],["result",6]]],[11,"fmt","","",114,[[["formatter",3]],["result",6]]],[11,"fmt","","",115,[[["formatter",3]],["result",6]]],[11,"fmt","","",116,[[["formatter",3]],["result",6]]],[11,"fmt","","",117,[[["formatter",3]],["result",6]]],[11,"fmt","","",118,[[["formatter",3]],["result",6]]],[11,"fmt","","",119,[[["formatter",3]],["result",6]]],[11,"fmt","","",120,[[["formatter",3]],["result",6]]],[11,"fmt","","",121,[[["formatter",3]],["result",6]]],[11,"fmt","","",122,[[["formatter",3]],["result",6]]],[11,"fmt","","",123,[[["formatter",3]],["result",6]]],[11,"fmt","","",141,[[["formatter",3]],["result",6]]],[11,"fmt","","",124,[[["formatter",3]],["result",6]]],[11,"fmt","","",125,[[["formatter",3]],["result",6]]],[11,"fmt","","",126,[[["formatter",3]],["result",6]]],[11,"fmt","","",127,[[["formatter",3]],["result",6]]],[11,"fmt","","",128,[[["formatter",3]],["result",6]]],[11,"fmt","","",129,[[["formatter",3]],["result",6]]],[11,"fmt","","",130,[[["formatter",3]],["result",6]]],[11,"fmt","","",131,[[["formatter",3]],["result",6]]],[11,"fmt","","",132,[[["formatter",3]],["result",6]]],[11,"fmt","","",133,[[["formatter",3]],["result",6]]],[11,"fmt","","",134,[[["formatter",3]],["result",6]]],[11,"fmt","","",135,[[["formatter",3]],["result",6]]],[11,"fmt","","",136,[[["formatter",3]],["result",6]]],[11,"fmt","","",143,[[["formatter",3]],["result",6]]],[11,"fmt","","",150,[[["formatter",3]],["result",6]]],[11,"fmt","","",151,[[["formatter",3]],["result",6]]],[11,"fmt","","",152,[[["formatter",3]],["result",6]]],[11,"fmt","","",137,[[["formatter",3]],["result",6]]],[11,"fmt","","",138,[[["formatter",3]],["result",6]]],[11,"eq","","",0,[[["group",3]]]],[11,"ne","","",0,[[["group",3]]]],[11,"eq","","",1,[[["utimbuf",3]]]],[11,"ne","","",1,[[["utimbuf",3]]]],[11,"eq","","",2,[[["timeval",3]]]],[11,"ne","","",2,[[["timeval",3]]]],[11,"eq","","",3,[[["timespec",3]]]],[11,"ne","","",3,[[["timespec",3]]]],[11,"eq","","",4,[[["rlimit",3]]]],[11,"ne","","",4,[[["rlimit",3]]]],[11,"eq","","",5,[[["rusage",3]]]],[11,"ne","","",5,[[["rusage",3]]]],[11,"eq","","",6,[[["ipv6_mreq",3]]]],[11,"ne","","",6,[[["ipv6_mreq",3]]]],[11,"eq","","",7,[[["hostent",3]]]],[11,"ne","","",7,[[["hostent",3]]]],[11,"eq","","",8,[[["iovec",3]]]],[11,"ne","","",8,[[["iovec",3]]]],[11,"eq","","",9,[[["pollfd",3]]]],[11,"ne","","",9,[[["pollfd",3]]]],[11,"eq","","",10,[[["winsize",3]]]],[11,"ne","","",10,[[["winsize",3]]]],[11,"eq","","",11,[[["linger",3]]]],[11,"ne","","",11,[[["linger",3]]]],[11,"eq","","",12,[[["sigval",3]]]],[11,"ne","","",12,[[["sigval",3]]]],[11,"eq","","",13,[[["itimerval",3]]]],[11,"ne","","",13,[[["itimerval",3]]]],[11,"eq","","",14,[[["tms",3]]]],[11,"ne","","",14,[[["tms",3]]]],[11,"eq","","",15,[[["servent",3]]]],[11,"ne","","",15,[[["servent",3]]]],[11,"eq","","",16,[[["protoent",3]]]],[11,"ne","","",16,[[["protoent",3]]]],[11,"eq","","",17,[[["in_addr",3]]]],[11,"ne","","",17,[[["in_addr",3]]]],[11,"eq","","",18,[[["ip_mreq",3]]]],[11,"ne","","",18,[[["ip_mreq",3]]]],[11,"eq","","",19,[[["ip_mreq_source",3]]]],[11,"ne","","",19,[[["ip_mreq_source",3]]]],[11,"eq","","",20,[[["sockaddr",3]]]],[11,"ne","","",20,[[["sockaddr",3]]]],[11,"eq","","",21,[[["sockaddr_in",3]]]],[11,"ne","","",21,[[["sockaddr_in",3]]]],[11,"eq","","",22,[[["sockaddr_in6",3]]]],[11,"ne","","",22,[[["sockaddr_in6",3]]]],[11,"eq","","",23,[[["addrinfo",3]]]],[11,"ne","","",23,[[["addrinfo",3]]]],[11,"eq","","",24,[[["sockaddr_ll",3]]]],[11,"ne","","",24,[[["sockaddr_ll",3]]]],[11,"eq","","",157,[[["fd_set",3]]]],[11,"ne","","",157,[[["fd_set",3]]]],[11,"eq","","",25,[[["tm",3]]]],[11,"ne","","",25,[[["tm",3]]]],[11,"eq","","",26,[[["sched_param",3]]]],[11,"ne","","",26,[[["sched_param",3]]]],[11,"eq","","",27,[[["dl_info",3]]]],[11,"ne","","",27,[[["dl_info",3]]]],[11,"eq","","",28,[[["lconv",3]]]],[11,"ne","","",28,[[["lconv",3]]]],[11,"eq","","",29,[[["in_pktinfo",3]]]],[11,"ne","","",29,[[["in_pktinfo",3]]]],[11,"eq","","",30,[[["ifaddrs",3]]]],[11,"ne","","",30,[[["ifaddrs",3]]]],[11,"eq","","",158,[[["in6_rtmsg",3]]]],[11,"ne","","",158,[[["in6_rtmsg",3]]]],[11,"eq","","",31,[[["arpreq",3]]]],[11,"ne","","",31,[[["arpreq",3]]]],[11,"eq","","",32,[[["arpreq_old",3]]]],[11,"ne","","",32,[[["arpreq_old",3]]]],[11,"eq","","",33,[[["arphdr",3]]]],[11,"ne","","",33,[[["arphdr",3]]]],[11,"eq","","",34,[[["mmsghdr",3]]]],[11,"ne","","",34,[[["mmsghdr",3]]]],[11,"eq","","",35,[[["epoll_event",3]]]],[11,"eq","","",36,[[["sockaddr_un",3]]]],[11,"eq","","",37,[[["sockaddr_storage",3]]]],[11,"eq","","",38,[[["utsname",3]]]],[11,"eq","","",39,[[["sigevent",3]]]],[11,"eq","","",40,[[["rlimit64",3]]]],[11,"ne","","",40,[[["rlimit64",3]]]],[11,"eq","","",41,[[["glob_t",3]]]],[11,"ne","","",41,[[["glob_t",3]]]],[11,"eq","","",42,[[["passwd",3]]]],[11,"ne","","",42,[[["passwd",3]]]],[11,"eq","","",43,[[["spwd",3]]]],[11,"ne","","",43,[[["spwd",3]]]],[11,"eq","","",44,[[["dqblk",3]]]],[11,"ne","","",44,[[["dqblk",3]]]],[11,"eq","","",45,[[["signalfd_siginfo",3]]]],[11,"ne","","",45,[[["signalfd_siginfo",3]]]],[11,"eq","","",46,[[["itimerspec",3]]]],[11,"ne","","",46,[[["itimerspec",3]]]],[11,"eq","","",146,[[["fsid_t",3]]]],[11,"ne","","",146,[[["fsid_t",3]]]],[11,"eq","","",47,[[["packet_mreq",3]]]],[11,"ne","","",47,[[["packet_mreq",3]]]],[11,"eq","","",147,[[["cpu_set_t",3]]]],[11,"ne","","",147,[[["cpu_set_t",3]]]],[11,"eq","","",48,[[["if_nameindex",3]]]],[11,"ne","","",48,[[["if_nameindex",3]]]],[11,"eq","","",49,[[["msginfo",3]]]],[11,"ne","","",49,[[["msginfo",3]]]],[11,"eq","","",50,[[["sembuf",3]]]],[11,"ne","","",50,[[["sembuf",3]]]],[11,"eq","","",51,[[["input_event",3]]]],[11,"ne","","",51,[[["input_event",3]]]],[11,"eq","","",52,[[["input_id",3]]]],[11,"ne","","",52,[[["input_id",3]]]],[11,"eq","","",53,[[["input_absinfo",3]]]],[11,"ne","","",53,[[["input_absinfo",3]]]],[11,"eq","","",54,[[["input_keymap_entry",3]]]],[11,"ne","","",54,[[["input_keymap_entry",3]]]],[11,"eq","","",55,[[["input_mask",3]]]],[11,"ne","","",55,[[["input_mask",3]]]],[11,"eq","","",56,[[["ff_replay",3]]]],[11,"ne","","",56,[[["ff_replay",3]]]],[11,"eq","","",57,[[["ff_trigger",3]]]],[11,"ne","","",57,[[["ff_trigger",3]]]],[11,"eq","","",58,[[["ff_envelope",3]]]],[11,"ne","","",58,[[["ff_envelope",3]]]],[11,"eq","","",59,[[["ff_constant_effect",3]]]],[11,"ne","","",59,[[["ff_constant_effect",3]]]],[11,"eq","","",60,[[["ff_ramp_effect",3]]]],[11,"ne","","",60,[[["ff_ramp_effect",3]]]],[11,"eq","","",61,[[["ff_condition_effect",3]]]],[11,"ne","","",61,[[["ff_condition_effect",3]]]],[11,"eq","","",62,[[["ff_periodic_effect",3]]]],[11,"ne","","",62,[[["ff_periodic_effect",3]]]],[11,"eq","","",63,[[["ff_rumble_effect",3]]]],[11,"ne","","",63,[[["ff_rumble_effect",3]]]],[11,"eq","","",64,[[["ff_effect",3]]]],[11,"ne","","",64,[[["ff_effect",3]]]],[11,"eq","","",65,[[["dl_phdr_info",3]]]],[11,"ne","","",65,[[["dl_phdr_info",3]]]],[11,"eq","","",66,[[["elf32_ehdr",3]]]],[11,"ne","","",66,[[["elf32_ehdr",3]]]],[11,"eq","","",67,[[["elf64_ehdr",3]]]],[11,"ne","","",67,[[["elf64_ehdr",3]]]],[11,"eq","","",68,[[["elf32_sym",3]]]],[11,"ne","","",68,[[["elf32_sym",3]]]],[11,"eq","","",69,[[["elf64_sym",3]]]],[11,"ne","","",69,[[["elf64_sym",3]]]],[11,"eq","","",70,[[["elf32_phdr",3]]]],[11,"ne","","",70,[[["elf32_phdr",3]]]],[11,"eq","","",71,[[["elf64_phdr",3]]]],[11,"ne","","",71,[[["elf64_phdr",3]]]],[11,"eq","","",72,[[["elf32_shdr",3]]]],[11,"ne","","",72,[[["elf32_shdr",3]]]],[11,"eq","","",73,[[["elf64_shdr",3]]]],[11,"ne","","",73,[[["elf64_shdr",3]]]],[11,"eq","","",74,[[["elf32_chdr",3]]]],[11,"ne","","",74,[[["elf32_chdr",3]]]],[11,"eq","","",75,[[["elf64_chdr",3]]]],[11,"ne","","",75,[[["elf64_chdr",3]]]],[11,"eq","","",76,[[["ucred",3]]]],[11,"ne","","",76,[[["ucred",3]]]],[11,"eq","","",77,[[["mntent",3]]]],[11,"ne","","",77,[[["mntent",3]]]],[11,"eq","","",148,[[["posix_spawn_file_actions_t",3]]]],[11,"ne","","",148,[[["posix_spawn_file_actions_t",3]]]],[11,"eq","","",149,[[["posix_spawnattr_t",3]]]],[11,"ne","","",149,[[["posix_spawnattr_t",3]]]],[11,"eq","","",78,[[["genlmsghdr",3]]]],[11,"ne","","",78,[[["genlmsghdr",3]]]],[11,"eq","","",79,[[["in6_pktinfo",3]]]],[11,"ne","","",79,[[["in6_pktinfo",3]]]],[11,"eq","","",80,[[["arpd_request",3]]]],[11,"ne","","",80,[[["arpd_request",3]]]],[11,"eq","","",81,[[["inotify_event",3]]]],[11,"ne","","",81,[[["inotify_event",3]]]],[11,"eq","","",82,[[["fanotify_response",3]]]],[11,"ne","","",82,[[["fanotify_response",3]]]],[11,"eq","","",83,[[["sockaddr_vm",3]]]],[11,"ne","","",83,[[["sockaddr_vm",3]]]],[11,"eq","","",84,[[["regmatch_t",3]]]],[11,"ne","","",84,[[["regmatch_t",3]]]],[11,"eq","","",85,[[["sock_extended_err",3]]]],[11,"ne","","",85,[[["sock_extended_err",3]]]],[11,"eq","","",86,[[["sockaddr_nl",3]]]],[11,"eq","","",87,[[["dirent",3]]]],[11,"eq","","",88,[[["dirent64",3]]]],[11,"eq","","",153,[[["pthread_cond_t",3]]]],[11,"eq","","",154,[[["pthread_mutex_t",3]]]],[11,"eq","","",155,[[["pthread_rwlock_t",3]]]],[11,"eq","","",89,[[["sockaddr_alg",3]]]],[11,"eq","","",90,[[["af_alg_iv",3]]]],[11,"eq","","",91,[[["mq_attr",3]]]],[11,"eq","","",92,[[["statx",3]]]],[11,"ne","","",92,[[["statx",3]]]],[11,"eq","","",93,[[["statx_timestamp",3]]]],[11,"ne","","",93,[[["statx_timestamp",3]]]],[11,"eq","","",94,[[["aiocb",3]]]],[11,"ne","","",94,[[["aiocb",3]]]],[11,"eq","","",95,[[["__exit_status",3]]]],[11,"ne","","",95,[[["__exit_status",3]]]],[11,"eq","","",96,[[["__timeval",3]]]],[11,"ne","","",96,[[["__timeval",3]]]],[11,"eq","","",97,[[["glob64_t",3]]]],[11,"ne","","",97,[[["glob64_t",3]]]],[11,"eq","","",98,[[["msghdr",3]]]],[11,"ne","","",98,[[["msghdr",3]]]],[11,"eq","","",99,[[["cmsghdr",3]]]],[11,"ne","","",99,[[["cmsghdr",3]]]],[11,"eq","","",100,[[["termios",3]]]],[11,"ne","","",100,[[["termios",3]]]],[11,"eq","","",101,[[["mallinfo",3]]]],[11,"ne","","",101,[[["mallinfo",3]]]],[11,"eq","","",102,[[["nlmsghdr",3]]]],[11,"ne","","",102,[[["nlmsghdr",3]]]],[11,"eq","","",103,[[["nlmsgerr",3]]]],[11,"ne","","",103,[[["nlmsgerr",3]]]],[11,"eq","","",104,[[["nl_pktinfo",3]]]],[11,"ne","","",104,[[["nl_pktinfo",3]]]],[11,"eq","","",105,[[["nl_mmap_req",3]]]],[11,"ne","","",105,[[["nl_mmap_req",3]]]],[11,"eq","","",106,[[["nl_mmap_hdr",3]]]],[11,"ne","","",106,[[["nl_mmap_hdr",3]]]],[11,"eq","","",107,[[["nlattr",3]]]],[11,"ne","","",107,[[["nlattr",3]]]],[11,"eq","","",108,[[["rtentry",3]]]],[11,"ne","","",108,[[["rtentry",3]]]],[11,"eq","","",109,[[["timex",3]]]],[11,"ne","","",109,[[["timex",3]]]],[11,"eq","","",110,[[["ntptimeval",3]]]],[11,"ne","","",110,[[["ntptimeval",3]]]],[11,"eq","","",144,[[["regex_t",3]]]],[11,"ne","","",144,[[["regex_t",3]]]],[11,"eq","","",111,[[["utmpx",3]]]],[11,"eq","","",142,[[["sigset_t",3]]]],[11,"ne","","",142,[[["sigset_t",3]]]],[11,"eq","","",112,[[["sysinfo",3]]]],[11,"ne","","",112,[[["sysinfo",3]]]],[11,"eq","","",113,[[["msqid_ds",3]]]],[11,"ne","","",113,[[["msqid_ds",3]]]],[11,"eq","","",114,[[["sigaction",3]]]],[11,"ne","","",114,[[["sigaction",3]]]],[11,"eq","","",115,[[["statfs",3]]]],[11,"ne","","",115,[[["statfs",3]]]],[11,"eq","","",116,[[["flock",3]]]],[11,"ne","","",116,[[["flock",3]]]],[11,"eq","","",117,[[["flock64",3]]]],[11,"ne","","",117,[[["flock64",3]]]],[11,"eq","","",118,[[["siginfo_t",3]]]],[11,"ne","","",118,[[["siginfo_t",3]]]],[11,"eq","","",119,[[["stack_t",3]]]],[11,"ne","","",119,[[["stack_t",3]]]],[11,"eq","","",120,[[["stat",3]]]],[11,"ne","","",120,[[["stat",3]]]],[11,"eq","","",121,[[["stat64",3]]]],[11,"ne","","",121,[[["stat64",3]]]],[11,"eq","","",122,[[["statfs64",3]]]],[11,"ne","","",122,[[["statfs64",3]]]],[11,"eq","","",123,[[["statvfs64",3]]]],[11,"ne","","",123,[[["statvfs64",3]]]],[11,"eq","","",141,[[["pthread_attr_t",3]]]],[11,"ne","","",141,[[["pthread_attr_t",3]]]],[11,"eq","","",124,[[["_libc_fpxreg",3]]]],[11,"ne","","",124,[[["_libc_fpxreg",3]]]],[11,"eq","","",125,[[["_libc_xmmreg",3]]]],[11,"ne","","",125,[[["_libc_xmmreg",3]]]],[11,"eq","","",126,[[["_libc_fpstate",3]]]],[11,"ne","","",126,[[["_libc_fpstate",3]]]],[11,"eq","","",127,[[["user_regs_struct",3]]]],[11,"ne","","",127,[[["user_regs_struct",3]]]],[11,"eq","","",128,[[["user",3]]]],[11,"ne","","",128,[[["user",3]]]],[11,"eq","","",129,[[["mcontext_t",3]]]],[11,"ne","","",129,[[["mcontext_t",3]]]],[11,"eq","","",130,[[["ipc_perm",3]]]],[11,"ne","","",130,[[["ipc_perm",3]]]],[11,"eq","","",131,[[["shmid_ds",3]]]],[11,"ne","","",131,[[["shmid_ds",3]]]],[11,"eq","","",132,[[["termios2",3]]]],[11,"ne","","",132,[[["termios2",3]]]],[11,"eq","","",133,[[["ip_mreqn",3]]]],[11,"ne","","",133,[[["ip_mreqn",3]]]],[11,"eq","","",134,[[["user_fpregs_struct",3]]]],[11,"eq","","",135,[[["ucontext_t",3]]]],[11,"eq","","",136,[[["statvfs",3]]]],[11,"ne","","",136,[[["statvfs",3]]]],[11,"eq","","",143,[[["sem_t",3]]]],[11,"ne","","",143,[[["sem_t",3]]]],[11,"eq","","",150,[[["pthread_mutexattr_t",3]]]],[11,"ne","","",150,[[["pthread_mutexattr_t",3]]]],[11,"eq","","",151,[[["pthread_rwlockattr_t",3]]]],[11,"ne","","",151,[[["pthread_rwlockattr_t",3]]]],[11,"eq","","",152,[[["pthread_condattr_t",3]]]],[11,"ne","","",152,[[["pthread_condattr_t",3]]]],[11,"eq","","",137,[[["fanotify_event_metadata",3]]]],[11,"ne","","",137,[[["fanotify_event_metadata",3]]]],[11,"eq","","",138,[[["in6_addr",3]]]],[11,"ne","","",138,[[["in6_addr",3]]]],[11,"hash","","",0,[[]]],[11,"hash","","",1,[[]]],[11,"hash","","",2,[[]]],[11,"hash","","",3,[[]]],[11,"hash","","",4,[[]]],[11,"hash","","",5,[[]]],[11,"hash","","",6,[[]]],[11,"hash","","",7,[[]]],[11,"hash","","",8,[[]]],[11,"hash","","",9,[[]]],[11,"hash","","",10,[[]]],[11,"hash","","",11,[[]]],[11,"hash","","",12,[[]]],[11,"hash","","",13,[[]]],[11,"hash","","",14,[[]]],[11,"hash","","",15,[[]]],[11,"hash","","",16,[[]]],[11,"hash","","",17,[[]]],[11,"hash","","",18,[[]]],[11,"hash","","",19,[[]]],[11,"hash","","",20,[[]]],[11,"hash","","",21,[[]]],[11,"hash","","",22,[[]]],[11,"hash","","",23,[[]]],[11,"hash","","",24,[[]]],[11,"hash","","",157,[[]]],[11,"hash","","",25,[[]]],[11,"hash","","",26,[[]]],[11,"hash","","",27,[[]]],[11,"hash","","",28,[[]]],[11,"hash","","",29,[[]]],[11,"hash","","",30,[[]]],[11,"hash","","",158,[[]]],[11,"hash","","",31,[[]]],[11,"hash","","",32,[[]]],[11,"hash","","",33,[[]]],[11,"hash","","",34,[[]]],[11,"hash","","",35,[[]]],[11,"hash","","",36,[[]]],[11,"hash","","",37,[[]]],[11,"hash","","",38,[[]]],[11,"hash","","",39,[[]]],[11,"hash","","",40,[[]]],[11,"hash","","",41,[[]]],[11,"hash","","",42,[[]]],[11,"hash","","",43,[[]]],[11,"hash","","",44,[[]]],[11,"hash","","",45,[[]]],[11,"hash","","",46,[[]]],[11,"hash","","",146,[[]]],[11,"hash","","",47,[[]]],[11,"hash","","",147,[[]]],[11,"hash","","",48,[[]]],[11,"hash","","",49,[[]]],[11,"hash","","",50,[[]]],[11,"hash","","",51,[[]]],[11,"hash","","",52,[[]]],[11,"hash","","",53,[[]]],[11,"hash","","",54,[[]]],[11,"hash","","",55,[[]]],[11,"hash","","",56,[[]]],[11,"hash","","",57,[[]]],[11,"hash","","",58,[[]]],[11,"hash","","",59,[[]]],[11,"hash","","",60,[[]]],[11,"hash","","",61,[[]]],[11,"hash","","",62,[[]]],[11,"hash","","",63,[[]]],[11,"hash","","",64,[[]]],[11,"hash","","",65,[[]]],[11,"hash","","",66,[[]]],[11,"hash","","",67,[[]]],[11,"hash","","",68,[[]]],[11,"hash","","",69,[[]]],[11,"hash","","",70,[[]]],[11,"hash","","",71,[[]]],[11,"hash","","",72,[[]]],[11,"hash","","",73,[[]]],[11,"hash","","",74,[[]]],[11,"hash","","",75,[[]]],[11,"hash","","",76,[[]]],[11,"hash","","",77,[[]]],[11,"hash","","",148,[[]]],[11,"hash","","",149,[[]]],[11,"hash","","",78,[[]]],[11,"hash","","",79,[[]]],[11,"hash","","",80,[[]]],[11,"hash","","",81,[[]]],[11,"hash","","",82,[[]]],[11,"hash","","",83,[[]]],[11,"hash","","",84,[[]]],[11,"hash","","",85,[[]]],[11,"hash","","",86,[[]]],[11,"hash","","",87,[[]]],[11,"hash","","",88,[[]]],[11,"hash","","",153,[[]]],[11,"hash","","",154,[[]]],[11,"hash","","",155,[[]]],[11,"hash","","",89,[[]]],[11,"hash","","",90,[[]]],[11,"hash","","",91,[[]]],[11,"hash","","",92,[[]]],[11,"hash","","",93,[[]]],[11,"hash","","",94,[[]]],[11,"hash","","",95,[[]]],[11,"hash","","",96,[[]]],[11,"hash","","",97,[[]]],[11,"hash","","",98,[[]]],[11,"hash","","",99,[[]]],[11,"hash","","",100,[[]]],[11,"hash","","",101,[[]]],[11,"hash","","",102,[[]]],[11,"hash","","",103,[[]]],[11,"hash","","",104,[[]]],[11,"hash","","",105,[[]]],[11,"hash","","",106,[[]]],[11,"hash","","",107,[[]]],[11,"hash","","",108,[[]]],[11,"hash","","",109,[[]]],[11,"hash","","",110,[[]]],[11,"hash","","",144,[[]]],[11,"hash","","",111,[[]]],[11,"hash","","",142,[[]]],[11,"hash","","",112,[[]]],[11,"hash","","",113,[[]]],[11,"hash","","",114,[[]]],[11,"hash","","",115,[[]]],[11,"hash","","",116,[[]]],[11,"hash","","",117,[[]]],[11,"hash","","",118,[[]]],[11,"hash","","",119,[[]]],[11,"hash","","",120,[[]]],[11,"hash","","",121,[[]]],[11,"hash","","",122,[[]]],[11,"hash","","",123,[[]]],[11,"hash","","",141,[[]]],[11,"hash","","",124,[[]]],[11,"hash","","",125,[[]]],[11,"hash","","",126,[[]]],[11,"hash","","",127,[[]]],[11,"hash","","",128,[[]]],[11,"hash","","",129,[[]]],[11,"hash","","",130,[[]]],[11,"hash","","",131,[[]]],[11,"hash","","",132,[[]]],[11,"hash","","",133,[[]]],[11,"hash","","",134,[[]]],[11,"hash","","",135,[[]]],[11,"hash","","",136,[[]]],[11,"hash","","",143,[[]]],[11,"hash","","",150,[[]]],[11,"hash","","",151,[[]]],[11,"hash","","",152,[[]]],[11,"hash","","",137,[[]]],[11,"hash","","",138,[[]]],[11,"clone","","",159,[[],["dir",4]]],[11,"clone","","",0,[[],["group",3]]],[11,"clone","","",1,[[],["utimbuf",3]]],[11,"clone","","",2,[[],["timeval",3]]],[11,"clone","","",3,[[],["timespec",3]]],[11,"clone","","",4,[[],["rlimit",3]]],[11,"clone","","",5,[[],["rusage",3]]],[11,"clone","","",6,[[],["ipv6_mreq",3]]],[11,"clone","","",7,[[],["hostent",3]]],[11,"clone","","",8,[[],["iovec",3]]],[11,"clone","","",9,[[],["pollfd",3]]],[11,"clone","","",10,[[],["winsize",3]]],[11,"clone","","",11,[[],["linger",3]]],[11,"clone","","",12,[[],["sigval",3]]],[11,"clone","","",13,[[],["itimerval",3]]],[11,"clone","","",14,[[],["tms",3]]],[11,"clone","","",15,[[],["servent",3]]],[11,"clone","","",16,[[],["protoent",3]]],[11,"clone","","",160,[[],["file",4]]],[11,"clone","","",161,[[],["fpos_t",4]]],[11,"clone","","",156,[[],["timezone",4]]],[11,"clone","","",17,[[],["in_addr",3]]],[11,"clone","","",18,[[],["ip_mreq",3]]],[11,"clone","","",19,[[],["ip_mreq_source",3]]],[11,"clone","","",20,[[],["sockaddr",3]]],[11,"clone","","",21,[[],["sockaddr_in",3]]],[11,"clone","","",22,[[],["sockaddr_in6",3]]],[11,"clone","","",23,[[],["addrinfo",3]]],[11,"clone","","",24,[[],["sockaddr_ll",3]]],[11,"clone","","",157,[[],["fd_set",3]]],[11,"clone","","",25,[[],["tm",3]]],[11,"clone","","",26,[[],["sched_param",3]]],[11,"clone","","",27,[[],["dl_info",3]]],[11,"clone","","",28,[[],["lconv",3]]],[11,"clone","","",29,[[],["in_pktinfo",3]]],[11,"clone","","",30,[[],["ifaddrs",3]]],[11,"clone","","",158,[[],["in6_rtmsg",3]]],[11,"clone","","",31,[[],["arpreq",3]]],[11,"clone","","",32,[[],["arpreq_old",3]]],[11,"clone","","",33,[[],["arphdr",3]]],[11,"clone","","",34,[[],["mmsghdr",3]]],[11,"clone","","",35,[[],["epoll_event",3]]],[11,"clone","","",36,[[],["sockaddr_un",3]]],[11,"clone","","",37,[[],["sockaddr_storage",3]]],[11,"clone","","",38,[[],["utsname",3]]],[11,"clone","","",39,[[],["sigevent",3]]],[11,"clone","","",145,[[],["fpos64_t",4]]],[11,"clone","","",40,[[],["rlimit64",3]]],[11,"clone","","",41,[[],["glob_t",3]]],[11,"clone","","",42,[[],["passwd",3]]],[11,"clone","","",43,[[],["spwd",3]]],[11,"clone","","",44,[[],["dqblk",3]]],[11,"clone","","",45,[[],["signalfd_siginfo",3]]],[11,"clone","","",46,[[],["itimerspec",3]]],[11,"clone","","",146,[[],["fsid_t",3]]],[11,"clone","","",47,[[],["packet_mreq",3]]],[11,"clone","","",147,[[],["cpu_set_t",3]]],[11,"clone","","",48,[[],["if_nameindex",3]]],[11,"clone","","",49,[[],["msginfo",3]]],[11,"clone","","",50,[[],["sembuf",3]]],[11,"clone","","",51,[[],["input_event",3]]],[11,"clone","","",52,[[],["input_id",3]]],[11,"clone","","",53,[[],["input_absinfo",3]]],[11,"clone","","",54,[[],["input_keymap_entry",3]]],[11,"clone","","",55,[[],["input_mask",3]]],[11,"clone","","",56,[[],["ff_replay",3]]],[11,"clone","","",57,[[],["ff_trigger",3]]],[11,"clone","","",58,[[],["ff_envelope",3]]],[11,"clone","","",59,[[],["ff_constant_effect",3]]],[11,"clone","","",60,[[],["ff_ramp_effect",3]]],[11,"clone","","",61,[[],["ff_condition_effect",3]]],[11,"clone","","",62,[[],["ff_periodic_effect",3]]],[11,"clone","","",63,[[],["ff_rumble_effect",3]]],[11,"clone","","",64,[[],["ff_effect",3]]],[11,"clone","","",65,[[],["dl_phdr_info",3]]],[11,"clone","","",66,[[],["elf32_ehdr",3]]],[11,"clone","","",67,[[],["elf64_ehdr",3]]],[11,"clone","","",68,[[],["elf32_sym",3]]],[11,"clone","","",69,[[],["elf64_sym",3]]],[11,"clone","","",70,[[],["elf32_phdr",3]]],[11,"clone","","",71,[[],["elf64_phdr",3]]],[11,"clone","","",72,[[],["elf32_shdr",3]]],[11,"clone","","",73,[[],["elf64_shdr",3]]],[11,"clone","","",74,[[],["elf32_chdr",3]]],[11,"clone","","",75,[[],["elf64_chdr",3]]],[11,"clone","","",76,[[],["ucred",3]]],[11,"clone","","",77,[[],["mntent",3]]],[11,"clone","","",148,[[],["posix_spawn_file_actions_t",3]]],[11,"clone","","",149,[[],["posix_spawnattr_t",3]]],[11,"clone","","",78,[[],["genlmsghdr",3]]],[11,"clone","","",79,[[],["in6_pktinfo",3]]],[11,"clone","","",80,[[],["arpd_request",3]]],[11,"clone","","",81,[[],["inotify_event",3]]],[11,"clone","","",82,[[],["fanotify_response",3]]],[11,"clone","","",83,[[],["sockaddr_vm",3]]],[11,"clone","","",84,[[],["regmatch_t",3]]],[11,"clone","","",85,[[],["sock_extended_err",3]]],[11,"clone","","",86,[[],["sockaddr_nl",3]]],[11,"clone","","",87,[[],["dirent",3]]],[11,"clone","","",88,[[],["dirent64",3]]],[11,"clone","","",89,[[],["sockaddr_alg",3]]],[11,"clone","","",90,[[],["af_alg_iv",3]]],[11,"clone","","",91,[[],["mq_attr",3]]],[11,"clone","","",92,[[],["statx",3]]],[11,"clone","","",93,[[],["statx_timestamp",3]]],[11,"clone","","",94,[[],["aiocb",3]]],[11,"clone","","",95,[[],["__exit_status",3]]],[11,"clone","","",96,[[],["__timeval",3]]],[11,"clone","","",97,[[],["glob64_t",3]]],[11,"clone","","",98,[[],["msghdr",3]]],[11,"clone","","",99,[[],["cmsghdr",3]]],[11,"clone","","",100,[[],["termios",3]]],[11,"clone","","",101,[[],["mallinfo",3]]],[11,"clone","","",102,[[],["nlmsghdr",3]]],[11,"clone","","",103,[[],["nlmsgerr",3]]],[11,"clone","","",104,[[],["nl_pktinfo",3]]],[11,"clone","","",105,[[],["nl_mmap_req",3]]],[11,"clone","","",106,[[],["nl_mmap_hdr",3]]],[11,"clone","","",107,[[],["nlattr",3]]],[11,"clone","","",108,[[],["rtentry",3]]],[11,"clone","","",109,[[],["timex",3]]],[11,"clone","","",110,[[],["ntptimeval",3]]],[11,"clone","","",144,[[],["regex_t",3]]],[11,"clone","","",111,[[],["utmpx",3]]],[11,"clone","","",142,[[],["sigset_t",3]]],[11,"clone","","",112,[[],["sysinfo",3]]],[11,"clone","","",113,[[],["msqid_ds",3]]],[11,"clone","","",114,[[],["sigaction",3]]],[11,"clone","","",115,[[],["statfs",3]]],[11,"clone","","",116,[[],["flock",3]]],[11,"clone","","",117,[[],["flock64",3]]],[11,"clone","","",118,[[],["siginfo_t",3]]],[11,"clone","","",119,[[],["stack_t",3]]],[11,"clone","","",120,[[],["stat",3]]],[11,"clone","","",121,[[],["stat64",3]]],[11,"clone","","",122,[[],["statfs64",3]]],[11,"clone","","",123,[[],["statvfs64",3]]],[11,"clone","","",141,[[],["pthread_attr_t",3]]],[11,"clone","","",124,[[],["_libc_fpxreg",3]]],[11,"clone","","",125,[[],["_libc_xmmreg",3]]],[11,"clone","","",126,[[],["_libc_fpstate",3]]],[11,"clone","","",127,[[],["user_regs_struct",3]]],[11,"clone","","",128,[[],["user",3]]],[11,"clone","","",129,[[],["mcontext_t",3]]],[11,"clone","","",130,[[],["ipc_perm",3]]],[11,"clone","","",131,[[],["shmid_ds",3]]],[11,"clone","","",132,[[],["termios2",3]]],[11,"clone","","",133,[[],["ip_mreqn",3]]],[11,"clone","","",134,[[],["user_fpregs_struct",3]]],[11,"clone","","",135,[[],["ucontext_t",3]]],[11,"clone","","",136,[[],["statvfs",3]]],[11,"clone","","",140,[[],["max_align_t",3]]],[11,"clone","","",143,[[],["sem_t",3]]],[11,"clone","","",150,[[],["pthread_mutexattr_t",3]]],[11,"clone","","",151,[[],["pthread_rwlockattr_t",3]]],[11,"clone","","",152,[[],["pthread_condattr_t",3]]],[11,"clone","","",137,[[],["fanotify_event_metadata",3]]],[11,"clone","","",153,[[],["pthread_cond_t",3]]],[11,"clone","","",154,[[],["pthread_mutex_t",3]]],[11,"clone","","",155,[[],["pthread_rwlock_t",3]]],[11,"clone","","",138,[[],["in6_addr",3]]],[11,"si_addr","","",118,[[]]],[11,"si_value","","",118,[[],["sigval",3]]],[11,"si_pid","","",118,[[],["pid_t",6]]],[11,"si_uid","","",118,[[],["uid_t",6]]],[11,"si_status","","",118,[[],["c_int",6]]],[11,"si_utime","","",118,[[],["c_long",6]]],[11,"si_stime","","",118,[[],["c_long",6]]]],"p":[[3,"group"],[3,"utimbuf"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"ipv6_mreq"],[3,"hostent"],[3,"iovec"],[3,"pollfd"],[3,"winsize"],[3,"linger"],[3,"sigval"],[3,"itimerval"],[3,"tms"],[3,"servent"],[3,"protoent"],[3,"in_addr"],[3,"ip_mreq"],[3,"ip_mreq_source"],[3,"sockaddr"],[3,"sockaddr_in"],[3,"sockaddr_in6"],[3,"addrinfo"],[3,"sockaddr_ll"],[3,"tm"],[3,"sched_param"],[3,"Dl_info"],[3,"lconv"],[3,"in_pktinfo"],[3,"ifaddrs"],[3,"arpreq"],[3,"arpreq_old"],[3,"arphdr"],[3,"mmsghdr"],[3,"epoll_event"],[3,"sockaddr_un"],[3,"sockaddr_storage"],[3,"utsname"],[3,"sigevent"],[3,"rlimit64"],[3,"glob_t"],[3,"passwd"],[3,"spwd"],[3,"dqblk"],[3,"signalfd_siginfo"],[3,"itimerspec"],[3,"packet_mreq"],[3,"if_nameindex"],[3,"msginfo"],[3,"sembuf"],[3,"input_event"],[3,"input_id"],[3,"input_absinfo"],[3,"input_keymap_entry"],[3,"input_mask"],[3,"ff_replay"],[3,"ff_trigger"],[3,"ff_envelope"],[3,"ff_constant_effect"],[3,"ff_ramp_effect"],[3,"ff_condition_effect"],[3,"ff_periodic_effect"],[3,"ff_rumble_effect"],[3,"ff_effect"],[3,"dl_phdr_info"],[3,"Elf32_Ehdr"],[3,"Elf64_Ehdr"],[3,"Elf32_Sym"],[3,"Elf64_Sym"],[3,"Elf32_Phdr"],[3,"Elf64_Phdr"],[3,"Elf32_Shdr"],[3,"Elf64_Shdr"],[3,"Elf32_Chdr"],[3,"Elf64_Chdr"],[3,"ucred"],[3,"mntent"],[3,"genlmsghdr"],[3,"in6_pktinfo"],[3,"arpd_request"],[3,"inotify_event"],[3,"fanotify_response"],[3,"sockaddr_vm"],[3,"regmatch_t"],[3,"sock_extended_err"],[3,"sockaddr_nl"],[3,"dirent"],[3,"dirent64"],[3,"sockaddr_alg"],[3,"af_alg_iv"],[3,"mq_attr"],[3,"statx"],[3,"statx_timestamp"],[3,"aiocb"],[3,"__exit_status"],[3,"__timeval"],[3,"glob64_t"],[3,"msghdr"],[3,"cmsghdr"],[3,"termios"],[3,"mallinfo"],[3,"nlmsghdr"],[3,"nlmsgerr"],[3,"nl_pktinfo"],[3,"nl_mmap_req"],[3,"nl_mmap_hdr"],[3,"nlattr"],[3,"rtentry"],[3,"timex"],[3,"ntptimeval"],[3,"utmpx"],[3,"sysinfo"],[3,"msqid_ds"],[3,"sigaction"],[3,"statfs"],[3,"flock"],[3,"flock64"],[3,"siginfo_t"],[3,"stack_t"],[3,"stat"],[3,"stat64"],[3,"statfs64"],[3,"statvfs64"],[3,"_libc_fpxreg"],[3,"_libc_xmmreg"],[3,"_libc_fpstate"],[3,"user_regs_struct"],[3,"user"],[3,"mcontext_t"],[3,"ipc_perm"],[3,"shmid_ds"],[3,"termios2"],[3,"ip_mreqn"],[3,"user_fpregs_struct"],[3,"ucontext_t"],[3,"statvfs"],[3,"fanotify_event_metadata"],[3,"in6_addr"],[4,"c_void"],[3,"max_align_t"],[3,"pthread_attr_t"],[3,"sigset_t"],[3,"sem_t"],[3,"regex_t"],[4,"fpos64_t"],[3,"fsid_t"],[3,"cpu_set_t"],[3,"posix_spawn_file_actions_t"],[3,"posix_spawnattr_t"],[3,"pthread_mutexattr_t"],[3,"pthread_rwlockattr_t"],[3,"pthread_condattr_t"],[3,"pthread_cond_t"],[3,"pthread_mutex_t"],[3,"pthread_rwlock_t"],[4,"timezone"],[3,"fd_set"],[3,"in6_rtmsg"],[4,"DIR"],[4,"FILE"],[4,"fpos_t"]]},\
"log":{"doc":"A lightweight logging facade.","i":[[4,"Level","log","An enum representing the available verbosity levels of …",null,null],[13,"Error","","The \\\"error\\\" level.",0,null],[13,"Warn","","The \\\"warn\\\" level.",0,null],[13,"Info","","The \\\"info\\\" level.",0,null],[13,"Debug","","The \\\"debug\\\" level.",0,null],[13,"Trace","","The \\\"trace\\\" level.",0,null],[11,"max","","Returns the most verbose logging level.",0,[[],["level",4]]],[11,"to_level_filter","","Converts the <code>Level</code> to the equivalent <code>LevelFilter</code>.",0,[[],["levelfilter",4]]],[4,"LevelFilter","","An enum representing the available verbosity level …",null,null],[13,"Off","","A level lower than all log levels.",1,null],[13,"Error","","Corresponds to the <code>Error</code> log level.",1,null],[13,"Warn","","Corresponds to the <code>Warn</code> log level.",1,null],[13,"Info","","Corresponds to the <code>Info</code> log level.",1,null],[13,"Debug","","Corresponds to the <code>Debug</code> log level.",1,null],[13,"Trace","","Corresponds to the <code>Trace</code> log level.",1,null],[11,"max","","Returns the most verbose logging level filter.",1,[[],["levelfilter",4]]],[11,"to_level","","Converts <code>self</code> to the equivalent <code>Level</code>.",1,[[],[["option",4],["level",4]]]],[3,"Record","","The \\\"payload\\\" of a log message.",null,null],[11,"builder","","Returns a new builder.",2,[[],["recordbuilder",3]]],[11,"args","","The message body.",2,[[],["arguments",3]]],[11,"metadata","","Metadata about the log directive.",2,[[],["metadata",3]]],[11,"level","","The verbosity level of the message.",2,[[],["level",4]]],[11,"target","","The name of the target of the directive.",2,[[]]],[11,"module_path","","The module path of the message.",2,[[],["option",4]]],[11,"module_path_static","","The module path of the message, if it is a <code>\'static</code> string.",2,[[],["option",4]]],[11,"file","","The source file containing the message.",2,[[],["option",4]]],[11,"file_static","","The module path of the message, if it is a <code>\'static</code> string.",2,[[],["option",4]]],[11,"line","","The line containing the message.",2,[[],["option",4]]],[3,"RecordBuilder","","Builder for <code>Record</code>.",null,null],[11,"new","","Construct new <code>RecordBuilder</code>.",3,[[],["recordbuilder",3]]],[11,"args","","Set <code>args</code>.",3,[[["arguments",3]],["recordbuilder",3]]],[11,"metadata","","Set <code>metadata</code>. Construct a <code>Metadata</code> object with …",3,[[["metadata",3]],["recordbuilder",3]]],[11,"level","","Set <code>Metadata::level</code>.",3,[[["level",4]],["recordbuilder",3]]],[11,"target","","Set <code>Metadata::target</code>",3,[[],["recordbuilder",3]]],[11,"module_path","","Set <code>module_path</code>",3,[[["option",4]],["recordbuilder",3]]],[11,"module_path_static","","Set <code>module_path</code> to a <code>\'static</code> string",3,[[["option",4]],["recordbuilder",3]]],[11,"file","","Set <code>file</code>",3,[[["option",4]],["recordbuilder",3]]],[11,"file_static","","Set <code>file</code> to a <code>\'static</code> string.",3,[[["option",4]],["recordbuilder",3]]],[11,"line","","Set <code>line</code>",3,[[["option",4]],["recordbuilder",3]]],[11,"build","","Invoke the builder and return a <code>Record</code>",3,[[],["record",3]]],[3,"Metadata","","Metadata about a log message.",null,null],[11,"builder","","Returns a new builder.",4,[[],["metadatabuilder",3]]],[11,"level","","The verbosity level of the message.",4,[[],["level",4]]],[11,"target","","The name of the target of the directive.",4,[[]]],[3,"MetadataBuilder","","Builder for <code>Metadata</code>.",null,null],[11,"new","","Construct a new <code>MetadataBuilder</code>.",5,[[],["metadatabuilder",3]]],[11,"level","","Setter for <code>level</code>.",5,[[["level",4]],["metadatabuilder",3]]],[11,"target","","Setter for <code>target</code>.",5,[[],["metadatabuilder",3]]],[11,"build","","Returns a <code>Metadata</code> object.",5,[[],["metadata",3]]],[8,"Log","","A trait encapsulating the operations required of a logger.",null,null],[10,"enabled","","Determines if a log message with the specified metadata …",6,[[["metadata",3]]]],[10,"log","","Logs the <code>Record</code>.",6,[[["record",3]]]],[10,"flush","","Flushes any buffered records.",6,[[]]],[5,"set_max_level","","Sets the global maximum log level.",null,[[["levelfilter",4]]]],[5,"max_level","","Returns the current maximum log level.",null,[[],["levelfilter",4]]],[5,"set_logger","","Sets the global logger to a <code>&\'static Log</code>.",null,[[["log",8]],[["setloggererror",3],["result",4]]]],[5,"set_logger_racy","","A thread-unsafe version of <code>set_logger</code>.",null,[[["log",8]],[["setloggererror",3],["result",4]]]],[3,"SetLoggerError","","The type returned by <code>set_logger</code> if <code>set_logger</code> has already …",null,null],[3,"ParseLevelError","","The type returned by <code>from_str</code> when the string doesn\'t …",null,null],[5,"logger","","Returns a reference to the logger.",null,[[],["log",8]]],[17,"STATIC_MAX_LEVEL","","The statically resolved maximum log level.",null,null],[14,"log","","The standard logging macro.",null,null],[14,"error","","Logs a message at the error level.",null,null],[14,"warn","","Logs a message at the warn level.",null,null],[14,"info","","Logs a message at the info level.",null,null],[14,"debug","","Logs a message at the debug level.",null,null],[14,"trace","","Logs a message at the trace level.",null,null],[14,"log_enabled","","Determines if a message logged at the specified level in …",null,null],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"into","","",7,[[]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"into","","",8,[[]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"eq","","",0,[[["level",4]]]],[11,"eq","","",0,[[["levelfilter",4]]]],[11,"eq","","",1,[[["levelfilter",4]]]],[11,"eq","","",1,[[["level",4]]]],[11,"eq","","",4,[[["metadata",3]]]],[11,"ne","","",4,[[["metadata",3]]]],[11,"eq","","",5,[[["metadatabuilder",3]]]],[11,"ne","","",5,[[["metadatabuilder",3]]]],[11,"eq","","",8,[[["parselevelerror",3]]]],[11,"ne","","",8,[[["parselevelerror",3]]]],[11,"cmp","","",0,[[["level",4]],["ordering",4]]],[11,"cmp","","",1,[[["levelfilter",4]],["ordering",4]]],[11,"cmp","","",4,[[["metadata",3]],["ordering",4]]],[11,"cmp","","",5,[[["metadatabuilder",3]],["ordering",4]]],[11,"partial_cmp","","",0,[[["level",4]],[["ordering",4],["option",4]]]],[11,"lt","","",0,[[["level",4]]]],[11,"le","","",0,[[["level",4]]]],[11,"gt","","",0,[[["level",4]]]],[11,"ge","","",0,[[["level",4]]]],[11,"partial_cmp","","",0,[[["levelfilter",4]],[["ordering",4],["option",4]]]],[11,"lt","","",0,[[["levelfilter",4]]]],[11,"le","","",0,[[["levelfilter",4]]]],[11,"gt","","",0,[[["levelfilter",4]]]],[11,"ge","","",0,[[["levelfilter",4]]]],[11,"partial_cmp","","",1,[[["levelfilter",4]],[["ordering",4],["option",4]]]],[11,"lt","","",1,[[["levelfilter",4]]]],[11,"le","","",1,[[["levelfilter",4]]]],[11,"gt","","",1,[[["levelfilter",4]]]],[11,"ge","","",1,[[["levelfilter",4]]]],[11,"partial_cmp","","",1,[[["level",4]],[["ordering",4],["option",4]]]],[11,"lt","","",1,[[["level",4]]]],[11,"le","","",1,[[["level",4]]]],[11,"gt","","",1,[[["level",4]]]],[11,"ge","","",1,[[["level",4]]]],[11,"partial_cmp","","",4,[[["metadata",3]],[["option",4],["ordering",4]]]],[11,"lt","","",4,[[["metadata",3]]]],[11,"le","","",4,[[["metadata",3]]]],[11,"gt","","",4,[[["metadata",3]]]],[11,"ge","","",4,[[["metadata",3]]]],[11,"partial_cmp","","",5,[[["metadatabuilder",3]],[["option",4],["ordering",4]]]],[11,"lt","","",5,[[["metadatabuilder",3]]]],[11,"le","","",5,[[["metadatabuilder",3]]]],[11,"gt","","",5,[[["metadatabuilder",3]]]],[11,"ge","","",5,[[["metadatabuilder",3]]]],[11,"hash","","",0,[[]]],[11,"hash","","",1,[[]]],[11,"hash","","",4,[[]]],[11,"hash","","",5,[[]]],[11,"from_str","","",0,[[],[["result",4],["level",4]]]],[11,"from_str","","",1,[[],[["result",4],["levelfilter",4]]]],[11,"clone","","",0,[[],["level",4]]],[11,"clone","","",1,[[],["levelfilter",4]]],[11,"clone","","",2,[[],["record",3]]],[11,"clone","","",4,[[],["metadata",3]]]],"p":[[4,"Level"],[4,"LevelFilter"],[3,"Record"],[3,"RecordBuilder"],[3,"Metadata"],[3,"MetadataBuilder"],[8,"Log"],[3,"SetLoggerError"],[3,"ParseLevelError"]]},\
"memchr":{"doc":"The <code>memchr</code> crate provides heavily optimized routines for …","i":[[3,"Memchr","memchr","An iterator for <code>memchr</code>.",null,null],[3,"Memchr2","","An iterator for <code>memchr2</code>.",null,null],[3,"Memchr3","","An iterator for <code>memchr3</code>.",null,null],[5,"memchr_iter","","An iterator over all occurrences of the needle in a …",null,[[],["memchr",3]]],[5,"memchr2_iter","","An iterator over all occurrences of the needles in a …",null,[[],["memchr2",3]]],[5,"memchr3_iter","","An iterator over all occurrences of the needles in a …",null,[[],["memchr3",3]]],[5,"memrchr_iter","","An iterator over all occurrences of the needle in a …",null,[[],[["memchr",3],["rev",3]]]],[5,"memrchr2_iter","","An iterator over all occurrences of the needles in a …",null,[[],[["memchr2",3],["rev",3]]]],[5,"memrchr3_iter","","An iterator over all occurrences of the needles in a …",null,[[],[["rev",3],["memchr3",3]]]],[5,"memchr","","Search for the first occurrence of a byte in a slice.",null,[[],["option",4]]],[5,"memchr2","","Like <code>memchr</code>, but searches for either of two bytes instead …",null,[[],["option",4]]],[5,"memchr3","","Like <code>memchr</code>, but searches for any of three bytes instead …",null,[[],["option",4]]],[5,"memrchr","","Search for the last occurrence of a byte in a slice.",null,[[],["option",4]]],[5,"memrchr2","","Like <code>memrchr</code>, but searches for either of two bytes …",null,[[],["option",4]]],[5,"memrchr3","","Like <code>memrchr</code>, but searches for any of three bytes instead …",null,[[],["option",4]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"into_iter","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"into_iter","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"into_iter","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"next_back","","",0,[[],["option",4]]],[11,"next_back","","",1,[[],["option",4]]],[11,"next_back","","",2,[[],["option",4]]],[11,"next","","",0,[[],["option",4]]],[11,"size_hint","","",0,[[]]],[11,"next","","",1,[[],["option",4]]],[11,"size_hint","","",1,[[]]],[11,"next","","",2,[[],["option",4]]],[11,"size_hint","","",2,[[]]],[11,"new","","Creates a new iterator that yields all positions of …",0,[[],["memchr",3]]],[11,"new","","Creates a new iterator that yields all positions of …",1,[[],["memchr2",3]]],[11,"new","","Create a new <code>Memchr3</code> that\'s initialized to zero with a …",2,[[],["memchr3",3]]]],"p":[[3,"Memchr"],[3,"Memchr2"],[3,"Memchr3"]]},\
"mio":{"doc":"A fast, low-level IO library for Rust focusing on …","i":[[0,"net","mio","Networking primitives",null,null],[3,"TcpListener","mio::net","A structure representing a socket server",null,null],[3,"TcpStream","","A non-blocking TCP stream between a local socket and a …",null,null],[3,"UdpSocket","","A User Datagram Protocol socket.",null,null],[0,"event","mio","Readiness event types and utilities.",null,null],[3,"Events","mio::event","A collection of readiness events.",null,null],[3,"Iter","","<code>Events</code> iterator.",null,null],[3,"Event","","An readiness event returned by <code>Poll::poll</code>.",null,null],[8,"Evented","","A value that may be registered with <code>Poll</code>",null,null],[10,"register","","Register <code>self</code> with the given <code>Poll</code> instance.",0,[[["ready",3],["poll",3],["pollopt",3],["token",3]],["result",6]]],[10,"reregister","","Re-register <code>self</code> with the given <code>Poll</code> instance.",0,[[["ready",3],["poll",3],["pollopt",3],["token",3]],["result",6]]],[10,"deregister","","Deregister <code>self</code> from the given <code>Poll</code> instance",0,[[["poll",3]],["result",6]]],[0,"unix","mio","Unix only extensions",null,null],[3,"EventedFd","mio::unix","Adapter for <code>RawFd</code> providing an <code>Evented</code> implementation.",null,null],[12,"0","","",1,null],[3,"UnixReady","","Unix specific extensions to <code>Ready</code>",null,null],[3,"Poll","mio","Polls for readiness events on all registered values.",null,null],[3,"Registration","","Handle to a user space <code>Poll</code> registration.",null,null],[3,"SetReadiness","","Updates the readiness state of the associated <code>Registration</code>…",null,null],[3,"PollOpt","","Options supplied when registering an <code>Evented</code> handle with …",null,null],[3,"Ready","","A set of readiness event kinds",null,null],[3,"Token","","Associates readiness notifications with <code>Evented</code> handles.",null,null],[12,"0","","",2,null],[3,"Events","","A collection of readiness events.",null,null],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","mio::event","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","mio","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","mio::event","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into_iter","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","mio::unix","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","mio","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","mio::net","",12,[[]]],[11,"into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"register","mio","",7,[[["ready",3],["poll",3],["pollopt",3],["token",3]],["result",6]]],[11,"reregister","","",7,[[["ready",3],["poll",3],["pollopt",3],["token",3]],["result",6]]],[11,"deregister","","",7,[[["poll",3]],["result",6]]],[11,"register","mio::unix","",1,[[["ready",3],["poll",3],["pollopt",3],["token",3]],["result",6]]],[11,"reregister","","",1,[[["ready",3],["poll",3],["pollopt",3],["token",3]],["result",6]]],[11,"deregister","","",1,[[["poll",3]],["result",6]]],[11,"register","mio::net","",12,[[["ready",3],["poll",3],["pollopt",3],["token",3]],["result",6]]],[11,"reregister","","",12,[[["ready",3],["poll",3],["pollopt",3],["token",3]],["result",6]]],[11,"deregister","","",12,[[["poll",3]],["result",6]]],[11,"register","","",13,[[["ready",3],["poll",3],["pollopt",3],["token",3]],["result",6]]],[11,"reregister","","",13,[[["ready",3],["poll",3],["pollopt",3],["token",3]],["result",6]]],[11,"deregister","","",13,[[["poll",3]],["result",6]]],[11,"register","","",14,[[["ready",3],["poll",3],["pollopt",3],["token",3]],["result",6]]],[11,"reregister","","",14,[[["ready",3],["poll",3],["pollopt",3],["token",3]],["result",6]]],[11,"deregister","","",14,[[["poll",3]],["result",6]]],[11,"drop","mio","",7,[[]]],[11,"from","mio::unix","",11,[[["ready",3]],["unixready",3]]],[11,"from","mio","",4,[[["unixready",3]],["ready",3]]],[11,"from","","",2,[[],["token",3]]],[11,"into_iter","mio::event","",9,[[]]],[11,"next","","",10,[[],[["option",4],["event",3]]]],[11,"clone","mio","",3,[[],["pollopt",3]]],[11,"clone","","",4,[[],["ready",3]]],[11,"clone","mio::event","",5,[[],["event",3]]],[11,"clone","mio","",8,[[],["setreadiness",3]]],[11,"clone","mio::event","",10,[[],["iter",3]]],[11,"clone","mio::unix","",11,[[],["unixready",3]]],[11,"clone","mio","",2,[[],["token",3]]],[11,"cmp","","",3,[[["pollopt",3]],["ordering",4]]],[11,"cmp","","",4,[[["ready",3]],["ordering",4]]],[11,"cmp","mio::unix","",11,[[["unixready",3]],["ordering",4]]],[11,"cmp","mio","",2,[[["token",3]],["ordering",4]]],[11,"eq","","",3,[[["pollopt",3]]]],[11,"ne","","",3,[[["pollopt",3]]]],[11,"eq","","",4,[[["ready",3]]]],[11,"ne","","",4,[[["ready",3]]]],[11,"eq","mio::event","",5,[[["event",3]]]],[11,"ne","","",5,[[["event",3]]]],[11,"eq","mio::unix","",11,[[["unixready",3]]]],[11,"ne","","",11,[[["unixready",3]]]],[11,"eq","mio","",2,[[["token",3]]]],[11,"ne","","",2,[[["token",3]]]],[11,"partial_cmp","","",3,[[["pollopt",3]],[["option",4],["ordering",4]]]],[11,"lt","","",3,[[["pollopt",3]]]],[11,"le","","",3,[[["pollopt",3]]]],[11,"gt","","",3,[[["pollopt",3]]]],[11,"ge","","",3,[[["pollopt",3]]]],[11,"partial_cmp","","",4,[[["ready",3]],[["option",4],["ordering",4]]]],[11,"lt","","",4,[[["ready",3]]]],[11,"le","","",4,[[["ready",3]]]],[11,"gt","","",4,[[["ready",3]]]],[11,"ge","","",4,[[["ready",3]]]],[11,"partial_cmp","mio::unix","",11,[[["unixready",3]],[["option",4],["ordering",4]]]],[11,"lt","","",11,[[["unixready",3]]]],[11,"le","","",11,[[["unixready",3]]]],[11,"gt","","",11,[[["unixready",3]]]],[11,"ge","","",11,[[["unixready",3]]]],[11,"partial_cmp","mio","",2,[[["token",3]],[["option",4],["ordering",4]]]],[11,"lt","","",2,[[["token",3]]]],[11,"le","","",2,[[["token",3]]]],[11,"gt","","",2,[[["token",3]]]],[11,"ge","","",2,[[["token",3]]]],[11,"deref","mio::unix","",11,[[],["ready",3]]],[11,"deref_mut","","",11,[[],["ready",3]]],[11,"fmt","mio","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","mio::event","",5,[[["formatter",3]],["result",6]]],[11,"fmt","mio","",6,[[["formatter",3]],["result",6]]],[11,"fmt","mio::event","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","mio","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","mio::unix","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","mio","",2,[[["formatter",3]],["result",6]]],[11,"fmt","mio::net","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"sub","mio","",3,[[["pollopt",3]],["pollopt",3]]],[11,"sub","","",4,[[],["ready",3]]],[11,"sub","mio::unix","",11,[[["unixready",3]],["unixready",3]]],[11,"sub_assign","mio","",4,[[]]],[11,"bitand","","",3,[[["pollopt",3]],["pollopt",3]]],[11,"bitand","","",4,[[],["ready",3]]],[11,"bitand","mio::unix","",11,[[["unixready",3]],["unixready",3]]],[11,"bitor","mio","",3,[[["pollopt",3]],["pollopt",3]]],[11,"bitor","","",4,[[],["ready",3]]],[11,"bitor","mio::unix","",11,[[["unixready",3]],["unixready",3]]],[11,"bitxor","mio","",3,[[["pollopt",3]],["pollopt",3]]],[11,"bitxor","","",4,[[],["ready",3]]],[11,"bitxor","mio::unix","",11,[[["unixready",3]],["unixready",3]]],[11,"bitand_assign","mio","",4,[[]]],[11,"bitor_assign","","",4,[[]]],[11,"bitxor_assign","","",4,[[]]],[11,"hash","","",2,[[]]],[11,"read","mio::net","",12,[[],["result",6]]],[11,"write","","",12,[[],["result",6]]],[11,"flush","","",12,[[],["result",6]]],[11,"as_raw_fd","mio","",6,[[],["rawfd",6]]],[11,"as_raw_fd","mio::net","",12,[[],["rawfd",6]]],[11,"as_raw_fd","","",13,[[],["rawfd",6]]],[11,"as_raw_fd","","",14,[[],["rawfd",6]]],[11,"from_raw_fd","","",12,[[["rawfd",6]],["tcpstream",3]]],[11,"from_raw_fd","","",13,[[["rawfd",6]],["tcplistener",3]]],[11,"from_raw_fd","","",14,[[["rawfd",6]],["udpsocket",3]]],[11,"into_raw_fd","","",12,[[],["rawfd",6]]],[11,"into_raw_fd","","",13,[[],["rawfd",6]]],[11,"into_raw_fd","","",14,[[],["rawfd",6]]],[11,"empty","mio","Return a <code>PollOpt</code> representing no set options.",3,[[],["pollopt",3]]],[11,"edge","","Return a <code>PollOpt</code> representing edge-triggered …",3,[[],["pollopt",3]]],[11,"level","","Return a <code>PollOpt</code> representing level-triggered …",3,[[],["pollopt",3]]],[11,"oneshot","","Return a <code>PollOpt</code> representing oneshot notifications.",3,[[],["pollopt",3]]],[11,"is_edge","","Returns true if the options include edge-triggered …",3,[[]]],[11,"is_level","","Returns true if the options include level-triggered …",3,[[]]],[11,"is_oneshot","","Returns true if the options includes oneshot.",3,[[]]],[11,"contains","","Returns true if <code>self</code> is a superset of <code>other</code>.",3,[[["pollopt",3]]]],[11,"insert","","Adds all options represented by <code>other</code> into <code>self</code>.",3,[[["pollopt",3]]]],[11,"remove","","Removes all options represented by <code>other</code> from <code>self</code>.",3,[[["pollopt",3]]]],[11,"empty","","Returns the empty <code>Ready</code> set.",4,[[],["ready",3]]],[11,"readable","","Returns a <code>Ready</code> representing readable readiness.",4,[[],["ready",3]]],[11,"writable","","Returns a <code>Ready</code> representing writable readiness.",4,[[],["ready",3]]],[11,"all","","Returns a <code>Ready</code> representing readiness for all operations.",4,[[],["ready",3]]],[11,"is_empty","","Returns true if <code>Ready</code> is the empty set",4,[[]]],[11,"is_readable","","Returns true if the value includes readable readiness",4,[[]]],[11,"is_writable","","Returns true if the value includes writable readiness",4,[[]]],[11,"insert","","Adds all readiness represented by <code>other</code> into <code>self</code>.",4,[[["into",8]]]],[11,"remove","","Removes all options represented by <code>other</code> from <code>self</code>.",4,[[["into",8]]]],[11,"contains","","Returns true if <code>self</code> is a superset of <code>other</code>.",4,[[["into",8]]]],[11,"from_usize","","Create a <code>Ready</code> instance using the given <code>usize</code> …",4,[[],["ready",3]]],[11,"as_usize","","Returns a <code>usize</code> representation of the <code>Ready</code> value.",4,[[]]],[11,"new","mio::event","Creates a new <code>Event</code> containing <code>readiness</code> and <code>token</code>",5,[[["ready",3],["token",3]],["event",3]]],[11,"readiness","","Returns the event\'s readiness.",5,[[],["ready",3]]],[11,"token","","Returns the event\'s token.",5,[[],["token",3]]],[11,"new","mio","Return a new <code>Poll</code> handle.",6,[[],[["result",6],["poll",3]]]],[11,"register","","Register an <code>Evented</code> handle with the <code>Poll</code> instance.",6,[[["ready",3],["pollopt",3],["token",3]],["result",6]]],[11,"reregister","","Re-register an <code>Evented</code> handle with the <code>Poll</code> instance.",6,[[["ready",3],["pollopt",3],["token",3]],["result",6]]],[11,"deregister","","Deregister an <code>Evented</code> handle with the <code>Poll</code> instance.",6,[[],["result",6]]],[11,"poll","","Wait for readiness events",6,[[["events",3],["option",4],["duration",3]],["result",6]]],[11,"poll_interruptible","","Like <code>poll</code>, but may be interrupted by a signal",6,[[["events",3],["option",4],["duration",3]],["result",6]]],[11,"with_capacity","mio::event","Return a new <code>Events</code> capable of holding up to <code>capacity</code> …",9,[[],["events",3]]],[11,"capacity","","Returns the number of <code>Event</code> values that <code>self</code> can hold.",9,[[]]],[11,"is_empty","","Returns <code>true</code> if <code>self</code> contains no <code>Event</code> values.",9,[[]]],[11,"iter","","Returns an iterator over the <code>Event</code> values.",9,[[],["iter",3]]],[11,"clear","","Clearing all <code>Event</code> values from container explicitly.",9,[[]]],[11,"new2","mio","Create and return a new <code>Registration</code> and the associated …",7,[[]]],[11,"readiness","","Returns the registration\'s current readiness.",8,[[],["ready",3]]],[11,"set_readiness","","Set the registration\'s readiness",8,[[["ready",3]],["result",6]]],[11,"error","mio::unix","Returns a <code>Ready</code> representing error readiness.",11,[[],["unixready",3]]],[11,"hup","","Returns a <code>Ready</code> representing HUP readiness.",11,[[],["unixready",3]]],[11,"priority","","Returns a <code>Ready</code> representing priority (<code>EPOLLPRI</code>) readiness",11,[[],["unixready",3]]],[11,"is_error","","Returns true if the value includes error readiness",11,[[]]],[11,"is_hup","","Returns true if the value includes HUP readiness",11,[[]]],[11,"is_priority","","Returns true if <code>Ready</code> contains priority (<code>EPOLLPRI</code>) …",11,[[]]],[11,"connect","mio::net","Create a new TCP stream and issue a non-blocking connect …",12,[[["socketaddr",4]],[["result",6],["tcpstream",3]]]],[11,"connect_stream","","Creates a new <code>TcpStream</code> from the pending socket inside …",12,[[["tcpstream",3],["socketaddr",4]],[["result",6],["tcpstream",3]]]],[11,"from_stream","","Creates a new <code>TcpStream</code> from a standard <code>net::TcpStream</code>.",12,[[["tcpstream",3]],[["result",6],["tcpstream",3]]]],[11,"peer_addr","","Returns the socket address of the remote peer of this TCP …",12,[[],[["socketaddr",4],["result",6]]]],[11,"local_addr","","Returns the socket address of the local half of this TCP …",12,[[],[["socketaddr",4],["result",6]]]],[11,"try_clone","","Creates a new independently owned handle to the …",12,[[],[["result",6],["tcpstream",3]]]],[11,"shutdown","","Shuts down the read, write, or both halves of this …",12,[[["shutdown",4]],["result",6]]],[11,"set_nodelay","","Sets the value of the <code>TCP_NODELAY</code> option on this socket.",12,[[],["result",6]]],[11,"nodelay","","Gets the value of the <code>TCP_NODELAY</code> option on this socket.",12,[[],["result",6]]],[11,"set_recv_buffer_size","","Sets the value of the <code>SO_RCVBUF</code> option on this socket.",12,[[],["result",6]]],[11,"recv_buffer_size","","Gets the value of the <code>SO_RCVBUF</code> option on this socket.",12,[[],["result",6]]],[11,"set_send_buffer_size","","Sets the value of the <code>SO_SNDBUF</code> option on this socket.",12,[[],["result",6]]],[11,"send_buffer_size","","Gets the value of the <code>SO_SNDBUF</code> option on this socket.",12,[[],["result",6]]],[11,"set_keepalive","","Sets whether keepalive messages are enabled to be sent on …",12,[[["option",4],["duration",3]],["result",6]]],[11,"keepalive","","Returns whether keepalive messages are enabled on this …",12,[[],[["option",4],["result",6]]]],[11,"set_ttl","","Sets the value for the <code>IP_TTL</code> option on this socket.",12,[[],["result",6]]],[11,"ttl","","Gets the value of the <code>IP_TTL</code> option for this socket.",12,[[],["result",6]]],[11,"set_only_v6","","Sets the value for the <code>IPV6_V6ONLY</code> option on this socket.",12,[[],["result",6]]],[11,"only_v6","","Gets the value of the <code>IPV6_V6ONLY</code> option for this socket.",12,[[],["result",6]]],[11,"set_linger","","Sets the value for the <code>SO_LINGER</code> option on this socket.",12,[[["option",4],["duration",3]],["result",6]]],[11,"linger","","Gets the value of the <code>SO_LINGER</code> option on this socket.",12,[[],[["option",4],["result",6]]]],[11,"take_error","","Get the value of the <code>SO_ERROR</code> option on this socket.",12,[[],[["result",6],["option",4]]]],[11,"peek","","Receives data on the socket from the remote address to …",12,[[],["result",6]]],[11,"read_bufs","","Read in a list of buffers all at once.",12,[[],["result",6]]],[11,"write_bufs","","Write a list of buffers all at once.",12,[[],["result",6]]],[11,"bind","","Convenience method to bind a new TCP listener to the …",13,[[["socketaddr",4]],[["tcplistener",3],["result",6]]]],[11,"from_std","","Creates a new <code>TcpListener</code> from an instance of a …",13,[[["tcplistener",3]],[["tcplistener",3],["result",6]]]],[11,"accept","","Accepts a new <code>TcpStream</code>.",13,[[],["result",6]]],[11,"accept_std","","Accepts a new <code>std::net::TcpStream</code>.",13,[[],["result",6]]],[11,"local_addr","","Returns the local socket address of this listener.",13,[[],[["socketaddr",4],["result",6]]]],[11,"try_clone","","Creates a new independently owned handle to the …",13,[[],[["tcplistener",3],["result",6]]]],[11,"set_ttl","","Sets the value for the <code>IP_TTL</code> option on this socket.",13,[[],["result",6]]],[11,"ttl","","Gets the value of the <code>IP_TTL</code> option for this socket.",13,[[],["result",6]]],[11,"set_only_v6","","Sets the value for the <code>IPV6_V6ONLY</code> option on this socket.",13,[[],["result",6]]],[11,"only_v6","","Gets the value of the <code>IPV6_V6ONLY</code> option for this socket.",13,[[],["result",6]]],[11,"take_error","","Get the value of the <code>SO_ERROR</code> option on this socket.",13,[[],[["result",6],["option",4]]]],[11,"bind","","Creates a UDP socket from the given address.",14,[[["socketaddr",4]],[["udpsocket",3],["result",6]]]],[11,"from_socket","","Creates a new mio-wrapped socket from an underlying and …",14,[[["udpsocket",3]],[["udpsocket",3],["result",6]]]],[11,"local_addr","","Returns the socket address that this socket was created …",14,[[],[["socketaddr",4],["result",6]]]],[11,"try_clone","","Creates a new independently owned handle to the …",14,[[],[["udpsocket",3],["result",6]]]],[11,"send_to","","Sends data on the socket to the given address. On …",14,[[["socketaddr",4]],["result",6]]],[11,"recv_from","","Receives data from the socket. On success, returns the …",14,[[],["result",6]]],[11,"send","","Sends data on the socket to the address previously bound …",14,[[],["result",6]]],[11,"recv","","Receives data from the socket previously bound with …",14,[[],["result",6]]],[11,"connect","","Connects the UDP socket setting the default destination …",14,[[["socketaddr",4]],["result",6]]],[11,"set_broadcast","","Sets the value of the <code>SO_BROADCAST</code> option for this socket.",14,[[],["result",6]]],[11,"broadcast","","Gets the value of the <code>SO_BROADCAST</code> option for this socket.",14,[[],["result",6]]],[11,"set_multicast_loop_v4","","Sets the value of the <code>IP_MULTICAST_LOOP</code> option for this …",14,[[],["result",6]]],[11,"multicast_loop_v4","","Gets the value of the <code>IP_MULTICAST_LOOP</code> option for this …",14,[[],["result",6]]],[11,"set_multicast_ttl_v4","","Sets the value of the <code>IP_MULTICAST_TTL</code> option for this …",14,[[],["result",6]]],[11,"multicast_ttl_v4","","Gets the value of the <code>IP_MULTICAST_TTL</code> option for this …",14,[[],["result",6]]],[11,"set_multicast_loop_v6","","Sets the value of the <code>IPV6_MULTICAST_LOOP</code> option for this …",14,[[],["result",6]]],[11,"multicast_loop_v6","","Gets the value of the <code>IPV6_MULTICAST_LOOP</code> option for this …",14,[[],["result",6]]],[11,"set_ttl","","Sets the value for the <code>IP_TTL</code> option on this socket.",14,[[],["result",6]]],[11,"ttl","","Gets the value of the <code>IP_TTL</code> option for this socket.",14,[[],["result",6]]],[11,"join_multicast_v4","","Executes an operation of the <code>IP_ADD_MEMBERSHIP</code> type.",14,[[["ipv4addr",3]],["result",6]]],[11,"join_multicast_v6","","Executes an operation of the <code>IPV6_ADD_MEMBERSHIP</code> type.",14,[[["ipv6addr",3]],["result",6]]],[11,"leave_multicast_v4","","Executes an operation of the <code>IP_DROP_MEMBERSHIP</code> type.",14,[[["ipv4addr",3]],["result",6]]],[11,"leave_multicast_v6","","Executes an operation of the <code>IPV6_DROP_MEMBERSHIP</code> type.",14,[[["ipv6addr",3]],["result",6]]],[11,"set_only_v6","","Sets the value for the <code>IPV6_V6ONLY</code> option on this socket.",14,[[],["result",6]]],[11,"only_v6","","Gets the value of the <code>IPV6_V6ONLY</code> option for this socket.",14,[[],["result",6]]],[11,"take_error","","Get the value of the <code>SO_ERROR</code> option on this socket.",14,[[],[["result",6],["option",4]]]],[11,"recv_bufs","","Receives a single datagram message socket previously …",14,[[],["result",6]]],[11,"send_bufs","","Sends data on the socket to the address previously bound …",14,[[],["result",6]]]],"p":[[8,"Evented"],[3,"EventedFd"],[3,"Token"],[3,"PollOpt"],[3,"Ready"],[3,"Event"],[3,"Poll"],[3,"Registration"],[3,"SetReadiness"],[3,"Events"],[3,"Iter"],[3,"UnixReady"],[3,"TcpStream"],[3,"TcpListener"],[3,"UdpSocket"]]},\
"mio_uds":{"doc":"MIO bindings for Unix Domain Sockets","i":[[3,"UnixStream","mio_uds","A Unix stream socket.",null,null],[3,"UnixListener","","A structure representing a Unix domain socket server.",null,null],[3,"UnixDatagram","","A Unix datagram socket.",null,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"read","","",2,[[],["result",6]]],[11,"write","","",2,[[],["result",6]]],[11,"flush","","",2,[[],["result",6]]],[11,"as_raw_fd","","",0,[[]]],[11,"as_raw_fd","","",1,[[]]],[11,"as_raw_fd","","",2,[[]]],[11,"from_raw_fd","","",0,[[],["unixdatagram",3]]],[11,"from_raw_fd","","",1,[[],["unixlistener",3]]],[11,"from_raw_fd","","",2,[[],["unixstream",3]]],[11,"into_raw_fd","","",0,[[]]],[11,"into_raw_fd","","",1,[[]]],[11,"into_raw_fd","","",2,[[]]],[11,"register","","",0,[[["poll",3],["pollopt",3],["ready",3],["token",3]],["result",6]]],[11,"reregister","","",0,[[["poll",3],["pollopt",3],["ready",3],["token",3]],["result",6]]],[11,"deregister","","",0,[[["poll",3]],["result",6]]],[11,"register","","",1,[[["poll",3],["pollopt",3],["ready",3],["token",3]],["result",6]]],[11,"reregister","","",1,[[["poll",3],["pollopt",3],["ready",3],["token",3]],["result",6]]],[11,"deregister","","",1,[[["poll",3]],["result",6]]],[11,"register","","",2,[[["poll",3],["pollopt",3],["ready",3],["token",3]],["result",6]]],[11,"reregister","","",2,[[["poll",3],["pollopt",3],["ready",3],["token",3]],["result",6]]],[11,"deregister","","",2,[[["poll",3]],["result",6]]],[11,"bind","","Creates a Unix datagram socket bound to the given path.",0,[[["asref",8],["path",3]],[["result",6],["unixdatagram",3]]]],[11,"from_datagram","","Consumes a standard library <code>UnixDatagram</code> and returns a …",0,[[["unixdatagram",3]],[["result",6],["unixdatagram",3]]]],[11,"pair","","Create an unnamed pair of connected sockets.",0,[[],["result",6]]],[11,"unbound","","Creates a Unix Datagram socket which is not bound to any …",0,[[],[["result",6],["unixdatagram",3]]]],[11,"connect","","Connects the socket to the specified address.",0,[[["asref",8],["path",3]],["result",6]]],[11,"try_clone","","Creates a new independently owned handle to the …",0,[[],[["result",6],["unixdatagram",3]]]],[11,"local_addr","","Returns the address of this socket.",0,[[],[["result",6],["socketaddr",3]]]],[11,"peer_addr","","Returns the address of this socket\'s peer.",0,[[],[["result",6],["socketaddr",3]]]],[11,"recv_from","","Receives data from the socket.",0,[[],["result",6]]],[11,"recv","","Receives data from the socket.",0,[[],["result",6]]],[11,"send_to","","Sends data on the socket to the specified address.",0,[[["asref",8],["path",3]],["result",6]]],[11,"send","","Sends data on the socket to the socket\'s peer.",0,[[],["result",6]]],[11,"take_error","","Returns the value of the <code>SO_ERROR</code> option.",0,[[],[["result",6],["option",4]]]],[11,"shutdown","","Shut down the read, write, or both halves of this …",0,[[["shutdown",4]],["result",6]]],[11,"bind","","Creates a new <code>UnixListener</code> bound to the specified socket.",1,[[["asref",8],["path",3]],[["result",6],["unixlistener",3]]]],[11,"from_listener","","Consumes a standard library <code>UnixListener</code> and returns a …",1,[[["unixlistener",3]],[["result",6],["unixlistener",3]]]],[11,"accept","","Accepts a new incoming connection to this listener.",1,[[],[["result",6],["option",4]]]],[11,"accept_std","","Accepts a new incoming connection to this listener.",1,[[],[["option",4],["result",6]]]],[11,"try_clone","","Creates a new independently owned handle to the …",1,[[],[["result",6],["unixlistener",3]]]],[11,"local_addr","","Returns the local socket address of this listener.",1,[[],[["result",6],["socketaddr",3]]]],[11,"take_error","","Returns the value of the <code>SO_ERROR</code> option.",1,[[],[["result",6],["option",4]]]],[11,"connect","","Connects to the socket named by <code>path</code>.",2,[[["asref",8],["path",3]],[["result",6],["unixstream",3]]]],[11,"from_stream","","Consumes a standard library <code>UnixStream</code> and returns a …",2,[[["unixstream",3]],[["result",6],["unixstream",3]]]],[11,"pair","","Creates an unnamed pair of connected sockets.",2,[[],["result",6]]],[11,"try_clone","","Creates a new independently owned handle to the …",2,[[],[["result",6],["unixstream",3]]]],[11,"local_addr","","Returns the socket address of the local half of this …",2,[[],[["result",6],["socketaddr",3]]]],[11,"peer_addr","","Returns the socket address of the remote half of this …",2,[[],[["result",6],["socketaddr",3]]]],[11,"take_error","","Returns the value of the <code>SO_ERROR</code> option.",2,[[],[["result",6],["option",4]]]],[11,"shutdown","","Shuts down the read, write, or both halves of this …",2,[[["shutdown",4]],["result",6]]],[11,"read_bufs","","Read in a list of buffers all at once.",2,[[],["result",6]]],[11,"write_bufs","","Write a list of buffers all at once.",2,[[],["result",6]]]],"p":[[3,"UnixDatagram"],[3,"UnixListener"],[3,"UnixStream"]]},\
"net2":{"doc":"Extensions to <code>std::net</code> networking types.","i":[[0,"unix","net2","Unix-specific extensions to the <code>std::net</code> types.",null,null],[8,"UnixTcpBuilderExt","net2::unix","Unix-specific extensions for the <code>TcpBuilder</code> type in this …",null,null],[10,"reuse_port","","Set value for the <code>SO_REUSEPORT</code> option on this socket.",0,[[],["result",6]]],[10,"get_reuse_port","","Check the value of the <code>SO_REUSEPORT</code> option on this socket.",0,[[],["result",6]]],[8,"UnixUdpBuilderExt","","Unix-specific extensions for the <code>UdpBuilder</code> type in this …",null,null],[10,"reuse_port","","Set value for the <code>SO_REUSEPORT</code> option on this socket.",1,[[],["result",6]]],[10,"get_reuse_port","","Check the value of the <code>SO_REUSEPORT</code> option on this socket.",1,[[],["result",6]]],[3,"TcpBuilder","net2","An \\\"in progress\\\" TCP socket which has not yet been …",null,null],[3,"UdpBuilder","","An \\\"in progress\\\" UDP socket which has not yet been …",null,null],[8,"TcpStreamExt","","Extension methods for the standard <code>TcpStream</code> type in …",null,null],[10,"set_nodelay","","Sets the value of the <code>TCP_NODELAY</code> option on this socket.",2,[[],["result",6]]],[10,"nodelay","","Gets the value of the <code>TCP_NODELAY</code> option on this socket.",2,[[],["result",6]]],[10,"set_recv_buffer_size","","Sets the value of the <code>SO_RCVBUF</code> option on this socket.",2,[[],["result",6]]],[10,"recv_buffer_size","","Gets the value of the <code>SO_RCVBUF</code> option on this socket.",2,[[],["result",6]]],[10,"set_send_buffer_size","","Sets the value of the <code>SO_SNDBUF</code> option on this socket.",2,[[],["result",6]]],[10,"send_buffer_size","","Gets the value of the <code>SO_SNDBUF</code> option on this socket.",2,[[],["result",6]]],[10,"set_keepalive_ms","","Sets whether keepalive messages are enabled to be sent on …",2,[[["option",4]],["result",6]]],[10,"keepalive_ms","","Returns whether keepalive messages are enabled on this …",2,[[],[["option",4],["result",6]]]],[10,"set_keepalive","","Sets whether keepalive messages are enabled to be sent on …",2,[[["option",4],["duration",3]],["result",6]]],[10,"keepalive","","Returns whether keepalive messages are enabled on this …",2,[[],[["option",4],["result",6]]]],[10,"set_read_timeout_ms","","Sets the <code>SO_RCVTIMEO</code> option for this socket.",2,[[["option",4]],["result",6]]],[10,"set_read_timeout","","Sets the <code>SO_RCVTIMEO</code> option for this socket.",2,[[["option",4],["duration",3]],["result",6]]],[10,"read_timeout_ms","","Gets the value of the <code>SO_RCVTIMEO</code> option for this socket.",2,[[],[["option",4],["result",6]]]],[10,"read_timeout","","Gets the value of the <code>SO_RCVTIMEO</code> option for this socket.",2,[[],[["option",4],["result",6]]]],[10,"set_write_timeout_ms","","Sets the <code>SO_SNDTIMEO</code> option for this socket.",2,[[["option",4]],["result",6]]],[10,"set_write_timeout","","Sets the <code>SO_SNDTIMEO</code> option for this socket.",2,[[["option",4],["duration",3]],["result",6]]],[10,"write_timeout_ms","","Gets the value of the <code>SO_SNDTIMEO</code> option for this socket.",2,[[],[["option",4],["result",6]]]],[10,"write_timeout","","Gets the value of the <code>SO_SNDTIMEO</code> option for this socket.",2,[[],[["option",4],["result",6]]]],[10,"set_ttl","","Sets the value for the <code>IP_TTL</code> option on this socket.",2,[[],["result",6]]],[10,"ttl","","Gets the value of the <code>IP_TTL</code> option for this socket.",2,[[],["result",6]]],[10,"set_only_v6","","Sets the value for the <code>IPV6_V6ONLY</code> option on this socket.",2,[[],["result",6]]],[10,"only_v6","","Gets the value of the <code>IPV6_V6ONLY</code> option for this socket.",2,[[],["result",6]]],[10,"connect","","Executes a <code>connect</code> operation on this socket, establishing …",2,[[["tosocketaddrs",8]],["result",6]]],[10,"take_error","","Get the value of the <code>SO_ERROR</code> option on this socket.",2,[[],[["result",6],["option",4]]]],[10,"set_nonblocking","","Moves this TCP stream into or out of nonblocking mode.",2,[[],["result",6]]],[10,"set_linger","","Sets the linger duration of this socket by setting the …",2,[[["option",4],["duration",3]],["result",6]]],[10,"linger","","reads the linger duration for this socket by getting the …",2,[[],[["option",4],["result",6]]]],[8,"TcpListenerExt","","Extension methods for the standard <code>TcpListener</code> type in …",null,null],[10,"set_ttl","","Sets the value for the <code>IP_TTL</code> option on this socket.",3,[[],["result",6]]],[10,"ttl","","Gets the value of the <code>IP_TTL</code> option for this socket.",3,[[],["result",6]]],[10,"set_only_v6","","Sets the value for the <code>IPV6_V6ONLY</code> option on this socket.",3,[[],["result",6]]],[10,"only_v6","","Gets the value of the <code>IPV6_V6ONLY</code> option for this socket.",3,[[],["result",6]]],[10,"take_error","","Get the value of the <code>SO_ERROR</code> option on this socket.",3,[[],[["result",6],["option",4]]]],[10,"set_nonblocking","","Moves this TCP listener into or out of nonblocking mode.",3,[[],["result",6]]],[10,"set_linger","","Sets the linger duration of this socket by setting the …",3,[[["option",4],["duration",3]],["result",6]]],[10,"linger","","reads the linger duration for this socket by getting the …",3,[[],[["option",4],["result",6]]]],[8,"UdpSocketExt","","Extension methods for the standard <code>UdpSocket</code> type in …",null,null],[10,"set_recv_buffer_size","","Sets the value of the <code>SO_RCVBUF</code> option on this socket.",4,[[],["result",6]]],[10,"recv_buffer_size","","Gets the value of the <code>SO_RCVBUF</code> option on this socket.",4,[[],["result",6]]],[10,"set_send_buffer_size","","Sets the value of the <code>SO_SNDBUF</code> option on this socket.",4,[[],["result",6]]],[10,"send_buffer_size","","Gets the value of the <code>SO_SNDBUF</code> option on this socket.",4,[[],["result",6]]],[10,"set_broadcast","","Sets the value of the <code>SO_BROADCAST</code> option for this socket.",4,[[],["result",6]]],[10,"broadcast","","Gets the value of the <code>SO_BROADCAST</code> option for this socket.",4,[[],["result",6]]],[10,"set_multicast_loop_v4","","Sets the value of the <code>IP_MULTICAST_LOOP</code> option for this …",4,[[],["result",6]]],[10,"multicast_loop_v4","","Gets the value of the <code>IP_MULTICAST_LOOP</code> option for this …",4,[[],["result",6]]],[10,"set_multicast_ttl_v4","","Sets the value of the <code>IP_MULTICAST_TTL</code> option for this …",4,[[],["result",6]]],[10,"multicast_ttl_v4","","Gets the value of the <code>IP_MULTICAST_TTL</code> option for this …",4,[[],["result",6]]],[10,"set_multicast_hops_v6","","Sets the value of the <code>IPV6_MULTICAST_HOPS</code> option for this …",4,[[],["result",6]]],[10,"multicast_hops_v6","","Gets the value of the <code>IPV6_MULTICAST_HOPS</code> option for this …",4,[[],["result",6]]],[10,"set_multicast_loop_v6","","Sets the value of the <code>IPV6_MULTICAST_LOOP</code> option for this …",4,[[],["result",6]]],[10,"multicast_loop_v6","","Gets the value of the <code>IPV6_MULTICAST_LOOP</code> option for this …",4,[[],["result",6]]],[10,"set_multicast_if_v4","","Sets the value of the <code>IP_MULTICAST_IF</code> option for this …",4,[[["ipv4addr",3]],["result",6]]],[10,"multicast_if_v4","","Gets the value of the <code>IP_MULTICAST_IF</code> option for this …",4,[[],[["result",6],["ipv4addr",3]]]],[10,"set_multicast_if_v6","","Sets the value of the <code>IPV6_MULTICAST_IF</code> option for this …",4,[[],["result",6]]],[10,"multicast_if_v6","","Gets the value of the <code>IPV6_MULTICAST_IF</code> option for this …",4,[[],["result",6]]],[10,"set_ttl","","Sets the value for the <code>IP_TTL</code> option on this socket.",4,[[],["result",6]]],[10,"ttl","","Gets the value of the <code>IP_TTL</code> option for this socket.",4,[[],["result",6]]],[10,"set_unicast_hops_v6","","Sets the value for the <code>IPV6_UNICAST_HOPS</code> option on this …",4,[[],["result",6]]],[10,"unicast_hops_v6","","Gets the value of the <code>IPV6_UNICAST_HOPS</code> option for this …",4,[[],["result",6]]],[10,"set_only_v6","","Sets the value for the <code>IPV6_V6ONLY</code> option on this socket.",4,[[],["result",6]]],[10,"only_v6","","Gets the value of the <code>IPV6_V6ONLY</code> option for this socket.",4,[[],["result",6]]],[10,"join_multicast_v4","","Executes an operation of the <code>IP_ADD_MEMBERSHIP</code> type.",4,[[["ipv4addr",3]],["result",6]]],[10,"join_multicast_v6","","Executes an operation of the <code>IPV6_ADD_MEMBERSHIP</code> type.",4,[[["ipv6addr",3]],["result",6]]],[10,"leave_multicast_v4","","Executes an operation of the <code>IP_DROP_MEMBERSHIP</code> type.",4,[[["ipv4addr",3]],["result",6]]],[10,"leave_multicast_v6","","Executes an operation of the <code>IPV6_DROP_MEMBERSHIP</code> type.",4,[[["ipv6addr",3]],["result",6]]],[10,"set_read_timeout_ms","","Sets the <code>SO_RCVTIMEO</code> option for this socket.",4,[[["option",4]],["result",6]]],[10,"set_read_timeout","","Sets the <code>SO_RCVTIMEO</code> option for this socket.",4,[[["option",4],["duration",3]],["result",6]]],[10,"read_timeout_ms","","Gets the value of the <code>SO_RCVTIMEO</code> option for this socket.",4,[[],[["option",4],["result",6]]]],[10,"read_timeout","","Gets the value of the <code>SO_RCVTIMEO</code> option for this socket.",4,[[],[["option",4],["result",6]]]],[10,"set_write_timeout_ms","","Sets the <code>SO_SNDTIMEO</code> option for this socket.",4,[[["option",4]],["result",6]]],[10,"set_write_timeout","","Sets the <code>SO_SNDTIMEO</code> option for this socket.",4,[[["option",4],["duration",3]],["result",6]]],[10,"write_timeout_ms","","Gets the value of the <code>SO_SNDTIMEO</code> option for this socket.",4,[[],[["option",4],["result",6]]]],[10,"write_timeout","","Gets the value of the <code>SO_SNDTIMEO</code> option for this socket.",4,[[],[["option",4],["result",6]]]],[10,"take_error","","Get the value of the <code>SO_ERROR</code> option on this socket.",4,[[],[["result",6],["option",4]]]],[10,"connect","","Connects this UDP socket to a remote address, allowing …",4,[[["tosocketaddrs",8]],["result",6]]],[10,"send","","Sends data on the socket to the remote address to which …",4,[[],["result",6]]],[10,"recv","","Receives data on the socket from the remote address to …",4,[[],["result",6]]],[10,"set_nonblocking","","Moves this UDP socket into or out of nonblocking mode.",4,[[],["result",6]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"reuse_port","","",5,[[],["result",6]]],[11,"get_reuse_port","","",5,[[],["result",6]]],[11,"reuse_port","","",6,[[],["result",6]]],[11,"get_reuse_port","","",6,[[],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"as_raw_fd","","",5,[[],["c_int",6]]],[11,"as_raw_fd","","",6,[[],["c_int",6]]],[11,"from_raw_fd","","",5,[[["c_int",6]],["tcpbuilder",3]]],[11,"from_raw_fd","","",6,[[["c_int",6]],["udpbuilder",3]]],[11,"new_v4","","Constructs a new TcpBuilder with the <code>AF_INET</code> domain, the …",5,[[],[["result",6],["tcpbuilder",3]]]],[11,"new_v6","","Constructs a new TcpBuilder with the <code>AF_INET6</code> domain, the …",5,[[],[["result",6],["tcpbuilder",3]]]],[11,"bind","","Binds this socket to the specified address.",5,[[],[["tcpbuilder",3],["result",6]]]],[11,"listen","","Mark a socket as ready to accept incoming connection …",5,[[],[["tcplistener",3],["result",6]]]],[11,"connect","","Initiate a connection on this socket to the specified …",5,[[],[["tcpstream",3],["result",6]]]],[11,"to_tcp_stream","","Converts this builder into a <code>TcpStream</code>",5,[[],[["tcpstream",3],["result",6]]]],[11,"to_tcp_listener","","Converts this builder into a <code>TcpListener</code>",5,[[],[["tcplistener",3],["result",6]]]],[11,"local_addr","","Returns the address of the local half of this TCP socket.",5,[[],[["result",6],["socketaddr",4]]]],[11,"new_v4","","Constructs a new UdpBuilder with the <code>AF_INET</code> domain, the …",6,[[],[["udpbuilder",3],["result",6]]]],[11,"new_v6","","Constructs a new UdpBuilder with the <code>AF_INET6</code> domain, the …",6,[[],[["udpbuilder",3],["result",6]]]],[11,"bind","","Binds this socket to the specified address.",6,[[],[["result",6],["udpsocket",3]]]],[11,"ttl","","Sets the value for the <code>IP_TTL</code> option on this socket.",5,[[],["result",6]]],[11,"only_v6","","Sets the value for the <code>IPV6_V6ONLY</code> option on this socket.",5,[[],["result",6]]],[11,"reuse_address","","Set value for the <code>SO_REUSEADDR</code> option on this socket.",5,[[],["result",6]]],[11,"get_reuse_address","","Check the <code>SO_REUSEADDR</code> option on this socket.",5,[[],["result",6]]],[11,"take_error","","Get the value of the <code>SO_ERROR</code> option on this socket.",5,[[],[["result",6],["option",4]]]],[11,"ttl","","Sets the value for the <code>IP_TTL</code> option on this socket.",6,[[],["result",6]]],[11,"only_v6","","Sets the value for the <code>IPV6_V6ONLY</code> option on this socket.",6,[[],["result",6]]],[11,"reuse_address","","Set value for the <code>SO_REUSEADDR</code> option on this socket.",6,[[],["result",6]]],[11,"get_reuse_address","","Check the <code>SO_REUSEADDR</code> option on this socket.",6,[[],["result",6]]],[11,"take_error","","Get the value of the <code>SO_ERROR</code> option on this socket.",6,[[],[["result",6],["option",4]]]]],"p":[[8,"UnixTcpBuilderExt"],[8,"UnixUdpBuilderExt"],[8,"TcpStreamExt"],[8,"TcpListenerExt"],[8,"UdpSocketExt"],[3,"TcpBuilder"],[3,"UdpBuilder"]]},\
"nix":{"doc":"Rust friendly bindings to the various *nix system …","i":[[0,"dir","nix","",null,null],[3,"Dir","nix::dir","An open directory.",null,null],[11,"open","","Opens the given path as with <code>fcntl::open</code>.",0,[[["oflag",3],["mode",3]],["result",6]]],[11,"openat","","Opens the given path as with <code>fcntl::openat</code>.",0,[[["rawfd",6],["oflag",3],["mode",3]],["result",6]]],[11,"from","","Converts from a descriptor-based object, closing the …",0,[[["intorawfd",8]],["result",6]]],[11,"from_fd","","Converts from a file descriptor, closing it on success or …",0,[[["rawfd",6]],["result",6]]],[11,"iter","","Returns an iterator of <code>Result<Entry></code> which rewinds when …",0,[[],["iter",3]]],[3,"Iter","","",null,null],[3,"Entry","","A directory entry, similar to <code>std::fs::DirEntry</code>.",null,null],[4,"Type","","",null,null],[13,"Fifo","","",1,null],[13,"CharacterDevice","","",1,null],[13,"Directory","","",1,null],[13,"BlockDevice","","",1,null],[13,"File","","",1,null],[13,"Symlink","","",1,null],[13,"Socket","","",1,null],[11,"ino","","Returns the inode number (<code>d_ino</code>) of the underlying <code>dirent</code>.",2,[[]]],[11,"file_name","","Returns the bare file name of this directory entry …",2,[[],["cstr",3]]],[11,"file_type","","Returns the type of this directory entry, if known.",2,[[],[["type",4],["option",4]]]],[0,"env","nix","",null,null],[5,"clearenv","nix::env","Clear the environment of all name-value pairs.",null,[[],["result",6]]],[0,"errno","nix","",null,null],[4,"Errno","nix::errno","",null,null],[13,"UnknownErrno","","",3,null],[13,"EPERM","","",3,null],[13,"ENOENT","","",3,null],[13,"ESRCH","","",3,null],[13,"EINTR","","",3,null],[13,"EIO","","",3,null],[13,"ENXIO","","",3,null],[13,"E2BIG","","",3,null],[13,"ENOEXEC","","",3,null],[13,"EBADF","","",3,null],[13,"ECHILD","","",3,null],[13,"EAGAIN","","",3,null],[13,"ENOMEM","","",3,null],[13,"EACCES","","",3,null],[13,"EFAULT","","",3,null],[13,"ENOTBLK","","",3,null],[13,"EBUSY","","",3,null],[13,"EEXIST","","",3,null],[13,"EXDEV","","",3,null],[13,"ENODEV","","",3,null],[13,"ENOTDIR","","",3,null],[13,"EISDIR","","",3,null],[13,"EINVAL","","",3,null],[13,"ENFILE","","",3,null],[13,"EMFILE","","",3,null],[13,"ENOTTY","","",3,null],[13,"ETXTBSY","","",3,null],[13,"EFBIG","","",3,null],[13,"ENOSPC","","",3,null],[13,"ESPIPE","","",3,null],[13,"EROFS","","",3,null],[13,"EMLINK","","",3,null],[13,"EPIPE","","",3,null],[13,"EDOM","","",3,null],[13,"ERANGE","","",3,null],[13,"EDEADLK","","",3,null],[13,"ENAMETOOLONG","","",3,null],[13,"ENOLCK","","",3,null],[13,"ENOSYS","","",3,null],[13,"ENOTEMPTY","","",3,null],[13,"ELOOP","","",3,null],[13,"ENOMSG","","",3,null],[13,"EIDRM","","",3,null],[13,"ECHRNG","","",3,null],[13,"EL2NSYNC","","",3,null],[13,"EL3HLT","","",3,null],[13,"EL3RST","","",3,null],[13,"ELNRNG","","",3,null],[13,"EUNATCH","","",3,null],[13,"ENOCSI","","",3,null],[13,"EL2HLT","","",3,null],[13,"EBADE","","",3,null],[13,"EBADR","","",3,null],[13,"EXFULL","","",3,null],[13,"ENOANO","","",3,null],[13,"EBADRQC","","",3,null],[13,"EBADSLT","","",3,null],[13,"EBFONT","","",3,null],[13,"ENOSTR","","",3,null],[13,"ENODATA","","",3,null],[13,"ETIME","","",3,null],[13,"ENOSR","","",3,null],[13,"ENONET","","",3,null],[13,"ENOPKG","","",3,null],[13,"EREMOTE","","",3,null],[13,"ENOLINK","","",3,null],[13,"EADV","","",3,null],[13,"ESRMNT","","",3,null],[13,"ECOMM","","",3,null],[13,"EPROTO","","",3,null],[13,"EMULTIHOP","","",3,null],[13,"EDOTDOT","","",3,null],[13,"EBADMSG","","",3,null],[13,"EOVERFLOW","","",3,null],[13,"ENOTUNIQ","","",3,null],[13,"EBADFD","","",3,null],[13,"EREMCHG","","",3,null],[13,"ELIBACC","","",3,null],[13,"ELIBBAD","","",3,null],[13,"ELIBSCN","","",3,null],[13,"ELIBMAX","","",3,null],[13,"ELIBEXEC","","",3,null],[13,"EILSEQ","","",3,null],[13,"ERESTART","","",3,null],[13,"ESTRPIPE","","",3,null],[13,"EUSERS","","",3,null],[13,"ENOTSOCK","","",3,null],[13,"EDESTADDRREQ","","",3,null],[13,"EMSGSIZE","","",3,null],[13,"EPROTOTYPE","","",3,null],[13,"ENOPROTOOPT","","",3,null],[13,"EPROTONOSUPPORT","","",3,null],[13,"ESOCKTNOSUPPORT","","",3,null],[13,"EOPNOTSUPP","","",3,null],[13,"EPFNOSUPPORT","","",3,null],[13,"EAFNOSUPPORT","","",3,null],[13,"EADDRINUSE","","",3,null],[13,"EADDRNOTAVAIL","","",3,null],[13,"ENETDOWN","","",3,null],[13,"ENETUNREACH","","",3,null],[13,"ENETRESET","","",3,null],[13,"ECONNABORTED","","",3,null],[13,"ECONNRESET","","",3,null],[13,"ENOBUFS","","",3,null],[13,"EISCONN","","",3,null],[13,"ENOTCONN","","",3,null],[13,"ESHUTDOWN","","",3,null],[13,"ETOOMANYREFS","","",3,null],[13,"ETIMEDOUT","","",3,null],[13,"ECONNREFUSED","","",3,null],[13,"EHOSTDOWN","","",3,null],[13,"EHOSTUNREACH","","",3,null],[13,"EALREADY","","",3,null],[13,"EINPROGRESS","","",3,null],[13,"ESTALE","","",3,null],[13,"EUCLEAN","","",3,null],[13,"ENOTNAM","","",3,null],[13,"ENAVAIL","","",3,null],[13,"EISNAM","","",3,null],[13,"EREMOTEIO","","",3,null],[13,"EDQUOT","","",3,null],[13,"ENOMEDIUM","","",3,null],[13,"EMEDIUMTYPE","","",3,null],[13,"ECANCELED","","",3,null],[13,"ENOKEY","","",3,null],[13,"EKEYEXPIRED","","",3,null],[13,"EKEYREVOKED","","",3,null],[13,"EKEYREJECTED","","",3,null],[13,"EOWNERDEAD","","",3,null],[13,"ENOTRECOVERABLE","","",3,null],[13,"ERFKILL","","",3,null],[13,"EHWPOISON","","",3,null],[17,"EWOULDBLOCK","","",null,null],[17,"EDEADLOCK","","",null,null],[17,"ENOTSUP","","",null,null],[5,"from_i32","","",null,[[],["errno",4]]],[5,"errno","","Returns the platform-specific value of errno",null,[[]]],[11,"last","","",3,[[]]],[11,"desc","","",3,[[]]],[11,"from_i32","","",3,[[],["errno",4]]],[11,"clear","","",3,[[]]],[11,"result","","Returns <code>Ok(value)</code> if it does not contain the sentinel …",3,[[["errnosentinel",8],["partialeq",8]],[["result",6],["errnosentinel",8],["partialeq",8]]]],[8,"ErrnoSentinel","","The sentinel value indicates that a function failed and …",null,null],[10,"sentinel","","",4,[[]]],[0,"features","nix","Feature tests for OS functionality",null,null],[5,"socket_atomic_cloexec","nix::features","Check if the OS supports atomic close-on-exec for sockets",null,[[]]],[0,"fcntl","nix","",null,null],[4,"PosixFadviseAdvice","nix::fcntl","",null,null],[13,"POSIX_FADV_NORMAL","","",5,null],[13,"POSIX_FADV_SEQUENTIAL","","",5,null],[13,"POSIX_FADV_RANDOM","","",5,null],[13,"POSIX_FADV_NOREUSE","","",5,null],[13,"POSIX_FADV_WILLNEED","","",5,null],[13,"POSIX_FADV_DONTNEED","","",5,null],[5,"posix_fadvise","","",null,[[["rawfd",6],["posixfadviseadvice",4],["off_t",6]],[["result",6],["c_int",6]]]],[3,"AtFlags","","",null,null],[18,"AT_REMOVEDIR","","",6,null],[18,"AT_SYMLINK_FOLLOW","","",6,null],[18,"AT_SYMLINK_NOFOLLOW","","",6,null],[18,"AT_NO_AUTOMOUNT","","",6,null],[18,"AT_EMPTY_PATH","","",6,null],[11,"empty","","Returns an empty set of flags",6,[[],["atflags",3]]],[11,"all","","Returns the set containing all flags.",6,[[],["atflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",6,[[],["c_int",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",6,[[["c_int",6]],[["atflags",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",6,[[["c_int",6]],["atflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",6,[[["c_int",6]],["atflags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",6,[[]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",6,[[]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",6,[[["atflags",3]]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",6,[[["atflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",6,[[["atflags",3]]]],[11,"remove","","Removes the specified flags in-place.",6,[[["atflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",6,[[["atflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",6,[[["atflags",3]]]],[3,"OFlag","","Configuration options for opened files.",null,null],[18,"O_ACCMODE","","Mask for the access mode of the file.",7,null],[18,"O_APPEND","","Open the file in append-only mode.",7,null],[18,"O_ASYNC","","Generate a signal when input or output becomes possible.",7,null],[18,"O_CLOEXEC","","Closes the file descriptor once an <code>execve</code> call is made.",7,null],[18,"O_CREAT","","Create the file if it does not exist.",7,null],[18,"O_DIRECT","","Try to minimize cache effects of the I/O for this file.",7,null],[18,"O_DIRECTORY","","If the specified path isn\'t a directory, fail.",7,null],[18,"O_DSYNC","","Implicitly follow each <code>write()</code> with an <code>fdatasync()</code>.",7,null],[18,"O_EXCL","","Error out if a file was not created.",7,null],[18,"O_FSYNC","","Same as <code>O_SYNC</code>.",7,null],[18,"O_LARGEFILE","","Allow files whose sizes can\'t be represented in an <code>off_t</code> …",7,null],[18,"O_NOATIME","","Do not update the file last access time during <code>read(2)</code>s.",7,null],[18,"O_NOCTTY","","Don\'t attach the device as the process\' controlling …",7,null],[18,"O_NDELAY","","Same as <code>O_NONBLOCK</code>.",7,null],[18,"O_NOFOLLOW","","<code>open()</code> will fail if the given path is a symbolic link.",7,null],[18,"O_NONBLOCK","","When possible, open the file in nonblocking mode.",7,null],[18,"O_PATH","","Obtain a file descriptor for low-level access.",7,null],[18,"O_RDONLY","","Only allow reading.",7,null],[18,"O_RDWR","","Allow both reading and writing.",7,null],[18,"O_RSYNC","","Similar to <code>O_DSYNC</code> but applies to <code>read</code>s instead.",7,null],[18,"O_SYNC","","Implicitly follow each <code>write()</code> with an <code>fsync()</code>.",7,null],[18,"O_TMPFILE","","Create an unnamed temporary file.",7,null],[18,"O_TRUNC","","Truncate an existing regular file to 0 length if it …",7,null],[18,"O_WRONLY","","Only allow writing.",7,null],[11,"empty","","Returns an empty set of flags",7,[[],["oflag",3]]],[11,"all","","Returns the set containing all flags.",7,[[],["oflag",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",7,[[],["c_int",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",7,[[["c_int",6]],[["option",4],["oflag",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",7,[[["c_int",6]],["oflag",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",7,[[["c_int",6]],["oflag",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",7,[[]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",7,[[]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",7,[[["oflag",3]]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",7,[[["oflag",3]]]],[11,"insert","","Inserts the specified flags in-place.",7,[[["oflag",3]]]],[11,"remove","","Removes the specified flags in-place.",7,[[["oflag",3]]]],[11,"toggle","","Toggles the specified flags in-place.",7,[[["oflag",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",7,[[["oflag",3]]]],[5,"open","","",null,[[["oflag",3],["mode",3]],[["rawfd",6],["result",6]]]],[5,"openat","","",null,[[["rawfd",6],["oflag",3],["mode",3]],[["rawfd",6],["result",6]]]],[5,"renameat","","",null,[[["rawfd",6],["option",4]],["result",6]]],[5,"readlink","","",null,[[],[["osstring",3],["result",6]]]],[5,"readlinkat","","",null,[[["rawfd",6]],[["osstring",3],["result",6]]]],[3,"SealFlag","","Additional flags for file sealing, which allows for …",null,null],[18,"F_SEAL_SEAL","","Prevents further calls to <code>fcntl()</code> with <code>F_ADD_SEALS</code>.",8,null],[18,"F_SEAL_SHRINK","","The file cannot be reduced in size.",8,null],[18,"F_SEAL_GROW","","The size of the file cannot be increased.",8,null],[18,"F_SEAL_WRITE","","The file contents cannot be modified.",8,null],[11,"empty","","Returns an empty set of flags",8,[[],["sealflag",3]]],[11,"all","","Returns the set containing all flags.",8,[[],["sealflag",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",8,[[],["c_int",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",8,[[["c_int",6]],[["option",4],["sealflag",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",8,[[["c_int",6]],["sealflag",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",8,[[["c_int",6]],["sealflag",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",8,[[]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",8,[[]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",8,[[["sealflag",3]]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",8,[[["sealflag",3]]]],[11,"insert","","Inserts the specified flags in-place.",8,[[["sealflag",3]]]],[11,"remove","","Removes the specified flags in-place.",8,[[["sealflag",3]]]],[11,"toggle","","Toggles the specified flags in-place.",8,[[["sealflag",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",8,[[["sealflag",3]]]],[3,"FdFlag","","Additional configuration flags for <code>fcntl</code>\'s <code>F_SETFD</code>.",null,null],[18,"FD_CLOEXEC","","The file descriptor will automatically be closed during a …",9,null],[11,"empty","","Returns an empty set of flags",9,[[],["fdflag",3]]],[11,"all","","Returns the set containing all flags.",9,[[],["fdflag",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",9,[[],["c_int",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",9,[[["c_int",6]],[["fdflag",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",9,[[["c_int",6]],["fdflag",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",9,[[["c_int",6]],["fdflag",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",9,[[]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",9,[[]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",9,[[["fdflag",3]]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",9,[[["fdflag",3]]]],[11,"insert","","Inserts the specified flags in-place.",9,[[["fdflag",3]]]],[11,"remove","","Removes the specified flags in-place.",9,[[["fdflag",3]]]],[11,"toggle","","Toggles the specified flags in-place.",9,[[["fdflag",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",9,[[["fdflag",3]]]],[4,"FcntlArg","","",null,null],[13,"F_DUPFD","","",10,null],[13,"F_DUPFD_CLOEXEC","","",10,null],[13,"F_GETFD","","",10,null],[13,"F_SETFD","","",10,null],[13,"F_GETFL","","",10,null],[13,"F_SETFL","","",10,null],[13,"F_SETLK","","",10,null],[13,"F_SETLKW","","",10,null],[13,"F_GETLK","","",10,null],[13,"F_OFD_SETLK","","",10,null],[13,"F_OFD_SETLKW","","",10,null],[13,"F_OFD_GETLK","","",10,null],[13,"F_ADD_SEALS","","",10,null],[13,"F_GET_SEALS","","",10,null],[13,"F_GETPIPE_SZ","","",10,null],[13,"F_SETPIPE_SZ","","",10,null],[5,"fcntl","","",null,[[["rawfd",6],["fcntlarg",4]],[["c_int",6],["result",6]]]],[4,"FlockArg","","",null,null],[13,"LockShared","","",11,null],[13,"LockExclusive","","",11,null],[13,"Unlock","","",11,null],[13,"LockSharedNonblock","","",11,null],[13,"LockExclusiveNonblock","","",11,null],[13,"UnlockNonblock","","",11,null],[5,"flock","","",null,[[["rawfd",6],["flockarg",4]],["result",6]]],[3,"SpliceFFlags","","Additional flags to <code>splice</code> and friends.",null,null],[18,"SPLICE_F_MOVE","","Request that pages be moved instead of copied.",12,null],[18,"SPLICE_F_NONBLOCK","","Do not block on I/O.",12,null],[18,"SPLICE_F_MORE","","Hint that more data will be coming in a subsequent splice.",12,null],[18,"SPLICE_F_GIFT","","Gift the user pages to the kernel.",12,null],[11,"empty","","Returns an empty set of flags",12,[[],["splicefflags",3]]],[11,"all","","Returns the set containing all flags.",12,[[],["splicefflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",12,[[],["c_uint",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",12,[[["c_uint",6]],[["splicefflags",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",12,[[["c_uint",6]],["splicefflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",12,[[["c_uint",6]],["splicefflags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",12,[[]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",12,[[]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",12,[[["splicefflags",3]]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",12,[[["splicefflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",12,[[["splicefflags",3]]]],[11,"remove","","Removes the specified flags in-place.",12,[[["splicefflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",12,[[["splicefflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",12,[[["splicefflags",3]]]],[5,"copy_file_range","","Copy a range of data from one file to another",null,[[["rawfd",6],["option",4],["loff_t",6]],["result",6]]],[5,"splice","","",null,[[["rawfd",6],["option",4],["loff_t",6],["splicefflags",3]],["result",6]]],[5,"tee","","",null,[[["rawfd",6],["splicefflags",3]],["result",6]]],[5,"vmsplice","","",null,[[["rawfd",6],["splicefflags",3]],["result",6]]],[3,"FallocateFlags","","Mode argument flags for fallocate determining operation …",null,null],[18,"FALLOC_FL_KEEP_SIZE","","File size is not changed.",13,null],[18,"FALLOC_FL_PUNCH_HOLE","","Deallocates space by creating a hole.",13,null],[18,"FALLOC_FL_COLLAPSE_RANGE","","Removes byte range from a file without leaving a hole.",13,null],[18,"FALLOC_FL_ZERO_RANGE","","Zeroes space in specified byte range.",13,null],[18,"FALLOC_FL_INSERT_RANGE","","Increases file space by inserting a hole within the file …",13,null],[18,"FALLOC_FL_UNSHARE_RANGE","","Shared file data extants are made private to the file.",13,null],[11,"empty","","Returns an empty set of flags",13,[[],["fallocateflags",3]]],[11,"all","","Returns the set containing all flags.",13,[[],["fallocateflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",13,[[],["c_int",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",13,[[["c_int",6]],[["option",4],["fallocateflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",13,[[["c_int",6]],["fallocateflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",13,[[["c_int",6]],["fallocateflags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",13,[[]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",13,[[]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",13,[[["fallocateflags",3]]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",13,[[["fallocateflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",13,[[["fallocateflags",3]]]],[11,"remove","","Removes the specified flags in-place.",13,[[["fallocateflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",13,[[["fallocateflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",13,[[["fallocateflags",3]]]],[5,"fallocate","","Manipulates file space.",null,[[["fallocateflags",3],["rawfd",6],["off_t",6]],["result",6]]],[5,"posix_fallocate","","",null,[[["rawfd",6],["off_t",6]],["result",6]]],[0,"ifaddrs","nix","Query network interface addresses",null,null],[3,"InterfaceAddress","nix::ifaddrs","Describes a single address for an interface as returned …",null,null],[12,"interface_name","","Name of the network interface",14,null],[12,"flags","","Flags as from <code>SIOCGIFFLAGS</code> ioctl",14,null],[12,"address","","Network address of this interface",14,null],[12,"netmask","","Netmask of this interface",14,null],[12,"broadcast","","Broadcast address of this interface, if applicable",14,null],[12,"destination","","Point-to-point destination address",14,null],[3,"InterfaceAddressIterator","","Holds the results of <code>getifaddrs</code>.",null,null],[5,"getifaddrs","","Get interface addresses using libc\'s <code>getifaddrs</code>",null,[[],[["result",6],["interfaceaddressiterator",3]]]],[0,"kmod","nix","Load and unload kernel modules.",null,null],[5,"init_module","nix::kmod","Loads a kernel module from a buffer.",null,[[["cstr",3]],["result",6]]],[3,"ModuleInitFlags","","Flags used by the <code>finit_module</code> function.",null,null],[18,"MODULE_INIT_IGNORE_MODVERSIONS","","Ignore symbol version hashes.",15,null],[18,"MODULE_INIT_IGNORE_VERMAGIC","","Ignore kernel version magic.",15,null],[11,"empty","","Returns an empty set of flags",15,[[],["moduleinitflags",3]]],[11,"all","","Returns the set containing all flags.",15,[[],["moduleinitflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",15,[[],["c_uint",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",15,[[["c_uint",6]],[["option",4],["moduleinitflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",15,[[["c_uint",6]],["moduleinitflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",15,[[["c_uint",6]],["moduleinitflags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",15,[[]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",15,[[]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",15,[[["moduleinitflags",3]]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",15,[[["moduleinitflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",15,[[["moduleinitflags",3]]]],[11,"remove","","Removes the specified flags in-place.",15,[[["moduleinitflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",15,[[["moduleinitflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",15,[[["moduleinitflags",3]]]],[5,"finit_module","","Loads a kernel module from a given file descriptor.",null,[[["cstr",3],["moduleinitflags",3]],["result",6]]],[3,"DeleteModuleFlags","","Flags used by <code>delete_module</code>.",null,null],[18,"O_NONBLOCK","","",16,null],[18,"O_TRUNC","","",16,null],[11,"empty","","Returns an empty set of flags",16,[[],["deletemoduleflags",3]]],[11,"all","","Returns the set containing all flags.",16,[[],["deletemoduleflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",16,[[],["c_int",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",16,[[["c_int",6]],[["option",4],["deletemoduleflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",16,[[["c_int",6]],["deletemoduleflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",16,[[["c_int",6]],["deletemoduleflags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",16,[[]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",16,[[]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",16,[[["deletemoduleflags",3]]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",16,[[["deletemoduleflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",16,[[["deletemoduleflags",3]]]],[11,"remove","","Removes the specified flags in-place.",16,[[["deletemoduleflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",16,[[["deletemoduleflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",16,[[["deletemoduleflags",3]]]],[5,"delete_module","","Unloads the kernel module with the given name.",null,[[["cstr",3],["deletemoduleflags",3]],["result",6]]],[0,"mount","nix","",null,null],[3,"MsFlags","nix::mount","",null,null],[18,"MS_RDONLY","","Mount read-only",17,null],[18,"MS_NOSUID","","Ignore suid and sgid bits",17,null],[18,"MS_NODEV","","Disallow access to device special files",17,null],[18,"MS_NOEXEC","","Disallow program execution",17,null],[18,"MS_SYNCHRONOUS","","Writes are synced at once",17,null],[18,"MS_REMOUNT","","Alter flags of a mounted FS",17,null],[18,"MS_MANDLOCK","","Allow mandatory locks on a FS",17,null],[18,"MS_DIRSYNC","","Directory modifications are synchronous",17,null],[18,"MS_NOATIME","","Do not update access times",17,null],[18,"MS_NODIRATIME","","Do not update directory access times",17,null],[18,"MS_BIND","","Linux 2.4.0 - Bind directory at different place",17,null],[18,"MS_MOVE","","",17,null],[18,"MS_REC","","",17,null],[18,"MS_SILENT","","",17,null],[18,"MS_POSIXACL","","",17,null],[18,"MS_UNBINDABLE","","",17,null],[18,"MS_PRIVATE","","",17,null],[18,"MS_SLAVE","","",17,null],[18,"MS_SHARED","","",17,null],[18,"MS_RELATIME","","",17,null],[18,"MS_KERNMOUNT","","",17,null],[18,"MS_I_VERSION","","",17,null],[18,"MS_STRICTATIME","","",17,null],[18,"MS_ACTIVE","","",17,null],[18,"MS_NOUSER","","",17,null],[18,"MS_RMT_MASK","","",17,null],[18,"MS_MGC_VAL","","",17,null],[18,"MS_MGC_MSK","","",17,null],[11,"empty","","Returns an empty set of flags",17,[[],["msflags",3]]],[11,"all","","Returns the set containing all flags.",17,[[],["msflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",17,[[],["c_ulong",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",17,[[["c_ulong",6]],[["option",4],["msflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",17,[[["c_ulong",6]],["msflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",17,[[["c_ulong",6]],["msflags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",17,[[]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",17,[[]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",17,[[["msflags",3]]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",17,[[["msflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",17,[[["msflags",3]]]],[11,"remove","","Removes the specified flags in-place.",17,[[["msflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",17,[[["msflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",17,[[["msflags",3]]]],[3,"MntFlags","","",null,null],[18,"MNT_FORCE","","",18,null],[18,"MNT_DETACH","","",18,null],[18,"MNT_EXPIRE","","",18,null],[11,"empty","","Returns an empty set of flags",18,[[],["mntflags",3]]],[11,"all","","Returns the set containing all flags.",18,[[],["mntflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",18,[[],["c_int",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",18,[[["c_int",6]],[["option",4],["mntflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",18,[[["c_int",6]],["mntflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",18,[[["c_int",6]],["mntflags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",18,[[]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",18,[[]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",18,[[["mntflags",3]]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",18,[[["mntflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",18,[[["mntflags",3]]]],[11,"remove","","Removes the specified flags in-place.",18,[[["mntflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",18,[[["mntflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",18,[[["mntflags",3]]]],[5,"mount","","",null,[[["option",4],["option",4],["msflags",3],["option",4]],["result",6]]],[5,"umount","","",null,[[],["result",6]]],[5,"umount2","","",null,[[["mntflags",3]],["result",6]]],[0,"mqueue","nix","Posix Message Queue functions",null,null],[3,"MQ_OFlag","nix::mqueue","",null,null],[18,"O_RDONLY","","",19,null],[18,"O_WRONLY","","",19,null],[18,"O_RDWR","","",19,null],[18,"O_CREAT","","",19,null],[18,"O_EXCL","","",19,null],[18,"O_NONBLOCK","","",19,null],[18,"O_CLOEXEC","","",19,null],[11,"empty","","Returns an empty set of flags",19,[[],["mq_oflag",3]]],[11,"all","","Returns the set containing all flags.",19,[[],["mq_oflag",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",19,[[],["c_int",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",19,[[["c_int",6]],[["mq_oflag",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",19,[[["c_int",6]],["mq_oflag",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",19,[[["c_int",6]],["mq_oflag",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",19,[[]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",19,[[]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",19,[[["mq_oflag",3]]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",19,[[["mq_oflag",3]]]],[11,"insert","","Inserts the specified flags in-place.",19,[[["mq_oflag",3]]]],[11,"remove","","Removes the specified flags in-place.",19,[[["mq_oflag",3]]]],[11,"toggle","","Toggles the specified flags in-place.",19,[[["mq_oflag",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",19,[[["mq_oflag",3]]]],[3,"FdFlag","","",null,null],[18,"FD_CLOEXEC","","",20,null],[11,"empty","","Returns an empty set of flags",20,[[],["fdflag",3]]],[11,"all","","Returns the set containing all flags.",20,[[],["fdflag",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",20,[[],["c_int",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",20,[[["c_int",6]],[["option",4],["fdflag",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",20,[[["c_int",6]],["fdflag",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",20,[[["c_int",6]],["fdflag",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",20,[[]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",20,[[]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",20,[[["fdflag",3]]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",20,[[["fdflag",3]]]],[11,"insert","","Inserts the specified flags in-place.",20,[[["fdflag",3]]]],[11,"remove","","Removes the specified flags in-place.",20,[[["fdflag",3]]]],[11,"toggle","","Toggles the specified flags in-place.",20,[[["fdflag",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",20,[[["fdflag",3]]]],[3,"MqAttr","","",null,null],[11,"new","","",21,[[["c_long",6]],["mqattr",3]]],[11,"flags","","",21,[[],["c_long",6]]],[5,"mq_open","","Open a message queue",null,[[["mq_oflag",3],["option",4],["mode",3],["cstring",3],["mqattr",3]],[["result",6],["mqd_t",6]]]],[5,"mq_unlink","","Remove a message queue",null,[[["cstring",3]],["result",6]]],[5,"mq_close","","Close a message queue",null,[[["mqd_t",6]],["result",6]]],[5,"mq_receive","","Receive a message from a message queue",null,[[["mqd_t",6]],["result",6]]],[5,"mq_send","","Send a message to a message queue",null,[[["mqd_t",6]],["result",6]]],[5,"mq_getattr","","Get message queue attributes",null,[[["mqd_t",6]],[["result",6],["mqattr",3]]]],[5,"mq_setattr","","Set the attributes of the message queue. Only <code>O_NONBLOCK</code> …",null,[[["mqattr",3],["mqd_t",6]],[["result",6],["mqattr",3]]]],[5,"mq_set_nonblock","","Convenience function. Sets the <code>O_NONBLOCK</code> attribute for a …",null,[[["mqd_t",6]],[["result",6],["mqattr",3]]]],[5,"mq_remove_nonblock","","Convenience function. Removes <code>O_NONBLOCK</code> attribute for a …",null,[[["mqd_t",6]],[["result",6],["mqattr",3]]]],[0,"net","nix","Functionality involving network interfaces",null,null],[0,"if_","nix::net","Network interface name resolution.",null,null],[5,"if_nametoindex","nix::net::if_","Resolve an interface into a interface number.",null,[[],[["result",6],["c_uint",6]]]],[3,"InterfaceFlags","","Standard interface flags, used by <code>getifaddrs</code>",null,null],[18,"IFF_UP","","Interface is running. (see <code>netdevice(7)</code>)",22,null],[18,"IFF_BROADCAST","","Valid broadcast address set. (see <code>netdevice(7)</code>)",22,null],[18,"IFF_DEBUG","","Internal debugging flag. (see <code>netdevice(7)</code>)",22,null],[18,"IFF_LOOPBACK","","Interface is a loopback interface. (see <code>netdevice(7)</code>)",22,null],[18,"IFF_POINTOPOINT","","Interface is a point-to-point link. (see <code>netdevice(7)</code>)",22,null],[18,"IFF_NOTRAILERS","","Avoid use of trailers. (see <code>netdevice(7)</code>)",22,null],[18,"IFF_RUNNING","","Resources allocated. (see <code>netdevice(7)</code>)",22,null],[18,"IFF_NOARP","","No arp protocol, L2 destination address not set. (see …",22,null],[18,"IFF_PROMISC","","Interface is in promiscuous mode. (see <code>netdevice(7)</code>)",22,null],[18,"IFF_ALLMULTI","","Receive all multicast packets. (see <code>netdevice(7)</code>)",22,null],[18,"IFF_MASTER","","Master of a load balancing bundle. (see <code>netdevice(7)</code>)",22,null],[18,"IFF_SLAVE","","Slave of a load balancing bundle. (see <code>netdevice(7)</code>)",22,null],[18,"IFF_MULTICAST","","Supports multicast. (see <code>netdevice(7)</code>)",22,null],[18,"IFF_PORTSEL","","Is able to select media type via ifmap. (see <code>netdevice(7)</code>)",22,null],[18,"IFF_AUTOMEDIA","","Auto media selection active. (see <code>netdevice(7)</code>)",22,null],[18,"IFF_DYNAMIC","","The addresses are lost when the interface goes down. (see …",22,null],[18,"IFF_LOWER_UP","","Driver signals L1 up. Volatile.",22,null],[18,"IFF_DORMANT","","Driver signals dormant. Volatile.",22,null],[18,"IFF_ECHO","","Echo sent packets. Volatile.",22,null],[18,"IFF_NO_PI","","Do not provide packet information",22,null],[18,"IFF_TUN","","TUN device (no Ethernet headers) ",22,null],[18,"IFF_TAP","","TAP device",22,null],[11,"empty","","Returns an empty set of flags",22,[[],["interfaceflags",3]]],[11,"all","","Returns the set containing all flags.",22,[[],["interfaceflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",22,[[],["c_int",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",22,[[["c_int",6]],[["option",4],["interfaceflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",22,[[["c_int",6]],["interfaceflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",22,[[["c_int",6]],["interfaceflags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",22,[[]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",22,[[]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",22,[[["interfaceflags",3]]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",22,[[["interfaceflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",22,[[["interfaceflags",3]]]],[11,"remove","","Removes the specified flags in-place.",22,[[["interfaceflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",22,[[["interfaceflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",22,[[["interfaceflags",3]]]],[0,"poll","nix","Wait for events to trigger on specific file descriptors",null,null],[3,"PollFd","nix::poll","This is a wrapper around <code>libc::pollfd</code>.",null,null],[11,"new","","Creates a new <code>PollFd</code> specifying the events of interest …",23,[[["rawfd",6],["pollflags",3]],["pollfd",3]]],[11,"revents","","Returns the events that occured in the last call to <code>poll</code> …",23,[[],[["pollflags",3],["option",4]]]],[3,"PollFlags","","These flags define the different events that can be …",null,null],[18,"POLLIN","","There is data to read.",24,null],[18,"POLLPRI","","There is some exceptional condition on the file …",24,null],[18,"POLLOUT","","Writing is now possible, though a write larger that the …",24,null],[18,"POLLRDNORM","","Equivalent to <code>POLLIN</code>",24,null],[18,"POLLWRNORM","","Equivalent to <code>POLLOUT</code>",24,null],[18,"POLLRDBAND","","Priority band data can be read (generally unused on …",24,null],[18,"POLLWRBAND","","Priority data may be written.",24,null],[18,"POLLERR","","Error condition (only returned in <code>PollFd::revents</code>; …",24,null],[18,"POLLHUP","","Hang up (only returned in <code>PollFd::revents</code>; ignored in …",24,null],[18,"POLLNVAL","","Invalid request: <code>fd</code> not open (only returned in …",24,null],[11,"empty","","Returns an empty set of flags",24,[[],["pollflags",3]]],[11,"all","","Returns the set containing all flags.",24,[[],["pollflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",24,[[],["c_short",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",24,[[["c_short",6]],[["pollflags",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",24,[[["c_short",6]],["pollflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",24,[[["c_short",6]],["pollflags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",24,[[]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",24,[[]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",24,[[["pollflags",3]]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",24,[[["pollflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",24,[[["pollflags",3]]]],[11,"remove","","Removes the specified flags in-place.",24,[[["pollflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",24,[[["pollflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",24,[[["pollflags",3]]]],[5,"poll","","<code>poll</code> waits for one of a set of file descriptors to become …",null,[[["c_int",6]],[["result",6],["c_int",6]]]],[5,"ppoll","","<code>ppoll()</code> allows an application to safely wait until either …",null,[[["option",4],["timespec",3],["sigset",3]],[["result",6],["c_int",6]]]],[0,"pty","nix","Create master and slave virtual pseudo-terminals (PTYs)",null,null],[6,"SessionId","nix::pty","",null,null],[3,"Winsize","","",null,null],[12,"ws_row","","",25,null],[12,"ws_col","","",25,null],[12,"ws_xpixel","","",25,null],[12,"ws_ypixel","","",25,null],[3,"OpenptyResult","","Representation of a master/slave pty pair",null,null],[12,"master","","The master port in a virtual pty pair",26,null],[12,"slave","","The slave port in a virtual pty pair",26,null],[3,"ForkptyResult","","Representation of a master with a forked pty",null,null],[12,"master","","The master port in a virtual pty pair",27,null],[12,"fork_result","","Metadata about forked process",27,null],[3,"PtyMaster","","Representation of the Master device in a master/slave pty …",null,null],[5,"grantpt","","Grant access to a slave pseudoterminal (see <code>grantpt(3)</code>)",null,[[["ptymaster",3]],["result",6]]],[5,"posix_openpt","","Open a pseudoterminal device (see <code>posix_openpt(3)</code>)",null,[[["oflag",3]],[["result",6],["ptymaster",3]]]],[5,"ptsname","","Get the name of the slave pseudoterminal (see <code>ptsname(3)</code>)",null,[[["ptymaster",3]],[["result",6],["string",3]]]],[5,"ptsname_r","","Get the name of the slave pseudoterminal (see <code>ptsname(3)</code>)",null,[[["ptymaster",3]],[["result",6],["string",3]]]],[5,"unlockpt","","Unlock a pseudoterminal master/slave pseudoterminal pair …",null,[[["ptymaster",3]],["result",6]]],[5,"openpty","","Create a new pseudoterminal, returning the slave and …",null,[[["option",4],["into",8],["option",4],["into",8]],[["result",6],["openptyresult",3]]]],[5,"forkpty","","Create a new pseudoterminal, returning the master file …",null,[[["option",4],["into",8],["option",4],["into",8]],[["result",6],["forkptyresult",3]]]],[0,"sched","nix","",null,null],[3,"CloneFlags","nix::sched","",null,null],[6,"CloneCb","","",null,null],[3,"CpuSet","","CpuSet represent a bit-mask of CPUs. CpuSets are used by …",null,null],[5,"sched_setaffinity","","<code>sched_setaffinity</code> set a thread\'s CPU affinity mask (…",null,[[["pid",3],["cpuset",3]],["result",6]]],[5,"sched_getaffinity","","<code>sched_getaffinity</code> get a thread\'s CPU affinity mask (…",null,[[["pid",3]],[["cpuset",3],["result",6]]]],[5,"clone","","",null,[[["option",4],["clonecb",6],["cloneflags",3],["c_int",6]],[["pid",3],["result",6]]]],[5,"unshare","","",null,[[["cloneflags",3]],["result",6]]],[5,"setns","","",null,[[["rawfd",6],["cloneflags",3]],["result",6]]],[5,"sched_yield","","Explicitly yield the processor to other threads.",null,[[],["result",6]]],[0,"sys","nix","",null,null],[0,"aio","nix::sys","POSIX Asynchronous I/O",null,null],[4,"AioFsyncMode","nix::sys::aio","Mode for <code>AioCb::fsync</code>.  Controls whether only data or …",null,null],[13,"O_SYNC","","do it like <code>fsync</code>",28,null],[13,"O_DSYNC","","on supported operating systems only, do it like <code>fdatasync</code>",28,null],[4,"LioOpcode","","When used with <code>lio_listio</code>, determines whether a given …",null,null],[13,"LIO_NOP","","",29,null],[13,"LIO_WRITE","","",29,null],[13,"LIO_READ","","",29,null],[4,"LioMode","","Mode for <code>lio_listio</code>",null,null],[13,"LIO_WAIT","","Requests that <code>lio_listio</code> block until all requested …",30,null],[13,"LIO_NOWAIT","","Requests that <code>lio_listio</code> return immediately",30,null],[4,"AioCancelStat","","Return values for <code>AioCb::cancel</code> and <code>aio_cancel_all</code>",null,null],[13,"AioCanceled","","All outstanding requests were canceled",31,null],[13,"AioNotCanceled","","Some requests were not canceled.  Their status should be …",31,null],[13,"AioAllDone","","All of the requests have already finished",31,null],[4,"Buffer","","Owns (uniquely or shared) a memory buffer to keep it from …",null,null],[13,"None","","No buffer to own.",32,null],[13,"Phantom","","Keeps a reference to a slice",32,null],[13,"BoxedSlice","","Generic thing that keeps a buffer from dropping",32,null],[13,"BoxedMutSlice","","Generic thing that keeps a mutable buffer from dropping",32,null],[3,"AioCb","","AIO Control Block.",null,null],[11,"buffer","","Remove the inner <code>Buffer</code> and return it",33,[[],["buffer",4]]],[11,"boxed_slice","","Remove the inner boxed slice, if any, and return it.",33,[[],[["option",4],["box",3]]]],[11,"boxed_mut_slice","","Remove the inner boxed mutable slice, if any, and return …",33,[[],[["option",4],["box",3]]]],[11,"fd","","Returns the underlying file descriptor associated with …",33,[[],["rawfd",6]]],[11,"from_fd","","Constructs a new <code>AioCb</code> with no associated buffer.",33,[[["rawfd",6],["c_int",6],["sigevnotify",4]],["aiocb",3]]],[11,"from_mut_slice","","Constructs a new <code>AioCb</code> from a mutable slice.",33,[[["sigevnotify",4],["lioopcode",4],["rawfd",6],["c_int",6],["off_t",6]],["aiocb",3]]],[11,"from_boxed_slice","","The safest and most flexible way to create an <code>AioCb</code>.",33,[[["lioopcode",4],["sigevnotify",4],["box",3],["rawfd",6],["c_int",6],["borrow",8],["off_t",6]],["aiocb",3]]],[11,"from_boxed_mut_slice","","The safest and most flexible way to create an <code>AioCb</code> for …",33,[[["box",3],["sigevnotify",4],["lioopcode",4],["rawfd",6],["c_int",6],["borrowmut",8],["off_t",6]],["aiocb",3]]],[11,"from_mut_ptr","","Constructs a new <code>AioCb</code> from a mutable raw pointer",33,[[["sigevnotify",4],["lioopcode",4],["rawfd",6],["c_int",6],["off_t",6]],["aiocb",3]]],[11,"from_ptr","","Constructs a new <code>AioCb</code> from a raw pointer.",33,[[["sigevnotify",4],["lioopcode",4],["rawfd",6],["c_int",6],["off_t",6]],["aiocb",3]]],[11,"from_slice","","Like <code>from_mut_slice</code>, but works on constant slices rather …",33,[[["sigevnotify",4],["lioopcode",4],["rawfd",6],["c_int",6],["off_t",6]],["aiocb",3]]],[11,"set_sigev_notify","","Update the notification settings for an existing <code>aiocb</code>",33,[[["sigevnotify",4]]]],[11,"cancel","","Cancels an outstanding AIO request.",33,[[],[["aiocancelstat",4],["result",6]]]],[11,"error","","Retrieve error status of an asynchronous operation.",33,[[],["result",6]]],[11,"fsync","","An asynchronous version of <code>fsync(2)</code>.",33,[[["aiofsyncmode",4]],["result",6]]],[11,"lio_opcode","","Returns the <code>aiocb</code>\'s <code>LioOpcode</code> field",33,[[],[["option",4],["lioopcode",4]]]],[11,"nbytes","","Returns the requested length of the aio operation in bytes",33,[[]]],[11,"offset","","Returns the file offset stored in the <code>AioCb</code>",33,[[],["off_t",6]]],[11,"priority","","Returns the priority of the <code>AioCb</code>",33,[[],["c_int",6]]],[11,"read","","Asynchronously reads from a file descriptor into a buffer",33,[[],["result",6]]],[11,"sigevent","","Returns the <code>SigEvent</code> stored in the <code>AioCb</code>",33,[[],["sigevent",3]]],[11,"aio_return","","Retrieve return status of an asynchronous operation.",33,[[],["result",6]]],[11,"write","","Asynchronously writes from a buffer to a file descriptor",33,[[],["result",6]]],[5,"aio_cancel_all","","Cancels outstanding AIO requests for a given file …",null,[[["rawfd",6]],[["aiocancelstat",4],["result",6]]]],[5,"aio_suspend","","Suspends the calling process until at least one of the …",null,[[["option",4],["timespec",3]],["result",6]]],[3,"LioCb","","LIO Control Block.",null,null],[12,"aiocbs","","A collection of <code>AioCb</code>s.  All of these will be issued …",34,null],[11,"with_capacity","","Initialize an empty <code>LioCb</code>",34,[[],["liocb",3]]],[11,"listio","","Submits multiple asynchronous I/O requests with a single …",34,[[["liomode",4],["sigevnotify",4]],["result",6]]],[11,"listio_resubmit","","Resubmits any incomplete operations with <code>lio_listio</code>.",34,[[["liomode",4],["sigevnotify",4]],["result",6]]],[11,"aio_return","","Collect final status for an individual <code>AioCb</code> submitted as …",34,[[],["result",6]]],[11,"error","","Retrieve error status of an individual <code>AioCb</code> submitted as …",34,[[],["result",6]]],[0,"epoll","nix::sys","",null,null],[3,"EpollFlags","nix::sys::epoll","",null,null],[18,"EPOLLIN","","",35,null],[18,"EPOLLPRI","","",35,null],[18,"EPOLLOUT","","",35,null],[18,"EPOLLRDNORM","","",35,null],[18,"EPOLLRDBAND","","",35,null],[18,"EPOLLWRNORM","","",35,null],[18,"EPOLLWRBAND","","",35,null],[18,"EPOLLMSG","","",35,null],[18,"EPOLLERR","","",35,null],[18,"EPOLLHUP","","",35,null],[18,"EPOLLRDHUP","","",35,null],[18,"EPOLLEXCLUSIVE","","",35,null],[18,"EPOLLWAKEUP","","",35,null],[18,"EPOLLONESHOT","","",35,null],[18,"EPOLLET","","",35,null],[11,"empty","","Returns an empty set of flags",35,[[],["epollflags",3]]],[11,"all","","Returns the set containing all flags.",35,[[],["epollflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",35,[[],["c_int",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",35,[[["c_int",6]],[["option",4],["epollflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",35,[[["c_int",6]],["epollflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",35,[[["c_int",6]],["epollflags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",35,[[]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",35,[[]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",35,[[["epollflags",3]]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",35,[[["epollflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",35,[[["epollflags",3]]]],[11,"remove","","Removes the specified flags in-place.",35,[[["epollflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",35,[[["epollflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",35,[[["epollflags",3]]]],[4,"EpollOp","","",null,null],[13,"EpollCtlAdd","","",36,null],[13,"EpollCtlDel","","",36,null],[13,"EpollCtlMod","","",36,null],[3,"EpollCreateFlags","","",null,null],[18,"EPOLL_CLOEXEC","","",37,null],[11,"empty","","Returns an empty set of flags",37,[[],["epollcreateflags",3]]],[11,"all","","Returns the set containing all flags.",37,[[],["epollcreateflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",37,[[],["c_int",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",37,[[["c_int",6]],[["option",4],["epollcreateflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",37,[[["c_int",6]],["epollcreateflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",37,[[["c_int",6]],["epollcreateflags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",37,[[]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",37,[[]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",37,[[["epollcreateflags",3]]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",37,[[["epollcreateflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",37,[[["epollcreateflags",3]]]],[11,"remove","","Removes the specified flags in-place.",37,[[["epollcreateflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",37,[[["epollcreateflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",37,[[["epollcreateflags",3]]]],[3,"EpollEvent","","",null,null],[11,"new","","",38,[[["epollflags",3]]]],[11,"empty","","",38,[[]]],[11,"events","","",38,[[],["epollflags",3]]],[11,"data","","",38,[[]]],[5,"epoll_create","","",null,[[],[["rawfd",6],["result",6]]]],[5,"epoll_create1","","",null,[[["epollcreateflags",3]],[["rawfd",6],["result",6]]]],[5,"epoll_ctl","","",null,[[["rawfd",6],["epollop",4]],["result",6]]],[5,"epoll_wait","","",null,[[["rawfd",6]],["result",6]]],[0,"eventfd","nix::sys","",null,null],[3,"EfdFlags","nix::sys::eventfd","",null,null],[18,"EFD_CLOEXEC","","",39,null],[18,"EFD_NONBLOCK","","",39,null],[18,"EFD_SEMAPHORE","","",39,null],[11,"empty","","Returns an empty set of flags",39,[[],["efdflags",3]]],[11,"all","","Returns the set containing all flags.",39,[[],["efdflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",39,[[],["c_int",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",39,[[["c_int",6]],[["option",4],["efdflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",39,[[["c_int",6]],["efdflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",39,[[["c_int",6]],["efdflags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",39,[[]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",39,[[]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",39,[[["efdflags",3]]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",39,[[["efdflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",39,[[["efdflags",3]]]],[11,"remove","","Removes the specified flags in-place.",39,[[["efdflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",39,[[["efdflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",39,[[["efdflags",3]]]],[5,"eventfd","","",null,[[["c_uint",6],["efdflags",3]],[["rawfd",6],["result",6]]]],[0,"ioctl","nix::sys","Provide helpers for making ioctl system calls.",null,null],[0,"memfd","","",null,null],[3,"MemFdCreateFlag","nix::sys::memfd","",null,null],[18,"MFD_CLOEXEC","","",40,null],[18,"MFD_ALLOW_SEALING","","",40,null],[11,"empty","","Returns an empty set of flags",40,[[],["memfdcreateflag",3]]],[11,"all","","Returns the set containing all flags.",40,[[],["memfdcreateflag",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",40,[[],["c_uint",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",40,[[["c_uint",6]],[["option",4],["memfdcreateflag",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",40,[[["c_uint",6]],["memfdcreateflag",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",40,[[["c_uint",6]],["memfdcreateflag",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",40,[[]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",40,[[]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",40,[[["memfdcreateflag",3]]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",40,[[["memfdcreateflag",3]]]],[11,"insert","","Inserts the specified flags in-place.",40,[[["memfdcreateflag",3]]]],[11,"remove","","Removes the specified flags in-place.",40,[[["memfdcreateflag",3]]]],[11,"toggle","","Toggles the specified flags in-place.",40,[[["memfdcreateflag",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",40,[[["memfdcreateflag",3]]]],[5,"memfd_create","","",null,[[["cstr",3],["memfdcreateflag",3]],[["rawfd",6],["result",6]]]],[0,"mman","nix::sys","",null,null],[3,"ProtFlags","nix::sys::mman","Desired memory protection of a memory mapping.",null,null],[18,"PROT_NONE","","Pages cannot be accessed.",41,null],[18,"PROT_READ","","Pages can be read.",41,null],[18,"PROT_WRITE","","Pages can be written.",41,null],[18,"PROT_EXEC","","Pages can be executed",41,null],[18,"PROT_GROWSDOWN","","Apply protection up to the end of a mapping that grows …",41,null],[18,"PROT_GROWSUP","","Apply protection down to the beginning of a mapping that …",41,null],[11,"empty","","Returns an empty set of flags",41,[[],["protflags",3]]],[11,"all","","Returns the set containing all flags.",41,[[],["protflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",41,[[],["c_int",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",41,[[["c_int",6]],[["protflags",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",41,[[["c_int",6]],["protflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",41,[[["c_int",6]],["protflags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",41,[[]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",41,[[]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",41,[[["protflags",3]]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",41,[[["protflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",41,[[["protflags",3]]]],[11,"remove","","Removes the specified flags in-place.",41,[[["protflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",41,[[["protflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",41,[[["protflags",3]]]],[3,"MapFlags","","Additional parameters for <code>mmap()</code>.",null,null],[18,"MAP_FILE","","Compatibility flag. Ignored.",42,null],[18,"MAP_SHARED","","Share this mapping. Mutually exclusive with <code>MAP_PRIVATE</code>.",42,null],[18,"MAP_PRIVATE","","Create a private copy-on-write mapping. Mutually …",42,null],[18,"MAP_FIXED","","Place the mapping at exactly the address specified in <code>addr</code>…",42,null],[18,"MAP_ANON","","Synonym for <code>MAP_ANONYMOUS</code>.",42,null],[18,"MAP_ANONYMOUS","","The mapping is not backed by any file.",42,null],[18,"MAP_32BIT","","Put the mapping into the first 2GB of the process address …",42,null],[18,"MAP_GROWSDOWN","","Used for stacks; indicates to the kernel that the mapping …",42,null],[18,"MAP_DENYWRITE","","Compatibility flag. Ignored.",42,null],[18,"MAP_EXECUTABLE","","Compatibility flag. Ignored.",42,null],[18,"MAP_LOCKED","","Mark the mmaped region to be locked in the same way as …",42,null],[18,"MAP_NORESERVE","","Do not reserve swap space for this mapping.",42,null],[18,"MAP_POPULATE","","Populate page tables for a mapping.",42,null],[18,"MAP_NONBLOCK","","Only meaningful when used with <code>MAP_POPULATE</code>. Don\'t …",42,null],[18,"MAP_HUGETLB","","Allocate the mapping using \\\"huge pages.\\\"",42,null],[18,"MAP_HUGE_64KB","","Make use of 64KB huge page (must be supported by the …",42,null],[18,"MAP_HUGE_512KB","","Make use of 512KB huge page (must be supported by the …",42,null],[18,"MAP_HUGE_1MB","","Make use of 1MB huge page (must be supported by the …",42,null],[18,"MAP_HUGE_2MB","","Make use of 2MB huge page (must be supported by the …",42,null],[18,"MAP_HUGE_8MB","","Make use of 8MB huge page (must be supported by the …",42,null],[18,"MAP_HUGE_16MB","","Make use of 16MB huge page (must be supported by the …",42,null],[18,"MAP_HUGE_32MB","","Make use of 32MB huge page (must be supported by the …",42,null],[18,"MAP_HUGE_256MB","","Make use of 256MB huge page (must be supported by the …",42,null],[18,"MAP_HUGE_512MB","","Make use of 512MB huge page (must be supported by the …",42,null],[18,"MAP_HUGE_1GB","","Make use of 1GB huge page (must be supported by the …",42,null],[18,"MAP_HUGE_2GB","","Make use of 2GB huge page (must be supported by the …",42,null],[18,"MAP_HUGE_16GB","","Make use of 16GB huge page (must be supported by the …",42,null],[18,"MAP_STACK","","Region grows down, like a stack.",42,null],[11,"empty","","Returns an empty set of flags",42,[[],["mapflags",3]]],[11,"all","","Returns the set containing all flags.",42,[[],["mapflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",42,[[],["c_int",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",42,[[["c_int",6]],[["mapflags",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",42,[[["c_int",6]],["mapflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",42,[[["c_int",6]],["mapflags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",42,[[]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",42,[[]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",42,[[["mapflags",3]]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",42,[[["mapflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",42,[[["mapflags",3]]]],[11,"remove","","Removes the specified flags in-place.",42,[[["mapflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",42,[[["mapflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",42,[[["mapflags",3]]]],[4,"MmapAdvise","","Usage information for a range of memory to allow for …",null,null],[13,"MADV_NORMAL","","No further special treatment. This is the default.",43,null],[13,"MADV_RANDOM","","Expect random page references.",43,null],[13,"MADV_SEQUENTIAL","","Expect sequential page references.",43,null],[13,"MADV_WILLNEED","","Expect access in the near future.",43,null],[13,"MADV_DONTNEED","","Do not expect access in the near future.",43,null],[13,"MADV_REMOVE","","Free up a given range of pages and its associated backing …",43,null],[13,"MADV_DONTFORK","","Do not make pages in this range available to the child …",43,null],[13,"MADV_DOFORK","","Undo the effect of <code>MADV_DONTFORK</code>.",43,null],[13,"MADV_HWPOISON","","Poison the given pages.",43,null],[13,"MADV_MERGEABLE","","Enable Kernel Samepage Merging (KSM) for the given pages.",43,null],[13,"MADV_UNMERGEABLE","","Undo the effect of <code>MADV_MERGEABLE</code>",43,null],[13,"MADV_SOFT_OFFLINE","","Preserve the memory of each page but offline the original …",43,null],[13,"MADV_HUGEPAGE","","Enable Transparent Huge Pages (THP) for pages in the …",43,null],[13,"MADV_NOHUGEPAGE","","Undo the effect of <code>MADV_HUGEPAGE</code>.",43,null],[13,"MADV_DONTDUMP","","Exclude the given range from a core dump.",43,null],[13,"MADV_DODUMP","","Undo the effect of an earlier <code>MADV_DONTDUMP</code>.",43,null],[13,"MADV_FREE","","Specify that the application no longer needs the pages in …",43,null],[3,"MsFlags","","Configuration flags for <code>msync</code>.",null,null],[18,"MS_ASYNC","","Schedule an update but return immediately.",44,null],[18,"MS_INVALIDATE","","Invalidate all cached data.",44,null],[18,"MS_SYNC","","Perform an update and wait for it to complete.",44,null],[11,"empty","","Returns an empty set of flags",44,[[],["msflags",3]]],[11,"all","","Returns the set containing all flags.",44,[[],["msflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",44,[[],["c_int",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",44,[[["c_int",6]],[["msflags",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",44,[[["c_int",6]],["msflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",44,[[["c_int",6]],["msflags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",44,[[]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",44,[[]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",44,[[["msflags",3]]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",44,[[["msflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",44,[[["msflags",3]]]],[11,"remove","","Removes the specified flags in-place.",44,[[["msflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",44,[[["msflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",44,[[["msflags",3]]]],[3,"MlockAllFlags","","Flags for <code>mlockall</code>.",null,null],[18,"MCL_CURRENT","","Lock pages that are currently mapped into the address …",45,null],[18,"MCL_FUTURE","","Lock pages which will become mapped into the address …",45,null],[11,"empty","","Returns an empty set of flags",45,[[],["mlockallflags",3]]],[11,"all","","Returns the set containing all flags.",45,[[],["mlockallflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",45,[[],["c_int",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",45,[[["c_int",6]],[["mlockallflags",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",45,[[["c_int",6]],["mlockallflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",45,[[["c_int",6]],["mlockallflags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",45,[[]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",45,[[]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",45,[[["mlockallflags",3]]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",45,[[["mlockallflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",45,[[["mlockallflags",3]]]],[11,"remove","","Removes the specified flags in-place.",45,[[["mlockallflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",45,[[["mlockallflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",45,[[["mlockallflags",3]]]],[5,"mlock","","Locks all memory pages that contain part of the address …",null,[[["size_t",6]],["result",6]]],[5,"munlock","","Unlocks all memory pages that contain part of the address …",null,[[["size_t",6]],["result",6]]],[5,"mlockall","","Locks all memory pages mapped into this process\' address …",null,[[["mlockallflags",3]],["result",6]]],[5,"munlockall","","Unlocks all memory pages mapped into this process\' …",null,[[],["result",6]]],[5,"mmap","","allocate memory, or map files or devices into memory",null,[[["size_t",6],["protflags",3],["mapflags",3],["rawfd",6],["off_t",6]],["result",6]]],[5,"munmap","","remove a mapping",null,[[["size_t",6]],["result",6]]],[5,"madvise","","give advice about use of memory",null,[[["size_t",6],["mmapadvise",4]],["result",6]]],[5,"mprotect","","Set protection of memory mapping.",null,[[["size_t",6],["protflags",3]],["result",6]]],[5,"msync","","synchronize a mapped region",null,[[["size_t",6],["msflags",3]],["result",6]]],[5,"shm_open","","",null,[[["oflag",3],["mode",3]],[["rawfd",6],["result",6]]]],[5,"shm_unlink","","",null,[[],["result",6]]],[0,"pthread","nix::sys","",null,null],[6,"Pthread","nix::sys::pthread","",null,null],[5,"pthread_self","","Obtain ID of the calling thread (see <code>pthread_self(3)</code>",null,[[],["pthread",6]]],[0,"ptrace","nix::sys","",null,null],[6,"AddressType","nix::sys::ptrace","",null,null],[4,"Request","","Ptrace Request enum defining the action to be taken.",null,null],[13,"PTRACE_TRACEME","","",46,null],[13,"PTRACE_PEEKTEXT","","",46,null],[13,"PTRACE_PEEKDATA","","",46,null],[13,"PTRACE_PEEKUSER","","",46,null],[13,"PTRACE_POKETEXT","","",46,null],[13,"PTRACE_POKEDATA","","",46,null],[13,"PTRACE_POKEUSER","","",46,null],[13,"PTRACE_CONT","","",46,null],[13,"PTRACE_KILL","","",46,null],[13,"PTRACE_SINGLESTEP","","",46,null],[13,"PTRACE_GETREGS","","",46,null],[13,"PTRACE_SETREGS","","",46,null],[13,"PTRACE_GETFPREGS","","",46,null],[13,"PTRACE_SETFPREGS","","",46,null],[13,"PTRACE_ATTACH","","",46,null],[13,"PTRACE_DETACH","","",46,null],[13,"PTRACE_GETFPXREGS","","",46,null],[13,"PTRACE_SETFPXREGS","","",46,null],[13,"PTRACE_SYSCALL","","",46,null],[13,"PTRACE_SETOPTIONS","","",46,null],[13,"PTRACE_GETEVENTMSG","","",46,null],[13,"PTRACE_GETSIGINFO","","",46,null],[13,"PTRACE_SETSIGINFO","","",46,null],[13,"PTRACE_GETREGSET","","",46,null],[13,"PTRACE_SETREGSET","","",46,null],[13,"PTRACE_SEIZE","","",46,null],[13,"PTRACE_INTERRUPT","","",46,null],[13,"PTRACE_LISTEN","","",46,null],[13,"PTRACE_PEEKSIGINFO","","",46,null],[4,"Event","","Using the ptrace options the tracer can configure the …",null,null],[13,"PTRACE_EVENT_FORK","","Event that stops before a return from fork or clone.",47,null],[13,"PTRACE_EVENT_VFORK","","Event that stops before a return from vfork or clone.",47,null],[13,"PTRACE_EVENT_CLONE","","Event that stops before a return from clone.",47,null],[13,"PTRACE_EVENT_EXEC","","Event that stops before a return from execve.",47,null],[13,"PTRACE_EVENT_VFORK_DONE","","Event for a return from vfork.",47,null],[13,"PTRACE_EVENT_EXIT","","Event for a stop before an exit. Unlike the waitpid Exit …",47,null],[13,"PTRACE_EVENT_SECCOMP","","STop triggered by a seccomp rule on a tracee.",47,null],[3,"Options","","Ptrace options used in conjunction with the …",null,null],[5,"getregs","","Get user registers, as with <code>ptrace(PTRACE_GETREGS, ...)</code>",null,[[["pid",3]],[["result",6],["user_regs_struct",3]]]],[5,"setregs","","Set user registers, as with <code>ptrace(PTRACE_SETREGS, ...)</code>",null,[[["pid",3],["user_regs_struct",3]],["result",6]]],[5,"setoptions","","Set options, as with <code>ptrace(PTRACE_SETOPTIONS,...)</code>.",null,[[["pid",3],["options",3]],["result",6]]],[5,"getevent","","Gets a ptrace event as described by …",null,[[["pid",3]],[["c_long",6],["result",6]]]],[5,"getsiginfo","","Get siginfo as with <code>ptrace(PTRACE_GETSIGINFO,...)</code>",null,[[["pid",3]],[["siginfo_t",3],["result",6]]]],[5,"setsiginfo","","Set siginfo as with <code>ptrace(PTRACE_SETSIGINFO,...)</code>",null,[[["pid",3],["siginfo_t",3]],["result",6]]],[5,"traceme","","Sets the process as traceable, as with …",null,[[],["result",6]]],[5,"syscall","","Ask for next syscall, as with <code>ptrace(PTRACE_SYSCALL, ...)</code>",null,[[["pid",3],["option",4],["into",8]],["result",6]]],[5,"attach","","Attach to a running process, as with …",null,[[["pid",3]],["result",6]]],[5,"seize","","Attach to a running process, as with …",null,[[["pid",3],["options",3]],["result",6]]],[5,"detach","","Detaches the current running process, as with …",null,[[["pid",3],["option",4],["into",8]],["result",6]]],[5,"cont","","Restart the stopped tracee process, as with …",null,[[["pid",3],["option",4],["into",8]],["result",6]]],[5,"kill","","Issues a kill request as with <code>ptrace(PTRACE_KILL, ...)</code>",null,[[["pid",3]],["result",6]]],[5,"step","","Move the stopped tracee process forward by a single step …",null,[[["pid",3],["option",4],["into",8]],["result",6]]],[5,"read","","Reads a word from a processes memory at the given address",null,[[["pid",3],["addresstype",6]],[["c_long",6],["result",6]]]],[5,"write","","Writes a word into the processes memory at the given …",null,[[["pid",3],["addresstype",6]],["result",6]]],[0,"quota","nix::sys","Set and configure disk quotas for users, groups, or …",null,null],[4,"QuotaType","nix::sys::quota","The scope of the quota.",null,null],[13,"USRQUOTA","","Specify a user quota",48,null],[13,"GRPQUOTA","","Specify a group quota",48,null],[4,"QuotaFmt","","The type of quota format to use.",null,null],[13,"QFMT_VFS_OLD","","Use the original quota format.",49,null],[13,"QFMT_VFS_V0","","Use the standard VFS v0 quota format.",49,null],[13,"QFMT_VFS_V1","","Use the VFS v1 quota format.",49,null],[3,"QuotaValidFlags","","Indicates the quota fields that are valid to read from.",null,null],[18,"QIF_BLIMITS","","The block hard & soft limit fields.",50,null],[18,"QIF_SPACE","","The current space field.",50,null],[18,"QIF_ILIMITS","","The inode hard & soft limit fields.",50,null],[18,"QIF_INODES","","The current inodes field.",50,null],[18,"QIF_BTIME","","The disk use time limit field.",50,null],[18,"QIF_ITIME","","The file quote time limit field.",50,null],[18,"QIF_LIMITS","","All block & inode limits.",50,null],[18,"QIF_USAGE","","The space & inodes usage fields.",50,null],[18,"QIF_TIMES","","The time limit fields.",50,null],[18,"QIF_ALL","","All fields.",50,null],[11,"empty","","Returns an empty set of flags",50,[[],["quotavalidflags",3]]],[11,"all","","Returns the set containing all flags.",50,[[],["quotavalidflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",50,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",50,[[],[["option",4],["quotavalidflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",50,[[],["quotavalidflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",50,[[],["quotavalidflags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",50,[[]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",50,[[]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",50,[[["quotavalidflags",3]]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",50,[[["quotavalidflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",50,[[["quotavalidflags",3]]]],[11,"remove","","Removes the specified flags in-place.",50,[[["quotavalidflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",50,[[["quotavalidflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",50,[[["quotavalidflags",3]]]],[3,"Dqblk","","Wrapper type for <code>if_dqblk</code>",null,null],[11,"blocks_hard_limit","","The absolute limit on disk quota blocks allocated.",51,[[],["option",4]]],[11,"set_blocks_hard_limit","","Set the absolute limit on disk quota blocks allocated.",51,[[]]],[11,"blocks_soft_limit","","Preferred limit on disk quota blocks",51,[[],["option",4]]],[11,"set_blocks_soft_limit","","Set the preferred limit on disk quota blocks allocated.",51,[[]]],[11,"occupied_space","","Current occupied space (bytes).",51,[[],["option",4]]],[11,"inodes_hard_limit","","Maximum number of allocated inodes.",51,[[],["option",4]]],[11,"set_inodes_hard_limit","","Set the maximum number of allocated inodes.",51,[[]]],[11,"inodes_soft_limit","","Preferred inode limit",51,[[],["option",4]]],[11,"set_inodes_soft_limit","","Set the preferred limit of allocated inodes.",51,[[]]],[11,"allocated_inodes","","Current number of allocated inodes.",51,[[],["option",4]]],[11,"block_time_limit","","Time limit for excessive disk use.",51,[[],["option",4]]],[11,"set_block_time_limit","","Set the time limit for excessive disk use.",51,[[]]],[11,"inode_time_limit","","Time limit for excessive files.",51,[[],["option",4]]],[11,"set_inode_time_limit","","Set the time limit for excessive files.",51,[[]]],[5,"quotactl_on","","Turn on disk quotas for a block device.",null,[[["quotafmt",4],["quotatype",4]],["result",6]]],[5,"quotactl_off","","Disable disk quotas for a block device.",null,[[["quotatype",4]],["result",6]]],[5,"quotactl_sync","","Update the on-disk copy of quota usages for a filesystem.",null,[[["quotatype",4],["option",4]],["result",6]]],[5,"quotactl_get","","Get disk quota limits and current usage for the given …",null,[[["c_int",6],["quotatype",4]],[["dqblk",3],["result",6]]]],[5,"quotactl_set","","Configure quota values for the specified fields for a …",null,[[["c_int",6],["quotatype",4],["quotavalidflags",3],["dqblk",3]],["result",6]]],[0,"reboot","nix::sys","Reboot/shutdown or enable/disable Ctrl-Alt-Delete.",null,null],[4,"RebootMode","nix::sys::reboot","How exactly should the system be rebooted.",null,null],[13,"RB_HALT_SYSTEM","","",52,null],[13,"RB_KEXEC","","",52,null],[13,"RB_POWER_OFF","","",52,null],[13,"RB_AUTOBOOT","","",52,null],[13,"RB_SW_SUSPEND","","",52,null],[5,"reboot","","",null,[[["rebootmode",4]],[["infallible",4],["result",6]]]],[5,"set_cad_enabled","","Enable or disable the reboot keystroke (Ctrl-Alt-Delete).",null,[[],["result",6]]],[0,"select","nix::sys","",null,null],[17,"FD_SETSIZE","nix::sys::select","",null,null],[3,"FdSet","","",null,null],[11,"new","","",53,[[],["fdset",3]]],[11,"insert","","",53,[[["rawfd",6]]]],[11,"remove","","",53,[[["rawfd",6]]]],[11,"contains","","",53,[[["rawfd",6]]]],[11,"clear","","",53,[[]]],[11,"highest","","Finds the highest file descriptor in the set.",53,[[],[["rawfd",6],["option",4]]]],[11,"fds","","Returns an iterator over the file descriptors in the set.",53,[[["rawfd",6],["option",4]],["fds",3]]],[3,"Fds","","Iterator over <code>FdSet</code>.",null,null],[5,"select","","Monitors file descriptors for readiness",null,[[],[["c_int",6],["result",6]]]],[5,"pselect","","Monitors file descriptors for readiness with an altered …",null,[[],[["c_int",6],["result",6]]]],[0,"sendfile","nix::sys","",null,null],[5,"sendfile","nix::sys::sendfile","Copy up to <code>count</code> bytes to <code>out_fd</code> from <code>in_fd</code> starting at …",null,[[["rawfd",6],["option",4],["off_t",6]],["result",6]]],[0,"signal","nix::sys","",null,null],[3,"SigEvent","nix::sys::signal","Used to request asynchronous notification of the …",null,null],[4,"Signal","","",null,null],[13,"SIGHUP","","",54,null],[13,"SIGINT","","",54,null],[13,"SIGQUIT","","",54,null],[13,"SIGILL","","",54,null],[13,"SIGTRAP","","",54,null],[13,"SIGABRT","","",54,null],[13,"SIGBUS","","",54,null],[13,"SIGFPE","","",54,null],[13,"SIGKILL","","",54,null],[13,"SIGUSR1","","",54,null],[13,"SIGSEGV","","",54,null],[13,"SIGUSR2","","",54,null],[13,"SIGPIPE","","",54,null],[13,"SIGALRM","","",54,null],[13,"SIGTERM","","",54,null],[13,"SIGSTKFLT","","",54,null],[13,"SIGCHLD","","",54,null],[13,"SIGCONT","","",54,null],[13,"SIGSTOP","","",54,null],[13,"SIGTSTP","","",54,null],[13,"SIGTTIN","","",54,null],[13,"SIGTTOU","","",54,null],[13,"SIGURG","","",54,null],[13,"SIGXCPU","","",54,null],[13,"SIGXFSZ","","",54,null],[13,"SIGVTALRM","","",54,null],[13,"SIGPROF","","",54,null],[13,"SIGWINCH","","",54,null],[13,"SIGIO","","",54,null],[13,"SIGPWR","","",54,null],[13,"SIGSYS","","",54,null],[11,"as_str","","Returns name of signal.",54,[[]]],[17,"NSIG","","",null,null],[3,"SignalIterator","","",null,null],[11,"iterator","","",54,[[],["signaliterator",3]]],[17,"SIGIOT","","",null,null],[17,"SIGPOLL","","",null,null],[17,"SIGUNUSED","","",null,null],[3,"SaFlags","","",null,null],[18,"SA_NOCLDSTOP","","",55,null],[18,"SA_NOCLDWAIT","","",55,null],[18,"SA_NODEFER","","",55,null],[18,"SA_ONSTACK","","",55,null],[18,"SA_RESETHAND","","",55,null],[18,"SA_RESTART","","",55,null],[18,"SA_SIGINFO","","",55,null],[11,"empty","","Returns an empty set of flags",55,[[],["saflags",3]]],[11,"all","","Returns the set containing all flags.",55,[[],["saflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",55,[[],["c_int",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",55,[[["c_int",6]],[["saflags",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",55,[[["c_int",6]],["saflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",55,[[["c_int",6]],["saflags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",55,[[]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",55,[[]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",55,[[["saflags",3]]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",55,[[["saflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",55,[[["saflags",3]]]],[11,"remove","","Removes the specified flags in-place.",55,[[["saflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",55,[[["saflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",55,[[["saflags",3]]]],[4,"SigmaskHow","","",null,null],[13,"SIG_BLOCK","","",56,null],[13,"SIG_UNBLOCK","","",56,null],[13,"SIG_SETMASK","","",56,null],[3,"SigSet","","",null,null],[11,"all","","",57,[[],["sigset",3]]],[11,"empty","","",57,[[],["sigset",3]]],[11,"add","","",57,[[["signal",4]]]],[11,"clear","","",57,[[]]],[11,"remove","","",57,[[["signal",4]]]],[11,"contains","","",57,[[["signal",4]]]],[11,"extend","","",57,[[["sigset",3]]]],[11,"thread_get_mask","","Gets the currently blocked (masked) set of signals for …",57,[[],[["result",6],["sigset",3]]]],[11,"thread_set_mask","","Sets the set of signals as the signal mask for the …",57,[[],["result",6]]],[11,"thread_block","","Adds the set of signals to the signal mask for the …",57,[[],["result",6]]],[11,"thread_unblock","","Removes the set of signals from the signal mask for the …",57,[[],["result",6]]],[11,"thread_swap_mask","","Sets the set of signals as the signal mask, and returns …",57,[[["sigmaskhow",4]],[["result",6],["sigset",3]]]],[11,"wait","","Suspends execution of the calling thread until one of the …",57,[[],[["result",6],["signal",4]]]],[4,"SigHandler","","A signal handler.",null,null],[13,"SigDfl","","Default signal handling.",58,null],[13,"SigIgn","","Request that the signal be ignored.",58,null],[13,"Handler","","Use the given signal-catching function, which takes in …",58,null],[13,"SigAction","","Use the given signal-catching function, which takes in …",58,null],[3,"SigAction","","Action to take on receipt of a signal. Corresponds to …",null,null],[11,"new","","Creates a new action.",59,[[["sighandler",4],["sigset",3],["saflags",3]],["sigaction",3]]],[11,"flags","","Returns the flags set on the action.",59,[[],["saflags",3]]],[11,"mask","","Returns the set of signals that are blocked during …",59,[[],["sigset",3]]],[11,"handler","","Returns the action\'s handler.",59,[[],["sighandler",4]]],[5,"sigaction","","Changes the action taken by a process on receipt of a …",null,[[["sigaction",3],["signal",4]],[["sigaction",3],["result",6]]]],[5,"signal","","Signal management (see signal(3p))",null,[[["sighandler",4],["signal",4]],[["sighandler",4],["result",6]]]],[5,"pthread_sigmask","","Manages the signal mask (set of blocked signals) for the …",null,[[["sigset",3],["sigset",3],["option",4],["sigmaskhow",4],["option",4]],["result",6]]],[5,"sigprocmask","","Examine and change blocked signals.",null,[[["sigset",3],["sigset",3],["option",4],["sigmaskhow",4],["option",4]],["result",6]]],[5,"kill","","",null,[[["pid",3],["option",4],["into",8]],["result",6]]],[5,"killpg","","Send a signal to a process group (see killpg(3)).",null,[[["pid",3],["option",4],["into",8]],["result",6]]],[5,"raise","","",null,[[["signal",4]],["result",6]]],[6,"type_of_thread_id","","",null,null],[4,"SigevNotify","","Used to request asynchronous notification of certain …",null,null],[13,"SigevNone","","No notification will be delivered",60,null],[13,"SigevSignal","","The signal given by <code>signal</code> will be delivered to the …",60,null],[12,"signal","nix::sys::signal::SigevNotify","",61,null],[12,"si_value","","",61,null],[13,"SigevThreadId","nix::sys::signal","The signal <code>signal</code> is queued to the thread whose LWP ID is …",60,null],[12,"signal","nix::sys::signal::SigevNotify","",62,null],[12,"thread_id","","",62,null],[12,"si_value","","",62,null],[0,"signalfd","nix::sys","Interface for the <code>signalfd</code> syscall.",null,null],[3,"siginfo","nix::sys::signalfd","",null,null],[12,"ssi_signo","","",63,null],[12,"ssi_errno","","",63,null],[12,"ssi_code","","",63,null],[12,"ssi_pid","","",63,null],[12,"ssi_uid","","",63,null],[12,"ssi_fd","","",63,null],[12,"ssi_tid","","",63,null],[12,"ssi_band","","",63,null],[12,"ssi_overrun","","",63,null],[12,"ssi_trapno","","",63,null],[12,"ssi_status","","",63,null],[12,"ssi_int","","",63,null],[12,"ssi_ptr","","",63,null],[12,"ssi_utime","","",63,null],[12,"ssi_stime","","",63,null],[12,"ssi_addr","","",63,null],[12,"ssi_addr_lsb","","",63,null],[12,"ssi_syscall","","",63,null],[12,"ssi_call_addr","","",63,null],[12,"ssi_arch","","",63,null],[3,"SfdFlags","","",null,null],[18,"SFD_NONBLOCK","","",64,null],[18,"SFD_CLOEXEC","","",64,null],[11,"empty","","Returns an empty set of flags",64,[[],["sfdflags",3]]],[11,"all","","Returns the set containing all flags.",64,[[],["sfdflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",64,[[],["c_int",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",64,[[["c_int",6]],[["sfdflags",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",64,[[["c_int",6]],["sfdflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",64,[[["c_int",6]],["sfdflags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",64,[[]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",64,[[]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",64,[[["sfdflags",3]]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",64,[[["sfdflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",64,[[["sfdflags",3]]]],[11,"remove","","Removes the specified flags in-place.",64,[[["sfdflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",64,[[["sfdflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",64,[[["sfdflags",3]]]],[17,"SIGNALFD_NEW","","",null,null],[17,"SIGNALFD_SIGINFO_SIZE","","",null,null],[5,"signalfd","","Creates a new file descriptor for reading signals.",null,[[["rawfd",6],["sigset",3],["sfdflags",3]],[["rawfd",6],["result",6]]]],[3,"SignalFd","","A helper struct for creating, reading and closing a …",null,null],[11,"new","","",65,[[["sigset",3]],[["result",6],["signalfd",3]]]],[11,"with_flags","","",65,[[["sigset",3],["sfdflags",3]],[["result",6],["signalfd",3]]]],[11,"set_mask","","",65,[[["sigset",3]],["result",6]]],[11,"read_signal","","",65,[[],[["result",6],["option",4]]]],[0,"socket","nix::sys","Socket interface functions",null,null],[3,"cmsghdr","nix::sys::socket","",null,null],[12,"cmsg_len","","",66,null],[12,"cmsg_level","","",66,null],[12,"cmsg_type","","",66,null],[3,"msghdr","","",null,null],[12,"msg_name","","",67,null],[12,"msg_namelen","","",67,null],[12,"msg_iov","","",67,null],[12,"msg_iovlen","","",67,null],[12,"msg_control","","",67,null],[12,"msg_controllen","","",67,null],[12,"msg_flags","","",67,null],[6,"sa_family_t","","",null,null],[3,"sockaddr","","",null,null],[12,"sa_family","","",68,null],[12,"sa_data","","",68,null],[3,"sockaddr_in","","",null,null],[12,"sin_family","","",69,null],[12,"sin_port","","",69,null],[12,"sin_addr","","",69,null],[12,"sin_zero","","",69,null],[3,"sockaddr_in6","","",null,null],[12,"sin6_family","","",70,null],[12,"sin6_port","","",70,null],[12,"sin6_flowinfo","","",70,null],[12,"sin6_addr","","",70,null],[12,"sin6_scope_id","","",70,null],[3,"sockaddr_storage","","",null,null],[12,"ss_family","","",71,null],[3,"sockaddr_un","","",null,null],[12,"sun_family","","",72,null],[12,"sun_path","","",72,null],[0,"sockopt","","",null,null],[3,"ReuseAddr","nix::sys::socket::sockopt","",null,null],[3,"ReusePort","","",null,null],[3,"TcpNoDelay","","",null,null],[3,"Linger","","",null,null],[3,"IpAddMembership","","",null,null],[3,"IpDropMembership","","",null,null],[3,"Ipv6AddMembership","","",null,null],[3,"Ipv6DropMembership","","",null,null],[3,"IpMulticastTtl","","",null,null],[3,"IpMulticastLoop","","",null,null],[3,"ReceiveTimeout","","",null,null],[3,"SendTimeout","","",null,null],[3,"Broadcast","","",null,null],[3,"OobInline","","",null,null],[3,"SocketError","","",null,null],[3,"KeepAlive","","",null,null],[3,"PeerCredentials","","",null,null],[3,"TcpKeepIdle","","",null,null],[3,"RcvBuf","","",null,null],[3,"SndBuf","","",null,null],[3,"RcvBufForce","","",null,null],[3,"SndBufForce","","",null,null],[3,"SockType","","",null,null],[3,"AcceptConn","","",null,null],[3,"BindToDevice","","",null,null],[3,"OriginalDst","","",null,null],[3,"ReceiveTimestamp","","",null,null],[3,"IpTransparent","","",null,null],[3,"Mark","","",null,null],[3,"PassCred","","",null,null],[3,"TcpCongestion","","",null,null],[3,"Ipv4PacketInfo","","",null,null],[3,"Ipv6RecvPacketInfo","","",null,null],[3,"UdpGsoSegment","","",null,null],[3,"UdpGroSegment","","",null,null],[3,"AlgSetAeadAuthSize","","",null,null],[3,"AlgSetKey","","",null,null],[4,"AddressFamily","nix::sys::socket","These constants specify the protocol family to be used in …",null,null],[13,"Unix","","Local communication (see <code>unix(7)</code>)",73,null],[13,"Inet","","IPv4 Internet protocols (see <code>ip(7)</code>)",73,null],[13,"Inet6","","IPv6 Internet protocols (see <code>ipv6(7)</code>)",73,null],[13,"Netlink","","Kernel user interface device (see <code>netlink(7)</code>)",73,null],[13,"Packet","","Low level packet interface (see <code>packet(7)</code>)",73,null],[13,"Ax25","","Amateur radio AX.25 protocol",73,null],[13,"Ipx","","IPX - Novell protocols",73,null],[13,"AppleTalk","","AppleTalk",73,null],[13,"NetRom","","",73,null],[13,"Bridge","","",73,null],[13,"AtmPvc","","Access to raw ATM PVCs",73,null],[13,"X25","","ITU-T X.25 / ISO-8208 protocol (see <code>x25(7)</code>)",73,null],[13,"Rose","","",73,null],[13,"Decnet","","",73,null],[13,"NetBeui","","",73,null],[13,"Security","","",73,null],[13,"Key","","",73,null],[13,"Ash","","",73,null],[13,"Econet","","",73,null],[13,"AtmSvc","","",73,null],[13,"Rds","","",73,null],[13,"Sna","","",73,null],[13,"Irda","","",73,null],[13,"Pppox","","",73,null],[13,"Wanpipe","","",73,null],[13,"Llc","","",73,null],[13,"Ib","","",73,null],[13,"Mpls","","",73,null],[13,"Can","","",73,null],[13,"Tipc","","",73,null],[13,"Bluetooth","","",73,null],[13,"Iucv","","",73,null],[13,"RxRpc","","",73,null],[13,"Isdn","","",73,null],[13,"Phonet","","",73,null],[13,"Ieee802154","","",73,null],[13,"Caif","","",73,null],[13,"Alg","","Interface to kernel crypto API",73,null],[13,"Nfc","","",73,null],[13,"Vsock","","",73,null],[13,"Unspec","","Unspecified address family, (see <code>getaddrinfo(3)</code>)",73,null],[4,"SockAddr","","Represents a socket address",null,null],[13,"Inet","","",74,null],[13,"Unix","","",74,null],[13,"Netlink","","",74,null],[13,"Alg","","",74,null],[13,"Link","","Datalink address (MAC)",74,null],[13,"Vsock","","",74,null],[4,"InetAddr","","",null,null],[13,"V4","","",75,null],[13,"V6","","",75,null],[3,"UnixAddr","","A wrapper around <code>sockaddr_un</code>.",null,null],[12,"0","","",76,null],[12,"1","","",76,null],[4,"IpAddr","","",null,null],[13,"V4","","",77,null],[13,"V6","","",77,null],[3,"Ipv4Addr","","",null,null],[12,"0","","",78,null],[3,"Ipv6Addr","","",null,null],[12,"0","","",79,null],[3,"LinkAddr","","Hardware Address",null,null],[12,"0","","",80,null],[3,"NetlinkAddr","","",null,null],[12,"0","","",81,null],[3,"AlgAddr","","",null,null],[12,"0","","",82,null],[3,"VsockAddr","","",null,null],[12,"0","","",83,null],[4,"SockType","","These constants are used to specify the communication …",null,null],[13,"Stream","","Provides sequenced, reliable, two-way, connection- based …",84,null],[13,"Datagram","","Supports datagrams (connectionless, unreliable messages …",84,null],[13,"SeqPacket","","Provides a sequenced, reliable, two-way connection- based …",84,null],[13,"Raw","","Provides raw network protocol access.",84,null],[13,"Rdm","","Provides a reliable datagram layer that does not …",84,null],[4,"SockProtocol","","Constants used in <code>socket</code> and <code>socketpair</code> to specify the …",null,null],[13,"Tcp","","TCP protocol (ip(7))",85,null],[13,"Udp","","UDP protocol (ip(7))",85,null],[3,"SockFlag","","Additional socket options",null,null],[18,"SOCK_NONBLOCK","","Set non-blocking mode on the new socket",86,null],[18,"SOCK_CLOEXEC","","Set close-on-exec on the new descriptor",86,null],[11,"empty","","Returns an empty set of flags",86,[[],["sockflag",3]]],[11,"all","","Returns the set containing all flags.",86,[[],["sockflag",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",86,[[],["c_int",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",86,[[["c_int",6]],[["sockflag",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",86,[[["c_int",6]],["sockflag",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",86,[[["c_int",6]],["sockflag",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",86,[[]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",86,[[]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",86,[[["sockflag",3]]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",86,[[["sockflag",3]]]],[11,"insert","","Inserts the specified flags in-place.",86,[[["sockflag",3]]]],[11,"remove","","Removes the specified flags in-place.",86,[[["sockflag",3]]]],[11,"toggle","","Toggles the specified flags in-place.",86,[[["sockflag",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",86,[[["sockflag",3]]]],[3,"MsgFlags","","Flags for send/recv and their relatives",null,null],[18,"MSG_OOB","","Sends or requests out-of-band data on sockets that …",87,null],[18,"MSG_PEEK","","Peeks at an incoming message. The data is treated as …",87,null],[18,"MSG_WAITALL","","Receive operation blocks until the full amount of data …",87,null],[18,"MSG_DONTWAIT","","Enables nonblocking operation; if the operation would …",87,null],[18,"MSG_CTRUNC","","Receive flags: Control Data was discarded (buffer too …",87,null],[18,"MSG_TRUNC","","For raw (<code>Packet</code>), Internet datagram (since Linux …",87,null],[18,"MSG_EOR","","Terminates a record (when this notion is supported, as for…",87,null],[18,"MSG_ERRQUEUE","","This flag specifies that queued errors should be received …",87,null],[18,"MSG_CMSG_CLOEXEC","","Set the <code>close-on-exec</code> flag for the file descriptor …",87,null],[11,"empty","","Returns an empty set of flags",87,[[],["msgflags",3]]],[11,"all","","Returns the set containing all flags.",87,[[],["msgflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",87,[[],["c_int",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",87,[[["c_int",6]],[["option",4],["msgflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",87,[[["c_int",6]],["msgflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",87,[[["c_int",6]],["msgflags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",87,[[]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",87,[[]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",87,[[["msgflags",3]]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",87,[[["msgflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",87,[[["msgflags",3]]]],[11,"remove","","Removes the specified flags in-place.",87,[[["msgflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",87,[[["msgflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",87,[[["msgflags",3]]]],[3,"UnixCredentials","","Unix credentials of the sending process.",null,null],[11,"new","","Creates a new instance with the credentials of the …",88,[[]]],[11,"pid","","Returns the process identifier",88,[[],["pid_t",6]]],[11,"uid","","Returns the user identifier",88,[[],["uid_t",6]]],[11,"gid","","Returns the group identifier",88,[[],["gid_t",6]]],[3,"IpMembershipRequest","","Request for multicast socket operations",null,null],[11,"new","","Instantiate a new <code>IpMembershipRequest</code>",89,[[["option",4],["ipv4addr",3]]]],[3,"Ipv6MembershipRequest","","Request for ipv6 multicast socket operations",null,null],[11,"new","","Instantiate a new <code>Ipv6MembershipRequest</code>",90,[[["ipv6addr",3]]]],[3,"RecvMsg","","",null,null],[12,"bytes","","",91,null],[12,"address","","",91,null],[12,"flags","","",91,null],[11,"cmsgs","","Iterate over the valid control messages pointed to by this…",91,[[],["cmsgiterator",3]]],[3,"CmsgIterator","","",null,null],[4,"ControlMessageOwned","","A type-safe wrapper around a single control message, as …",null,null],[13,"ScmRights","","Received version of [<code>ControlMessage::ScmRights</code>][…",92,null],[13,"ScmCredentials","","Received version of [<code>ControlMessage::ScmCredentials</code>][…",92,null],[13,"ScmTimestamp","","A message of type <code>SCM_TIMESTAMP</code>, containing the time the …",92,null],[13,"Ipv4PacketInfo","","",92,null],[13,"Ipv6PacketInfo","","",92,null],[13,"UdpGroSegments","","UDP Generic Receive Offload (GRO) allows receiving …",92,null],[4,"ControlMessage","","A type-safe zero-copy wrapper around a single control …",null,null],[13,"ScmRights","","A message of type <code>SCM_RIGHTS</code>, containing an array of file …",93,null],[13,"ScmCredentials","","A message of type <code>SCM_CREDENTIALS</code>, containing the pid, …",93,null],[13,"AlgSetIv","","Set IV for <code>AF_ALG</code> crypto API.",93,null],[13,"AlgSetOp","","Set crypto operation for <code>AF_ALG</code> crypto API. It may be one …",93,null],[13,"AlgSetAeadAssoclen","","Set the length of associated authentication data (AAD) …",93,null],[13,"UdpGsoSegments","","UDP GSO makes it possible for applications to generate …",93,null],[13,"Ipv4PacketInfo","","Configure the sending addressing and interface for v4",93,null],[13,"Ipv6PacketInfo","","Configure the sending addressing and interface for v6",93,null],[5,"sendmsg","","Send data in scatter-gather vectors to a socket, possibly …",null,[[["rawfd",6],["sockaddr",4],["msgflags",3],["option",4]],["result",6]]],[3,"SendMmsgData","","",null,null],[12,"iov","","",94,null],[12,"cmsgs","","",94,null],[12,"addr","","",94,null],[12,"_lt","","",94,null],[5,"sendmmsg","","An extension of <code>sendmsg</code> that allows the caller to …",null,[[["rawfd",6],["msgflags",3]],[["result",6],["vec",3]]]],[3,"RecvMmsgData","","",null,null],[12,"iov","","",95,null],[12,"cmsg_buffer","","",95,null],[5,"recvmmsg","","An extension of <code>recvmsg</code> that allows the caller to receive …",null,[[["option",4],["timespec",3],["rawfd",6],["msgflags",3]],[["result",6],["vec",3]]]],[5,"recvmsg","","Receive message in scatter-gather vectors from a socket, …",null,[[["vec",3],["rawfd",6],["msgflags",3],["option",4]],[["recvmsg",3],["result",6]]]],[5,"socket","","Create an endpoint for communication",null,[[["addressfamily",4],["sockflag",3],["socktype",4],["into",8],["option",4]],[["rawfd",6],["result",6]]]],[5,"socketpair","","Create a pair of connected sockets",null,[[["addressfamily",4],["sockflag",3],["into",8],["socktype",4],["option",4]],["result",6]]],[5,"listen","","Listen for connections on a socket",null,[[["rawfd",6]],["result",6]]],[5,"bind","","Bind a name to a socket",null,[[["rawfd",6],["sockaddr",4]],["result",6]]],[5,"accept","","Accept a connection on a socket",null,[[["rawfd",6]],[["rawfd",6],["result",6]]]],[5,"accept4","","Accept a connection on a socket",null,[[["rawfd",6],["sockflag",3]],[["rawfd",6],["result",6]]]],[5,"connect","","Initiate a connection on a socket",null,[[["rawfd",6],["sockaddr",4]],["result",6]]],[5,"recv","","Receive data from a connection-oriented socket. Returns …",null,[[["rawfd",6],["msgflags",3]],["result",6]]],[5,"recvfrom","","Receive data from a connectionless or connection-oriented …",null,[[["rawfd",6]],["result",6]]],[5,"sendto","","Send a message to a socket",null,[[["rawfd",6],["sockaddr",4],["msgflags",3]],["result",6]]],[5,"send","","Send data to a connection-oriented socket. Returns the …",null,[[["rawfd",6],["msgflags",3]],["result",6]]],[4,"SockLevel","","The protocol level at which to get / set socket options. …",null,null],[13,"Socket","","",96,null],[13,"Tcp","","",96,null],[13,"Ip","","",96,null],[13,"Ipv6","","",96,null],[13,"Udp","","",96,null],[13,"Netlink","","",96,null],[13,"Alg","","",96,null],[8,"GetSockOpt","","Represents a socket option that can be accessed or set. …",null,null],[16,"Val","","",97,null],[8,"SetSockOpt","","Represents a socket option that can be accessed or set. …",null,null],[16,"Val","","",98,null],[5,"getsockopt","","Get the current value for the requested socket option",null,[[["rawfd",6],["getsockopt",8]],["result",6]]],[5,"setsockopt","","Sets the value for the requested socket option",null,[[["rawfd",6],["setsockopt",8]],["result",6]]],[5,"getpeername","","Get the address of the peer connected to the socket <code>fd</code>.",null,[[["rawfd",6]],[["sockaddr",4],["result",6]]]],[5,"getsockname","","Get the current address to which the socket <code>fd</code> is bound.",null,[[["rawfd",6]],[["sockaddr",4],["result",6]]]],[5,"sockaddr_storage_to_addr","","Return the appropriate <code>SockAddr</code> type from a …",null,[[["sockaddr_storage",3]],[["sockaddr",4],["result",6]]]],[4,"Shutdown","","",null,null],[13,"Read","","Further receptions will be disallowed.",99,null],[13,"Write","","Further  transmissions will be disallowed.",99,null],[13,"Both","","Further receptions and transmissions will be disallowed.",99,null],[5,"shutdown","","Shut down part of a full-duplex connection.",null,[[["rawfd",6],["shutdown",4]],["result",6]]],[0,"stat","nix::sys","",null,null],[6,"dev_t","nix::sys::stat","",null,null],[6,"mode_t","","",null,null],[3,"FileStat","","",null,null],[12,"st_dev","","",100,null],[12,"st_ino","","",100,null],[12,"st_nlink","","",100,null],[12,"st_mode","","",100,null],[12,"st_uid","","",100,null],[12,"st_gid","","",100,null],[12,"st_rdev","","",100,null],[12,"st_size","","",100,null],[12,"st_blksize","","",100,null],[12,"st_blocks","","",100,null],[12,"st_atime","","",100,null],[12,"st_atime_nsec","","",100,null],[12,"st_mtime","","",100,null],[12,"st_mtime_nsec","","",100,null],[12,"st_ctime","","",100,null],[12,"st_ctime_nsec","","",100,null],[5,"FileStat","","",null,[[]]],[3,"SFlag","","",null,null],[18,"S_IFIFO","","",101,null],[18,"S_IFCHR","","",101,null],[18,"S_IFDIR","","",101,null],[18,"S_IFBLK","","",101,null],[18,"S_IFREG","","",101,null],[18,"S_IFLNK","","",101,null],[18,"S_IFSOCK","","",101,null],[18,"S_IFMT","","",101,null],[11,"empty","","Returns an empty set of flags",101,[[],["sflag",3]]],[11,"all","","Returns the set containing all flags.",101,[[],["sflag",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",101,[[],["mode_t",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",101,[[["mode_t",6]],[["option",4],["sflag",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",101,[[["mode_t",6]],["sflag",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",101,[[["mode_t",6]],["sflag",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",101,[[]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",101,[[]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",101,[[["sflag",3]]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",101,[[["sflag",3]]]],[11,"insert","","Inserts the specified flags in-place.",101,[[["sflag",3]]]],[11,"remove","","Removes the specified flags in-place.",101,[[["sflag",3]]]],[11,"toggle","","Toggles the specified flags in-place.",101,[[["sflag",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",101,[[["sflag",3]]]],[3,"Mode","","",null,null],[18,"S_IRWXU","","",102,null],[18,"S_IRUSR","","",102,null],[18,"S_IWUSR","","",102,null],[18,"S_IXUSR","","",102,null],[18,"S_IRWXG","","",102,null],[18,"S_IRGRP","","",102,null],[18,"S_IWGRP","","",102,null],[18,"S_IXGRP","","",102,null],[18,"S_IRWXO","","",102,null],[18,"S_IROTH","","",102,null],[18,"S_IWOTH","","",102,null],[18,"S_IXOTH","","",102,null],[18,"S_ISUID","","",102,null],[18,"S_ISGID","","",102,null],[18,"S_ISVTX","","",102,null],[11,"empty","","Returns an empty set of flags",102,[[],["mode",3]]],[11,"all","","Returns the set containing all flags.",102,[[],["mode",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",102,[[],["mode_t",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",102,[[["mode_t",6]],[["option",4],["mode",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",102,[[["mode_t",6]],["mode",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",102,[[["mode_t",6]],["mode",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",102,[[]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",102,[[]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",102,[[["mode",3]]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",102,[[["mode",3]]]],[11,"insert","","Inserts the specified flags in-place.",102,[[["mode",3]]]],[11,"remove","","Removes the specified flags in-place.",102,[[["mode",3]]]],[11,"toggle","","Toggles the specified flags in-place.",102,[[["mode",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",102,[[["mode",3]]]],[5,"mknod","","",null,[[["mode",3],["dev_t",6],["sflag",3]],["result",6]]],[5,"major","","",null,[[["dev_t",6]]]],[5,"minor","","",null,[[["dev_t",6]]]],[5,"makedev","","",null,[[],["dev_t",6]]],[5,"umask","","",null,[[["mode",3]],["mode",3]]],[5,"stat","","",null,[[],[["result",6],["filestat",3]]]],[5,"lstat","","",null,[[],[["result",6],["filestat",3]]]],[5,"fstat","","",null,[[["rawfd",6]],[["result",6],["filestat",3]]]],[5,"fstatat","","",null,[[["rawfd",6],["atflags",3]],[["result",6],["filestat",3]]]],[5,"fchmod","","Change the file permission bits of the file specified by …",null,[[["rawfd",6],["mode",3]],["result",6]]],[4,"FchmodatFlags","","Flags for <code>fchmodat</code> function.",null,null],[13,"FollowSymlink","","",103,null],[13,"NoFollowSymlink","","",103,null],[5,"fchmodat","","Change the file permission bits.",null,[[["option",4],["mode",3],["rawfd",6],["fchmodatflags",4]],["result",6]]],[5,"utimes","","Change the access and modification times of a file.",null,[[["timeval",3]],["result",6]]],[5,"lutimes","","Change the access and modification times of a file …",null,[[["timeval",3]],["result",6]]],[5,"futimens","","Change the access and modification times of the file …",null,[[["rawfd",6],["timespec",3]],["result",6]]],[4,"UtimensatFlags","","Flags for <code>utimensat</code> function.",null,null],[13,"FollowSymlink","","",104,null],[13,"NoFollowSymlink","","",104,null],[5,"utimensat","","Change the access and modification times of a file.",null,[[["option",4],["timespec",3],["rawfd",6],["utimensatflags",4]],["result",6]]],[5,"mkdirat","","",null,[[["rawfd",6],["mode",3]],["result",6]]],[0,"statfs","nix::sys","",null,null],[6,"fsid_t","nix::sys::statfs","",null,null],[3,"Statfs","","",null,null],[3,"FsType","","",null,null],[12,"0","","",105,null],[17,"ADFS_SUPER_MAGIC","","",null,null],[17,"AFFS_SUPER_MAGIC","","",null,null],[17,"CODA_SUPER_MAGIC","","",null,null],[17,"CRAMFS_MAGIC","","",null,null],[17,"EFS_SUPER_MAGIC","","",null,null],[17,"EXT2_SUPER_MAGIC","","",null,null],[17,"EXT3_SUPER_MAGIC","","",null,null],[17,"EXT4_SUPER_MAGIC","","",null,null],[17,"HPFS_SUPER_MAGIC","","",null,null],[17,"HUGETLBFS_MAGIC","","",null,null],[17,"ISOFS_SUPER_MAGIC","","",null,null],[17,"JFFS2_SUPER_MAGIC","","",null,null],[17,"MINIX_SUPER_MAGIC","","",null,null],[17,"MINIX_SUPER_MAGIC2","","",null,null],[17,"MINIX2_SUPER_MAGIC","","",null,null],[17,"MINIX2_SUPER_MAGIC2","","",null,null],[17,"MSDOS_SUPER_MAGIC","","",null,null],[17,"NCP_SUPER_MAGIC","","",null,null],[17,"NFS_SUPER_MAGIC","","",null,null],[17,"OPENPROM_SUPER_MAGIC","","",null,null],[17,"OVERLAYFS_SUPER_MAGIC","","",null,null],[17,"PROC_SUPER_MAGIC","","",null,null],[17,"QNX4_SUPER_MAGIC","","",null,null],[17,"REISERFS_SUPER_MAGIC","","",null,null],[17,"SMB_SUPER_MAGIC","","",null,null],[17,"TMPFS_MAGIC","","",null,null],[17,"USBDEVICE_SUPER_MAGIC","","",null,null],[17,"CGROUP_SUPER_MAGIC","","",null,null],[17,"CGROUP2_SUPER_MAGIC","","",null,null],[11,"filesystem_type","","Magic code defining system type",106,[[],["fstype",3]]],[11,"optimal_transfer_size","","Optimal transfer block size",106,[[],["c_long",6]]],[11,"block_size","","Size of a block",106,[[],["c_long",6]]],[11,"maximum_name_length","","Maximum length of filenames",106,[[],["c_long",6]]],[11,"blocks","","Total data blocks in filesystem",106,[[],["c_ulong",6]]],[11,"blocks_free","","Free blocks in filesystem",106,[[],["c_ulong",6]]],[11,"blocks_available","","Free blocks available to unprivileged user",106,[[],["c_ulong",6]]],[11,"files","","Total file nodes in filesystem",106,[[],["c_ulong",6]]],[11,"files_free","","Free file nodes in filesystem",106,[[],["c_ulong",6]]],[11,"filesystem_id","","Filesystem ID",106,[[],["fsid_t",6]]],[5,"statfs","","",null,[[],[["result",6],["statfs",3]]]],[5,"fstatfs","","",null,[[],[["result",6],["statfs",3]]]],[0,"statvfs","nix::sys","Get filesystem statistics",null,null],[3,"FsFlags","nix::sys::statvfs","File system mount Flags",null,null],[18,"ST_RDONLY","","Read Only",107,null],[18,"ST_NOSUID","","Do not allow the set-uid bits to have an effect",107,null],[18,"ST_NODEV","","Do not interpret character or block-special devices",107,null],[18,"ST_NOEXEC","","Do not allow execution of binaries on the filesystem",107,null],[18,"ST_SYNCHRONOUS","","All IO should be done synchronously",107,null],[18,"ST_MANDLOCK","","Allow mandatory locks on the filesystem",107,null],[18,"ST_WRITE","","Write on file/directory/symlink",107,null],[18,"ST_APPEND","","Append-only file",107,null],[18,"ST_IMMUTABLE","","Immutable file",107,null],[18,"ST_NOATIME","","Do not update access times on files",107,null],[18,"ST_NODIRATIME","","Do not update access times on files",107,null],[18,"ST_RELATIME","","Update access time relative to modify/change time",107,null],[11,"empty","","Returns an empty set of flags",107,[[],["fsflags",3]]],[11,"all","","Returns the set containing all flags.",107,[[],["fsflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",107,[[],["c_ulong",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",107,[[["c_ulong",6]],[["option",4],["fsflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",107,[[["c_ulong",6]],["fsflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",107,[[["c_ulong",6]],["fsflags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",107,[[]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",107,[[]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",107,[[["fsflags",3]]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",107,[[["fsflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",107,[[["fsflags",3]]]],[11,"remove","","Removes the specified flags in-place.",107,[[["fsflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",107,[[["fsflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",107,[[["fsflags",3]]]],[3,"Statvfs","","Wrapper around the POSIX <code>statvfs</code> struct",null,null],[11,"block_size","","get the file system block size",108,[[],["c_ulong",6]]],[11,"fragment_size","","Get the fundamental file system block size",108,[[],["c_ulong",6]]],[11,"blocks","","Get the number of blocks.",108,[[],["fsblkcnt_t",6]]],[11,"blocks_free","","Get the number of free blocks in the file system",108,[[],["fsblkcnt_t",6]]],[11,"blocks_available","","Get the number of free blocks for unprivileged users",108,[[],["fsblkcnt_t",6]]],[11,"files","","Get the total number of file inodes",108,[[],["fsfilcnt_t",6]]],[11,"files_free","","Get the number of free file inodes",108,[[],["fsfilcnt_t",6]]],[11,"files_available","","Get the number of free file inodes for unprivileged users",108,[[],["fsfilcnt_t",6]]],[11,"filesystem_id","","Get the file system id",108,[[],["c_ulong",6]]],[11,"flags","","Get the mount flags",108,[[],["fsflags",3]]],[11,"name_max","","Get the maximum filename length",108,[[],["c_ulong",6]]],[5,"statvfs","","Return a <code>Statvfs</code> object with information about the <code>path</code>",null,[[],[["result",6],["statvfs",3]]]],[5,"fstatvfs","","Return a <code>Statvfs</code> object with information about <code>fd</code>",null,[[],[["result",6],["statvfs",3]]]],[0,"sysinfo","nix::sys","",null,null],[3,"SysInfo","nix::sys::sysinfo","System info structure returned by <code>sysinfo</code>.",null,null],[11,"load_average","","Returns the load average tuple.",109,[[]]],[11,"uptime","","Returns the time since system boot.",109,[[],["duration",3]]],[11,"process_count","","Current number of processes.",109,[[]]],[11,"swap_total","","Returns the amount of swap memory in Bytes.",109,[[]]],[11,"swap_free","","Returns the amount of unused swap memory in Bytes.",109,[[]]],[11,"ram_total","","Returns the total amount of installed RAM in Bytes.",109,[[]]],[11,"ram_unused","","Returns the amount of completely unused RAM in Bytes.",109,[[]]],[5,"sysinfo","","Returns system information.",null,[[],[["result",6],["sysinfo",3]]]],[0,"termios","nix::sys","An interface for controlling asynchronous communication …",null,null],[17,"NCCS","nix::sys::termios","",null,null],[17,"_POSIX_VDISABLE","","",null,null],[3,"Termios","","Stores settings for the termios API",null,null],[12,"input_flags","","Input mode flags (see <code>termios.c_iflag</code> documentation)",110,null],[12,"output_flags","","Output mode flags (see <code>termios.c_oflag</code> documentation)",110,null],[12,"control_flags","","Control mode flags (see <code>termios.c_cflag</code> documentation)",110,null],[12,"local_flags","","Local mode flags (see <code>termios.c_lflag</code> documentation)",110,null],[12,"control_chars","","Control characters (see <code>termios.c_cc</code> documentation)",110,null],[4,"BaudRate","","Baud rates supported by the system.",null,null],[13,"B0","","",111,null],[13,"B50","","",111,null],[13,"B75","","",111,null],[13,"B110","","",111,null],[13,"B134","","",111,null],[13,"B150","","",111,null],[13,"B200","","",111,null],[13,"B300","","",111,null],[13,"B600","","",111,null],[13,"B1200","","",111,null],[13,"B1800","","",111,null],[13,"B2400","","",111,null],[13,"B4800","","",111,null],[13,"B9600","","",111,null],[13,"B19200","","",111,null],[13,"B38400","","",111,null],[13,"B57600","","",111,null],[13,"B115200","","",111,null],[13,"B230400","","",111,null],[13,"B460800","","",111,null],[13,"B500000","","",111,null],[13,"B576000","","",111,null],[13,"B921600","","",111,null],[13,"B1000000","","",111,null],[13,"B1152000","","",111,null],[13,"B1500000","","",111,null],[13,"B2000000","","",111,null],[13,"B2500000","","",111,null],[13,"B3000000","","",111,null],[13,"B3500000","","",111,null],[13,"B4000000","","",111,null],[4,"SetArg","","Specify when a port configuration change should occur.",null,null],[13,"TCSANOW","","The change will occur immediately",112,null],[13,"TCSADRAIN","","The change occurs after all output has been written",112,null],[13,"TCSAFLUSH","","Same as <code>TCSADRAIN</code>, but will also flush the input buffer",112,null],[4,"FlushArg","","Specify a combination of the input and output buffers to …",null,null],[13,"TCIFLUSH","","Flush data that was received but not read",113,null],[13,"TCOFLUSH","","Flush data written but not transmitted",113,null],[13,"TCIOFLUSH","","Flush both received data not read and written data not …",113,null],[4,"FlowArg","","Specify how transmission flow should be altered",null,null],[13,"TCOOFF","","Suspend transmission",114,null],[13,"TCOON","","Resume transmission",114,null],[13,"TCIOFF","","Transmit a STOP character, which should disable a …",114,null],[13,"TCION","","Transmit a START character, which should re-enable a …",114,null],[4,"SpecialCharacterIndices","","Indices into the <code>termios.c_cc</code> array for special …",null,null],[13,"VDISCARD","","",115,null],[13,"VEOF","","",115,null],[13,"VEOL","","",115,null],[13,"VEOL2","","",115,null],[13,"VERASE","","",115,null],[13,"VINTR","","",115,null],[13,"VKILL","","",115,null],[13,"VLNEXT","","",115,null],[13,"VMIN","","",115,null],[13,"VQUIT","","",115,null],[13,"VREPRINT","","",115,null],[13,"VSTART","","",115,null],[13,"VSTOP","","",115,null],[13,"VSUSP","","",115,null],[13,"VSWTC","","",115,null],[13,"VTIME","","",115,null],[13,"VWERASE","","",115,null],[3,"InputFlags","","Flags for configuring the input mode of a terminal",null,null],[18,"IGNBRK","","",116,null],[18,"BRKINT","","",116,null],[18,"IGNPAR","","",116,null],[18,"PARMRK","","",116,null],[18,"INPCK","","",116,null],[18,"ISTRIP","","",116,null],[18,"INLCR","","",116,null],[18,"IGNCR","","",116,null],[18,"ICRNL","","",116,null],[18,"IXON","","",116,null],[18,"IXOFF","","",116,null],[18,"IXANY","","",116,null],[18,"IMAXBEL","","",116,null],[18,"IUTF8","","",116,null],[11,"empty","","Returns an empty set of flags",116,[[],["inputflags",3]]],[11,"all","","Returns the set containing all flags.",116,[[],["inputflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",116,[[],["tcflag_t",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",116,[[["tcflag_t",6]],[["option",4],["inputflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",116,[[["tcflag_t",6]],["inputflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",116,[[["tcflag_t",6]],["inputflags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",116,[[]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",116,[[]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",116,[[["inputflags",3]]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",116,[[["inputflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",116,[[["inputflags",3]]]],[11,"remove","","Removes the specified flags in-place.",116,[[["inputflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",116,[[["inputflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",116,[[["inputflags",3]]]],[3,"OutputFlags","","Flags for configuring the output mode of a terminal",null,null],[18,"OPOST","","",117,null],[18,"OLCUC","","",117,null],[18,"ONLCR","","",117,null],[18,"OCRNL","","",117,null],[18,"ONOCR","","",117,null],[18,"ONLRET","","",117,null],[18,"OFILL","","",117,null],[18,"OFDEL","","",117,null],[18,"NL0","","",117,null],[18,"NL1","","",117,null],[18,"CR0","","",117,null],[18,"CR1","","",117,null],[18,"CR2","","",117,null],[18,"CR3","","",117,null],[18,"TAB0","","",117,null],[18,"TAB1","","",117,null],[18,"TAB2","","",117,null],[18,"TAB3","","",117,null],[18,"XTABS","","",117,null],[18,"BS0","","",117,null],[18,"BS1","","",117,null],[18,"VT0","","",117,null],[18,"VT1","","",117,null],[18,"FF0","","",117,null],[18,"FF1","","",117,null],[18,"NLDLY","","",117,null],[18,"CRDLY","","",117,null],[18,"TABDLY","","",117,null],[18,"BSDLY","","",117,null],[18,"VTDLY","","",117,null],[18,"FFDLY","","",117,null],[11,"empty","","Returns an empty set of flags",117,[[],["outputflags",3]]],[11,"all","","Returns the set containing all flags.",117,[[],["outputflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",117,[[],["tcflag_t",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",117,[[["tcflag_t",6]],[["outputflags",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",117,[[["tcflag_t",6]],["outputflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",117,[[["tcflag_t",6]],["outputflags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",117,[[]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",117,[[]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",117,[[["outputflags",3]]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",117,[[["outputflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",117,[[["outputflags",3]]]],[11,"remove","","Removes the specified flags in-place.",117,[[["outputflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",117,[[["outputflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",117,[[["outputflags",3]]]],[3,"ControlFlags","","Flags for setting the control mode of a terminal",null,null],[18,"CS5","","",118,null],[18,"CS6","","",118,null],[18,"CS7","","",118,null],[18,"CS8","","",118,null],[18,"CSTOPB","","",118,null],[18,"CREAD","","",118,null],[18,"PARENB","","",118,null],[18,"PARODD","","",118,null],[18,"HUPCL","","",118,null],[18,"CLOCAL","","",118,null],[18,"CRTSCTS","","",118,null],[18,"CBAUD","","",118,null],[18,"CMSPAR","","",118,null],[18,"CIBAUD","","",118,null],[18,"CBAUDEX","","",118,null],[18,"CSIZE","","",118,null],[11,"empty","","Returns an empty set of flags",118,[[],["controlflags",3]]],[11,"all","","Returns the set containing all flags.",118,[[],["controlflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",118,[[],["tcflag_t",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",118,[[["tcflag_t",6]],[["option",4],["controlflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",118,[[["tcflag_t",6]],["controlflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",118,[[["tcflag_t",6]],["controlflags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",118,[[]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",118,[[]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",118,[[["controlflags",3]]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",118,[[["controlflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",118,[[["controlflags",3]]]],[11,"remove","","Removes the specified flags in-place.",118,[[["controlflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",118,[[["controlflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",118,[[["controlflags",3]]]],[3,"LocalFlags","","Flags for setting any local modes",null,null],[18,"ECHOKE","","",119,null],[18,"ECHOE","","",119,null],[18,"ECHOK","","",119,null],[18,"ECHO","","",119,null],[18,"ECHONL","","",119,null],[18,"ECHOPRT","","",119,null],[18,"ECHOCTL","","",119,null],[18,"ISIG","","",119,null],[18,"ICANON","","",119,null],[18,"IEXTEN","","",119,null],[18,"EXTPROC","","",119,null],[18,"TOSTOP","","",119,null],[18,"FLUSHO","","",119,null],[18,"PENDIN","","",119,null],[18,"NOFLSH","","",119,null],[11,"empty","","Returns an empty set of flags",119,[[],["localflags",3]]],[11,"all","","Returns the set containing all flags.",119,[[],["localflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",119,[[],["tcflag_t",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",119,[[["tcflag_t",6]],[["option",4],["localflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",119,[[["tcflag_t",6]],["localflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",119,[[["tcflag_t",6]],["localflags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",119,[[]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",119,[[]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",119,[[["localflags",3]]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",119,[[["localflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",119,[[["localflags",3]]]],[11,"remove","","Removes the specified flags in-place.",119,[[["localflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",119,[[["localflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",119,[[["localflags",3]]]],[5,"cfgetispeed","","Get input baud rate (see cfgetispeed(3p)).",null,[[["termios",3]],["baudrate",4]]],[5,"cfgetospeed","","Get output baud rate (see cfgetospeed(3p)).",null,[[["termios",3]],["baudrate",4]]],[5,"cfsetispeed","","Set input baud rate (see cfsetispeed(3p)).",null,[[["baudrate",4],["termios",3]],["result",6]]],[5,"cfsetospeed","","Set output baud rate (see cfsetospeed(3p)).",null,[[["baudrate",4],["termios",3]],["result",6]]],[5,"cfsetspeed","","Set both the input and output baud rates (see termios(3)).",null,[[["baudrate",4],["termios",3]],["result",6]]],[5,"cfmakeraw","","Configures the port to something like the \\\"raw\\\" mode of …",null,[[["termios",3]]]],[5,"tcgetattr","","Return the configuration of a port tcgetattr(3p)).",null,[[["rawfd",6]],[["termios",3],["result",6]]]],[5,"tcsetattr","","Set the configuration for a terminal (see tcsetattr(3p)).",null,[[["rawfd",6],["termios",3],["setarg",4]],["result",6]]],[5,"tcdrain","","Block until all output data is written (see tcdrain(3p)).",null,[[["rawfd",6]],["result",6]]],[5,"tcflow","","Suspend or resume the transmission or reception of data …",null,[[["rawfd",6],["flowarg",4]],["result",6]]],[5,"tcflush","","Discard data in the output or input queue (see tcflush(3p)…",null,[[["rawfd",6],["flusharg",4]],["result",6]]],[5,"tcsendbreak","","Send a break for a specific duration (see tcsendbreak(3p)…",null,[[["rawfd",6],["c_int",6]],["result",6]]],[5,"tcgetsid","","Get the session controlled by the given terminal (see …",null,[[["rawfd",6]],[["pid",3],["result",6]]]],[0,"time","nix::sys","",null,null],[6,"time_t","nix::sys::time","",null,null],[6,"suseconds_t","","",null,null],[8,"TimeValLike","","",null,null],[11,"zero","","",120,[[]]],[11,"hours","","",120,[[]]],[11,"minutes","","",120,[[]]],[10,"seconds","","",120,[[]]],[10,"milliseconds","","",120,[[]]],[10,"microseconds","","",120,[[]]],[10,"nanoseconds","","",120,[[]]],[11,"num_hours","","",120,[[]]],[11,"num_minutes","","",120,[[]]],[10,"num_seconds","","",120,[[]]],[10,"num_milliseconds","","",120,[[]]],[10,"num_microseconds","","",120,[[]]],[10,"num_nanoseconds","","",120,[[]]],[3,"TimeSpec","","",null,null],[11,"tv_sec","","",121,[[],["time_t",6]]],[11,"tv_nsec","","",121,[[],["c_long",6]]],[3,"TimeVal","","",null,null],[11,"tv_sec","","",122,[[],["time_t",6]]],[11,"tv_usec","","",122,[[],["suseconds_t",6]]],[0,"uio","nix::sys","",null,null],[5,"writev","nix::sys::uio","",null,[[["rawfd",6]],["result",6]]],[5,"readv","","",null,[[["rawfd",6]],["result",6]]],[5,"pwritev","","Write to <code>fd</code> at <code>offset</code> from buffers in <code>iov</code>.",null,[[["rawfd",6],["off_t",6]],["result",6]]],[5,"preadv","","Read from <code>fd</code> at <code>offset</code> filling buffers in <code>iov</code>.",null,[[["rawfd",6],["off_t",6]],["result",6]]],[5,"pwrite","","",null,[[["rawfd",6],["off_t",6]],["result",6]]],[5,"pread","","",null,[[["rawfd",6],["off_t",6]],["result",6]]],[3,"RemoteIoVec","","A slice of memory in a remote process, starting at …",null,null],[12,"base","","The starting address of this slice (<code>iov_base</code>).",123,null],[12,"len","","The number of bytes in this slice (<code>iov_len</code>).",123,null],[5,"process_vm_writev","","Write data directly to another process\'s virtual memory …",null,[[["pid",3]],["result",6]]],[5,"process_vm_readv","","Read data directly from another process\'s virtual memory …",null,[[["pid",3]],["result",6]]],[3,"IoVec","","",null,null],[11,"as_slice","","",124,[[]]],[11,"from_slice","","",124,[[],["iovec",3]]],[11,"from_mut_slice","","",124,[[],["iovec",3]]],[0,"utsname","nix::sys","",null,null],[3,"UtsName","nix::sys::utsname","",null,null],[11,"sysname","","",125,[[]]],[11,"nodename","","",125,[[]]],[11,"release","","",125,[[]]],[11,"version","","",125,[[]]],[11,"machine","","",125,[[]]],[5,"uname","","",null,[[],["utsname",3]]],[0,"wait","nix::sys","",null,null],[3,"WaitPidFlag","nix::sys::wait","",null,null],[18,"WNOHANG","","",126,null],[18,"WUNTRACED","","",126,null],[18,"WEXITED","","",126,null],[18,"WCONTINUED","","",126,null],[18,"WSTOPPED","","",126,null],[18,"WNOWAIT","","Don\'t reap, just poll status.",126,null],[18,"__WNOTHREAD","","Don\'t wait on children of other threads in this group",126,null],[18,"__WALL","","Wait on all children, regardless of type",126,null],[18,"__WCLONE","","",126,null],[11,"empty","","Returns an empty set of flags",126,[[],["waitpidflag",3]]],[11,"all","","Returns the set containing all flags.",126,[[],["waitpidflag",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",126,[[],["c_int",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",126,[[["c_int",6]],[["option",4],["waitpidflag",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",126,[[["c_int",6]],["waitpidflag",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",126,[[["c_int",6]],["waitpidflag",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",126,[[]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",126,[[]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",126,[[["waitpidflag",3]]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",126,[[["waitpidflag",3]]]],[11,"insert","","Inserts the specified flags in-place.",126,[[["waitpidflag",3]]]],[11,"remove","","Removes the specified flags in-place.",126,[[["waitpidflag",3]]]],[11,"toggle","","Toggles the specified flags in-place.",126,[[["waitpidflag",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",126,[[["waitpidflag",3]]]],[4,"WaitStatus","","Possible return values from <code>wait()</code> or <code>waitpid()</code>.",null,null],[13,"Exited","","The process exited normally (as with <code>exit()</code> or returning …",127,null],[13,"Signaled","","The process was killed by the given signal. The third …",127,null],[13,"Stopped","","The process is alive, but was stopped by the given …",127,null],[13,"PtraceEvent","","The traced process was stopped by a <code>PTRACE_EVENT_*</code> event. …",127,null],[13,"PtraceSyscall","","The traced process was stopped by execution of a system …",127,null],[13,"Continued","","The process was previously stopped but has resumed …",127,null],[13,"StillAlive","","There are currently no state changes to report in any …",127,null],[11,"pid","","Extracts the PID from the WaitStatus unless it equals …",127,[[],[["pid",3],["option",4]]]],[11,"from_raw","","Convert a raw <code>wstatus</code> as returned by <code>waitpid</code>/<code>wait</code> into a …",127,[[["pid",3]],[["result",6],["waitstatus",4]]]],[5,"waitpid","","",null,[[["option",4],["waitpidflag",3],["option",4],["into",8]],[["result",6],["waitstatus",4]]]],[5,"wait","","",null,[[],[["result",6],["waitstatus",4]]]],[0,"inotify","nix::sys","Monitoring API for filesystem events.",null,null],[3,"AddWatchFlags","nix::sys::inotify","Configuration options for <code>inotify_add_watch</code>.",null,null],[18,"IN_ACCESS","","",128,null],[18,"IN_MODIFY","","",128,null],[18,"IN_ATTRIB","","",128,null],[18,"IN_CLOSE_WRITE","","",128,null],[18,"IN_CLOSE_NOWRITE","","",128,null],[18,"IN_OPEN","","",128,null],[18,"IN_MOVED_FROM","","",128,null],[18,"IN_MOVED_TO","","",128,null],[18,"IN_CREATE","","",128,null],[18,"IN_DELETE","","",128,null],[18,"IN_DELETE_SELF","","",128,null],[18,"IN_MOVE_SELF","","",128,null],[18,"IN_UNMOUNT","","",128,null],[18,"IN_Q_OVERFLOW","","",128,null],[18,"IN_IGNORED","","",128,null],[18,"IN_CLOSE","","",128,null],[18,"IN_MOVE","","",128,null],[18,"IN_ONLYDIR","","",128,null],[18,"IN_DONT_FOLLOW","","",128,null],[18,"IN_ISDIR","","",128,null],[18,"IN_ONESHOT","","",128,null],[18,"IN_ALL_EVENTS","","",128,null],[11,"empty","","Returns an empty set of flags",128,[[],["addwatchflags",3]]],[11,"all","","Returns the set containing all flags.",128,[[],["addwatchflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",128,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",128,[[],[["option",4],["addwatchflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",128,[[],["addwatchflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",128,[[],["addwatchflags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",128,[[]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",128,[[]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",128,[[["addwatchflags",3]]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",128,[[["addwatchflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",128,[[["addwatchflags",3]]]],[11,"remove","","Removes the specified flags in-place.",128,[[["addwatchflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",128,[[["addwatchflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",128,[[["addwatchflags",3]]]],[3,"InitFlags","","Configuration options for <code>inotify_init1</code>.",null,null],[18,"IN_CLOEXEC","","",129,null],[18,"IN_NONBLOCK","","",129,null],[11,"empty","","Returns an empty set of flags",129,[[],["initflags",3]]],[11,"all","","Returns the set containing all flags.",129,[[],["initflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",129,[[],["c_int",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",129,[[["c_int",6]],[["initflags",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",129,[[["c_int",6]],["initflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",129,[[["c_int",6]],["initflags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",129,[[]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",129,[[]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",129,[[["initflags",3]]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",129,[[["initflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",129,[[["initflags",3]]]],[11,"remove","","Removes the specified flags in-place.",129,[[["initflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",129,[[["initflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",129,[[["initflags",3]]]],[3,"Inotify","","An inotify instance. This is also a file descriptor, you …",null,null],[3,"WatchDescriptor","","This object is returned when you create a new watch on an …",null,null],[3,"InotifyEvent","","A single inotify event.",null,null],[12,"wd","","Watch descriptor. This field corresponds to the watch …",130,null],[12,"mask","","Event mask. This field is a bitfield describing the exact …",130,null],[12,"cookie","","This cookie is a number that allows you to connect …",130,null],[12,"name","","Filename. This field exists only if the event was …",130,null],[11,"init","","Initialize a new inotify instance.",131,[[["initflags",3]],[["result",6],["inotify",3]]]],[11,"add_watch","","Adds a new watch on the target file or directory. ",131,[[["addwatchflags",3]],[["watchdescriptor",3],["result",6]]]],[11,"rm_watch","","Removes an existing watch using the watch descriptor …",131,[[["watchdescriptor",3]],["result",6]]],[11,"read_events","","Reads a collection of events from the inotify file …",131,[[],[["vec",3],["result",6]]]],[0,"timerfd","nix::sys","Timer API via file descriptors.",null,null],[3,"TimerFd","nix::sys::timerfd","A timerfd instance. This is also a file descriptor, you …",null,null],[4,"ClockId","","The type of the clock used to mark the progress of the …",null,null],[13,"CLOCK_REALTIME","","",132,null],[13,"CLOCK_MONOTONIC","","",132,null],[13,"CLOCK_BOOTTIME","","",132,null],[13,"CLOCK_REALTIME_ALARM","","",132,null],[13,"CLOCK_BOOTTIME_ALARM","","",132,null],[3,"TimerFlags","","Additional flags to change the behaviour of the file …",null,null],[18,"TFD_NONBLOCK","","",133,null],[18,"TFD_CLOEXEC","","",133,null],[11,"empty","","Returns an empty set of flags",133,[[],["timerflags",3]]],[11,"all","","Returns the set containing all flags.",133,[[],["timerflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",133,[[],["c_int",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",133,[[["c_int",6]],[["option",4],["timerflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",133,[[["c_int",6]],["timerflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",133,[[["c_int",6]],["timerflags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",133,[[]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",133,[[]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",133,[[["timerflags",3]]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",133,[[["timerflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",133,[[["timerflags",3]]]],[11,"remove","","Removes the specified flags in-place.",133,[[["timerflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",133,[[["timerflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",133,[[["timerflags",3]]]],[3,"TimerSetTimeFlags","","Flags that are used for arming the timer.",null,null],[18,"TFD_TIMER_ABSTIME","","",134,null],[11,"empty","","Returns an empty set of flags",134,[[],["timersettimeflags",3]]],[11,"all","","Returns the set containing all flags.",134,[[],["timersettimeflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",134,[[],["c_int",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",134,[[["c_int",6]],[["timersettimeflags",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",134,[[["c_int",6]],["timersettimeflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",134,[[["c_int",6]],["timersettimeflags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",134,[[]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",134,[[]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",134,[[["timersettimeflags",3]]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",134,[[["timersettimeflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",134,[[["timersettimeflags",3]]]],[11,"remove","","Removes the specified flags in-place.",134,[[["timersettimeflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",134,[[["timersettimeflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",134,[[["timersettimeflags",3]]]],[4,"Expiration","","An enumeration allowing the definition of the expiration …",null,null],[13,"OneShot","","",135,null],[13,"IntervalDelayed","","",135,null],[13,"Interval","","",135,null],[11,"new","","Creates a new timer based on the clock defined by <code>clockid</code>…",136,[[["timerflags",3],["clockid",4]],["result",6]]],[11,"set","","Sets a new alarm on the timer.",136,[[["timersettimeflags",3],["expiration",4]],["result",6]]],[11,"get","","Get the parameters for the alarm currently set, if any.",136,[[],[["option",4],["result",6]]]],[11,"unset","","Remove the alarm if any is set.",136,[[],["result",6]]],[11,"wait","","Wait for the configured alarm to expire.",136,[[],["result",6]]],[0,"ucontext","nix","",null,null],[3,"UContext","nix::ucontext","",null,null],[11,"get","","",137,[[],[["result",6],["ucontext",3]]]],[11,"set","","",137,[[],["result",6]]],[11,"sigmask_mut","","",137,[[],["sigset",3]]],[11,"sigmask","","",137,[[],["sigset",3]]],[0,"unistd","nix","Safe wrappers around functions found in libc \\\"unistd.h\\\" …",null,null],[0,"alarm","nix::unistd","Alarm signal scheduling.",null,null],[5,"set","nix::unistd::alarm","Schedule an alarm signal.",null,[[["c_uint",6]],[["c_uint",6],["option",4]]]],[5,"cancel","","Cancel an previously set alarm signal.",null,[[],[["c_uint",6],["option",4]]]],[0,"acct","nix::unistd","",null,null],[5,"enable","nix::unistd::acct","Enable process accounting",null,[[],["result",6]]],[5,"disable","","Disable process accounting",null,[[],["result",6]]],[5,"pivot_root","nix::unistd","",null,[[],["result",6]]],[5,"setresuid","","Sets the real, effective, and saved uid. (see setresuid(2)…",null,[[["uid",3]],["result",6]]],[5,"setresgid","","Sets the real, effective, and saved gid. (see setresuid(2)…",null,[[["gid",3]],["result",6]]],[3,"Uid","","User identifier",null,null],[11,"from_raw","","Creates <code>Uid</code> from raw <code>uid_t</code>.",138,[[["uid_t",6]]]],[11,"current","","Returns Uid of calling process. This is practically a …",138,[[]]],[11,"effective","","Returns effective Uid of calling process. This is …",138,[[]]],[11,"is_root","","Returns true if the <code>Uid</code> represents privileged user - …",138,[[]]],[11,"as_raw","","Get the raw <code>uid_t</code> wrapped by <code>self</code>.",138,[[],["uid_t",6]]],[17,"ROOT","","Constant for UID = 0",null,null],[3,"Gid","","Group identifier",null,null],[11,"from_raw","","Creates <code>Gid</code> from raw <code>gid_t</code>.",139,[[["gid_t",6]]]],[11,"current","","Returns Gid of calling process. This is practically a …",139,[[]]],[11,"effective","","Returns effective Gid of calling process. This is …",139,[[]]],[11,"as_raw","","Get the raw <code>gid_t</code> wrapped by <code>self</code>.",139,[[],["gid_t",6]]],[3,"Pid","","Process identifier",null,null],[11,"from_raw","","Creates <code>Pid</code> from raw <code>pid_t</code>.",140,[[["pid_t",6]]]],[11,"this","","Returns PID of calling process",140,[[]]],[11,"parent","","Returns PID of parent of calling process",140,[[]]],[11,"as_raw","","Get the raw <code>pid_t</code> wrapped by <code>self</code>.",140,[[],["pid_t",6]]],[4,"ForkResult","","Represents the successful result of calling <code>fork</code>",null,null],[13,"Parent","","",141,null],[12,"child","nix::unistd::ForkResult","",142,null],[13,"Child","nix::unistd","",141,null],[11,"is_child","","Return <code>true</code> if this is the child process of the <code>fork()</code>",141,[[]]],[11,"is_parent","","Returns <code>true</code> if this is the parent process of the <code>fork()</code>",141,[[]]],[5,"fork","","Create a new child process duplicating the parent process …",null,[[],[["result",6],["forkresult",4]]]],[5,"getpid","","Get the pid of this process (see getpid(2)).",null,[[],["pid",3]]],[5,"getppid","","Get the pid of this processes\' parent (see getpid(2)).",null,[[],["pid",3]]],[5,"setpgid","","Set a process group ID (see setpgid(2)).",null,[[["pid",3]],["result",6]]],[5,"getpgid","","",null,[[["pid",3],["option",4]],[["pid",3],["result",6]]]],[5,"setsid","","Create new session and set process group id (see setsid(2)…",null,[[],[["pid",3],["result",6]]]],[5,"getsid","","Get the process group ID of a session leader getsid(2).",null,[[["pid",3],["option",4]],[["pid",3],["result",6]]]],[5,"tcgetpgrp","","Get the terminal foreground process group (see …",null,[[["c_int",6]],[["pid",3],["result",6]]]],[5,"tcsetpgrp","","Set the terminal foreground process group (see …",null,[[["pid",3],["c_int",6]],["result",6]]],[5,"getpgrp","","Get the group id of the calling process (see getpgrp(3)).",null,[[],["pid",3]]],[5,"gettid","","Get the caller\'s thread ID (see gettid(2).",null,[[],["pid",3]]],[5,"dup","","Create a copy of the specified file descriptor (see dup(2)…",null,[[["rawfd",6]],[["rawfd",6],["result",6]]]],[5,"dup2","","Create a copy of the specified file descriptor using the …",null,[[["rawfd",6]],[["rawfd",6],["result",6]]]],[5,"dup3","","Create a new copy of the specified file descriptor using …",null,[[["rawfd",6],["oflag",3]],[["rawfd",6],["result",6]]]],[5,"chdir","","Change the current working directory of the calling …",null,[[],["result",6]]],[5,"fchdir","","Change the current working directory of the process to …",null,[[["rawfd",6]],["result",6]]],[5,"mkdir","","Creates new directory <code>path</code> with access rights <code>mode</code>.  (see …",null,[[["mode",3]],["result",6]]],[5,"mkfifo","","Creates new fifo special file (named pipe) with path <code>path</code> …",null,[[["mode",3]],["result",6]]],[5,"mkfifoat","","Creates new fifo special file (named pipe) with path <code>path</code> …",null,[[["rawfd",6],["option",4],["mode",3]],["result",6]]],[5,"symlinkat","","Creates a symbolic link at <code>path2</code> which points to <code>path1</code>.",null,[[["rawfd",6],["option",4]],["result",6]]],[5,"getcwd","","Returns the current directory as a <code>PathBuf</code>",null,[[],[["result",6],["pathbuf",3]]]],[5,"chown","","Change the ownership of the file at <code>path</code> to be owned by …",null,[[["gid",3],["uid",3],["option",4],["option",4]],["result",6]]],[5,"fchown","","Change the ownership of the file referred to by the open …",null,[[["gid",3],["uid",3],["option",4],["rawfd",6],["option",4]],["result",6]]],[4,"FchownatFlags","","Flags for <code>fchownat</code> function.",null,null],[13,"FollowSymlink","","",143,null],[13,"NoFollowSymlink","","",143,null],[5,"fchownat","","Change the ownership of the file at <code>path</code> to be owned by …",null,[[["option",4],["uid",3],["option",4],["rawfd",6],["option",4],["gid",3],["fchownatflags",4]],["result",6]]],[5,"execv","","Replace the current process image with a new one (see …",null,[[["cstr",3]],[["infallible",4],["result",6]]]],[5,"execve","","Replace the current process image with a new one (see …",null,[[["cstr",3]],[["infallible",4],["result",6]]]],[5,"execvp","","Replace the current process image with a new one and …",null,[[["cstr",3]],[["infallible",4],["result",6]]]],[5,"execvpe","","Replace the current process image with a new one and …",null,[[["cstr",3]],[["infallible",4],["result",6]]]],[5,"fexecve","","Replace the current process image with a new one (see …",null,[[["rawfd",6]],[["infallible",4],["result",6]]]],[5,"execveat","","Execute program relative to a directory file descriptor …",null,[[["rawfd",6],["atflags",3],["cstr",3]],[["infallible",4],["result",6]]]],[5,"daemon","","Daemonize this process by detaching from the controlling …",null,[[],["result",6]]],[5,"sethostname","","Set the system host name (see sethostname(2)).",null,[[["asref",8],["osstr",3]],["result",6]]],[5,"gethostname","","Get the host name and store it in the provided buffer, …",null,[[],[["result",6],["cstr",3]]]],[5,"close","","Close a raw file descriptor",null,[[["rawfd",6]],["result",6]]],[5,"read","","Read from a raw file descriptor.",null,[[["rawfd",6]],["result",6]]],[5,"write","","Write to a raw file descriptor.",null,[[["rawfd",6]],["result",6]]],[4,"Whence","","Directive that tells <code>lseek</code> and <code>lseek64</code> what the offset is …",null,null],[13,"SeekSet","","Specify an offset relative to the start of the file.",144,null],[13,"SeekCur","","Specify an offset relative to the current file location.",144,null],[13,"SeekEnd","","Specify an offset relative to the end of the file.",144,null],[13,"SeekData","","Specify an offset relative to the next location in the …",144,null],[13,"SeekHole","","Specify an offset relative to the next hole in the file …",144,null],[5,"lseek","","Move the read/write file offset.",null,[[["rawfd",6],["whence",4],["off_t",6]],[["result",6],["off_t",6]]]],[5,"lseek64","","",null,[[["rawfd",6],["off64_t",6],["whence",4]],[["result",6],["off64_t",6]]]],[5,"pipe","","Create an interprocess channel.",null,[[],["result",6]]],[5,"pipe2","","Like <code>pipe</code>, but allows setting certain file descriptor …",null,[[["oflag",3]],["result",6]]],[5,"truncate","","Truncate a file to a specified length",null,[[["off_t",6]],["result",6]]],[5,"ftruncate","","Truncate a file to a specified length",null,[[["rawfd",6],["off_t",6]],["result",6]]],[5,"isatty","","",null,[[["rawfd",6]],["result",6]]],[4,"LinkatFlags","","Flags for <code>linkat</code> function.",null,null],[13,"SymlinkFollow","","",145,null],[13,"NoSymlinkFollow","","",145,null],[5,"linkat","","Link one file to another file",null,[[["rawfd",6],["option",4],["linkatflags",4]],["result",6]]],[5,"unlink","","Remove a directory entry",null,[[],["result",6]]],[4,"UnlinkatFlags","","Flags for <code>unlinkat</code> function.",null,null],[13,"RemoveDir","","",146,null],[13,"NoRemoveDir","","",146,null],[5,"unlinkat","","Remove a directory entry",null,[[["rawfd",6],["option",4],["unlinkatflags",4]],["result",6]]],[5,"chroot","","",null,[[],["result",6]]],[5,"sync","","Commit filesystem caches to disk",null,[[]]],[5,"fsync","","Synchronize changes to a file",null,[[["rawfd",6]],["result",6]]],[5,"fdatasync","","Synchronize the data of a file",null,[[["rawfd",6]],["result",6]]],[5,"getuid","","Get a real user ID",null,[[],["uid",3]]],[5,"geteuid","","Get the effective user ID",null,[[],["uid",3]]],[5,"getgid","","Get the real group ID",null,[[],["gid",3]]],[5,"getegid","","Get the effective group ID",null,[[],["gid",3]]],[5,"seteuid","","Set the effective user ID",null,[[["uid",3]],["result",6]]],[5,"setegid","","Set the effective group ID",null,[[["gid",3]],["result",6]]],[5,"setuid","","Set the user ID",null,[[["uid",3]],["result",6]]],[5,"setgid","","Set the group ID",null,[[["gid",3]],["result",6]]],[5,"setfsuid","","Set the user identity used for filesystem checks …",null,[[["uid",3]],["uid",3]]],[5,"setfsgid","","Set the group identity used for filesystem checks …",null,[[["gid",3]],["gid",3]]],[5,"getgroups","","Get the list of supplementary group IDs of the calling …",null,[[],[["result",6],["vec",3]]]],[5,"setgroups","","Set the list of supplementary group IDs for the calling …",null,[[],["result",6]]],[5,"getgrouplist","","Calculate the supplementary group access list.",null,[[["gid",3],["cstr",3]],[["result",6],["vec",3]]]],[5,"initgroups","","Initialize the supplementary group access list.",null,[[["gid",3],["cstr",3]],["result",6]]],[5,"pause","","Suspend the thread until a signal is received.",null,[[]]],[5,"sleep","","Suspend execution for an interval of time",null,[[["c_uint",6]],["c_uint",6]]],[5,"mkstemp","","Creates a regular file which persists even after process …",null,[[],["result",6]]],[4,"PathconfVar","","Variable names for <code>pathconf</code>",null,null],[13,"FILESIZEBITS","","Minimum number of bits needed to represent, as a signed …",147,null],[13,"LINK_MAX","","Maximum number of links to a single file.",147,null],[13,"MAX_CANON","","Maximum number of bytes in a terminal canonical input …",147,null],[13,"MAX_INPUT","","Minimum number of bytes for which space is available in a …",147,null],[13,"NAME_MAX","","Maximum number of bytes in a filename (not including the …",147,null],[13,"PATH_MAX","","Maximum number of bytes the implementation will store as …",147,null],[13,"PIPE_BUF","","Maximum number of bytes that is guaranteed to be atomic …",147,null],[13,"POSIX2_SYMLINKS","","Symbolic links can be created.",147,null],[13,"POSIX_ALLOC_SIZE_MIN","","Minimum number of bytes of storage actually allocated for …",147,null],[13,"POSIX_REC_INCR_XFER_SIZE","","Recommended increment for file transfer sizes between the …",147,null],[13,"POSIX_REC_MAX_XFER_SIZE","","Maximum recommended file transfer size.",147,null],[13,"POSIX_REC_MIN_XFER_SIZE","","Minimum recommended file transfer size.",147,null],[13,"POSIX_REC_XFER_ALIGN","","Recommended file transfer buffer alignment.",147,null],[13,"SYMLINK_MAX","","Maximum number of bytes in a symbolic link.",147,null],[13,"_POSIX_CHOWN_RESTRICTED","","The use of <code>chown</code> and <code>fchown</code> is restricted to a process …",147,null],[13,"_POSIX_NO_TRUNC","","Pathname components longer than {NAME_MAX} generate an …",147,null],[13,"_POSIX_VDISABLE","","This symbol shall be defined to be the value of a …",147,null],[13,"_POSIX_ASYNC_IO","","Asynchronous input or output operations may be performed …",147,null],[13,"_POSIX_PRIO_IO","","Prioritized input or output operations may be performed …",147,null],[13,"_POSIX_SYNC_IO","","Synchronized input or output operations may be performed …",147,null],[5,"fpathconf","","Like <code>pathconf</code>, but works with file descriptors instead of …",null,[[["rawfd",6],["pathconfvar",4]],[["result",6],["option",4]]]],[5,"pathconf","","Get path-dependent configurable system variables (see …",null,[[["pathconfvar",4]],[["result",6],["option",4]]]],[4,"SysconfVar","","Variable names for <code>sysconf</code>",null,null],[13,"AIO_LISTIO_MAX","","Maximum number of I/O operations in a single list I/O …",148,null],[13,"AIO_MAX","","Maximum number of outstanding asynchronous I/O operations …",148,null],[13,"AIO_PRIO_DELTA_MAX","","The maximum amount by which a process can decrease its …",148,null],[13,"ARG_MAX","","Maximum length of argument to the exec functions …",148,null],[13,"ATEXIT_MAX","","Maximum number of functions that may be registered with …",148,null],[13,"BC_BASE_MAX","","Maximum obase values allowed by the bc utility.",148,null],[13,"BC_DIM_MAX","","Maximum number of elements permitted in an array by the …",148,null],[13,"BC_SCALE_MAX","","Maximum scale value allowed by the bc utility.",148,null],[13,"BC_STRING_MAX","","Maximum length of a string constant accepted by the bc …",148,null],[13,"CHILD_MAX","","Maximum number of simultaneous processes per real user ID.",148,null],[13,"CLK_TCK","","",148,null],[13,"COLL_WEIGHTS_MAX","","Maximum number of weights that can be assigned to an …",148,null],[13,"DELAYTIMER_MAX","","Maximum number of timer expiration overruns.",148,null],[13,"EXPR_NEST_MAX","","Maximum number of expressions that can be nested within …",148,null],[13,"HOST_NAME_MAX","","Maximum length of a host name (not including the …",148,null],[13,"IOV_MAX","","Maximum number of iovec structures that one process has …",148,null],[13,"LINE_MAX","","Unless otherwise noted, the maximum length, in bytes, of …",148,null],[13,"LOGIN_NAME_MAX","","Maximum length of a login name.",148,null],[13,"NGROUPS_MAX","","Maximum number of simultaneous supplementary group IDs …",148,null],[13,"GETGR_R_SIZE_MAX","","Initial size of <code>getgrgid_r</code> and <code>getgrnam_r</code> data buffers",148,null],[13,"GETPW_R_SIZE_MAX","","Initial size of <code>getpwuid_r</code> and <code>getpwnam_r</code> data buffers",148,null],[13,"MQ_OPEN_MAX","","The maximum number of open message queue descriptors a …",148,null],[13,"MQ_PRIO_MAX","","The maximum number of message priorities supported by the …",148,null],[13,"OPEN_MAX","","A value one greater than the maximum value that the …",148,null],[13,"_POSIX_ADVISORY_INFO","","The implementation supports the Advisory Information …",148,null],[13,"_POSIX_BARRIERS","","The implementation supports barriers.",148,null],[13,"_POSIX_ASYNCHRONOUS_IO","","The implementation supports asynchronous input and output.",148,null],[13,"_POSIX_CLOCK_SELECTION","","The implementation supports clock selection.",148,null],[13,"_POSIX_CPUTIME","","The implementation supports the Process CPU-Time Clocks …",148,null],[13,"_POSIX_FSYNC","","The implementation supports the File Synchronization …",148,null],[13,"_POSIX_IPV6","","The implementation supports the IPv6 option.",148,null],[13,"_POSIX_JOB_CONTROL","","The implementation supports job control.",148,null],[13,"_POSIX_MAPPED_FILES","","The implementation supports memory mapped Files.",148,null],[13,"_POSIX_MEMLOCK","","The implementation supports the Process Memory Locking …",148,null],[13,"_POSIX_MEMLOCK_RANGE","","The implementation supports the Range Memory Locking …",148,null],[13,"_POSIX_MEMORY_PROTECTION","","The implementation supports memory protection.",148,null],[13,"_POSIX_MESSAGE_PASSING","","The implementation supports the Message Passing option.",148,null],[13,"_POSIX_MONOTONIC_CLOCK","","The implementation supports the Monotonic Clock option.",148,null],[13,"_POSIX_PRIORITIZED_IO","","The implementation supports the Prioritized Input and …",148,null],[13,"_POSIX_PRIORITY_SCHEDULING","","The implementation supports the Process Scheduling option.",148,null],[13,"_POSIX_RAW_SOCKETS","","The implementation supports the Raw Sockets option.",148,null],[13,"_POSIX_READER_WRITER_LOCKS","","The implementation supports read-write locks.",148,null],[13,"_POSIX_REALTIME_SIGNALS","","The implementation supports realtime signals.",148,null],[13,"_POSIX_REGEXP","","The implementation supports the Regular Expression …",148,null],[13,"_POSIX_SAVED_IDS","","Each process has a saved set-user-ID and a saved …",148,null],[13,"_POSIX_SEMAPHORES","","The implementation supports semaphores.",148,null],[13,"_POSIX_SHARED_MEMORY_OBJECTS","","The implementation supports the Shared Memory Objects …",148,null],[13,"_POSIX_SHELL","","The implementation supports the POSIX shell.",148,null],[13,"_POSIX_SPAWN","","The implementation supports the Spawn option.",148,null],[13,"_POSIX_SPIN_LOCKS","","The implementation supports spin locks.",148,null],[13,"_POSIX_SPORADIC_SERVER","","The implementation supports the Process Sporadic Server …",148,null],[13,"_POSIX_SS_REPL_MAX","","",148,null],[13,"_POSIX_SYNCHRONIZED_IO","","The implementation supports the Synchronized Input and …",148,null],[13,"_POSIX_THREAD_ATTR_STACKADDR","","The implementation supports the Thread Stack Address …",148,null],[13,"_POSIX_THREAD_ATTR_STACKSIZE","","The implementation supports the Thread Stack Size …",148,null],[13,"_POSIX_THREAD_CPUTIME","","The implementation supports the Thread CPU-Time Clocks …",148,null],[13,"_POSIX_THREAD_PRIO_INHERIT","","The implementation supports the Non-Robust Mutex Priority …",148,null],[13,"_POSIX_THREAD_PRIO_PROTECT","","The implementation supports the Non-Robust Mutex Priority …",148,null],[13,"_POSIX_THREAD_PRIORITY_SCHEDULING","","The implementation supports the Thread Execution …",148,null],[13,"_POSIX_THREAD_PROCESS_SHARED","","The implementation supports the Thread Process-Shared …",148,null],[13,"_POSIX_THREAD_ROBUST_PRIO_INHERIT","","The implementation supports the Robust Mutex Priority …",148,null],[13,"_POSIX_THREAD_ROBUST_PRIO_PROTECT","","The implementation supports the Robust Mutex Priority …",148,null],[13,"_POSIX_THREAD_SAFE_FUNCTIONS","","The implementation supports thread-safe functions.",148,null],[13,"_POSIX_THREAD_SPORADIC_SERVER","","The implementation supports the Thread Sporadic Server …",148,null],[13,"_POSIX_THREADS","","The implementation supports threads.",148,null],[13,"_POSIX_TIMEOUTS","","The implementation supports timeouts.",148,null],[13,"_POSIX_TIMERS","","The implementation supports timers.",148,null],[13,"_POSIX_TRACE","","The implementation supports the Trace option.",148,null],[13,"_POSIX_TRACE_EVENT_FILTER","","The implementation supports the Trace Event Filter option.",148,null],[13,"_POSIX_TRACE_EVENT_NAME_MAX","","",148,null],[13,"_POSIX_TRACE_INHERIT","","The implementation supports the Trace Inherit option.",148,null],[13,"_POSIX_TRACE_LOG","","The implementation supports the Trace Log option.",148,null],[13,"_POSIX_TRACE_NAME_MAX","","",148,null],[13,"_POSIX_TRACE_SYS_MAX","","",148,null],[13,"_POSIX_TRACE_USER_EVENT_MAX","","",148,null],[13,"_POSIX_TYPED_MEMORY_OBJECTS","","The implementation supports the Typed Memory Objects …",148,null],[13,"_POSIX_VERSION","","Integer value indicating version of this standard …",148,null],[13,"_POSIX_V6_ILP32_OFF32","","The implementation provides a C-language compilation …",148,null],[13,"_POSIX_V6_ILP32_OFFBIG","","The implementation provides a C-language compilation …",148,null],[13,"_POSIX_V6_LP64_OFF64","","The implementation provides a C-language compilation …",148,null],[13,"_POSIX_V6_LPBIG_OFFBIG","","The implementation provides a C-language compilation …",148,null],[13,"_POSIX2_C_BIND","","The implementation supports the C-Language Binding option.",148,null],[13,"_POSIX2_C_DEV","","The implementation supports the C-Language Development …",148,null],[13,"_POSIX2_CHAR_TERM","","The implementation supports the Terminal Characteristics …",148,null],[13,"_POSIX2_FORT_DEV","","The implementation supports the FORTRAN Development …",148,null],[13,"_POSIX2_FORT_RUN","","The implementation supports the FORTRAN Runtime Utilities …",148,null],[13,"_POSIX2_LOCALEDEF","","The implementation supports the creation of locales by …",148,null],[13,"_POSIX2_PBS","","The implementation supports the Batch Environment …",148,null],[13,"_POSIX2_PBS_ACCOUNTING","","The implementation supports the Batch Accounting option.",148,null],[13,"_POSIX2_PBS_CHECKPOINT","","The implementation supports the Batch Checkpoint/Restart …",148,null],[13,"_POSIX2_PBS_LOCATE","","The implementation supports the Locate Batch Job Request …",148,null],[13,"_POSIX2_PBS_MESSAGE","","The implementation supports the Batch Job Message Request …",148,null],[13,"_POSIX2_PBS_TRACK","","The implementation supports the Track Batch Job Request …",148,null],[13,"_POSIX2_SW_DEV","","The implementation supports the Software Development …",148,null],[13,"_POSIX2_UPE","","The implementation supports the User Portability …",148,null],[13,"_POSIX2_VERSION","","Integer value indicating version of the Shell and …",148,null],[13,"PAGE_SIZE","","The size of a system page in bytes.",148,null],[13,"PTHREAD_DESTRUCTOR_ITERATIONS","","",148,null],[13,"PTHREAD_KEYS_MAX","","",148,null],[13,"PTHREAD_STACK_MIN","","",148,null],[13,"PTHREAD_THREADS_MAX","","",148,null],[13,"RE_DUP_MAX","","",148,null],[13,"RTSIG_MAX","","",148,null],[13,"SEM_NSEMS_MAX","","",148,null],[13,"SEM_VALUE_MAX","","",148,null],[13,"SIGQUEUE_MAX","","",148,null],[13,"STREAM_MAX","","",148,null],[13,"SYMLOOP_MAX","","",148,null],[13,"TIMER_MAX","","",148,null],[13,"TTY_NAME_MAX","","",148,null],[13,"TZNAME_MAX","","",148,null],[13,"_XOPEN_CRYPT","","The implementation supports the X/Open Encryption Option …",148,null],[13,"_XOPEN_ENH_I18N","","The implementation supports the Issue 4, Version 2 …",148,null],[13,"_XOPEN_LEGACY","","",148,null],[13,"_XOPEN_REALTIME","","The implementation supports the X/Open Realtime Option …",148,null],[13,"_XOPEN_REALTIME_THREADS","","The implementation supports the X/Open Realtime Threads …",148,null],[13,"_XOPEN_SHM","","The implementation supports the Issue 4, Version 2 Shared …",148,null],[13,"_XOPEN_STREAMS","","The implementation supports the XSI STREAMS Option Group.",148,null],[13,"_XOPEN_UNIX","","The implementation supports the XSI option",148,null],[13,"_XOPEN_VERSION","","Integer value indicating version of the X/Open …",148,null],[5,"sysconf","","Get configurable system variables (see sysconf(3))",null,[[["sysconfvar",4]],[["result",6],["option",4]]]],[3,"AccessFlags","","Options for access()",null,null],[18,"F_OK","","Test for existence of file.",149,null],[18,"R_OK","","Test for read permission.",149,null],[18,"W_OK","","Test for write permission.",149,null],[18,"X_OK","","Test for execute (search) permission.",149,null],[11,"empty","","Returns an empty set of flags",149,[[],["accessflags",3]]],[11,"all","","Returns the set containing all flags.",149,[[],["accessflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",149,[[],["c_int",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",149,[[["c_int",6]],[["accessflags",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",149,[[["c_int",6]],["accessflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",149,[[["c_int",6]],["accessflags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",149,[[]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",149,[[]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",149,[[["accessflags",3]]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",149,[[["accessflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",149,[[["accessflags",3]]]],[11,"remove","","Removes the specified flags in-place.",149,[[["accessflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",149,[[["accessflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",149,[[["accessflags",3]]]],[5,"access","","Checks the file named by <code>path</code> for accessibility according …",null,[[["accessflags",3]],["result",6]]],[3,"User","","Representation of a User, based on <code>libc::passwd</code>",null,null],[12,"name","","Username",150,null],[12,"passwd","","User password (probably encrypted)",150,null],[12,"uid","","User ID",150,null],[12,"gid","","Group ID",150,null],[12,"gecos","","User information",150,null],[12,"dir","","Home directory",150,null],[12,"shell","","Path to shell",150,null],[11,"from_uid","","Get a user by UID.",150,[[["uid",3]],[["result",6],["option",4]]]],[11,"from_name","","Get a user by name.",150,[[],[["result",6],["option",4]]]],[3,"Group","","Representation of a Group, based on <code>libc::group</code>",null,null],[12,"name","","Group name",151,null],[12,"gid","","Group ID",151,null],[12,"mem","","List of Group members",151,null],[11,"from_gid","","Get a group by GID.",151,[[["gid",3]],[["result",6],["option",4]]]],[11,"from_name","","Get a group by name.",151,[[],[["result",6],["option",4]]]],[5,"ttyname","","Get the name of the terminal device that is open on file …",null,[[["rawfd",6]],[["result",6],["pathbuf",3]]]],[6,"Result","nix","Nix Result Type",null,null],[4,"Error","","Nix Error Type",null,null],[13,"Sys","","",152,null],[13,"InvalidPath","","",152,null],[13,"InvalidUtf8","","The operation involved a conversion to Rust\'s native …",152,null],[13,"UnsupportedOperation","","The operation is not supported by Nix, in this instance …",152,null],[11,"as_errno","","Convert this <code>Error</code> to an <code>Errno</code>.",152,[[],[["errno",4],["option",4]]]],[11,"from_errno","","Create a nix Error from a given errno",152,[[["errno",4]],["error",4]]],[11,"last","","Get the current errno and convert it to a nix Error",152,[[],["error",4]]],[11,"invalid_argument","","Create a new invalid argument error (<code>EINVAL</code>)",152,[[],["error",4]]],[8,"NixPath","","",null,null],[10,"is_empty","","",153,[[]]],[10,"len","","",153,[[]]],[10,"with_nix_path","","",153,[[],["result",6]]],[14,"request_code_none","","Generate an ioctl request code for a command that passes …",null,null],[14,"request_code_read","","Generate an ioctl request code for a command that reads.",null,null],[14,"request_code_write","","Generate an ioctl request code for a command that writes.",null,null],[14,"request_code_readwrite","","Generate an ioctl request code for a command that reads …",null,null],[14,"ioctl_none","","Generates a wrapper function for an ioctl that passes no …",null,null],[14,"ioctl_none_bad","","Generates a wrapper function for a \\\"bad\\\" ioctl that …",null,null],[14,"ioctl_read","","Generates a wrapper function for an ioctl that reads data …",null,null],[14,"ioctl_read_bad","","Generates a wrapper function for a \\\"bad\\\" ioctl that reads …",null,null],[14,"ioctl_write_ptr","","Generates a wrapper function for an ioctl that writes …",null,null],[14,"ioctl_write_ptr_bad","","Generates a wrapper function for a \\\"bad\\\" ioctl that …",null,null],[14,"ioctl_write_int","","Generates a wrapper function for a ioctl that writes an …",null,null],[14,"ioctl_write_int_bad","","Generates a wrapper function for a \\\"bad\\\" ioctl that …",null,null],[14,"ioctl_readwrite","","Generates a wrapper function for an ioctl that reads and …",null,null],[14,"ioctl_readwrite_bad","","Generates a wrapper function for a \\\"bad\\\" ioctl that reads …",null,null],[14,"ioctl_read_buf","","Generates a wrapper function for an ioctl that reads an …",null,null],[14,"ioctl_write_buf","","Generates a wrapper function for an ioctl that writes an …",null,null],[14,"ioctl_readwrite_buf","","Generates a wrapper function for an ioctl that reads and …",null,null],[14,"cmsg_space","","Create a buffer large enough for storing some control …",null,null],[11,"from","nix::dir","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",154,[[]]],[11,"into","","",154,[[]]],[11,"into_iter","","",154,[[]]],[11,"borrow","","",154,[[]]],[11,"borrow_mut","","",154,[[]]],[11,"try_from","","",154,[[],["result",4]]],[11,"try_into","","",154,[[],["result",4]]],[11,"type_id","","",154,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","nix::errno","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","nix::fcntl","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","nix::ifaddrs","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",155,[[]]],[11,"into","","",155,[[]]],[11,"into_iter","","",155,[[]]],[11,"borrow","","",155,[[]]],[11,"borrow_mut","","",155,[[]]],[11,"try_from","","",155,[[],["result",4]]],[11,"try_into","","",155,[[],["result",4]]],[11,"type_id","","",155,[[],["typeid",3]]],[11,"from","nix::kmod","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","nix::mount","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","nix::mqueue","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","nix::net::if_","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","nix::poll","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","nix::pty","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","","",156,[[]]],[11,"into","","",156,[[]]],[11,"to_owned","","",156,[[]]],[11,"clone_into","","",156,[[]]],[11,"borrow","","",156,[[]]],[11,"borrow_mut","","",156,[[]]],[11,"try_from","","",156,[[],["result",4]]],[11,"try_into","","",156,[[],["result",4]]],[11,"type_id","","",156,[[],["typeid",3]]],[11,"from","nix::sched","",157,[[]]],[11,"into","","",157,[[]]],[11,"to_owned","","",157,[[]]],[11,"clone_into","","",157,[[]]],[11,"borrow","","",157,[[]]],[11,"borrow_mut","","",157,[[]]],[11,"try_from","","",157,[[],["result",4]]],[11,"try_into","","",157,[[],["result",4]]],[11,"type_id","","",157,[[],["typeid",3]]],[11,"from","","",158,[[]]],[11,"into","","",158,[[]]],[11,"to_owned","","",158,[[]]],[11,"clone_into","","",158,[[]]],[11,"borrow","","",158,[[]]],[11,"borrow_mut","","",158,[[]]],[11,"try_from","","",158,[[],["result",4]]],[11,"try_into","","",158,[[],["result",4]]],[11,"type_id","","",158,[[],["typeid",3]]],[11,"from","nix::sys::aio","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from","nix::sys::epoll","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"from","nix::sys::eventfd","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"from","nix::sys::memfd","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"from","nix::sys::mman","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"from","nix::sys::ptrace","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"from","","",159,[[]]],[11,"into","","",159,[[]]],[11,"to_owned","","",159,[[]]],[11,"clone_into","","",159,[[]]],[11,"borrow","","",159,[[]]],[11,"borrow_mut","","",159,[[]]],[11,"try_from","","",159,[[],["result",4]]],[11,"try_into","","",159,[[],["result",4]]],[11,"type_id","","",159,[[],["typeid",3]]],[11,"from","nix::sys::quota","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"to_owned","","",51,[[]]],[11,"clone_into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"from","nix::sys::reboot","",52,[[]]],[11,"into","","",52,[[]]],[11,"to_owned","","",52,[[]]],[11,"clone_into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"from","nix::sys::select","",53,[[]]],[11,"into","","",53,[[]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"from","","",160,[[]]],[11,"into","","",160,[[]]],[11,"into_iter","","",160,[[]]],[11,"borrow","","",160,[[]]],[11,"borrow_mut","","",160,[[]]],[11,"try_from","","",160,[[],["result",4]]],[11,"try_into","","",160,[[],["result",4]]],[11,"type_id","","",160,[[],["typeid",3]]],[11,"from","nix::sys::signal","",161,[[]]],[11,"into","","",161,[[]]],[11,"to_owned","","",161,[[]]],[11,"clone_into","","",161,[[]]],[11,"borrow","","",161,[[]]],[11,"borrow_mut","","",161,[[]]],[11,"try_from","","",161,[[],["result",4]]],[11,"try_into","","",161,[[],["result",4]]],[11,"type_id","","",161,[[],["typeid",3]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"to_owned","","",54,[[]]],[11,"clone_into","","",54,[[]]],[11,"to_string","","",54,[[],["string",3]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"from","","",162,[[]]],[11,"into","","",162,[[]]],[11,"into_iter","","",162,[[]]],[11,"to_owned","","",162,[[]]],[11,"clone_into","","",162,[[]]],[11,"borrow","","",162,[[]]],[11,"borrow_mut","","",162,[[]]],[11,"try_from","","",162,[[],["result",4]]],[11,"try_into","","",162,[[],["result",4]]],[11,"type_id","","",162,[[],["typeid",3]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"to_owned","","",55,[[]]],[11,"clone_into","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"to_owned","","",56,[[]]],[11,"clone_into","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"to_owned","","",57,[[]]],[11,"clone_into","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"to_owned","","",58,[[]]],[11,"clone_into","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"to_owned","","",59,[[]]],[11,"clone_into","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"to_owned","","",60,[[]]],[11,"clone_into","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"from","nix::sys::signalfd","",63,[[]]],[11,"into","","",63,[[]]],[11,"to_owned","","",63,[[]]],[11,"clone_into","","",63,[[]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"from","","",64,[[]]],[11,"into","","",64,[[]]],[11,"to_owned","","",64,[[]]],[11,"clone_into","","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"from","","",65,[[]]],[11,"into","","",65,[[]]],[11,"into_iter","","",65,[[]]],[11,"to_owned","","",65,[[]]],[11,"clone_into","","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"from","nix::sys::socket","",66,[[]]],[11,"into","","",66,[[]]],[11,"to_owned","","",66,[[]]],[11,"clone_into","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"from","","",67,[[]]],[11,"into","","",67,[[]]],[11,"to_owned","","",67,[[]]],[11,"clone_into","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"from","","",68,[[]]],[11,"into","","",68,[[]]],[11,"to_owned","","",68,[[]]],[11,"clone_into","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"from","","",69,[[]]],[11,"into","","",69,[[]]],[11,"to_owned","","",69,[[]]],[11,"clone_into","","",69,[[]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"from","","",70,[[]]],[11,"into","","",70,[[]]],[11,"to_owned","","",70,[[]]],[11,"clone_into","","",70,[[]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"try_into","","",70,[[],["result",4]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"from","","",71,[[]]],[11,"into","","",71,[[]]],[11,"to_owned","","",71,[[]]],[11,"clone_into","","",71,[[]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"from","","",72,[[]]],[11,"into","","",72,[[]]],[11,"to_owned","","",72,[[]]],[11,"clone_into","","",72,[[]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"from","","",81,[[]]],[11,"into","","",81,[[]]],[11,"to_owned","","",81,[[]]],[11,"clone_into","","",81,[[]]],[11,"to_string","","",81,[[],["string",3]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"try_into","","",81,[[],["result",4]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"from","","",82,[[]]],[11,"into","","",82,[[]]],[11,"to_owned","","",82,[[]]],[11,"clone_into","","",82,[[]]],[11,"to_string","","",82,[[],["string",3]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"try_into","","",82,[[],["result",4]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"from","","",80,[[]]],[11,"into","","",80,[[]]],[11,"to_owned","","",80,[[]]],[11,"clone_into","","",80,[[]]],[11,"to_string","","",80,[[],["string",3]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"try_into","","",80,[[],["result",4]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"from","","",83,[[]]],[11,"into","","",83,[[]]],[11,"to_owned","","",83,[[]]],[11,"clone_into","","",83,[[]]],[11,"to_string","","",83,[[],["string",3]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"try_into","","",83,[[],["result",4]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"from","","",73,[[]]],[11,"into","","",73,[[]]],[11,"to_owned","","",73,[[]]],[11,"clone_into","","",73,[[]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"try_into","","",73,[[],["result",4]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"from","","",75,[[]]],[11,"into","","",75,[[]]],[11,"to_owned","","",75,[[]]],[11,"clone_into","","",75,[[]]],[11,"to_string","","",75,[[],["string",3]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"try_into","","",75,[[],["result",4]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"from","","",77,[[]]],[11,"into","","",77,[[]]],[11,"to_owned","","",77,[[]]],[11,"clone_into","","",77,[[]]],[11,"to_string","","",77,[[],["string",3]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"try_into","","",77,[[],["result",4]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"from","","",78,[[]]],[11,"into","","",78,[[]]],[11,"to_owned","","",78,[[]]],[11,"clone_into","","",78,[[]]],[11,"to_string","","",78,[[],["string",3]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"try_into","","",78,[[],["result",4]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"from","","",79,[[]]],[11,"into","","",79,[[]]],[11,"to_owned","","",79,[[]]],[11,"clone_into","","",79,[[]]],[11,"to_string","","",79,[[],["string",3]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"try_into","","",79,[[],["result",4]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"from","","",76,[[]]],[11,"into","","",76,[[]]],[11,"to_owned","","",76,[[]]],[11,"clone_into","","",76,[[]]],[11,"to_string","","",76,[[],["string",3]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"try_into","","",76,[[],["result",4]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"from","","",74,[[]]],[11,"into","","",74,[[]]],[11,"to_owned","","",74,[[]]],[11,"clone_into","","",74,[[]]],[11,"to_string","","",74,[[],["string",3]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"try_into","","",74,[[],["result",4]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"from","nix::sys::socket::sockopt","",163,[[]]],[11,"into","","",163,[[]]],[11,"to_owned","","",163,[[]]],[11,"clone_into","","",163,[[]]],[11,"borrow","","",163,[[]]],[11,"borrow_mut","","",163,[[]]],[11,"try_from","","",163,[[],["result",4]]],[11,"try_into","","",163,[[],["result",4]]],[11,"type_id","","",163,[[],["typeid",3]]],[11,"from","","",164,[[]]],[11,"into","","",164,[[]]],[11,"to_owned","","",164,[[]]],[11,"clone_into","","",164,[[]]],[11,"borrow","","",164,[[]]],[11,"borrow_mut","","",164,[[]]],[11,"try_from","","",164,[[],["result",4]]],[11,"try_into","","",164,[[],["result",4]]],[11,"type_id","","",164,[[],["typeid",3]]],[11,"from","","",165,[[]]],[11,"into","","",165,[[]]],[11,"to_owned","","",165,[[]]],[11,"clone_into","","",165,[[]]],[11,"borrow","","",165,[[]]],[11,"borrow_mut","","",165,[[]]],[11,"try_from","","",165,[[],["result",4]]],[11,"try_into","","",165,[[],["result",4]]],[11,"type_id","","",165,[[],["typeid",3]]],[11,"from","","",166,[[]]],[11,"into","","",166,[[]]],[11,"to_owned","","",166,[[]]],[11,"clone_into","","",166,[[]]],[11,"borrow","","",166,[[]]],[11,"borrow_mut","","",166,[[]]],[11,"try_from","","",166,[[],["result",4]]],[11,"try_into","","",166,[[],["result",4]]],[11,"type_id","","",166,[[],["typeid",3]]],[11,"from","","",167,[[]]],[11,"into","","",167,[[]]],[11,"to_owned","","",167,[[]]],[11,"clone_into","","",167,[[]]],[11,"borrow","","",167,[[]]],[11,"borrow_mut","","",167,[[]]],[11,"try_from","","",167,[[],["result",4]]],[11,"try_into","","",167,[[],["result",4]]],[11,"type_id","","",167,[[],["typeid",3]]],[11,"from","","",168,[[]]],[11,"into","","",168,[[]]],[11,"to_owned","","",168,[[]]],[11,"clone_into","","",168,[[]]],[11,"borrow","","",168,[[]]],[11,"borrow_mut","","",168,[[]]],[11,"try_from","","",168,[[],["result",4]]],[11,"try_into","","",168,[[],["result",4]]],[11,"type_id","","",168,[[],["typeid",3]]],[11,"from","","",169,[[]]],[11,"into","","",169,[[]]],[11,"to_owned","","",169,[[]]],[11,"clone_into","","",169,[[]]],[11,"borrow","","",169,[[]]],[11,"borrow_mut","","",169,[[]]],[11,"try_from","","",169,[[],["result",4]]],[11,"try_into","","",169,[[],["result",4]]],[11,"type_id","","",169,[[],["typeid",3]]],[11,"from","","",170,[[]]],[11,"into","","",170,[[]]],[11,"to_owned","","",170,[[]]],[11,"clone_into","","",170,[[]]],[11,"borrow","","",170,[[]]],[11,"borrow_mut","","",170,[[]]],[11,"try_from","","",170,[[],["result",4]]],[11,"try_into","","",170,[[],["result",4]]],[11,"type_id","","",170,[[],["typeid",3]]],[11,"from","","",171,[[]]],[11,"into","","",171,[[]]],[11,"to_owned","","",171,[[]]],[11,"clone_into","","",171,[[]]],[11,"borrow","","",171,[[]]],[11,"borrow_mut","","",171,[[]]],[11,"try_from","","",171,[[],["result",4]]],[11,"try_into","","",171,[[],["result",4]]],[11,"type_id","","",171,[[],["typeid",3]]],[11,"from","","",172,[[]]],[11,"into","","",172,[[]]],[11,"to_owned","","",172,[[]]],[11,"clone_into","","",172,[[]]],[11,"borrow","","",172,[[]]],[11,"borrow_mut","","",172,[[]]],[11,"try_from","","",172,[[],["result",4]]],[11,"try_into","","",172,[[],["result",4]]],[11,"type_id","","",172,[[],["typeid",3]]],[11,"from","","",173,[[]]],[11,"into","","",173,[[]]],[11,"to_owned","","",173,[[]]],[11,"clone_into","","",173,[[]]],[11,"borrow","","",173,[[]]],[11,"borrow_mut","","",173,[[]]],[11,"try_from","","",173,[[],["result",4]]],[11,"try_into","","",173,[[],["result",4]]],[11,"type_id","","",173,[[],["typeid",3]]],[11,"from","","",174,[[]]],[11,"into","","",174,[[]]],[11,"to_owned","","",174,[[]]],[11,"clone_into","","",174,[[]]],[11,"borrow","","",174,[[]]],[11,"borrow_mut","","",174,[[]]],[11,"try_from","","",174,[[],["result",4]]],[11,"try_into","","",174,[[],["result",4]]],[11,"type_id","","",174,[[],["typeid",3]]],[11,"from","","",175,[[]]],[11,"into","","",175,[[]]],[11,"to_owned","","",175,[[]]],[11,"clone_into","","",175,[[]]],[11,"borrow","","",175,[[]]],[11,"borrow_mut","","",175,[[]]],[11,"try_from","","",175,[[],["result",4]]],[11,"try_into","","",175,[[],["result",4]]],[11,"type_id","","",175,[[],["typeid",3]]],[11,"from","","",176,[[]]],[11,"into","","",176,[[]]],[11,"to_owned","","",176,[[]]],[11,"clone_into","","",176,[[]]],[11,"borrow","","",176,[[]]],[11,"borrow_mut","","",176,[[]]],[11,"try_from","","",176,[[],["result",4]]],[11,"try_into","","",176,[[],["result",4]]],[11,"type_id","","",176,[[],["typeid",3]]],[11,"from","","",177,[[]]],[11,"into","","",177,[[]]],[11,"to_owned","","",177,[[]]],[11,"clone_into","","",177,[[]]],[11,"borrow","","",177,[[]]],[11,"borrow_mut","","",177,[[]]],[11,"try_from","","",177,[[],["result",4]]],[11,"try_into","","",177,[[],["result",4]]],[11,"type_id","","",177,[[],["typeid",3]]],[11,"from","","",178,[[]]],[11,"into","","",178,[[]]],[11,"to_owned","","",178,[[]]],[11,"clone_into","","",178,[[]]],[11,"borrow","","",178,[[]]],[11,"borrow_mut","","",178,[[]]],[11,"try_from","","",178,[[],["result",4]]],[11,"try_into","","",178,[[],["result",4]]],[11,"type_id","","",178,[[],["typeid",3]]],[11,"from","","",179,[[]]],[11,"into","","",179,[[]]],[11,"to_owned","","",179,[[]]],[11,"clone_into","","",179,[[]]],[11,"borrow","","",179,[[]]],[11,"borrow_mut","","",179,[[]]],[11,"try_from","","",179,[[],["result",4]]],[11,"try_into","","",179,[[],["result",4]]],[11,"type_id","","",179,[[],["typeid",3]]],[11,"from","","",180,[[]]],[11,"into","","",180,[[]]],[11,"to_owned","","",180,[[]]],[11,"clone_into","","",180,[[]]],[11,"borrow","","",180,[[]]],[11,"borrow_mut","","",180,[[]]],[11,"try_from","","",180,[[],["result",4]]],[11,"try_into","","",180,[[],["result",4]]],[11,"type_id","","",180,[[],["typeid",3]]],[11,"from","","",181,[[]]],[11,"into","","",181,[[]]],[11,"to_owned","","",181,[[]]],[11,"clone_into","","",181,[[]]],[11,"borrow","","",181,[[]]],[11,"borrow_mut","","",181,[[]]],[11,"try_from","","",181,[[],["result",4]]],[11,"try_into","","",181,[[],["result",4]]],[11,"type_id","","",181,[[],["typeid",3]]],[11,"from","","",182,[[]]],[11,"into","","",182,[[]]],[11,"to_owned","","",182,[[]]],[11,"clone_into","","",182,[[]]],[11,"borrow","","",182,[[]]],[11,"borrow_mut","","",182,[[]]],[11,"try_from","","",182,[[],["result",4]]],[11,"try_into","","",182,[[],["result",4]]],[11,"type_id","","",182,[[],["typeid",3]]],[11,"from","","",183,[[]]],[11,"into","","",183,[[]]],[11,"to_owned","","",183,[[]]],[11,"clone_into","","",183,[[]]],[11,"borrow","","",183,[[]]],[11,"borrow_mut","","",183,[[]]],[11,"try_from","","",183,[[],["result",4]]],[11,"try_into","","",183,[[],["result",4]]],[11,"type_id","","",183,[[],["typeid",3]]],[11,"from","","",184,[[]]],[11,"into","","",184,[[]]],[11,"to_owned","","",184,[[]]],[11,"clone_into","","",184,[[]]],[11,"borrow","","",184,[[]]],[11,"borrow_mut","","",184,[[]]],[11,"try_from","","",184,[[],["result",4]]],[11,"try_into","","",184,[[],["result",4]]],[11,"type_id","","",184,[[],["typeid",3]]],[11,"from","","",185,[[]]],[11,"into","","",185,[[]]],[11,"to_owned","","",185,[[]]],[11,"clone_into","","",185,[[]]],[11,"borrow","","",185,[[]]],[11,"borrow_mut","","",185,[[]]],[11,"try_from","","",185,[[],["result",4]]],[11,"try_into","","",185,[[],["result",4]]],[11,"type_id","","",185,[[],["typeid",3]]],[11,"from","","",186,[[]]],[11,"into","","",186,[[]]],[11,"to_owned","","",186,[[]]],[11,"clone_into","","",186,[[]]],[11,"borrow","","",186,[[]]],[11,"borrow_mut","","",186,[[]]],[11,"try_from","","",186,[[],["result",4]]],[11,"try_into","","",186,[[],["result",4]]],[11,"type_id","","",186,[[],["typeid",3]]],[11,"from","","",187,[[]]],[11,"into","","",187,[[]]],[11,"to_owned","","",187,[[]]],[11,"clone_into","","",187,[[]]],[11,"borrow","","",187,[[]]],[11,"borrow_mut","","",187,[[]]],[11,"try_from","","",187,[[],["result",4]]],[11,"try_into","","",187,[[],["result",4]]],[11,"type_id","","",187,[[],["typeid",3]]],[11,"from","","",188,[[]]],[11,"into","","",188,[[]]],[11,"to_owned","","",188,[[]]],[11,"clone_into","","",188,[[]]],[11,"borrow","","",188,[[]]],[11,"borrow_mut","","",188,[[]]],[11,"try_from","","",188,[[],["result",4]]],[11,"try_into","","",188,[[],["result",4]]],[11,"type_id","","",188,[[],["typeid",3]]],[11,"from","","",189,[[]]],[11,"into","","",189,[[]]],[11,"to_owned","","",189,[[]]],[11,"clone_into","","",189,[[]]],[11,"borrow","","",189,[[]]],[11,"borrow_mut","","",189,[[]]],[11,"try_from","","",189,[[],["result",4]]],[11,"try_into","","",189,[[],["result",4]]],[11,"type_id","","",189,[[],["typeid",3]]],[11,"from","","",190,[[]]],[11,"into","","",190,[[]]],[11,"to_owned","","",190,[[]]],[11,"clone_into","","",190,[[]]],[11,"borrow","","",190,[[]]],[11,"borrow_mut","","",190,[[]]],[11,"try_from","","",190,[[],["result",4]]],[11,"try_into","","",190,[[],["result",4]]],[11,"type_id","","",190,[[],["typeid",3]]],[11,"from","","",191,[[]]],[11,"into","","",191,[[]]],[11,"to_owned","","",191,[[]]],[11,"clone_into","","",191,[[]]],[11,"borrow","","",191,[[]]],[11,"borrow_mut","","",191,[[]]],[11,"try_from","","",191,[[],["result",4]]],[11,"try_into","","",191,[[],["result",4]]],[11,"type_id","","",191,[[],["typeid",3]]],[11,"from","","",192,[[]]],[11,"into","","",192,[[]]],[11,"to_owned","","",192,[[]]],[11,"clone_into","","",192,[[]]],[11,"borrow","","",192,[[]]],[11,"borrow_mut","","",192,[[]]],[11,"try_from","","",192,[[],["result",4]]],[11,"try_into","","",192,[[],["result",4]]],[11,"type_id","","",192,[[],["typeid",3]]],[11,"from","","",193,[[]]],[11,"into","","",193,[[]]],[11,"to_owned","","",193,[[]]],[11,"clone_into","","",193,[[]]],[11,"borrow","","",193,[[]]],[11,"borrow_mut","","",193,[[]]],[11,"try_from","","",193,[[],["result",4]]],[11,"try_into","","",193,[[],["result",4]]],[11,"type_id","","",193,[[],["typeid",3]]],[11,"from","","",194,[[]]],[11,"into","","",194,[[]]],[11,"to_owned","","",194,[[]]],[11,"clone_into","","",194,[[]]],[11,"borrow","","",194,[[]]],[11,"borrow_mut","","",194,[[]]],[11,"try_from","","",194,[[],["result",4]]],[11,"try_into","","",194,[[],["result",4]]],[11,"type_id","","",194,[[],["typeid",3]]],[11,"from","","",195,[[]]],[11,"into","","",195,[[]]],[11,"to_owned","","",195,[[]]],[11,"clone_into","","",195,[[]]],[11,"borrow","","",195,[[]]],[11,"borrow_mut","","",195,[[]]],[11,"try_from","","",195,[[],["result",4]]],[11,"try_into","","",195,[[],["result",4]]],[11,"type_id","","",195,[[],["typeid",3]]],[11,"from","","",196,[[]]],[11,"into","","",196,[[]]],[11,"to_owned","","",196,[[]]],[11,"clone_into","","",196,[[]]],[11,"borrow","","",196,[[]]],[11,"borrow_mut","","",196,[[]]],[11,"try_from","","",196,[[],["result",4]]],[11,"try_into","","",196,[[],["result",4]]],[11,"type_id","","",196,[[],["typeid",3]]],[11,"from","","",197,[[]]],[11,"into","","",197,[[]]],[11,"to_owned","","",197,[[]]],[11,"clone_into","","",197,[[]]],[11,"borrow","","",197,[[]]],[11,"borrow_mut","","",197,[[]]],[11,"try_from","","",197,[[],["result",4]]],[11,"try_into","","",197,[[],["result",4]]],[11,"type_id","","",197,[[],["typeid",3]]],[11,"from","","",198,[[]]],[11,"into","","",198,[[]]],[11,"to_owned","","",198,[[]]],[11,"clone_into","","",198,[[]]],[11,"borrow","","",198,[[]]],[11,"borrow_mut","","",198,[[]]],[11,"try_from","","",198,[[],["result",4]]],[11,"try_into","","",198,[[],["result",4]]],[11,"type_id","","",198,[[],["typeid",3]]],[11,"from","","",199,[[]]],[11,"into","","",199,[[]]],[11,"to_owned","","",199,[[]]],[11,"clone_into","","",199,[[]]],[11,"borrow","","",199,[[]]],[11,"borrow_mut","","",199,[[]]],[11,"try_from","","",199,[[],["result",4]]],[11,"try_into","","",199,[[],["result",4]]],[11,"type_id","","",199,[[],["typeid",3]]],[11,"from","nix::sys::socket","",84,[[]]],[11,"into","","",84,[[]]],[11,"to_owned","","",84,[[]]],[11,"clone_into","","",84,[[]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"try_into","","",84,[[],["result",4]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"from","","",85,[[]]],[11,"into","","",85,[[]]],[11,"to_owned","","",85,[[]]],[11,"clone_into","","",85,[[]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"try_into","","",85,[[],["result",4]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"from","","",86,[[]]],[11,"into","","",86,[[]]],[11,"to_owned","","",86,[[]]],[11,"clone_into","","",86,[[]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"try_into","","",86,[[],["result",4]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"from","","",87,[[]]],[11,"into","","",87,[[]]],[11,"to_owned","","",87,[[]]],[11,"clone_into","","",87,[[]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"try_into","","",87,[[],["result",4]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"from","","",88,[[]]],[11,"into","","",88,[[]]],[11,"to_owned","","",88,[[]]],[11,"clone_into","","",88,[[]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"try_into","","",88,[[],["result",4]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"from","","",89,[[]]],[11,"into","","",89,[[]]],[11,"to_owned","","",89,[[]]],[11,"clone_into","","",89,[[]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"try_into","","",89,[[],["result",4]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"from","","",90,[[]]],[11,"into","","",90,[[]]],[11,"to_owned","","",90,[[]]],[11,"clone_into","","",90,[[]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"try_into","","",90,[[],["result",4]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"from","","",91,[[]]],[11,"into","","",91,[[]]],[11,"to_owned","","",91,[[]]],[11,"clone_into","","",91,[[]]],[11,"borrow","","",91,[[]]],[11,"borrow_mut","","",91,[[]]],[11,"try_from","","",91,[[],["result",4]]],[11,"try_into","","",91,[[],["result",4]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"from","","",200,[[]]],[11,"into","","",200,[[]]],[11,"into_iter","","",200,[[]]],[11,"to_owned","","",200,[[]]],[11,"clone_into","","",200,[[]]],[11,"borrow","","",200,[[]]],[11,"borrow_mut","","",200,[[]]],[11,"try_from","","",200,[[],["result",4]]],[11,"try_into","","",200,[[],["result",4]]],[11,"type_id","","",200,[[],["typeid",3]]],[11,"from","","",92,[[]]],[11,"into","","",92,[[]]],[11,"to_owned","","",92,[[]]],[11,"clone_into","","",92,[[]]],[11,"borrow","","",92,[[]]],[11,"borrow_mut","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"try_into","","",92,[[],["result",4]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"from","","",93,[[]]],[11,"into","","",93,[[]]],[11,"to_owned","","",93,[[]]],[11,"clone_into","","",93,[[]]],[11,"borrow","","",93,[[]]],[11,"borrow_mut","","",93,[[]]],[11,"try_from","","",93,[[],["result",4]]],[11,"try_into","","",93,[[],["result",4]]],[11,"type_id","","",93,[[],["typeid",3]]],[11,"from","","",94,[[]]],[11,"into","","",94,[[]]],[11,"borrow","","",94,[[]]],[11,"borrow_mut","","",94,[[]]],[11,"try_from","","",94,[[],["result",4]]],[11,"try_into","","",94,[[],["result",4]]],[11,"type_id","","",94,[[],["typeid",3]]],[11,"from","","",95,[[]]],[11,"into","","",95,[[]]],[11,"borrow","","",95,[[]]],[11,"borrow_mut","","",95,[[]]],[11,"try_from","","",95,[[],["result",4]]],[11,"try_into","","",95,[[],["result",4]]],[11,"type_id","","",95,[[],["typeid",3]]],[11,"from","","",96,[[]]],[11,"into","","",96,[[]]],[11,"to_owned","","",96,[[]]],[11,"clone_into","","",96,[[]]],[11,"borrow","","",96,[[]]],[11,"borrow_mut","","",96,[[]]],[11,"try_from","","",96,[[],["result",4]]],[11,"try_into","","",96,[[],["result",4]]],[11,"type_id","","",96,[[],["typeid",3]]],[11,"from","","",99,[[]]],[11,"into","","",99,[[]]],[11,"to_owned","","",99,[[]]],[11,"clone_into","","",99,[[]]],[11,"borrow","","",99,[[]]],[11,"borrow_mut","","",99,[[]]],[11,"try_from","","",99,[[],["result",4]]],[11,"try_into","","",99,[[],["result",4]]],[11,"type_id","","",99,[[],["typeid",3]]],[11,"from","nix::sys::stat","",100,[[]]],[11,"into","","",100,[[]]],[11,"to_owned","","",100,[[]]],[11,"clone_into","","",100,[[]]],[11,"borrow","","",100,[[]]],[11,"borrow_mut","","",100,[[]]],[11,"try_from","","",100,[[],["result",4]]],[11,"try_into","","",100,[[],["result",4]]],[11,"type_id","","",100,[[],["typeid",3]]],[11,"from","","",101,[[]]],[11,"into","","",101,[[]]],[11,"to_owned","","",101,[[]]],[11,"clone_into","","",101,[[]]],[11,"borrow","","",101,[[]]],[11,"borrow_mut","","",101,[[]]],[11,"try_from","","",101,[[],["result",4]]],[11,"try_into","","",101,[[],["result",4]]],[11,"type_id","","",101,[[],["typeid",3]]],[11,"from","","",102,[[]]],[11,"into","","",102,[[]]],[11,"to_owned","","",102,[[]]],[11,"clone_into","","",102,[[]]],[11,"borrow","","",102,[[]]],[11,"borrow_mut","","",102,[[]]],[11,"try_from","","",102,[[],["result",4]]],[11,"try_into","","",102,[[],["result",4]]],[11,"type_id","","",102,[[],["typeid",3]]],[11,"from","","",103,[[]]],[11,"into","","",103,[[]]],[11,"to_owned","","",103,[[]]],[11,"clone_into","","",103,[[]]],[11,"borrow","","",103,[[]]],[11,"borrow_mut","","",103,[[]]],[11,"try_from","","",103,[[],["result",4]]],[11,"try_into","","",103,[[],["result",4]]],[11,"type_id","","",103,[[],["typeid",3]]],[11,"from","","",104,[[]]],[11,"into","","",104,[[]]],[11,"to_owned","","",104,[[]]],[11,"clone_into","","",104,[[]]],[11,"borrow","","",104,[[]]],[11,"borrow_mut","","",104,[[]]],[11,"try_from","","",104,[[],["result",4]]],[11,"try_into","","",104,[[],["result",4]]],[11,"type_id","","",104,[[],["typeid",3]]],[11,"from","nix::sys::statfs","",106,[[]]],[11,"into","","",106,[[]]],[11,"to_owned","","",106,[[]]],[11,"clone_into","","",106,[[]]],[11,"borrow","","",106,[[]]],[11,"borrow_mut","","",106,[[]]],[11,"try_from","","",106,[[],["result",4]]],[11,"try_into","","",106,[[],["result",4]]],[11,"type_id","","",106,[[],["typeid",3]]],[11,"from","","",105,[[]]],[11,"into","","",105,[[]]],[11,"to_owned","","",105,[[]]],[11,"clone_into","","",105,[[]]],[11,"borrow","","",105,[[]]],[11,"borrow_mut","","",105,[[]]],[11,"try_from","","",105,[[],["result",4]]],[11,"try_into","","",105,[[],["result",4]]],[11,"type_id","","",105,[[],["typeid",3]]],[11,"from","nix::sys::statvfs","",107,[[]]],[11,"into","","",107,[[]]],[11,"to_owned","","",107,[[]]],[11,"clone_into","","",107,[[]]],[11,"borrow","","",107,[[]]],[11,"borrow_mut","","",107,[[]]],[11,"try_from","","",107,[[],["result",4]]],[11,"try_into","","",107,[[],["result",4]]],[11,"type_id","","",107,[[],["typeid",3]]],[11,"from","","",108,[[]]],[11,"into","","",108,[[]]],[11,"to_owned","","",108,[[]]],[11,"clone_into","","",108,[[]]],[11,"borrow","","",108,[[]]],[11,"borrow_mut","","",108,[[]]],[11,"try_from","","",108,[[],["result",4]]],[11,"try_into","","",108,[[],["result",4]]],[11,"type_id","","",108,[[],["typeid",3]]],[11,"from","nix::sys::sysinfo","",109,[[]]],[11,"into","","",109,[[]]],[11,"to_owned","","",109,[[]]],[11,"clone_into","","",109,[[]]],[11,"borrow","","",109,[[]]],[11,"borrow_mut","","",109,[[]]],[11,"try_from","","",109,[[],["result",4]]],[11,"try_into","","",109,[[],["result",4]]],[11,"type_id","","",109,[[],["typeid",3]]],[11,"from","nix::sys::termios","",110,[[]]],[11,"into","","",110,[[]]],[11,"to_owned","","",110,[[]]],[11,"clone_into","","",110,[[]]],[11,"borrow","","",110,[[]]],[11,"borrow_mut","","",110,[[]]],[11,"try_from","","",110,[[],["result",4]]],[11,"try_into","","",110,[[],["result",4]]],[11,"type_id","","",110,[[],["typeid",3]]],[11,"from","","",111,[[]]],[11,"into","","",111,[[]]],[11,"to_owned","","",111,[[]]],[11,"clone_into","","",111,[[]]],[11,"borrow","","",111,[[]]],[11,"borrow_mut","","",111,[[]]],[11,"try_from","","",111,[[],["result",4]]],[11,"try_into","","",111,[[],["result",4]]],[11,"type_id","","",111,[[],["typeid",3]]],[11,"from","","",112,[[]]],[11,"into","","",112,[[]]],[11,"to_owned","","",112,[[]]],[11,"clone_into","","",112,[[]]],[11,"borrow","","",112,[[]]],[11,"borrow_mut","","",112,[[]]],[11,"try_from","","",112,[[],["result",4]]],[11,"try_into","","",112,[[],["result",4]]],[11,"type_id","","",112,[[],["typeid",3]]],[11,"from","","",113,[[]]],[11,"into","","",113,[[]]],[11,"to_owned","","",113,[[]]],[11,"clone_into","","",113,[[]]],[11,"borrow","","",113,[[]]],[11,"borrow_mut","","",113,[[]]],[11,"try_from","","",113,[[],["result",4]]],[11,"try_into","","",113,[[],["result",4]]],[11,"type_id","","",113,[[],["typeid",3]]],[11,"from","","",114,[[]]],[11,"into","","",114,[[]]],[11,"to_owned","","",114,[[]]],[11,"clone_into","","",114,[[]]],[11,"borrow","","",114,[[]]],[11,"borrow_mut","","",114,[[]]],[11,"try_from","","",114,[[],["result",4]]],[11,"try_into","","",114,[[],["result",4]]],[11,"type_id","","",114,[[],["typeid",3]]],[11,"from","","",115,[[]]],[11,"into","","",115,[[]]],[11,"to_owned","","",115,[[]]],[11,"clone_into","","",115,[[]]],[11,"borrow","","",115,[[]]],[11,"borrow_mut","","",115,[[]]],[11,"try_from","","",115,[[],["result",4]]],[11,"try_into","","",115,[[],["result",4]]],[11,"type_id","","",115,[[],["typeid",3]]],[11,"from","","",116,[[]]],[11,"into","","",116,[[]]],[11,"to_owned","","",116,[[]]],[11,"clone_into","","",116,[[]]],[11,"borrow","","",116,[[]]],[11,"borrow_mut","","",116,[[]]],[11,"try_from","","",116,[[],["result",4]]],[11,"try_into","","",116,[[],["result",4]]],[11,"type_id","","",116,[[],["typeid",3]]],[11,"from","","",117,[[]]],[11,"into","","",117,[[]]],[11,"to_owned","","",117,[[]]],[11,"clone_into","","",117,[[]]],[11,"borrow","","",117,[[]]],[11,"borrow_mut","","",117,[[]]],[11,"try_from","","",117,[[],["result",4]]],[11,"try_into","","",117,[[],["result",4]]],[11,"type_id","","",117,[[],["typeid",3]]],[11,"from","","",118,[[]]],[11,"into","","",118,[[]]],[11,"to_owned","","",118,[[]]],[11,"clone_into","","",118,[[]]],[11,"borrow","","",118,[[]]],[11,"borrow_mut","","",118,[[]]],[11,"try_from","","",118,[[],["result",4]]],[11,"try_into","","",118,[[],["result",4]]],[11,"type_id","","",118,[[],["typeid",3]]],[11,"from","","",119,[[]]],[11,"into","","",119,[[]]],[11,"to_owned","","",119,[[]]],[11,"clone_into","","",119,[[]]],[11,"borrow","","",119,[[]]],[11,"borrow_mut","","",119,[[]]],[11,"try_from","","",119,[[],["result",4]]],[11,"try_into","","",119,[[],["result",4]]],[11,"type_id","","",119,[[],["typeid",3]]],[11,"from","nix::sys::time","",121,[[]]],[11,"into","","",121,[[]]],[11,"to_owned","","",121,[[]]],[11,"clone_into","","",121,[[]]],[11,"to_string","","",121,[[],["string",3]]],[11,"borrow","","",121,[[]]],[11,"borrow_mut","","",121,[[]]],[11,"try_from","","",121,[[],["result",4]]],[11,"try_into","","",121,[[],["result",4]]],[11,"type_id","","",121,[[],["typeid",3]]],[11,"from","","",122,[[]]],[11,"into","","",122,[[]]],[11,"to_owned","","",122,[[]]],[11,"clone_into","","",122,[[]]],[11,"to_string","","",122,[[],["string",3]]],[11,"borrow","","",122,[[]]],[11,"borrow_mut","","",122,[[]]],[11,"try_from","","",122,[[],["result",4]]],[11,"try_into","","",122,[[],["result",4]]],[11,"type_id","","",122,[[],["typeid",3]]],[11,"from","nix::sys::uio","",123,[[]]],[11,"into","","",123,[[]]],[11,"to_owned","","",123,[[]]],[11,"clone_into","","",123,[[]]],[11,"borrow","","",123,[[]]],[11,"borrow_mut","","",123,[[]]],[11,"try_from","","",123,[[],["result",4]]],[11,"try_into","","",123,[[],["result",4]]],[11,"type_id","","",123,[[],["typeid",3]]],[11,"from","","",124,[[]]],[11,"into","","",124,[[]]],[11,"to_owned","","",124,[[]]],[11,"clone_into","","",124,[[]]],[11,"borrow","","",124,[[]]],[11,"borrow_mut","","",124,[[]]],[11,"try_from","","",124,[[],["result",4]]],[11,"try_into","","",124,[[],["result",4]]],[11,"type_id","","",124,[[],["typeid",3]]],[11,"from","nix::sys::utsname","",125,[[]]],[11,"into","","",125,[[]]],[11,"to_owned","","",125,[[]]],[11,"clone_into","","",125,[[]]],[11,"borrow","","",125,[[]]],[11,"borrow_mut","","",125,[[]]],[11,"try_from","","",125,[[],["result",4]]],[11,"try_into","","",125,[[],["result",4]]],[11,"type_id","","",125,[[],["typeid",3]]],[11,"from","nix::sys::wait","",126,[[]]],[11,"into","","",126,[[]]],[11,"to_owned","","",126,[[]]],[11,"clone_into","","",126,[[]]],[11,"borrow","","",126,[[]]],[11,"borrow_mut","","",126,[[]]],[11,"try_from","","",126,[[],["result",4]]],[11,"try_into","","",126,[[],["result",4]]],[11,"type_id","","",126,[[],["typeid",3]]],[11,"from","","",127,[[]]],[11,"into","","",127,[[]]],[11,"to_owned","","",127,[[]]],[11,"clone_into","","",127,[[]]],[11,"borrow","","",127,[[]]],[11,"borrow_mut","","",127,[[]]],[11,"try_from","","",127,[[],["result",4]]],[11,"try_into","","",127,[[],["result",4]]],[11,"type_id","","",127,[[],["typeid",3]]],[11,"from","nix::sys::inotify","",128,[[]]],[11,"into","","",128,[[]]],[11,"to_owned","","",128,[[]]],[11,"clone_into","","",128,[[]]],[11,"borrow","","",128,[[]]],[11,"borrow_mut","","",128,[[]]],[11,"try_from","","",128,[[],["result",4]]],[11,"try_into","","",128,[[],["result",4]]],[11,"type_id","","",128,[[],["typeid",3]]],[11,"from","","",129,[[]]],[11,"into","","",129,[[]]],[11,"to_owned","","",129,[[]]],[11,"clone_into","","",129,[[]]],[11,"borrow","","",129,[[]]],[11,"borrow_mut","","",129,[[]]],[11,"try_from","","",129,[[],["result",4]]],[11,"try_into","","",129,[[],["result",4]]],[11,"type_id","","",129,[[],["typeid",3]]],[11,"from","","",131,[[]]],[11,"into","","",131,[[]]],[11,"to_owned","","",131,[[]]],[11,"clone_into","","",131,[[]]],[11,"borrow","","",131,[[]]],[11,"borrow_mut","","",131,[[]]],[11,"try_from","","",131,[[],["result",4]]],[11,"try_into","","",131,[[],["result",4]]],[11,"type_id","","",131,[[],["typeid",3]]],[11,"from","","",201,[[]]],[11,"into","","",201,[[]]],[11,"to_owned","","",201,[[]]],[11,"clone_into","","",201,[[]]],[11,"borrow","","",201,[[]]],[11,"borrow_mut","","",201,[[]]],[11,"try_from","","",201,[[],["result",4]]],[11,"try_into","","",201,[[],["result",4]]],[11,"type_id","","",201,[[],["typeid",3]]],[11,"from","","",130,[[]]],[11,"into","","",130,[[]]],[11,"borrow","","",130,[[]]],[11,"borrow_mut","","",130,[[]]],[11,"try_from","","",130,[[],["result",4]]],[11,"try_into","","",130,[[],["result",4]]],[11,"type_id","","",130,[[],["typeid",3]]],[11,"from","nix::sys::timerfd","",136,[[]]],[11,"into","","",136,[[]]],[11,"to_owned","","",136,[[]]],[11,"clone_into","","",136,[[]]],[11,"borrow","","",136,[[]]],[11,"borrow_mut","","",136,[[]]],[11,"try_from","","",136,[[],["result",4]]],[11,"try_into","","",136,[[],["result",4]]],[11,"type_id","","",136,[[],["typeid",3]]],[11,"from","","",132,[[]]],[11,"into","","",132,[[]]],[11,"to_owned","","",132,[[]]],[11,"clone_into","","",132,[[]]],[11,"borrow","","",132,[[]]],[11,"borrow_mut","","",132,[[]]],[11,"try_from","","",132,[[],["result",4]]],[11,"try_into","","",132,[[],["result",4]]],[11,"type_id","","",132,[[],["typeid",3]]],[11,"from","","",133,[[]]],[11,"into","","",133,[[]]],[11,"to_owned","","",133,[[]]],[11,"clone_into","","",133,[[]]],[11,"borrow","","",133,[[]]],[11,"borrow_mut","","",133,[[]]],[11,"try_from","","",133,[[],["result",4]]],[11,"try_into","","",133,[[],["result",4]]],[11,"type_id","","",133,[[],["typeid",3]]],[11,"from","","",134,[[]]],[11,"into","","",134,[[]]],[11,"to_owned","","",134,[[]]],[11,"clone_into","","",134,[[]]],[11,"borrow","","",134,[[]]],[11,"borrow_mut","","",134,[[]]],[11,"try_from","","",134,[[],["result",4]]],[11,"try_into","","",134,[[],["result",4]]],[11,"type_id","","",134,[[],["typeid",3]]],[11,"from","","",135,[[]]],[11,"into","","",135,[[]]],[11,"to_owned","","",135,[[]]],[11,"clone_into","","",135,[[]]],[11,"borrow","","",135,[[]]],[11,"borrow_mut","","",135,[[]]],[11,"try_from","","",135,[[],["result",4]]],[11,"try_into","","",135,[[],["result",4]]],[11,"type_id","","",135,[[],["typeid",3]]],[11,"from","nix::ucontext","",137,[[]]],[11,"into","","",137,[[]]],[11,"to_owned","","",137,[[]]],[11,"clone_into","","",137,[[]]],[11,"borrow","","",137,[[]]],[11,"borrow_mut","","",137,[[]]],[11,"try_from","","",137,[[],["result",4]]],[11,"try_into","","",137,[[],["result",4]]],[11,"type_id","","",137,[[],["typeid",3]]],[11,"from","nix::unistd","",138,[[]]],[11,"into","","",138,[[]]],[11,"to_owned","","",138,[[]]],[11,"clone_into","","",138,[[]]],[11,"to_string","","",138,[[],["string",3]]],[11,"borrow","","",138,[[]]],[11,"borrow_mut","","",138,[[]]],[11,"try_from","","",138,[[],["result",4]]],[11,"try_into","","",138,[[],["result",4]]],[11,"type_id","","",138,[[],["typeid",3]]],[11,"from","","",139,[[]]],[11,"into","","",139,[[]]],[11,"to_owned","","",139,[[]]],[11,"clone_into","","",139,[[]]],[11,"to_string","","",139,[[],["string",3]]],[11,"borrow","","",139,[[]]],[11,"borrow_mut","","",139,[[]]],[11,"try_from","","",139,[[],["result",4]]],[11,"try_into","","",139,[[],["result",4]]],[11,"type_id","","",139,[[],["typeid",3]]],[11,"from","","",140,[[]]],[11,"into","","",140,[[]]],[11,"to_owned","","",140,[[]]],[11,"clone_into","","",140,[[]]],[11,"to_string","","",140,[[],["string",3]]],[11,"borrow","","",140,[[]]],[11,"borrow_mut","","",140,[[]]],[11,"try_from","","",140,[[],["result",4]]],[11,"try_into","","",140,[[],["result",4]]],[11,"type_id","","",140,[[],["typeid",3]]],[11,"from","","",141,[[]]],[11,"into","","",141,[[]]],[11,"to_owned","","",141,[[]]],[11,"clone_into","","",141,[[]]],[11,"borrow","","",141,[[]]],[11,"borrow_mut","","",141,[[]]],[11,"try_from","","",141,[[],["result",4]]],[11,"try_into","","",141,[[],["result",4]]],[11,"type_id","","",141,[[],["typeid",3]]],[11,"from","","",143,[[]]],[11,"into","","",143,[[]]],[11,"to_owned","","",143,[[]]],[11,"clone_into","","",143,[[]]],[11,"borrow","","",143,[[]]],[11,"borrow_mut","","",143,[[]]],[11,"try_from","","",143,[[],["result",4]]],[11,"try_into","","",143,[[],["result",4]]],[11,"type_id","","",143,[[],["typeid",3]]],[11,"from","","",144,[[]]],[11,"into","","",144,[[]]],[11,"to_owned","","",144,[[]]],[11,"clone_into","","",144,[[]]],[11,"borrow","","",144,[[]]],[11,"borrow_mut","","",144,[[]]],[11,"try_from","","",144,[[],["result",4]]],[11,"try_into","","",144,[[],["result",4]]],[11,"type_id","","",144,[[],["typeid",3]]],[11,"from","","",145,[[]]],[11,"into","","",145,[[]]],[11,"to_owned","","",145,[[]]],[11,"clone_into","","",145,[[]]],[11,"borrow","","",145,[[]]],[11,"borrow_mut","","",145,[[]]],[11,"try_from","","",145,[[],["result",4]]],[11,"try_into","","",145,[[],["result",4]]],[11,"type_id","","",145,[[],["typeid",3]]],[11,"from","","",146,[[]]],[11,"into","","",146,[[]]],[11,"to_owned","","",146,[[]]],[11,"clone_into","","",146,[[]]],[11,"borrow","","",146,[[]]],[11,"borrow_mut","","",146,[[]]],[11,"try_from","","",146,[[],["result",4]]],[11,"try_into","","",146,[[],["result",4]]],[11,"type_id","","",146,[[],["typeid",3]]],[11,"from","","",147,[[]]],[11,"into","","",147,[[]]],[11,"to_owned","","",147,[[]]],[11,"clone_into","","",147,[[]]],[11,"borrow","","",147,[[]]],[11,"borrow_mut","","",147,[[]]],[11,"try_from","","",147,[[],["result",4]]],[11,"try_into","","",147,[[],["result",4]]],[11,"type_id","","",147,[[],["typeid",3]]],[11,"from","","",148,[[]]],[11,"into","","",148,[[]]],[11,"to_owned","","",148,[[]]],[11,"clone_into","","",148,[[]]],[11,"borrow","","",148,[[]]],[11,"borrow_mut","","",148,[[]]],[11,"try_from","","",148,[[],["result",4]]],[11,"try_into","","",148,[[],["result",4]]],[11,"type_id","","",148,[[],["typeid",3]]],[11,"from","","",149,[[]]],[11,"into","","",149,[[]]],[11,"to_owned","","",149,[[]]],[11,"clone_into","","",149,[[]]],[11,"borrow","","",149,[[]]],[11,"borrow_mut","","",149,[[]]],[11,"try_from","","",149,[[],["result",4]]],[11,"try_into","","",149,[[],["result",4]]],[11,"type_id","","",149,[[],["typeid",3]]],[11,"from","","",150,[[]]],[11,"into","","",150,[[]]],[11,"to_owned","","",150,[[]]],[11,"clone_into","","",150,[[]]],[11,"borrow","","",150,[[]]],[11,"borrow_mut","","",150,[[]]],[11,"try_from","","",150,[[],["result",4]]],[11,"try_into","","",150,[[],["result",4]]],[11,"type_id","","",150,[[],["typeid",3]]],[11,"from","","",151,[[]]],[11,"into","","",151,[[]]],[11,"to_owned","","",151,[[]]],[11,"clone_into","","",151,[[]]],[11,"borrow","","",151,[[]]],[11,"borrow_mut","","",151,[[]]],[11,"try_from","","",151,[[],["result",4]]],[11,"try_into","","",151,[[],["result",4]]],[11,"type_id","","",151,[[],["typeid",3]]],[11,"from","nix","",152,[[]]],[11,"into","","",152,[[]]],[11,"to_owned","","",152,[[]]],[11,"clone_into","","",152,[[]]],[11,"to_string","","",152,[[],["string",3]]],[11,"borrow","","",152,[[]]],[11,"borrow_mut","","",152,[[]]],[11,"try_from","","",152,[[],["result",4]]],[11,"try_into","","",152,[[],["result",4]]],[11,"type_id","","",152,[[],["typeid",3]]],[11,"hash","nix::pty","",25,[[]]],[11,"hash","nix::sys::socket","",68,[[]]],[11,"hash","","",70,[[]]],[11,"hash","","",71,[[]]],[11,"hash","","",67,[[]]],[11,"hash","nix::sys::signalfd","",63,[[]]],[11,"hash","nix::sys::socket","",69,[[]]],[11,"hash","nix::sys::stat","",100,[[]]],[11,"hash","nix::sys::socket","",72,[[]]],[11,"hash","","",66,[[]]],[11,"eq","nix::pty","",25,[[["winsize",3]]]],[11,"ne","","",25,[[["winsize",3]]]],[11,"eq","nix::sys::stat","",100,[[["stat",3]]]],[11,"ne","","",100,[[["stat",3]]]],[11,"eq","nix::sys::socket","",68,[[["sockaddr",3]]]],[11,"ne","","",68,[[["sockaddr",3]]]],[11,"eq","","",67,[[["msghdr",3]]]],[11,"ne","","",67,[[["msghdr",3]]]],[11,"eq","","",66,[[["cmsghdr",3]]]],[11,"ne","","",66,[[["cmsghdr",3]]]],[11,"eq","","",69,[[["sockaddr_in",3]]]],[11,"ne","","",69,[[["sockaddr_in",3]]]],[11,"eq","","",70,[[["sockaddr_in6",3]]]],[11,"ne","","",70,[[["sockaddr_in6",3]]]],[11,"eq","nix::sys::signalfd","",63,[[["signalfd_siginfo",3]]]],[11,"ne","","",63,[[["signalfd_siginfo",3]]]],[11,"eq","nix::sys::socket","",72,[[["sockaddr_un",3]]]],[11,"eq","","",71,[[["sockaddr_storage",3]]]],[11,"fmt","","",67,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",71,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","nix::sys::stat","",100,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","nix::sys::socket","",72,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",68,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",66,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",70,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",69,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","nix::sys::signalfd","",63,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","nix::pty","",25,[[["formatter",3]],[["result",4],["error",3]]]],[11,"clone","nix::sys::socket","",66,[[],["cmsghdr",3]]],[11,"clone","nix::sys::signalfd","",63,[[],["signalfd_siginfo",3]]],[11,"clone","nix::sys::stat","",100,[[],["stat",3]]],[11,"clone","nix::sys::socket","",71,[[],["sockaddr_storage",3]]],[11,"clone","","",70,[[],["sockaddr_in6",3]]],[11,"clone","","",72,[[],["sockaddr_un",3]]],[11,"clone","","",69,[[],["sockaddr_in",3]]],[11,"clone","nix::pty","",25,[[],["winsize",3]]],[11,"clone","nix::sys::socket","",67,[[],["msghdr",3]]],[11,"clone","","",68,[[],["sockaddr",3]]],[11,"get","nix::sys::socket::sockopt","",163,[[["rawfd",6]],["result",6]]],[11,"get","","",164,[[["rawfd",6]],["result",6]]],[11,"get","","",165,[[["rawfd",6]],["result",6]]],[11,"get","","",166,[[["rawfd",6]],[["linger",3],["result",6]]]],[11,"get","","",171,[[["rawfd",6]],["result",6]]],[11,"get","","",172,[[["rawfd",6]],["result",6]]],[11,"get","","",173,[[["rawfd",6]],[["result",6],["timeval",3]]]],[11,"get","","",174,[[["rawfd",6]],[["result",6],["timeval",3]]]],[11,"get","","",175,[[["rawfd",6]],["result",6]]],[11,"get","","",176,[[["rawfd",6]],["result",6]]],[11,"get","","",177,[[["rawfd",6]],["result",6]]],[11,"get","","",178,[[["rawfd",6]],["result",6]]],[11,"get","","",179,[[["rawfd",6]],[["result",6],["unixcredentials",3]]]],[11,"get","","",180,[[["rawfd",6]],["result",6]]],[11,"get","","",181,[[["rawfd",6]],["result",6]]],[11,"get","","",182,[[["rawfd",6]],["result",6]]],[11,"get","","",185,[[["rawfd",6]],[["result",6],["socktype",4]]]],[11,"get","","",186,[[["rawfd",6]],["result",6]]],[11,"get","","",187,[[["rawfd",6]],[["osstring",3],["result",6]]]],[11,"get","","",188,[[["rawfd",6]],[["result",6],["sockaddr_in",3]]]],[11,"get","","",189,[[["rawfd",6]],["result",6]]],[11,"get","","",190,[[["rawfd",6]],["result",6]]],[11,"get","","",191,[[["rawfd",6]],["result",6]]],[11,"get","","",192,[[["rawfd",6]],["result",6]]],[11,"get","","",193,[[["rawfd",6]],[["osstring",3],["result",6]]]],[11,"get","","",194,[[["rawfd",6]],["result",6]]],[11,"get","","",195,[[["rawfd",6]],["result",6]]],[11,"get","","",196,[[["rawfd",6]],[["result",6],["c_int",6]]]],[11,"get","","",197,[[["rawfd",6]],["result",6]]],[11,"set","","",163,[[["rawfd",6]],["result",6]]],[11,"set","","",164,[[["rawfd",6]],["result",6]]],[11,"set","","",165,[[["rawfd",6]],["result",6]]],[11,"set","","",166,[[["rawfd",6],["linger",3]],["result",6]]],[11,"set","","",167,[[["rawfd",6],["ipmembershiprequest",3]],["result",6]]],[11,"set","","",168,[[["rawfd",6],["ipmembershiprequest",3]],["result",6]]],[11,"set","","",169,[[["rawfd",6],["ipv6membershiprequest",3]],["result",6]]],[11,"set","","",170,[[["rawfd",6],["ipv6membershiprequest",3]],["result",6]]],[11,"set","","",171,[[["rawfd",6]],["result",6]]],[11,"set","","",172,[[["rawfd",6]],["result",6]]],[11,"set","","",173,[[["rawfd",6],["timeval",3]],["result",6]]],[11,"set","","",174,[[["rawfd",6],["timeval",3]],["result",6]]],[11,"set","","",175,[[["rawfd",6]],["result",6]]],[11,"set","","",176,[[["rawfd",6]],["result",6]]],[11,"set","","",178,[[["rawfd",6]],["result",6]]],[11,"set","","",180,[[["rawfd",6]],["result",6]]],[11,"set","","",181,[[["rawfd",6]],["result",6]]],[11,"set","","",182,[[["rawfd",6]],["result",6]]],[11,"set","","",183,[[["rawfd",6]],["result",6]]],[11,"set","","",184,[[["rawfd",6]],["result",6]]],[11,"set","","",187,[[["rawfd",6],["osstring",3]],["result",6]]],[11,"set","","",189,[[["rawfd",6]],["result",6]]],[11,"set","","",190,[[["rawfd",6]],["result",6]]],[11,"set","","",191,[[["rawfd",6]],["result",6]]],[11,"set","","",192,[[["rawfd",6]],["result",6]]],[11,"set","","",193,[[["rawfd",6],["osstring",3]],["result",6]]],[11,"set","","",194,[[["rawfd",6]],["result",6]]],[11,"set","","",195,[[["rawfd",6]],["result",6]]],[11,"set","","",196,[[["rawfd",6],["c_int",6]],["result",6]]],[11,"set","","",197,[[["rawfd",6]],["result",6]]],[11,"set","","",198,[[["rawfd",6]],["result",6]]],[11,"set","","",199,[[["rawfd",6]],["result",6]]],[11,"seconds","nix::sys::time","",121,[[],["timespec",3]]],[11,"milliseconds","","",121,[[],["timespec",3]]],[11,"microseconds","","Makes a new <code>TimeSpec</code> with given number of microseconds.",121,[[],["timespec",3]]],[11,"nanoseconds","","Makes a new <code>TimeSpec</code> with given number of nanoseconds.",121,[[],["timespec",3]]],[11,"num_seconds","","",121,[[]]],[11,"num_milliseconds","","",121,[[]]],[11,"num_microseconds","","",121,[[]]],[11,"num_nanoseconds","","",121,[[]]],[11,"seconds","","",122,[[],["timeval",3]]],[11,"milliseconds","","",122,[[],["timeval",3]]],[11,"microseconds","","Makes a new <code>TimeVal</code> with given number of microseconds.",122,[[],["timeval",3]]],[11,"nanoseconds","","Makes a new <code>TimeVal</code> with given number of nanoseconds.  …",122,[[],["timeval",3]]],[11,"num_seconds","","",122,[[]]],[11,"num_milliseconds","","",122,[[]]],[11,"num_microseconds","","",122,[[]]],[11,"num_nanoseconds","","",122,[[]]],[11,"drop","nix::dir","",0,[[]]],[11,"drop","","",154,[[]]],[11,"drop","nix::ifaddrs","",155,[[]]],[11,"drop","nix::pty","",156,[[]]],[11,"drop","nix::sys::aio","If the <code>AioCb</code> has no remaining state in the kernel, just …",33,[[]]],[11,"drop","nix::sys::signalfd","",65,[[]]],[11,"as_mut","nix::sys::time","",121,[[],["timespec",3]]],[11,"as_mut","","",122,[[],["timeval",3]]],[11,"as_ref","nix::sys::signal","",54,[[]]],[11,"as_ref","","",57,[[],["sigset_t",3]]],[11,"as_ref","nix::sys::time","",121,[[],["timespec",3]]],[11,"as_ref","","",122,[[],["timeval",3]]],[11,"from","nix::sys::aio","",34,[[["aiocb",3],["vec",3]],["liocb",3]]],[11,"from","nix::sys::signal","",161,[[["sigevent",3]]]],[11,"from","nix::sys::socket","",88,[[["ucred",3]]]],[11,"from","nix::sys::termios","",110,[[["termios",3]]]],[11,"from","nix::sys::time","",121,[[["timespec",3]]]],[11,"from","","",122,[[["timeval",3]]]],[11,"from","nix","",202,[[["pid",3]]]],[11,"from","nix::unistd","",150,[[["passwd",3]],["user",3]]],[11,"from","","",151,[[["group",3]],["group",3]]],[11,"from","nix","",152,[[["errno",4]],["error",4]]],[11,"from","","",152,[[["fromutf8error",3]],["error",4]]],[11,"into","nix::sys::socket","",88,[[],["ucred",3]]],[11,"next_back","nix::sys::select","",160,[[],[["rawfd",6],["option",4]]]],[11,"extend","nix::fcntl","",6,[[["intoiterator",8]]]],[11,"extend","","",7,[[["intoiterator",8]]]],[11,"extend","","",8,[[["intoiterator",8]]]],[11,"extend","","",9,[[["intoiterator",8]]]],[11,"extend","","",12,[[["intoiterator",8]]]],[11,"extend","","",13,[[["intoiterator",8]]]],[11,"extend","nix::kmod","",15,[[["intoiterator",8]]]],[11,"extend","","",16,[[["intoiterator",8]]]],[11,"extend","nix::mount","",17,[[["intoiterator",8]]]],[11,"extend","","",18,[[["intoiterator",8]]]],[11,"extend","nix::mqueue","",19,[[["intoiterator",8]]]],[11,"extend","","",20,[[["intoiterator",8]]]],[11,"extend","nix::net::if_","",22,[[["intoiterator",8]]]],[11,"extend","nix::poll","",24,[[["intoiterator",8]]]],[11,"extend","nix::sched","",157,[[["intoiterator",8]]]],[11,"extend","nix::sys::epoll","",35,[[["intoiterator",8]]]],[11,"extend","","",37,[[["intoiterator",8]]]],[11,"extend","nix::sys::eventfd","",39,[[["intoiterator",8]]]],[11,"extend","nix::sys::memfd","",40,[[["intoiterator",8]]]],[11,"extend","nix::sys::mman","",41,[[["intoiterator",8]]]],[11,"extend","","",42,[[["intoiterator",8]]]],[11,"extend","","",44,[[["intoiterator",8]]]],[11,"extend","","",45,[[["intoiterator",8]]]],[11,"extend","nix::sys::ptrace","",159,[[["intoiterator",8]]]],[11,"extend","nix::sys::quota","",50,[[["intoiterator",8]]]],[11,"extend","nix::sys::signal","",55,[[["intoiterator",8]]]],[11,"extend","nix::sys::signalfd","",64,[[["intoiterator",8]]]],[11,"extend","nix::sys::socket","",86,[[["intoiterator",8]]]],[11,"extend","","",87,[[["intoiterator",8]]]],[11,"extend","nix::sys::stat","",101,[[["intoiterator",8]]]],[11,"extend","","",102,[[["intoiterator",8]]]],[11,"extend","nix::sys::statvfs","",107,[[["intoiterator",8]]]],[11,"extend","nix::sys::termios","",116,[[["intoiterator",8]]]],[11,"extend","","",117,[[["intoiterator",8]]]],[11,"extend","","",118,[[["intoiterator",8]]]],[11,"extend","","",119,[[["intoiterator",8]]]],[11,"extend","nix::sys::wait","",126,[[["intoiterator",8]]]],[11,"extend","nix::sys::inotify","",128,[[["intoiterator",8]]]],[11,"extend","","",129,[[["intoiterator",8]]]],[11,"extend","nix::sys::timerfd","",133,[[["intoiterator",8]]]],[11,"extend","","",134,[[["intoiterator",8]]]],[11,"extend","nix::unistd","",149,[[["intoiterator",8]]]],[11,"next","nix::dir","",154,[[],["option",4]]],[11,"next","nix::ifaddrs","",155,[[],["option",4]]],[11,"next","nix::sys::select","",160,[[],[["rawfd",6],["option",4]]]],[11,"size_hint","","",160,[[]]],[11,"next","nix::sys::signal","",162,[[],[["option",4],["signal",4]]]],[11,"next","nix::sys::signalfd","",65,[[],["option",4]]],[11,"next","nix::sys::socket","",200,[[],[["option",4],["controlmessageowned",4]]]],[11,"clone","nix::dir","",0,[[],["dir",3]]],[11,"clone","","",2,[[],["entry",3]]],[11,"clone","","",1,[[],["type",4]]],[11,"clone","nix::errno","",3,[[],["errno",4]]],[11,"clone","nix::fcntl","",6,[[],["atflags",3]]],[11,"clone","","",7,[[],["oflag",3]]],[11,"clone","","",8,[[],["sealflag",3]]],[11,"clone","","",9,[[],["fdflag",3]]],[11,"clone","","",11,[[],["flockarg",4]]],[11,"clone","","",12,[[],["splicefflags",3]]],[11,"clone","","",13,[[],["fallocateflags",3]]],[11,"clone","","",5,[[],["posixfadviseadvice",4]]],[11,"clone","nix::ifaddrs","",14,[[],["interfaceaddress",3]]],[11,"clone","nix::kmod","",15,[[],["moduleinitflags",3]]],[11,"clone","","",16,[[],["deletemoduleflags",3]]],[11,"clone","nix::mount","",17,[[],["msflags",3]]],[11,"clone","","",18,[[],["mntflags",3]]],[11,"clone","nix::mqueue","",19,[[],["mq_oflag",3]]],[11,"clone","","",20,[[],["fdflag",3]]],[11,"clone","","",21,[[],["mqattr",3]]],[11,"clone","nix::net::if_","",22,[[],["interfaceflags",3]]],[11,"clone","nix::poll","",23,[[],["pollfd",3]]],[11,"clone","","",24,[[],["pollflags",3]]],[11,"clone","nix::pty","",26,[[],["openptyresult",3]]],[11,"clone","","",27,[[],["forkptyresult",3]]],[11,"clone","","",156,[[],["ptymaster",3]]],[11,"clone","nix::sched","",157,[[],["cloneflags",3]]],[11,"clone","","",158,[[],["cpuset",3]]],[11,"clone","nix::sys::aio","",28,[[],["aiofsyncmode",4]]],[11,"clone","","",29,[[],["lioopcode",4]]],[11,"clone","","",30,[[],["liomode",4]]],[11,"clone","","",31,[[],["aiocancelstat",4]]],[11,"clone","nix::sys::epoll","",35,[[],["epollflags",3]]],[11,"clone","","",36,[[],["epollop",4]]],[11,"clone","","",37,[[],["epollcreateflags",3]]],[11,"clone","","",38,[[],["epollevent",3]]],[11,"clone","nix::sys::eventfd","",39,[[],["efdflags",3]]],[11,"clone","nix::sys::memfd","",40,[[],["memfdcreateflag",3]]],[11,"clone","nix::sys::mman","",41,[[],["protflags",3]]],[11,"clone","","",42,[[],["mapflags",3]]],[11,"clone","","",43,[[],["mmapadvise",4]]],[11,"clone","","",44,[[],["msflags",3]]],[11,"clone","","",45,[[],["mlockallflags",3]]],[11,"clone","nix::sys::ptrace","",46,[[],["request",4]]],[11,"clone","","",47,[[],["event",4]]],[11,"clone","","",159,[[],["options",3]]],[11,"clone","nix::sys::quota","",48,[[],["quotatype",4]]],[11,"clone","","",49,[[],["quotafmt",4]]],[11,"clone","","",50,[[],["quotavalidflags",3]]],[11,"clone","","",51,[[],["dqblk",3]]],[11,"clone","nix::sys::reboot","",52,[[],["rebootmode",4]]],[11,"clone","nix::sys::select","",53,[[],["fdset",3]]],[11,"clone","nix::sys::signal","",54,[[],["signal",4]]],[11,"clone","","",162,[[],["signaliterator",3]]],[11,"clone","","",55,[[],["saflags",3]]],[11,"clone","","",56,[[],["sigmaskhow",4]]],[11,"clone","","",57,[[],["sigset",3]]],[11,"clone","","",58,[[],["sighandler",4]]],[11,"clone","","",59,[[],["sigaction",3]]],[11,"clone","","",60,[[],["sigevnotify",4]]],[11,"clone","","",161,[[],["sigevent",3]]],[11,"clone","nix::sys::signalfd","",64,[[],["sfdflags",3]]],[11,"clone","","",65,[[],["signalfd",3]]],[11,"clone","nix::sys::socket","",73,[[],["addressfamily",4]]],[11,"clone","","",75,[[],["inetaddr",4]]],[11,"clone","","",77,[[],["ipaddr",4]]],[11,"clone","","",78,[[],["ipv4addr",3]]],[11,"clone","","",79,[[],["ipv6addr",3]]],[11,"clone","","",76,[[],["unixaddr",3]]],[11,"clone","","",74,[[],["sockaddr",4]]],[11,"clone","","",81,[[],["netlinkaddr",3]]],[11,"clone","","",82,[[],["algaddr",3]]],[11,"clone","","",80,[[],["linkaddr",3]]],[11,"clone","","",83,[[],["vsockaddr",3]]],[11,"clone","nix::sys::socket::sockopt","",163,[[],["reuseaddr",3]]],[11,"clone","","",164,[[],["reuseport",3]]],[11,"clone","","",165,[[],["tcpnodelay",3]]],[11,"clone","","",166,[[],["linger",3]]],[11,"clone","","",167,[[],["ipaddmembership",3]]],[11,"clone","","",168,[[],["ipdropmembership",3]]],[11,"clone","","",169,[[],["ipv6addmembership",3]]],[11,"clone","","",170,[[],["ipv6dropmembership",3]]],[11,"clone","","",171,[[],["ipmulticastttl",3]]],[11,"clone","","",172,[[],["ipmulticastloop",3]]],[11,"clone","","",173,[[],["receivetimeout",3]]],[11,"clone","","",174,[[],["sendtimeout",3]]],[11,"clone","","",175,[[],["broadcast",3]]],[11,"clone","","",176,[[],["oobinline",3]]],[11,"clone","","",177,[[],["socketerror",3]]],[11,"clone","","",178,[[],["keepalive",3]]],[11,"clone","","",179,[[],["peercredentials",3]]],[11,"clone","","",180,[[],["tcpkeepidle",3]]],[11,"clone","","",181,[[],["rcvbuf",3]]],[11,"clone","","",182,[[],["sndbuf",3]]],[11,"clone","","",183,[[],["rcvbufforce",3]]],[11,"clone","","",184,[[],["sndbufforce",3]]],[11,"clone","","",185,[[],["socktype",3]]],[11,"clone","","",186,[[],["acceptconn",3]]],[11,"clone","","",187,[[],["bindtodevice",3]]],[11,"clone","","",188,[[],["originaldst",3]]],[11,"clone","","",189,[[],["receivetimestamp",3]]],[11,"clone","","",190,[[],["iptransparent",3]]],[11,"clone","","",191,[[],["mark",3]]],[11,"clone","","",192,[[],["passcred",3]]],[11,"clone","","",193,[[],["tcpcongestion",3]]],[11,"clone","","",194,[[],["ipv4packetinfo",3]]],[11,"clone","","",195,[[],["ipv6recvpacketinfo",3]]],[11,"clone","","",196,[[],["udpgsosegment",3]]],[11,"clone","","",197,[[],["udpgrosegment",3]]],[11,"clone","","",198,[[],["algsetaeadauthsize",3]]],[11,"clone","","",199,[[],["algsetkey",3]]],[11,"clone","nix::sys::socket","",84,[[],["socktype",4]]],[11,"clone","","",85,[[],["sockprotocol",4]]],[11,"clone","","",86,[[],["sockflag",3]]],[11,"clone","","",87,[[],["msgflags",3]]],[11,"clone","","",88,[[],["unixcredentials",3]]],[11,"clone","","",89,[[],["ipmembershiprequest",3]]],[11,"clone","","",90,[[],["ipv6membershiprequest",3]]],[11,"clone","","",91,[[],["recvmsg",3]]],[11,"clone","","",200,[[],["cmsgiterator",3]]],[11,"clone","","",92,[[],["controlmessageowned",4]]],[11,"clone","","",93,[[],["controlmessage",4]]],[11,"clone","","",96,[[],["socklevel",4]]],[11,"clone","","",99,[[],["shutdown",4]]],[11,"clone","nix::sys::stat","",101,[[],["sflag",3]]],[11,"clone","","",102,[[],["mode",3]]],[11,"clone","","",103,[[],["fchmodatflags",4]]],[11,"clone","","",104,[[],["utimensatflags",4]]],[11,"clone","nix::sys::statfs","",106,[[],["statfs",3]]],[11,"clone","","",105,[[],["fstype",3]]],[11,"clone","nix::sys::statvfs","",107,[[],["fsflags",3]]],[11,"clone","","",108,[[],["statvfs",3]]],[11,"clone","nix::sys::sysinfo","",109,[[],["sysinfo",3]]],[11,"clone","nix::sys::termios","",110,[[],["termios",3]]],[11,"clone","","",111,[[],["baudrate",4]]],[11,"clone","","",112,[[],["setarg",4]]],[11,"clone","","",113,[[],["flusharg",4]]],[11,"clone","","",114,[[],["flowarg",4]]],[11,"clone","","",115,[[],["specialcharacterindices",4]]],[11,"clone","","",116,[[],["inputflags",3]]],[11,"clone","","",117,[[],["outputflags",3]]],[11,"clone","","",118,[[],["controlflags",3]]],[11,"clone","","",119,[[],["localflags",3]]],[11,"clone","nix::sys::time","",121,[[],["timespec",3]]],[11,"clone","","",122,[[],["timeval",3]]],[11,"clone","nix::sys::uio","",123,[[],["remoteiovec",3]]],[11,"clone","","",124,[[],["iovec",3]]],[11,"clone","nix::sys::utsname","",125,[[],["utsname",3]]],[11,"clone","nix::sys::wait","",126,[[],["waitpidflag",3]]],[11,"clone","","",127,[[],["waitstatus",4]]],[11,"clone","nix::sys::inotify","",128,[[],["addwatchflags",3]]],[11,"clone","","",129,[[],["initflags",3]]],[11,"clone","","",131,[[],["inotify",3]]],[11,"clone","","",201,[[],["watchdescriptor",3]]],[11,"clone","nix::sys::timerfd","",136,[[],["timerfd",3]]],[11,"clone","","",132,[[],["clockid",4]]],[11,"clone","","",133,[[],["timerflags",3]]],[11,"clone","","",134,[[],["timersettimeflags",3]]],[11,"clone","","",135,[[],["expiration",4]]],[11,"clone","nix::ucontext","",137,[[],["ucontext",3]]],[11,"clone","nix::unistd","",138,[[],["uid",3]]],[11,"clone","","",139,[[],["gid",3]]],[11,"clone","","",140,[[],["pid",3]]],[11,"clone","","",141,[[],["forkresult",4]]],[11,"clone","","",143,[[],["fchownatflags",4]]],[11,"clone","","",144,[[],["whence",4]]],[11,"clone","","",145,[[],["linkatflags",4]]],[11,"clone","","",146,[[],["unlinkatflags",4]]],[11,"clone","","",147,[[],["pathconfvar",4]]],[11,"clone","","",148,[[],["sysconfvar",4]]],[11,"clone","","",149,[[],["accessflags",3]]],[11,"clone","","",150,[[],["user",3]]],[11,"clone","","",151,[[],["group",3]]],[11,"clone","nix","",152,[[],["error",4]]],[11,"default","nix::sched","",158,[[]]],[11,"default","nix::sys::quota","",50,[[],["quotavalidflags",3]]],[11,"default","","",51,[[],["dqblk",3]]],[11,"default","nix::sys::select","",53,[[]]],[11,"default","nix::sys::socket::sockopt","",199,[[]]],[11,"default","nix::sys::socket","",88,[[]]],[11,"default","nix::sys::statvfs","",107,[[],["fsflags",3]]],[11,"cmp","nix::fcntl","",6,[[["atflags",3]],["ordering",4]]],[11,"cmp","","",7,[[["oflag",3]],["ordering",4]]],[11,"cmp","","",8,[[["sealflag",3]],["ordering",4]]],[11,"cmp","","",9,[[["fdflag",3]],["ordering",4]]],[11,"cmp","","",12,[[["splicefflags",3]],["ordering",4]]],[11,"cmp","","",13,[[["fallocateflags",3]],["ordering",4]]],[11,"cmp","","",5,[[["posixfadviseadvice",4]],["ordering",4]]],[11,"cmp","nix::kmod","",15,[[["moduleinitflags",3]],["ordering",4]]],[11,"cmp","","",16,[[["deletemoduleflags",3]],["ordering",4]]],[11,"cmp","nix::mount","",17,[[["msflags",3]],["ordering",4]]],[11,"cmp","","",18,[[["mntflags",3]],["ordering",4]]],[11,"cmp","nix::mqueue","",19,[[["mq_oflag",3]],["ordering",4]]],[11,"cmp","","",20,[[["fdflag",3]],["ordering",4]]],[11,"cmp","nix::net::if_","",22,[[["interfaceflags",3]],["ordering",4]]],[11,"cmp","nix::poll","",24,[[["pollflags",3]],["ordering",4]]],[11,"cmp","nix::sched","",157,[[["cloneflags",3]],["ordering",4]]],[11,"cmp","nix::sys::aio","",28,[[["aiofsyncmode",4]],["ordering",4]]],[11,"cmp","","",29,[[["lioopcode",4]],["ordering",4]]],[11,"cmp","","",30,[[["liomode",4]],["ordering",4]]],[11,"cmp","nix::sys::epoll","",35,[[["epollflags",3]],["ordering",4]]],[11,"cmp","","",37,[[["epollcreateflags",3]],["ordering",4]]],[11,"cmp","nix::sys::eventfd","",39,[[["efdflags",3]],["ordering",4]]],[11,"cmp","nix::sys::memfd","",40,[[["memfdcreateflag",3]],["ordering",4]]],[11,"cmp","nix::sys::mman","",41,[[["protflags",3]],["ordering",4]]],[11,"cmp","","",42,[[["mapflags",3]],["ordering",4]]],[11,"cmp","","",43,[[["mmapadvise",4]],["ordering",4]]],[11,"cmp","","",44,[[["msflags",3]],["ordering",4]]],[11,"cmp","","",45,[[["mlockallflags",3]],["ordering",4]]],[11,"cmp","nix::sys::ptrace","",46,[[["request",4]],["ordering",4]]],[11,"cmp","","",47,[[["event",4]],["ordering",4]]],[11,"cmp","","",159,[[["options",3]],["ordering",4]]],[11,"cmp","nix::sys::quota","",48,[[["quotatype",4]],["ordering",4]]],[11,"cmp","","",49,[[["quotafmt",4]],["ordering",4]]],[11,"cmp","","",50,[[["quotavalidflags",3]],["ordering",4]]],[11,"cmp","nix::sys::reboot","",52,[[["rebootmode",4]],["ordering",4]]],[11,"cmp","nix::sys::signal","",54,[[["signal",4]],["ordering",4]]],[11,"cmp","","",55,[[["saflags",3]],["ordering",4]]],[11,"cmp","","",56,[[["sigmaskhow",4]],["ordering",4]]],[11,"cmp","nix::sys::signalfd","",64,[[["sfdflags",3]],["ordering",4]]],[11,"cmp","nix::sys::socket","",86,[[["sockflag",3]],["ordering",4]]],[11,"cmp","","",87,[[["msgflags",3]],["ordering",4]]],[11,"cmp","nix::sys::stat","",101,[[["sflag",3]],["ordering",4]]],[11,"cmp","","",102,[[["mode",3]],["ordering",4]]],[11,"cmp","nix::sys::statvfs","",107,[[["fsflags",3]],["ordering",4]]],[11,"cmp","nix::sys::termios","",111,[[["baudrate",4]],["ordering",4]]],[11,"cmp","","",112,[[["setarg",4]],["ordering",4]]],[11,"cmp","","",113,[[["flusharg",4]],["ordering",4]]],[11,"cmp","","",114,[[["flowarg",4]],["ordering",4]]],[11,"cmp","","",115,[[["specialcharacterindices",4]],["ordering",4]]],[11,"cmp","","",116,[[["inputflags",3]],["ordering",4]]],[11,"cmp","","",117,[[["outputflags",3]],["ordering",4]]],[11,"cmp","","",118,[[["controlflags",3]],["ordering",4]]],[11,"cmp","","",119,[[["localflags",3]],["ordering",4]]],[11,"cmp","nix::sys::time","",121,[[["timespec",3]],["ordering",4]]],[11,"cmp","","",122,[[["timeval",3]],["ordering",4]]],[11,"cmp","nix::sys::wait","",126,[[["waitpidflag",3]],["ordering",4]]],[11,"cmp","nix::sys::inotify","",128,[[["addwatchflags",3]],["ordering",4]]],[11,"cmp","","",129,[[["initflags",3]],["ordering",4]]],[11,"cmp","","",201,[[["watchdescriptor",3]],["ordering",4]]],[11,"cmp","nix::sys::timerfd","",132,[[["clockid",4]],["ordering",4]]],[11,"cmp","","",133,[[["timerflags",3]],["ordering",4]]],[11,"cmp","","",134,[[["timersettimeflags",3]],["ordering",4]]],[11,"cmp","nix::unistd","",140,[[["pid",3]],["ordering",4]]],[11,"cmp","","",149,[[["accessflags",3]],["ordering",4]]],[11,"eq","nix::dir","",0,[[["dir",3]]]],[11,"ne","","",0,[[["dir",3]]]],[11,"eq","","",154,[[["iter",3]]]],[11,"ne","","",154,[[["iter",3]]]],[11,"eq","","",2,[[["entry",3]]]],[11,"ne","","",2,[[["entry",3]]]],[11,"eq","","",1,[[["type",4]]]],[11,"eq","nix::errno","",3,[[["errno",4]]]],[11,"eq","nix::fcntl","",6,[[["atflags",3]]]],[11,"ne","","",6,[[["atflags",3]]]],[11,"eq","","",7,[[["oflag",3]]]],[11,"ne","","",7,[[["oflag",3]]]],[11,"eq","","",8,[[["sealflag",3]]]],[11,"ne","","",8,[[["sealflag",3]]]],[11,"eq","","",9,[[["fdflag",3]]]],[11,"ne","","",9,[[["fdflag",3]]]],[11,"eq","","",10,[[["fcntlarg",4]]]],[11,"ne","","",10,[[["fcntlarg",4]]]],[11,"eq","","",11,[[["flockarg",4]]]],[11,"eq","","",12,[[["splicefflags",3]]]],[11,"ne","","",12,[[["splicefflags",3]]]],[11,"eq","","",13,[[["fallocateflags",3]]]],[11,"ne","","",13,[[["fallocateflags",3]]]],[11,"eq","","",5,[[["posixfadviseadvice",4]]]],[11,"eq","nix::ifaddrs","",14,[[["interfaceaddress",3]]]],[11,"ne","","",14,[[["interfaceaddress",3]]]],[11,"eq","","",155,[[["interfaceaddressiterator",3]]]],[11,"ne","","",155,[[["interfaceaddressiterator",3]]]],[11,"eq","nix::kmod","",15,[[["moduleinitflags",3]]]],[11,"ne","","",15,[[["moduleinitflags",3]]]],[11,"eq","","",16,[[["deletemoduleflags",3]]]],[11,"ne","","",16,[[["deletemoduleflags",3]]]],[11,"eq","nix::mount","",17,[[["msflags",3]]]],[11,"ne","","",17,[[["msflags",3]]]],[11,"eq","","",18,[[["mntflags",3]]]],[11,"ne","","",18,[[["mntflags",3]]]],[11,"eq","nix::mqueue","",19,[[["mq_oflag",3]]]],[11,"ne","","",19,[[["mq_oflag",3]]]],[11,"eq","","",20,[[["fdflag",3]]]],[11,"ne","","",20,[[["fdflag",3]]]],[11,"eq","","",21,[[["mqattr",3]]]],[11,"ne","","",21,[[["mqattr",3]]]],[11,"eq","nix::net::if_","",22,[[["interfaceflags",3]]]],[11,"ne","","",22,[[["interfaceflags",3]]]],[11,"eq","nix::poll","",23,[[["pollfd",3]]]],[11,"ne","","",23,[[["pollfd",3]]]],[11,"eq","","",24,[[["pollflags",3]]]],[11,"ne","","",24,[[["pollflags",3]]]],[11,"eq","nix::pty","",26,[[["openptyresult",3]]]],[11,"ne","","",26,[[["openptyresult",3]]]],[11,"eq","","",156,[[["ptymaster",3]]]],[11,"ne","","",156,[[["ptymaster",3]]]],[11,"eq","nix::sched","",157,[[["cloneflags",3]]]],[11,"ne","","",157,[[["cloneflags",3]]]],[11,"eq","","",158,[[["cpuset",3]]]],[11,"ne","","",158,[[["cpuset",3]]]],[11,"eq","nix::sys::aio","",28,[[["aiofsyncmode",4]]]],[11,"eq","","",29,[[["lioopcode",4]]]],[11,"eq","","",30,[[["liomode",4]]]],[11,"eq","","",31,[[["aiocancelstat",4]]]],[11,"eq","nix::sys::epoll","",35,[[["epollflags",3]]]],[11,"ne","","",35,[[["epollflags",3]]]],[11,"eq","","",36,[[["epollop",4]]]],[11,"eq","","",37,[[["epollcreateflags",3]]]],[11,"ne","","",37,[[["epollcreateflags",3]]]],[11,"eq","","",38,[[["epollevent",3]]]],[11,"ne","","",38,[[["epollevent",3]]]],[11,"eq","nix::sys::eventfd","",39,[[["efdflags",3]]]],[11,"ne","","",39,[[["efdflags",3]]]],[11,"eq","nix::sys::memfd","",40,[[["memfdcreateflag",3]]]],[11,"ne","","",40,[[["memfdcreateflag",3]]]],[11,"eq","nix::sys::mman","",41,[[["protflags",3]]]],[11,"ne","","",41,[[["protflags",3]]]],[11,"eq","","",42,[[["mapflags",3]]]],[11,"ne","","",42,[[["mapflags",3]]]],[11,"eq","","",43,[[["mmapadvise",4]]]],[11,"eq","","",44,[[["msflags",3]]]],[11,"ne","","",44,[[["msflags",3]]]],[11,"eq","","",45,[[["mlockallflags",3]]]],[11,"ne","","",45,[[["mlockallflags",3]]]],[11,"eq","nix::sys::ptrace","",46,[[["request",4]]]],[11,"eq","","",47,[[["event",4]]]],[11,"eq","","",159,[[["options",3]]]],[11,"ne","","",159,[[["options",3]]]],[11,"eq","nix::sys::quota","",48,[[["quotatype",4]]]],[11,"eq","","",49,[[["quotafmt",4]]]],[11,"eq","","",50,[[["quotavalidflags",3]]]],[11,"ne","","",50,[[["quotavalidflags",3]]]],[11,"eq","","",51,[[["dqblk",3]]]],[11,"ne","","",51,[[["dqblk",3]]]],[11,"eq","nix::sys::reboot","",52,[[["rebootmode",4]]]],[11,"eq","nix::sys::select","",53,[[["fdset",3]]]],[11,"ne","","",53,[[["fdset",3]]]],[11,"eq","nix::sys::signal","",54,[[["signal",4]]]],[11,"eq","","",162,[[["signaliterator",3]]]],[11,"ne","","",162,[[["signaliterator",3]]]],[11,"eq","","",55,[[["saflags",3]]]],[11,"ne","","",55,[[["saflags",3]]]],[11,"eq","","",56,[[["sigmaskhow",4]]]],[11,"eq","","",57,[[["sigset",3]]]],[11,"ne","","",57,[[["sigset",3]]]],[11,"eq","","",58,[[["sighandler",4]]]],[11,"ne","","",58,[[["sighandler",4]]]],[11,"eq","","",59,[[["sigaction",3]]]],[11,"ne","","",59,[[["sigaction",3]]]],[11,"eq","","",60,[[["sigevnotify",4]]]],[11,"ne","","",60,[[["sigevnotify",4]]]],[11,"eq","","",161,[[["sigevent",3]]]],[11,"ne","","",161,[[["sigevent",3]]]],[11,"eq","nix::sys::signalfd","",64,[[["sfdflags",3]]]],[11,"ne","","",64,[[["sfdflags",3]]]],[11,"eq","","",65,[[["signalfd",3]]]],[11,"ne","","",65,[[["signalfd",3]]]],[11,"eq","nix::sys::socket","",73,[[["addressfamily",4]]]],[11,"eq","","",75,[[["inetaddr",4]]]],[11,"ne","","",75,[[["inetaddr",4]]]],[11,"eq","","",77,[[["ipaddr",4]]]],[11,"ne","","",77,[[["ipaddr",4]]]],[11,"eq","","",78,[[["ipv4addr",3]]]],[11,"ne","","",78,[[["ipv4addr",3]]]],[11,"eq","","",79,[[["ipv6addr",3]]]],[11,"ne","","",79,[[["ipv6addr",3]]]],[11,"eq","","",76,[[["unixaddr",3]]]],[11,"eq","","",74,[[["sockaddr",4]]]],[11,"ne","","",74,[[["sockaddr",4]]]],[11,"eq","","",81,[[["netlinkaddr",3]]]],[11,"ne","","",81,[[["netlinkaddr",3]]]],[11,"eq","","",82,[[]]],[11,"eq","","",80,[[["linkaddr",3]]]],[11,"ne","","",80,[[["linkaddr",3]]]],[11,"eq","","",83,[[]]],[11,"eq","nix::sys::socket::sockopt","",163,[[["reuseaddr",3]]]],[11,"eq","","",164,[[["reuseport",3]]]],[11,"eq","","",165,[[["tcpnodelay",3]]]],[11,"eq","","",166,[[["linger",3]]]],[11,"eq","","",167,[[["ipaddmembership",3]]]],[11,"eq","","",168,[[["ipdropmembership",3]]]],[11,"eq","","",169,[[["ipv6addmembership",3]]]],[11,"eq","","",170,[[["ipv6dropmembership",3]]]],[11,"eq","","",171,[[["ipmulticastttl",3]]]],[11,"eq","","",172,[[["ipmulticastloop",3]]]],[11,"eq","","",173,[[["receivetimeout",3]]]],[11,"eq","","",174,[[["sendtimeout",3]]]],[11,"eq","","",175,[[["broadcast",3]]]],[11,"eq","","",176,[[["oobinline",3]]]],[11,"eq","","",177,[[["socketerror",3]]]],[11,"eq","","",178,[[["keepalive",3]]]],[11,"eq","","",179,[[["peercredentials",3]]]],[11,"eq","","",180,[[["tcpkeepidle",3]]]],[11,"eq","","",181,[[["rcvbuf",3]]]],[11,"eq","","",182,[[["sndbuf",3]]]],[11,"eq","","",183,[[["rcvbufforce",3]]]],[11,"eq","","",184,[[["sndbufforce",3]]]],[11,"eq","","",185,[[["socktype",3]]]],[11,"eq","","",186,[[["acceptconn",3]]]],[11,"eq","","",187,[[["bindtodevice",3]]]],[11,"eq","","",188,[[["originaldst",3]]]],[11,"eq","","",189,[[["receivetimestamp",3]]]],[11,"eq","","",190,[[["iptransparent",3]]]],[11,"eq","","",191,[[["mark",3]]]],[11,"eq","","",192,[[["passcred",3]]]],[11,"eq","","",193,[[["tcpcongestion",3]]]],[11,"eq","","",194,[[["ipv4packetinfo",3]]]],[11,"eq","","",195,[[["ipv6recvpacketinfo",3]]]],[11,"eq","","",196,[[["udpgsosegment",3]]]],[11,"eq","","",197,[[["udpgrosegment",3]]]],[11,"eq","nix::sys::socket","",84,[[["socktype",4]]]],[11,"eq","","",85,[[["sockprotocol",4]]]],[11,"eq","","",86,[[["sockflag",3]]]],[11,"ne","","",86,[[["sockflag",3]]]],[11,"eq","","",87,[[["msgflags",3]]]],[11,"ne","","",87,[[["msgflags",3]]]],[11,"eq","","",88,[[["unixcredentials",3]]]],[11,"ne","","",88,[[["unixcredentials",3]]]],[11,"eq","","",89,[[["ipmembershiprequest",3]]]],[11,"ne","","",89,[[["ipmembershiprequest",3]]]],[11,"eq","","",90,[[["ipv6membershiprequest",3]]]],[11,"ne","","",90,[[["ipv6membershiprequest",3]]]],[11,"eq","","",91,[[["recvmsg",3]]]],[11,"ne","","",91,[[["recvmsg",3]]]],[11,"eq","","",200,[[["cmsgiterator",3]]]],[11,"ne","","",200,[[["cmsgiterator",3]]]],[11,"eq","","",92,[[["controlmessageowned",4]]]],[11,"ne","","",92,[[["controlmessageowned",4]]]],[11,"eq","","",93,[[["controlmessage",4]]]],[11,"ne","","",93,[[["controlmessage",4]]]],[11,"eq","","",96,[[["socklevel",4]]]],[11,"eq","","",99,[[["shutdown",4]]]],[11,"eq","nix::sys::stat","",101,[[["sflag",3]]]],[11,"ne","","",101,[[["sflag",3]]]],[11,"eq","","",102,[[["mode",3]]]],[11,"ne","","",102,[[["mode",3]]]],[11,"eq","nix::sys::statfs","",105,[[["fstype",3]]]],[11,"ne","","",105,[[["fstype",3]]]],[11,"eq","nix::sys::statvfs","",107,[[["fsflags",3]]]],[11,"ne","","",107,[[["fsflags",3]]]],[11,"eq","","",108,[[["statvfs",3]]]],[11,"ne","","",108,[[["statvfs",3]]]],[11,"eq","nix::sys::sysinfo","",109,[[["sysinfo",3]]]],[11,"ne","","",109,[[["sysinfo",3]]]],[11,"eq","nix::sys::termios","",110,[[["termios",3]]]],[11,"ne","","",110,[[["termios",3]]]],[11,"eq","","",111,[[["baudrate",4]]]],[11,"eq","","",112,[[["setarg",4]]]],[11,"eq","","",113,[[["flusharg",4]]]],[11,"eq","","",114,[[["flowarg",4]]]],[11,"eq","","",115,[[["specialcharacterindices",4]]]],[11,"eq","","",116,[[["inputflags",3]]]],[11,"ne","","",116,[[["inputflags",3]]]],[11,"eq","","",117,[[["outputflags",3]]]],[11,"ne","","",117,[[["outputflags",3]]]],[11,"eq","","",118,[[["controlflags",3]]]],[11,"ne","","",118,[[["controlflags",3]]]],[11,"eq","","",119,[[["localflags",3]]]],[11,"ne","","",119,[[["localflags",3]]]],[11,"eq","nix::sys::time","",121,[[["timespec",3]]]],[11,"ne","","",121,[[["timespec",3]]]],[11,"eq","","",122,[[["timeval",3]]]],[11,"ne","","",122,[[["timeval",3]]]],[11,"eq","nix::sys::uio","",123,[[["remoteiovec",3]]]],[11,"ne","","",123,[[["remoteiovec",3]]]],[11,"eq","","",124,[[["iovec",3]]]],[11,"ne","","",124,[[["iovec",3]]]],[11,"eq","nix::sys::utsname","",125,[[["utsname",3]]]],[11,"ne","","",125,[[["utsname",3]]]],[11,"eq","nix::sys::wait","",126,[[["waitpidflag",3]]]],[11,"ne","","",126,[[["waitpidflag",3]]]],[11,"eq","","",127,[[["waitstatus",4]]]],[11,"ne","","",127,[[["waitstatus",4]]]],[11,"eq","nix::sys::inotify","",128,[[["addwatchflags",3]]]],[11,"ne","","",128,[[["addwatchflags",3]]]],[11,"eq","","",129,[[["initflags",3]]]],[11,"ne","","",129,[[["initflags",3]]]],[11,"eq","","",201,[[["watchdescriptor",3]]]],[11,"ne","","",201,[[["watchdescriptor",3]]]],[11,"eq","nix::sys::timerfd","",132,[[["clockid",4]]]],[11,"eq","","",133,[[["timerflags",3]]]],[11,"ne","","",133,[[["timerflags",3]]]],[11,"eq","","",134,[[["timersettimeflags",3]]]],[11,"ne","","",134,[[["timersettimeflags",3]]]],[11,"eq","","",135,[[["expiration",4]]]],[11,"ne","","",135,[[["expiration",4]]]],[11,"eq","nix::ucontext","",137,[[["ucontext",3]]]],[11,"ne","","",137,[[["ucontext",3]]]],[11,"eq","nix::unistd","",138,[[["uid",3]]]],[11,"ne","","",138,[[["uid",3]]]],[11,"eq","","",139,[[["gid",3]]]],[11,"ne","","",139,[[["gid",3]]]],[11,"eq","","",140,[[["pid",3]]]],[11,"ne","","",140,[[["pid",3]]]],[11,"eq","","",147,[[["pathconfvar",4]]]],[11,"eq","","",148,[[["sysconfvar",4]]]],[11,"eq","","",149,[[["accessflags",3]]]],[11,"ne","","",149,[[["accessflags",3]]]],[11,"eq","","",150,[[["user",3]]]],[11,"ne","","",150,[[["user",3]]]],[11,"eq","","",151,[[["group",3]]]],[11,"ne","","",151,[[["group",3]]]],[11,"eq","nix","",152,[[["error",4]]]],[11,"ne","","",152,[[["error",4]]]],[11,"partial_cmp","nix::fcntl","",6,[[["atflags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",6,[[["atflags",3]]]],[11,"le","","",6,[[["atflags",3]]]],[11,"gt","","",6,[[["atflags",3]]]],[11,"ge","","",6,[[["atflags",3]]]],[11,"partial_cmp","","",7,[[["oflag",3]],[["option",4],["ordering",4]]]],[11,"lt","","",7,[[["oflag",3]]]],[11,"le","","",7,[[["oflag",3]]]],[11,"gt","","",7,[[["oflag",3]]]],[11,"ge","","",7,[[["oflag",3]]]],[11,"partial_cmp","","",8,[[["sealflag",3]],[["option",4],["ordering",4]]]],[11,"lt","","",8,[[["sealflag",3]]]],[11,"le","","",8,[[["sealflag",3]]]],[11,"gt","","",8,[[["sealflag",3]]]],[11,"ge","","",8,[[["sealflag",3]]]],[11,"partial_cmp","","",9,[[["fdflag",3]],[["option",4],["ordering",4]]]],[11,"lt","","",9,[[["fdflag",3]]]],[11,"le","","",9,[[["fdflag",3]]]],[11,"gt","","",9,[[["fdflag",3]]]],[11,"ge","","",9,[[["fdflag",3]]]],[11,"partial_cmp","","",12,[[["splicefflags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",12,[[["splicefflags",3]]]],[11,"le","","",12,[[["splicefflags",3]]]],[11,"gt","","",12,[[["splicefflags",3]]]],[11,"ge","","",12,[[["splicefflags",3]]]],[11,"partial_cmp","","",13,[[["fallocateflags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",13,[[["fallocateflags",3]]]],[11,"le","","",13,[[["fallocateflags",3]]]],[11,"gt","","",13,[[["fallocateflags",3]]]],[11,"ge","","",13,[[["fallocateflags",3]]]],[11,"partial_cmp","","",5,[[["posixfadviseadvice",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","nix::kmod","",15,[[["moduleinitflags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",15,[[["moduleinitflags",3]]]],[11,"le","","",15,[[["moduleinitflags",3]]]],[11,"gt","","",15,[[["moduleinitflags",3]]]],[11,"ge","","",15,[[["moduleinitflags",3]]]],[11,"partial_cmp","","",16,[[["deletemoduleflags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",16,[[["deletemoduleflags",3]]]],[11,"le","","",16,[[["deletemoduleflags",3]]]],[11,"gt","","",16,[[["deletemoduleflags",3]]]],[11,"ge","","",16,[[["deletemoduleflags",3]]]],[11,"partial_cmp","nix::mount","",17,[[["msflags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",17,[[["msflags",3]]]],[11,"le","","",17,[[["msflags",3]]]],[11,"gt","","",17,[[["msflags",3]]]],[11,"ge","","",17,[[["msflags",3]]]],[11,"partial_cmp","","",18,[[["mntflags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",18,[[["mntflags",3]]]],[11,"le","","",18,[[["mntflags",3]]]],[11,"gt","","",18,[[["mntflags",3]]]],[11,"ge","","",18,[[["mntflags",3]]]],[11,"partial_cmp","nix::mqueue","",19,[[["mq_oflag",3]],[["option",4],["ordering",4]]]],[11,"lt","","",19,[[["mq_oflag",3]]]],[11,"le","","",19,[[["mq_oflag",3]]]],[11,"gt","","",19,[[["mq_oflag",3]]]],[11,"ge","","",19,[[["mq_oflag",3]]]],[11,"partial_cmp","","",20,[[["fdflag",3]],[["option",4],["ordering",4]]]],[11,"lt","","",20,[[["fdflag",3]]]],[11,"le","","",20,[[["fdflag",3]]]],[11,"gt","","",20,[[["fdflag",3]]]],[11,"ge","","",20,[[["fdflag",3]]]],[11,"partial_cmp","nix::net::if_","",22,[[["interfaceflags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",22,[[["interfaceflags",3]]]],[11,"le","","",22,[[["interfaceflags",3]]]],[11,"gt","","",22,[[["interfaceflags",3]]]],[11,"ge","","",22,[[["interfaceflags",3]]]],[11,"partial_cmp","nix::poll","",24,[[["pollflags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",24,[[["pollflags",3]]]],[11,"le","","",24,[[["pollflags",3]]]],[11,"gt","","",24,[[["pollflags",3]]]],[11,"ge","","",24,[[["pollflags",3]]]],[11,"partial_cmp","nix::sched","",157,[[["cloneflags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",157,[[["cloneflags",3]]]],[11,"le","","",157,[[["cloneflags",3]]]],[11,"gt","","",157,[[["cloneflags",3]]]],[11,"ge","","",157,[[["cloneflags",3]]]],[11,"partial_cmp","nix::sys::aio","",28,[[["aiofsyncmode",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",29,[[["lioopcode",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",30,[[["liomode",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","nix::sys::epoll","",35,[[["epollflags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",35,[[["epollflags",3]]]],[11,"le","","",35,[[["epollflags",3]]]],[11,"gt","","",35,[[["epollflags",3]]]],[11,"ge","","",35,[[["epollflags",3]]]],[11,"partial_cmp","","",37,[[["epollcreateflags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",37,[[["epollcreateflags",3]]]],[11,"le","","",37,[[["epollcreateflags",3]]]],[11,"gt","","",37,[[["epollcreateflags",3]]]],[11,"ge","","",37,[[["epollcreateflags",3]]]],[11,"partial_cmp","nix::sys::eventfd","",39,[[["efdflags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",39,[[["efdflags",3]]]],[11,"le","","",39,[[["efdflags",3]]]],[11,"gt","","",39,[[["efdflags",3]]]],[11,"ge","","",39,[[["efdflags",3]]]],[11,"partial_cmp","nix::sys::memfd","",40,[[["memfdcreateflag",3]],[["option",4],["ordering",4]]]],[11,"lt","","",40,[[["memfdcreateflag",3]]]],[11,"le","","",40,[[["memfdcreateflag",3]]]],[11,"gt","","",40,[[["memfdcreateflag",3]]]],[11,"ge","","",40,[[["memfdcreateflag",3]]]],[11,"partial_cmp","nix::sys::mman","",41,[[["protflags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",41,[[["protflags",3]]]],[11,"le","","",41,[[["protflags",3]]]],[11,"gt","","",41,[[["protflags",3]]]],[11,"ge","","",41,[[["protflags",3]]]],[11,"partial_cmp","","",42,[[["mapflags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",42,[[["mapflags",3]]]],[11,"le","","",42,[[["mapflags",3]]]],[11,"gt","","",42,[[["mapflags",3]]]],[11,"ge","","",42,[[["mapflags",3]]]],[11,"partial_cmp","","",43,[[["mmapadvise",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",44,[[["msflags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",44,[[["msflags",3]]]],[11,"le","","",44,[[["msflags",3]]]],[11,"gt","","",44,[[["msflags",3]]]],[11,"ge","","",44,[[["msflags",3]]]],[11,"partial_cmp","","",45,[[["mlockallflags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",45,[[["mlockallflags",3]]]],[11,"le","","",45,[[["mlockallflags",3]]]],[11,"gt","","",45,[[["mlockallflags",3]]]],[11,"ge","","",45,[[["mlockallflags",3]]]],[11,"partial_cmp","nix::sys::ptrace","",46,[[["request",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",47,[[["event",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",159,[[["options",3]],[["option",4],["ordering",4]]]],[11,"lt","","",159,[[["options",3]]]],[11,"le","","",159,[[["options",3]]]],[11,"gt","","",159,[[["options",3]]]],[11,"ge","","",159,[[["options",3]]]],[11,"partial_cmp","nix::sys::quota","",48,[[["quotatype",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",49,[[["quotafmt",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",50,[[["quotavalidflags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",50,[[["quotavalidflags",3]]]],[11,"le","","",50,[[["quotavalidflags",3]]]],[11,"gt","","",50,[[["quotavalidflags",3]]]],[11,"ge","","",50,[[["quotavalidflags",3]]]],[11,"partial_cmp","nix::sys::reboot","",52,[[["rebootmode",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","nix::sys::signal","",54,[[["signal",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",55,[[["saflags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",55,[[["saflags",3]]]],[11,"le","","",55,[[["saflags",3]]]],[11,"gt","","",55,[[["saflags",3]]]],[11,"ge","","",55,[[["saflags",3]]]],[11,"partial_cmp","","",56,[[["sigmaskhow",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","nix::sys::signalfd","",64,[[["sfdflags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",64,[[["sfdflags",3]]]],[11,"le","","",64,[[["sfdflags",3]]]],[11,"gt","","",64,[[["sfdflags",3]]]],[11,"ge","","",64,[[["sfdflags",3]]]],[11,"partial_cmp","nix::sys::socket","",86,[[["sockflag",3]],[["option",4],["ordering",4]]]],[11,"lt","","",86,[[["sockflag",3]]]],[11,"le","","",86,[[["sockflag",3]]]],[11,"gt","","",86,[[["sockflag",3]]]],[11,"ge","","",86,[[["sockflag",3]]]],[11,"partial_cmp","","",87,[[["msgflags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",87,[[["msgflags",3]]]],[11,"le","","",87,[[["msgflags",3]]]],[11,"gt","","",87,[[["msgflags",3]]]],[11,"ge","","",87,[[["msgflags",3]]]],[11,"partial_cmp","nix::sys::stat","",101,[[["sflag",3]],[["option",4],["ordering",4]]]],[11,"lt","","",101,[[["sflag",3]]]],[11,"le","","",101,[[["sflag",3]]]],[11,"gt","","",101,[[["sflag",3]]]],[11,"ge","","",101,[[["sflag",3]]]],[11,"partial_cmp","","",102,[[["mode",3]],[["option",4],["ordering",4]]]],[11,"lt","","",102,[[["mode",3]]]],[11,"le","","",102,[[["mode",3]]]],[11,"gt","","",102,[[["mode",3]]]],[11,"ge","","",102,[[["mode",3]]]],[11,"partial_cmp","nix::sys::statvfs","",107,[[["fsflags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",107,[[["fsflags",3]]]],[11,"le","","",107,[[["fsflags",3]]]],[11,"gt","","",107,[[["fsflags",3]]]],[11,"ge","","",107,[[["fsflags",3]]]],[11,"partial_cmp","nix::sys::termios","",111,[[["baudrate",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",112,[[["setarg",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",113,[[["flusharg",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",114,[[["flowarg",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",115,[[["specialcharacterindices",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",116,[[["inputflags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",116,[[["inputflags",3]]]],[11,"le","","",116,[[["inputflags",3]]]],[11,"gt","","",116,[[["inputflags",3]]]],[11,"ge","","",116,[[["inputflags",3]]]],[11,"partial_cmp","","",117,[[["outputflags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",117,[[["outputflags",3]]]],[11,"le","","",117,[[["outputflags",3]]]],[11,"gt","","",117,[[["outputflags",3]]]],[11,"ge","","",117,[[["outputflags",3]]]],[11,"partial_cmp","","",118,[[["controlflags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",118,[[["controlflags",3]]]],[11,"le","","",118,[[["controlflags",3]]]],[11,"gt","","",118,[[["controlflags",3]]]],[11,"ge","","",118,[[["controlflags",3]]]],[11,"partial_cmp","","",119,[[["localflags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",119,[[["localflags",3]]]],[11,"le","","",119,[[["localflags",3]]]],[11,"gt","","",119,[[["localflags",3]]]],[11,"ge","","",119,[[["localflags",3]]]],[11,"partial_cmp","nix::sys::time","",121,[[["timespec",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",122,[[["timeval",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","nix::sys::wait","",126,[[["waitpidflag",3]],[["option",4],["ordering",4]]]],[11,"lt","","",126,[[["waitpidflag",3]]]],[11,"le","","",126,[[["waitpidflag",3]]]],[11,"gt","","",126,[[["waitpidflag",3]]]],[11,"ge","","",126,[[["waitpidflag",3]]]],[11,"partial_cmp","nix::sys::inotify","",128,[[["addwatchflags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",128,[[["addwatchflags",3]]]],[11,"le","","",128,[[["addwatchflags",3]]]],[11,"gt","","",128,[[["addwatchflags",3]]]],[11,"ge","","",128,[[["addwatchflags",3]]]],[11,"partial_cmp","","",129,[[["initflags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",129,[[["initflags",3]]]],[11,"le","","",129,[[["initflags",3]]]],[11,"gt","","",129,[[["initflags",3]]]],[11,"ge","","",129,[[["initflags",3]]]],[11,"partial_cmp","","",201,[[["watchdescriptor",3]],[["option",4],["ordering",4]]]],[11,"lt","","",201,[[["watchdescriptor",3]]]],[11,"le","","",201,[[["watchdescriptor",3]]]],[11,"gt","","",201,[[["watchdescriptor",3]]]],[11,"ge","","",201,[[["watchdescriptor",3]]]],[11,"partial_cmp","nix::sys::timerfd","",132,[[["clockid",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",133,[[["timerflags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",133,[[["timerflags",3]]]],[11,"le","","",133,[[["timerflags",3]]]],[11,"gt","","",133,[[["timerflags",3]]]],[11,"ge","","",133,[[["timerflags",3]]]],[11,"partial_cmp","","",134,[[["timersettimeflags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",134,[[["timersettimeflags",3]]]],[11,"le","","",134,[[["timersettimeflags",3]]]],[11,"gt","","",134,[[["timersettimeflags",3]]]],[11,"ge","","",134,[[["timersettimeflags",3]]]],[11,"partial_cmp","nix::unistd","",140,[[["pid",3]],[["option",4],["ordering",4]]]],[11,"lt","","",140,[[["pid",3]]]],[11,"le","","",140,[[["pid",3]]]],[11,"gt","","",140,[[["pid",3]]]],[11,"ge","","",140,[[["pid",3]]]],[11,"partial_cmp","","",149,[[["accessflags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",149,[[["accessflags",3]]]],[11,"le","","",149,[[["accessflags",3]]]],[11,"gt","","",149,[[["accessflags",3]]]],[11,"ge","","",149,[[["accessflags",3]]]],[11,"fmt","nix::dir","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",154,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","nix::errno","",3,[[["formatter",3]],["result",6]]],[11,"fmt","nix::fcntl","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","nix::ifaddrs","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",155,[[["formatter",3]],["result",6]]],[11,"fmt","nix::kmod","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","nix::mount","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","nix::mqueue","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","nix::net::if_","",22,[[["formatter",3]],["result",6]]],[11,"fmt","nix::poll","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","nix::pty","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",156,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sched","",157,[[["formatter",3]],["result",6]]],[11,"fmt","","",158,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::aio","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::epoll","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::eventfd","",39,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::memfd","",40,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::mman","",41,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","","",45,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::ptrace","",46,[[["formatter",3]],["result",6]]],[11,"fmt","","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",159,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::quota","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",49,[[["formatter",3]],["result",6]]],[11,"fmt","","",50,[[["formatter",3]],["result",6]]],[11,"fmt","","",51,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::reboot","",52,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::select","",53,[[["formatter",3]],["result",6]]],[11,"fmt","","",160,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::signal","",54,[[["formatter",3]],["result",6]]],[11,"fmt","","",162,[[["formatter",3]],["result",6]]],[11,"fmt","","",55,[[["formatter",3]],["result",6]]],[11,"fmt","","",56,[[["formatter",3]],["result",6]]],[11,"fmt","","",57,[[["formatter",3]],["result",6]]],[11,"fmt","","",58,[[["formatter",3]],["result",6]]],[11,"fmt","","",59,[[["formatter",3]],["result",6]]],[11,"fmt","","",60,[[["formatter",3]],["result",6]]],[11,"fmt","","",161,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::signalfd","",64,[[["formatter",3]],["result",6]]],[11,"fmt","","",65,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::socket","",73,[[["formatter",3]],["result",6]]],[11,"fmt","","",75,[[["formatter",3]],["result",6]]],[11,"fmt","","",77,[[["formatter",3]],["result",6]]],[11,"fmt","","",78,[[["formatter",3]],["result",6]]],[11,"fmt","","",79,[[["formatter",3]],["result",6]]],[11,"fmt","","",76,[[["formatter",3]],["result",6]]],[11,"fmt","","",74,[[["formatter",3]],["result",6]]],[11,"fmt","","",81,[[["formatter",3]],["result",6]]],[11,"fmt","","",82,[[["formatter",3]],["result",6]]],[11,"fmt","","",80,[[["formatter",3]],["result",6]]],[11,"fmt","","",83,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::socket::sockopt","",163,[[["formatter",3]],["result",6]]],[11,"fmt","","",164,[[["formatter",3]],["result",6]]],[11,"fmt","","",165,[[["formatter",3]],["result",6]]],[11,"fmt","","",166,[[["formatter",3]],["result",6]]],[11,"fmt","","",167,[[["formatter",3]],["result",6]]],[11,"fmt","","",168,[[["formatter",3]],["result",6]]],[11,"fmt","","",169,[[["formatter",3]],["result",6]]],[11,"fmt","","",170,[[["formatter",3]],["result",6]]],[11,"fmt","","",171,[[["formatter",3]],["result",6]]],[11,"fmt","","",172,[[["formatter",3]],["result",6]]],[11,"fmt","","",173,[[["formatter",3]],["result",6]]],[11,"fmt","","",174,[[["formatter",3]],["result",6]]],[11,"fmt","","",175,[[["formatter",3]],["result",6]]],[11,"fmt","","",176,[[["formatter",3]],["result",6]]],[11,"fmt","","",177,[[["formatter",3]],["result",6]]],[11,"fmt","","",178,[[["formatter",3]],["result",6]]],[11,"fmt","","",179,[[["formatter",3]],["result",6]]],[11,"fmt","","",180,[[["formatter",3]],["result",6]]],[11,"fmt","","",181,[[["formatter",3]],["result",6]]],[11,"fmt","","",182,[[["formatter",3]],["result",6]]],[11,"fmt","","",183,[[["formatter",3]],["result",6]]],[11,"fmt","","",184,[[["formatter",3]],["result",6]]],[11,"fmt","","",185,[[["formatter",3]],["result",6]]],[11,"fmt","","",186,[[["formatter",3]],["result",6]]],[11,"fmt","","",187,[[["formatter",3]],["result",6]]],[11,"fmt","","",188,[[["formatter",3]],["result",6]]],[11,"fmt","","",189,[[["formatter",3]],["result",6]]],[11,"fmt","","",190,[[["formatter",3]],["result",6]]],[11,"fmt","","",191,[[["formatter",3]],["result",6]]],[11,"fmt","","",192,[[["formatter",3]],["result",6]]],[11,"fmt","","",193,[[["formatter",3]],["result",6]]],[11,"fmt","","",194,[[["formatter",3]],["result",6]]],[11,"fmt","","",195,[[["formatter",3]],["result",6]]],[11,"fmt","","",196,[[["formatter",3]],["result",6]]],[11,"fmt","","",197,[[["formatter",3]],["result",6]]],[11,"fmt","","",198,[[["formatter",3]],["result",6]]],[11,"fmt","","",199,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::socket","",84,[[["formatter",3]],["result",6]]],[11,"fmt","","",85,[[["formatter",3]],["result",6]]],[11,"fmt","","",86,[[["formatter",3]],["result",6]]],[11,"fmt","","",87,[[["formatter",3]],["result",6]]],[11,"fmt","","",88,[[["formatter",3]],["result",6]]],[11,"fmt","","",89,[[["formatter",3]],["result",6]]],[11,"fmt","","",90,[[["formatter",3]],["result",6]]],[11,"fmt","","",91,[[["formatter",3]],["result",6]]],[11,"fmt","","",200,[[["formatter",3]],["result",6]]],[11,"fmt","","",92,[[["formatter",3]],["result",6]]],[11,"fmt","","",93,[[["formatter",3]],["result",6]]],[11,"fmt","","",94,[[["formatter",3]],["result",6]]],[11,"fmt","","",95,[[["formatter",3]],["result",6]]],[11,"fmt","","",96,[[["formatter",3]],["result",6]]],[11,"fmt","","",99,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::stat","",101,[[["formatter",3]],["result",6]]],[11,"fmt","","",102,[[["formatter",3]],["result",6]]],[11,"fmt","","",103,[[["formatter",3]],["result",6]]],[11,"fmt","","",104,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::statfs","",105,[[["formatter",3]],["result",6]]],[11,"fmt","","",106,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::statvfs","",107,[[["formatter",3]],["result",6]]],[11,"fmt","","",108,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::sysinfo","",109,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::termios","",110,[[["formatter",3]],["result",6]]],[11,"fmt","","",111,[[["formatter",3]],["result",6]]],[11,"fmt","","",112,[[["formatter",3]],["result",6]]],[11,"fmt","","",113,[[["formatter",3]],["result",6]]],[11,"fmt","","",114,[[["formatter",3]],["result",6]]],[11,"fmt","","",115,[[["formatter",3]],["result",6]]],[11,"fmt","","",116,[[["formatter",3]],["result",6]]],[11,"fmt","","",117,[[["formatter",3]],["result",6]]],[11,"fmt","","",118,[[["formatter",3]],["result",6]]],[11,"fmt","","",119,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::time","",121,[[["formatter",3]],["result",6]]],[11,"fmt","","",122,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::uio","",123,[[["formatter",3]],["result",6]]],[11,"fmt","","",124,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::utsname","",125,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::wait","",126,[[["formatter",3]],["result",6]]],[11,"fmt","","",127,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::inotify","",128,[[["formatter",3]],["result",6]]],[11,"fmt","","",129,[[["formatter",3]],["result",6]]],[11,"fmt","","",131,[[["formatter",3]],["result",6]]],[11,"fmt","","",201,[[["formatter",3]],["result",6]]],[11,"fmt","","",130,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::timerfd","",136,[[["formatter",3]],["result",6]]],[11,"fmt","","",132,[[["formatter",3]],["result",6]]],[11,"fmt","","",133,[[["formatter",3]],["result",6]]],[11,"fmt","","",134,[[["formatter",3]],["result",6]]],[11,"fmt","","",135,[[["formatter",3]],["result",6]]],[11,"fmt","nix::ucontext","",137,[[["formatter",3]],["result",6]]],[11,"fmt","nix::unistd","",138,[[["formatter",3]],["result",6]]],[11,"fmt","","",139,[[["formatter",3]],["result",6]]],[11,"fmt","","",140,[[["formatter",3]],["result",6]]],[11,"fmt","","",141,[[["formatter",3]],["result",6]]],[11,"fmt","","",143,[[["formatter",3]],["result",6]]],[11,"fmt","","",144,[[["formatter",3]],["result",6]]],[11,"fmt","","",145,[[["formatter",3]],["result",6]]],[11,"fmt","","",146,[[["formatter",3]],["result",6]]],[11,"fmt","","",147,[[["formatter",3]],["result",6]]],[11,"fmt","","",148,[[["formatter",3]],["result",6]]],[11,"fmt","","",149,[[["formatter",3]],["result",6]]],[11,"fmt","","",150,[[["formatter",3]],["result",6]]],[11,"fmt","","",151,[[["formatter",3]],["result",6]]],[11,"fmt","nix","",152,[[["formatter",3]],["result",6]]],[11,"fmt","nix::errno","",3,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::signal","",54,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::socket","",75,[[["formatter",3]],["result",6]]],[11,"fmt","","",77,[[["formatter",3]],["result",6]]],[11,"fmt","","",78,[[["formatter",3]],["result",6]]],[11,"fmt","","",79,[[["formatter",3]],["result",6]]],[11,"fmt","","",76,[[["formatter",3]],["result",6]]],[11,"fmt","","",74,[[["formatter",3]],["result",6]]],[11,"fmt","","",81,[[["formatter",3]],["result",6]]],[11,"fmt","","",82,[[["formatter",3]],["result",6]]],[11,"fmt","","",80,[[["formatter",3]],["result",6]]],[11,"fmt","","",83,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::time","",121,[[["formatter",3]],["result",6]]],[11,"fmt","","",122,[[["formatter",3]],["result",6]]],[11,"fmt","nix::unistd","",138,[[["formatter",3]],["result",6]]],[11,"fmt","","",139,[[["formatter",3]],["result",6]]],[11,"fmt","","",140,[[["formatter",3]],["result",6]]],[11,"fmt","nix","",152,[[["formatter",3]],["result",6]]],[11,"div","nix::sys::time","",121,[[],["timespec",3]]],[11,"div","","",122,[[],["timeval",3]]],[11,"sub","nix::fcntl","Returns the set difference of the two sets of flags.",6,[[["atflags",3]],["atflags",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",7,[[["oflag",3]],["oflag",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",8,[[["sealflag",3]],["sealflag",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",9,[[["fdflag",3]],["fdflag",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",12,[[["splicefflags",3]],["splicefflags",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",13,[[["fallocateflags",3]],["fallocateflags",3]]],[11,"sub","nix::kmod","Returns the set difference of the two sets of flags.",15,[[["moduleinitflags",3]],["moduleinitflags",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",16,[[["deletemoduleflags",3]],["deletemoduleflags",3]]],[11,"sub","nix::mount","Returns the set difference of the two sets of flags.",17,[[["msflags",3]],["msflags",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",18,[[["mntflags",3]],["mntflags",3]]],[11,"sub","nix::mqueue","Returns the set difference of the two sets of flags.",19,[[["mq_oflag",3]],["mq_oflag",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",20,[[["fdflag",3]],["fdflag",3]]],[11,"sub","nix::net::if_","Returns the set difference of the two sets of flags.",22,[[["interfaceflags",3]],["interfaceflags",3]]],[11,"sub","nix::poll","Returns the set difference of the two sets of flags.",24,[[["pollflags",3]],["pollflags",3]]],[11,"sub","nix::sched","Returns the set difference of the two sets of flags.",157,[[["cloneflags",3]],["cloneflags",3]]],[11,"sub","nix::sys::epoll","Returns the set difference of the two sets of flags.",35,[[["epollflags",3]],["epollflags",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",37,[[["epollcreateflags",3]],["epollcreateflags",3]]],[11,"sub","nix::sys::eventfd","Returns the set difference of the two sets of flags.",39,[[["efdflags",3]],["efdflags",3]]],[11,"sub","nix::sys::memfd","Returns the set difference of the two sets of flags.",40,[[["memfdcreateflag",3]],["memfdcreateflag",3]]],[11,"sub","nix::sys::mman","Returns the set difference of the two sets of flags.",41,[[["protflags",3]],["protflags",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",42,[[["mapflags",3]],["mapflags",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",44,[[["msflags",3]],["msflags",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",45,[[["mlockallflags",3]],["mlockallflags",3]]],[11,"sub","nix::sys::ptrace","Returns the set difference of the two sets of flags.",159,[[["options",3]],["options",3]]],[11,"sub","nix::sys::quota","Returns the set difference of the two sets of flags.",50,[[["quotavalidflags",3]],["quotavalidflags",3]]],[11,"sub","nix::sys::signal","Returns the set difference of the two sets of flags.",55,[[["saflags",3]],["saflags",3]]],[11,"sub","nix::sys::signalfd","Returns the set difference of the two sets of flags.",64,[[["sfdflags",3]],["sfdflags",3]]],[11,"sub","nix::sys::socket","Returns the set difference of the two sets of flags.",86,[[["sockflag",3]],["sockflag",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",87,[[["msgflags",3]],["msgflags",3]]],[11,"sub","nix::sys::stat","Returns the set difference of the two sets of flags.",101,[[["sflag",3]],["sflag",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",102,[[["mode",3]],["mode",3]]],[11,"sub","nix::sys::statvfs","Returns the set difference of the two sets of flags.",107,[[["fsflags",3]],["fsflags",3]]],[11,"sub","nix::sys::termios","Returns the set difference of the two sets of flags.",116,[[["inputflags",3]],["inputflags",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",117,[[["outputflags",3]],["outputflags",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",118,[[["controlflags",3]],["controlflags",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",119,[[["localflags",3]],["localflags",3]]],[11,"sub","nix::sys::time","",121,[[["timespec",3]],["timespec",3]]],[11,"sub","","",122,[[["timeval",3]],["timeval",3]]],[11,"sub","nix::sys::wait","Returns the set difference of the two sets of flags.",126,[[["waitpidflag",3]],["waitpidflag",3]]],[11,"sub","nix::sys::inotify","Returns the set difference of the two sets of flags.",128,[[["addwatchflags",3]],["addwatchflags",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",129,[[["initflags",3]],["initflags",3]]],[11,"sub","nix::sys::timerfd","Returns the set difference of the two sets of flags.",133,[[["timerflags",3]],["timerflags",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",134,[[["timersettimeflags",3]],["timersettimeflags",3]]],[11,"sub","nix::unistd","Returns the set difference of the two sets of flags.",149,[[["accessflags",3]],["accessflags",3]]],[11,"add","nix::sys::time","",121,[[["timespec",3]],["timespec",3]]],[11,"add","","",122,[[["timeval",3]],["timeval",3]]],[11,"mul","","",121,[[],["timespec",3]]],[11,"mul","","",122,[[],["timeval",3]]],[11,"neg","","",121,[[],["timespec",3]]],[11,"neg","","",122,[[],["timeval",3]]],[11,"sub_assign","nix::fcntl","Disables all flags enabled in the set.",6,[[["atflags",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",7,[[["oflag",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",8,[[["sealflag",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",9,[[["fdflag",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",12,[[["splicefflags",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",13,[[["fallocateflags",3]]]],[11,"sub_assign","nix::kmod","Disables all flags enabled in the set.",15,[[["moduleinitflags",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",16,[[["deletemoduleflags",3]]]],[11,"sub_assign","nix::mount","Disables all flags enabled in the set.",17,[[["msflags",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",18,[[["mntflags",3]]]],[11,"sub_assign","nix::mqueue","Disables all flags enabled in the set.",19,[[["mq_oflag",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",20,[[["fdflag",3]]]],[11,"sub_assign","nix::net::if_","Disables all flags enabled in the set.",22,[[["interfaceflags",3]]]],[11,"sub_assign","nix::poll","Disables all flags enabled in the set.",24,[[["pollflags",3]]]],[11,"sub_assign","nix::sched","Disables all flags enabled in the set.",157,[[["cloneflags",3]]]],[11,"sub_assign","nix::sys::epoll","Disables all flags enabled in the set.",35,[[["epollflags",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",37,[[["epollcreateflags",3]]]],[11,"sub_assign","nix::sys::eventfd","Disables all flags enabled in the set.",39,[[["efdflags",3]]]],[11,"sub_assign","nix::sys::memfd","Disables all flags enabled in the set.",40,[[["memfdcreateflag",3]]]],[11,"sub_assign","nix::sys::mman","Disables all flags enabled in the set.",41,[[["protflags",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",42,[[["mapflags",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",44,[[["msflags",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",45,[[["mlockallflags",3]]]],[11,"sub_assign","nix::sys::ptrace","Disables all flags enabled in the set.",159,[[["options",3]]]],[11,"sub_assign","nix::sys::quota","Disables all flags enabled in the set.",50,[[["quotavalidflags",3]]]],[11,"sub_assign","nix::sys::signal","Disables all flags enabled in the set.",55,[[["saflags",3]]]],[11,"sub_assign","nix::sys::signalfd","Disables all flags enabled in the set.",64,[[["sfdflags",3]]]],[11,"sub_assign","nix::sys::socket","Disables all flags enabled in the set.",86,[[["sockflag",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",87,[[["msgflags",3]]]],[11,"sub_assign","nix::sys::stat","Disables all flags enabled in the set.",101,[[["sflag",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",102,[[["mode",3]]]],[11,"sub_assign","nix::sys::statvfs","Disables all flags enabled in the set.",107,[[["fsflags",3]]]],[11,"sub_assign","nix::sys::termios","Disables all flags enabled in the set.",116,[[["inputflags",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",117,[[["outputflags",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",118,[[["controlflags",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",119,[[["localflags",3]]]],[11,"sub_assign","nix::sys::wait","Disables all flags enabled in the set.",126,[[["waitpidflag",3]]]],[11,"sub_assign","nix::sys::inotify","Disables all flags enabled in the set.",128,[[["addwatchflags",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",129,[[["initflags",3]]]],[11,"sub_assign","nix::sys::timerfd","Disables all flags enabled in the set.",133,[[["timerflags",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",134,[[["timersettimeflags",3]]]],[11,"sub_assign","nix::unistd","Disables all flags enabled in the set.",149,[[["accessflags",3]]]],[11,"not","nix::fcntl","Returns the complement of this set of flags.",6,[[],["atflags",3]]],[11,"not","","Returns the complement of this set of flags.",7,[[],["oflag",3]]],[11,"not","","Returns the complement of this set of flags.",8,[[],["sealflag",3]]],[11,"not","","Returns the complement of this set of flags.",9,[[],["fdflag",3]]],[11,"not","","Returns the complement of this set of flags.",12,[[],["splicefflags",3]]],[11,"not","","Returns the complement of this set of flags.",13,[[],["fallocateflags",3]]],[11,"not","nix::kmod","Returns the complement of this set of flags.",15,[[],["moduleinitflags",3]]],[11,"not","","Returns the complement of this set of flags.",16,[[],["deletemoduleflags",3]]],[11,"not","nix::mount","Returns the complement of this set of flags.",17,[[],["msflags",3]]],[11,"not","","Returns the complement of this set of flags.",18,[[],["mntflags",3]]],[11,"not","nix::mqueue","Returns the complement of this set of flags.",19,[[],["mq_oflag",3]]],[11,"not","","Returns the complement of this set of flags.",20,[[],["fdflag",3]]],[11,"not","nix::net::if_","Returns the complement of this set of flags.",22,[[],["interfaceflags",3]]],[11,"not","nix::poll","Returns the complement of this set of flags.",24,[[],["pollflags",3]]],[11,"not","nix::sched","Returns the complement of this set of flags.",157,[[],["cloneflags",3]]],[11,"not","nix::sys::epoll","Returns the complement of this set of flags.",35,[[],["epollflags",3]]],[11,"not","","Returns the complement of this set of flags.",37,[[],["epollcreateflags",3]]],[11,"not","nix::sys::eventfd","Returns the complement of this set of flags.",39,[[],["efdflags",3]]],[11,"not","nix::sys::memfd","Returns the complement of this set of flags.",40,[[],["memfdcreateflag",3]]],[11,"not","nix::sys::mman","Returns the complement of this set of flags.",41,[[],["protflags",3]]],[11,"not","","Returns the complement of this set of flags.",42,[[],["mapflags",3]]],[11,"not","","Returns the complement of this set of flags.",44,[[],["msflags",3]]],[11,"not","","Returns the complement of this set of flags.",45,[[],["mlockallflags",3]]],[11,"not","nix::sys::ptrace","Returns the complement of this set of flags.",159,[[],["options",3]]],[11,"not","nix::sys::quota","Returns the complement of this set of flags.",50,[[],["quotavalidflags",3]]],[11,"not","nix::sys::signal","Returns the complement of this set of flags.",55,[[],["saflags",3]]],[11,"not","nix::sys::signalfd","Returns the complement of this set of flags.",64,[[],["sfdflags",3]]],[11,"not","nix::sys::socket","Returns the complement of this set of flags.",86,[[],["sockflag",3]]],[11,"not","","Returns the complement of this set of flags.",87,[[],["msgflags",3]]],[11,"not","nix::sys::stat","Returns the complement of this set of flags.",101,[[],["sflag",3]]],[11,"not","","Returns the complement of this set of flags.",102,[[],["mode",3]]],[11,"not","nix::sys::statvfs","Returns the complement of this set of flags.",107,[[],["fsflags",3]]],[11,"not","nix::sys::termios","Returns the complement of this set of flags.",116,[[],["inputflags",3]]],[11,"not","","Returns the complement of this set of flags.",117,[[],["outputflags",3]]],[11,"not","","Returns the complement of this set of flags.",118,[[],["controlflags",3]]],[11,"not","","Returns the complement of this set of flags.",119,[[],["localflags",3]]],[11,"not","nix::sys::wait","Returns the complement of this set of flags.",126,[[],["waitpidflag",3]]],[11,"not","nix::sys::inotify","Returns the complement of this set of flags.",128,[[],["addwatchflags",3]]],[11,"not","","Returns the complement of this set of flags.",129,[[],["initflags",3]]],[11,"not","nix::sys::timerfd","Returns the complement of this set of flags.",133,[[],["timerflags",3]]],[11,"not","","Returns the complement of this set of flags.",134,[[],["timersettimeflags",3]]],[11,"not","nix::unistd","Returns the complement of this set of flags.",149,[[],["accessflags",3]]],[11,"bitand","nix::fcntl","Returns the intersection between the two sets of flags.",6,[[["atflags",3]],["atflags",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",7,[[["oflag",3]],["oflag",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",8,[[["sealflag",3]],["sealflag",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",9,[[["fdflag",3]],["fdflag",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",12,[[["splicefflags",3]],["splicefflags",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",13,[[["fallocateflags",3]],["fallocateflags",3]]],[11,"bitand","nix::kmod","Returns the intersection between the two sets of flags.",15,[[["moduleinitflags",3]],["moduleinitflags",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",16,[[["deletemoduleflags",3]],["deletemoduleflags",3]]],[11,"bitand","nix::mount","Returns the intersection between the two sets of flags.",17,[[["msflags",3]],["msflags",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",18,[[["mntflags",3]],["mntflags",3]]],[11,"bitand","nix::mqueue","Returns the intersection between the two sets of flags.",19,[[["mq_oflag",3]],["mq_oflag",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",20,[[["fdflag",3]],["fdflag",3]]],[11,"bitand","nix::net::if_","Returns the intersection between the two sets of flags.",22,[[["interfaceflags",3]],["interfaceflags",3]]],[11,"bitand","nix::poll","Returns the intersection between the two sets of flags.",24,[[["pollflags",3]],["pollflags",3]]],[11,"bitand","nix::sched","Returns the intersection between the two sets of flags.",157,[[["cloneflags",3]],["cloneflags",3]]],[11,"bitand","nix::sys::epoll","Returns the intersection between the two sets of flags.",35,[[["epollflags",3]],["epollflags",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",37,[[["epollcreateflags",3]],["epollcreateflags",3]]],[11,"bitand","nix::sys::eventfd","Returns the intersection between the two sets of flags.",39,[[["efdflags",3]],["efdflags",3]]],[11,"bitand","nix::sys::memfd","Returns the intersection between the two sets of flags.",40,[[["memfdcreateflag",3]],["memfdcreateflag",3]]],[11,"bitand","nix::sys::mman","Returns the intersection between the two sets of flags.",41,[[["protflags",3]],["protflags",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",42,[[["mapflags",3]],["mapflags",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",44,[[["msflags",3]],["msflags",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",45,[[["mlockallflags",3]],["mlockallflags",3]]],[11,"bitand","nix::sys::ptrace","Returns the intersection between the two sets of flags.",159,[[["options",3]],["options",3]]],[11,"bitand","nix::sys::quota","Returns the intersection between the two sets of flags.",50,[[["quotavalidflags",3]],["quotavalidflags",3]]],[11,"bitand","nix::sys::signal","Returns the intersection between the two sets of flags.",55,[[["saflags",3]],["saflags",3]]],[11,"bitand","nix::sys::signalfd","Returns the intersection between the two sets of flags.",64,[[["sfdflags",3]],["sfdflags",3]]],[11,"bitand","nix::sys::socket","Returns the intersection between the two sets of flags.",86,[[["sockflag",3]],["sockflag",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",87,[[["msgflags",3]],["msgflags",3]]],[11,"bitand","nix::sys::stat","Returns the intersection between the two sets of flags.",101,[[["sflag",3]],["sflag",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",102,[[["mode",3]],["mode",3]]],[11,"bitand","nix::sys::statvfs","Returns the intersection between the two sets of flags.",107,[[["fsflags",3]],["fsflags",3]]],[11,"bitand","nix::sys::termios","Returns the intersection between the two sets of flags.",116,[[["inputflags",3]],["inputflags",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",117,[[["outputflags",3]],["outputflags",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",118,[[["controlflags",3]],["controlflags",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",119,[[["localflags",3]],["localflags",3]]],[11,"bitand","nix::sys::wait","Returns the intersection between the two sets of flags.",126,[[["waitpidflag",3]],["waitpidflag",3]]],[11,"bitand","nix::sys::inotify","Returns the intersection between the two sets of flags.",128,[[["addwatchflags",3]],["addwatchflags",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",129,[[["initflags",3]],["initflags",3]]],[11,"bitand","nix::sys::timerfd","Returns the intersection between the two sets of flags.",133,[[["timerflags",3]],["timerflags",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",134,[[["timersettimeflags",3]],["timersettimeflags",3]]],[11,"bitand","nix::unistd","Returns the intersection between the two sets of flags.",149,[[["accessflags",3]],["accessflags",3]]],[11,"bitor","nix::fcntl","Returns the union of the two sets of flags.",6,[[["atflags",3]],["atflags",3]]],[11,"bitor","","Returns the union of the two sets of flags.",7,[[["oflag",3]],["oflag",3]]],[11,"bitor","","Returns the union of the two sets of flags.",8,[[["sealflag",3]],["sealflag",3]]],[11,"bitor","","Returns the union of the two sets of flags.",9,[[["fdflag",3]],["fdflag",3]]],[11,"bitor","","Returns the union of the two sets of flags.",12,[[["splicefflags",3]],["splicefflags",3]]],[11,"bitor","","Returns the union of the two sets of flags.",13,[[["fallocateflags",3]],["fallocateflags",3]]],[11,"bitor","nix::kmod","Returns the union of the two sets of flags.",15,[[["moduleinitflags",3]],["moduleinitflags",3]]],[11,"bitor","","Returns the union of the two sets of flags.",16,[[["deletemoduleflags",3]],["deletemoduleflags",3]]],[11,"bitor","nix::mount","Returns the union of the two sets of flags.",17,[[["msflags",3]],["msflags",3]]],[11,"bitor","","Returns the union of the two sets of flags.",18,[[["mntflags",3]],["mntflags",3]]],[11,"bitor","nix::mqueue","Returns the union of the two sets of flags.",19,[[["mq_oflag",3]],["mq_oflag",3]]],[11,"bitor","","Returns the union of the two sets of flags.",20,[[["fdflag",3]],["fdflag",3]]],[11,"bitor","nix::net::if_","Returns the union of the two sets of flags.",22,[[["interfaceflags",3]],["interfaceflags",3]]],[11,"bitor","nix::poll","Returns the union of the two sets of flags.",24,[[["pollflags",3]],["pollflags",3]]],[11,"bitor","nix::sched","Returns the union of the two sets of flags.",157,[[["cloneflags",3]],["cloneflags",3]]],[11,"bitor","nix::sys::epoll","Returns the union of the two sets of flags.",35,[[["epollflags",3]],["epollflags",3]]],[11,"bitor","","Returns the union of the two sets of flags.",37,[[["epollcreateflags",3]],["epollcreateflags",3]]],[11,"bitor","nix::sys::eventfd","Returns the union of the two sets of flags.",39,[[["efdflags",3]],["efdflags",3]]],[11,"bitor","nix::sys::memfd","Returns the union of the two sets of flags.",40,[[["memfdcreateflag",3]],["memfdcreateflag",3]]],[11,"bitor","nix::sys::mman","Returns the union of the two sets of flags.",41,[[["protflags",3]],["protflags",3]]],[11,"bitor","","Returns the union of the two sets of flags.",42,[[["mapflags",3]],["mapflags",3]]],[11,"bitor","","Returns the union of the two sets of flags.",44,[[["msflags",3]],["msflags",3]]],[11,"bitor","","Returns the union of the two sets of flags.",45,[[["mlockallflags",3]],["mlockallflags",3]]],[11,"bitor","nix::sys::ptrace","Returns the union of the two sets of flags.",159,[[["options",3]],["options",3]]],[11,"bitor","nix::sys::quota","Returns the union of the two sets of flags.",50,[[["quotavalidflags",3]],["quotavalidflags",3]]],[11,"bitor","nix::sys::signal","Returns the union of the two sets of flags.",55,[[["saflags",3]],["saflags",3]]],[11,"bitor","nix::sys::signalfd","Returns the union of the two sets of flags.",64,[[["sfdflags",3]],["sfdflags",3]]],[11,"bitor","nix::sys::socket","Returns the union of the two sets of flags.",86,[[["sockflag",3]],["sockflag",3]]],[11,"bitor","","Returns the union of the two sets of flags.",87,[[["msgflags",3]],["msgflags",3]]],[11,"bitor","nix::sys::stat","Returns the union of the two sets of flags.",101,[[["sflag",3]],["sflag",3]]],[11,"bitor","","Returns the union of the two sets of flags.",102,[[["mode",3]],["mode",3]]],[11,"bitor","nix::sys::statvfs","Returns the union of the two sets of flags.",107,[[["fsflags",3]],["fsflags",3]]],[11,"bitor","nix::sys::termios","Returns the union of the two sets of flags.",116,[[["inputflags",3]],["inputflags",3]]],[11,"bitor","","Returns the union of the two sets of flags.",117,[[["outputflags",3]],["outputflags",3]]],[11,"bitor","","Returns the union of the two sets of flags.",118,[[["controlflags",3]],["controlflags",3]]],[11,"bitor","","Returns the union of the two sets of flags.",119,[[["localflags",3]],["localflags",3]]],[11,"bitor","nix::sys::wait","Returns the union of the two sets of flags.",126,[[["waitpidflag",3]],["waitpidflag",3]]],[11,"bitor","nix::sys::inotify","Returns the union of the two sets of flags.",128,[[["addwatchflags",3]],["addwatchflags",3]]],[11,"bitor","","Returns the union of the two sets of flags.",129,[[["initflags",3]],["initflags",3]]],[11,"bitor","nix::sys::timerfd","Returns the union of the two sets of flags.",133,[[["timerflags",3]],["timerflags",3]]],[11,"bitor","","Returns the union of the two sets of flags.",134,[[["timersettimeflags",3]],["timersettimeflags",3]]],[11,"bitor","nix::unistd","Returns the union of the two sets of flags.",149,[[["accessflags",3]],["accessflags",3]]],[11,"bitxor","nix::fcntl","Returns the left flags, but with all the right flags …",6,[[["atflags",3]],["atflags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",7,[[["oflag",3]],["oflag",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",8,[[["sealflag",3]],["sealflag",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",9,[[["fdflag",3]],["fdflag",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",12,[[["splicefflags",3]],["splicefflags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",13,[[["fallocateflags",3]],["fallocateflags",3]]],[11,"bitxor","nix::kmod","Returns the left flags, but with all the right flags …",15,[[["moduleinitflags",3]],["moduleinitflags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",16,[[["deletemoduleflags",3]],["deletemoduleflags",3]]],[11,"bitxor","nix::mount","Returns the left flags, but with all the right flags …",17,[[["msflags",3]],["msflags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",18,[[["mntflags",3]],["mntflags",3]]],[11,"bitxor","nix::mqueue","Returns the left flags, but with all the right flags …",19,[[["mq_oflag",3]],["mq_oflag",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",20,[[["fdflag",3]],["fdflag",3]]],[11,"bitxor","nix::net::if_","Returns the left flags, but with all the right flags …",22,[[["interfaceflags",3]],["interfaceflags",3]]],[11,"bitxor","nix::poll","Returns the left flags, but with all the right flags …",24,[[["pollflags",3]],["pollflags",3]]],[11,"bitxor","nix::sched","Returns the left flags, but with all the right flags …",157,[[["cloneflags",3]],["cloneflags",3]]],[11,"bitxor","nix::sys::epoll","Returns the left flags, but with all the right flags …",35,[[["epollflags",3]],["epollflags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",37,[[["epollcreateflags",3]],["epollcreateflags",3]]],[11,"bitxor","nix::sys::eventfd","Returns the left flags, but with all the right flags …",39,[[["efdflags",3]],["efdflags",3]]],[11,"bitxor","nix::sys::memfd","Returns the left flags, but with all the right flags …",40,[[["memfdcreateflag",3]],["memfdcreateflag",3]]],[11,"bitxor","nix::sys::mman","Returns the left flags, but with all the right flags …",41,[[["protflags",3]],["protflags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",42,[[["mapflags",3]],["mapflags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",44,[[["msflags",3]],["msflags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",45,[[["mlockallflags",3]],["mlockallflags",3]]],[11,"bitxor","nix::sys::ptrace","Returns the left flags, but with all the right flags …",159,[[["options",3]],["options",3]]],[11,"bitxor","nix::sys::quota","Returns the left flags, but with all the right flags …",50,[[["quotavalidflags",3]],["quotavalidflags",3]]],[11,"bitxor","nix::sys::signal","Returns the left flags, but with all the right flags …",55,[[["saflags",3]],["saflags",3]]],[11,"bitxor","nix::sys::signalfd","Returns the left flags, but with all the right flags …",64,[[["sfdflags",3]],["sfdflags",3]]],[11,"bitxor","nix::sys::socket","Returns the left flags, but with all the right flags …",86,[[["sockflag",3]],["sockflag",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",87,[[["msgflags",3]],["msgflags",3]]],[11,"bitxor","nix::sys::stat","Returns the left flags, but with all the right flags …",101,[[["sflag",3]],["sflag",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",102,[[["mode",3]],["mode",3]]],[11,"bitxor","nix::sys::statvfs","Returns the left flags, but with all the right flags …",107,[[["fsflags",3]],["fsflags",3]]],[11,"bitxor","nix::sys::termios","Returns the left flags, but with all the right flags …",116,[[["inputflags",3]],["inputflags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",117,[[["outputflags",3]],["outputflags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",118,[[["controlflags",3]],["controlflags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",119,[[["localflags",3]],["localflags",3]]],[11,"bitxor","nix::sys::wait","Returns the left flags, but with all the right flags …",126,[[["waitpidflag",3]],["waitpidflag",3]]],[11,"bitxor","nix::sys::inotify","Returns the left flags, but with all the right flags …",128,[[["addwatchflags",3]],["addwatchflags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",129,[[["initflags",3]],["initflags",3]]],[11,"bitxor","nix::sys::timerfd","Returns the left flags, but with all the right flags …",133,[[["timerflags",3]],["timerflags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",134,[[["timersettimeflags",3]],["timersettimeflags",3]]],[11,"bitxor","nix::unistd","Returns the left flags, but with all the right flags …",149,[[["accessflags",3]],["accessflags",3]]],[11,"bitand_assign","nix::fcntl","Disables all flags disabled in the set.",6,[[["atflags",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",7,[[["oflag",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",8,[[["sealflag",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",9,[[["fdflag",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",12,[[["splicefflags",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",13,[[["fallocateflags",3]]]],[11,"bitand_assign","nix::kmod","Disables all flags disabled in the set.",15,[[["moduleinitflags",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",16,[[["deletemoduleflags",3]]]],[11,"bitand_assign","nix::mount","Disables all flags disabled in the set.",17,[[["msflags",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",18,[[["mntflags",3]]]],[11,"bitand_assign","nix::mqueue","Disables all flags disabled in the set.",19,[[["mq_oflag",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",20,[[["fdflag",3]]]],[11,"bitand_assign","nix::net::if_","Disables all flags disabled in the set.",22,[[["interfaceflags",3]]]],[11,"bitand_assign","nix::poll","Disables all flags disabled in the set.",24,[[["pollflags",3]]]],[11,"bitand_assign","nix::sched","Disables all flags disabled in the set.",157,[[["cloneflags",3]]]],[11,"bitand_assign","nix::sys::epoll","Disables all flags disabled in the set.",35,[[["epollflags",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",37,[[["epollcreateflags",3]]]],[11,"bitand_assign","nix::sys::eventfd","Disables all flags disabled in the set.",39,[[["efdflags",3]]]],[11,"bitand_assign","nix::sys::memfd","Disables all flags disabled in the set.",40,[[["memfdcreateflag",3]]]],[11,"bitand_assign","nix::sys::mman","Disables all flags disabled in the set.",41,[[["protflags",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",42,[[["mapflags",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",44,[[["msflags",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",45,[[["mlockallflags",3]]]],[11,"bitand_assign","nix::sys::ptrace","Disables all flags disabled in the set.",159,[[["options",3]]]],[11,"bitand_assign","nix::sys::quota","Disables all flags disabled in the set.",50,[[["quotavalidflags",3]]]],[11,"bitand_assign","nix::sys::signal","Disables all flags disabled in the set.",55,[[["saflags",3]]]],[11,"bitand_assign","nix::sys::signalfd","Disables all flags disabled in the set.",64,[[["sfdflags",3]]]],[11,"bitand_assign","nix::sys::socket","Disables all flags disabled in the set.",86,[[["sockflag",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",87,[[["msgflags",3]]]],[11,"bitand_assign","nix::sys::stat","Disables all flags disabled in the set.",101,[[["sflag",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",102,[[["mode",3]]]],[11,"bitand_assign","nix::sys::statvfs","Disables all flags disabled in the set.",107,[[["fsflags",3]]]],[11,"bitand_assign","nix::sys::termios","Disables all flags disabled in the set.",116,[[["inputflags",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",117,[[["outputflags",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",118,[[["controlflags",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",119,[[["localflags",3]]]],[11,"bitand_assign","nix::sys::wait","Disables all flags disabled in the set.",126,[[["waitpidflag",3]]]],[11,"bitand_assign","nix::sys::inotify","Disables all flags disabled in the set.",128,[[["addwatchflags",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",129,[[["initflags",3]]]],[11,"bitand_assign","nix::sys::timerfd","Disables all flags disabled in the set.",133,[[["timerflags",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",134,[[["timersettimeflags",3]]]],[11,"bitand_assign","nix::unistd","Disables all flags disabled in the set.",149,[[["accessflags",3]]]],[11,"bitor_assign","nix::fcntl","Adds the set of flags.",6,[[["atflags",3]]]],[11,"bitor_assign","","Adds the set of flags.",7,[[["oflag",3]]]],[11,"bitor_assign","","Adds the set of flags.",8,[[["sealflag",3]]]],[11,"bitor_assign","","Adds the set of flags.",9,[[["fdflag",3]]]],[11,"bitor_assign","","Adds the set of flags.",12,[[["splicefflags",3]]]],[11,"bitor_assign","","Adds the set of flags.",13,[[["fallocateflags",3]]]],[11,"bitor_assign","nix::kmod","Adds the set of flags.",15,[[["moduleinitflags",3]]]],[11,"bitor_assign","","Adds the set of flags.",16,[[["deletemoduleflags",3]]]],[11,"bitor_assign","nix::mount","Adds the set of flags.",17,[[["msflags",3]]]],[11,"bitor_assign","","Adds the set of flags.",18,[[["mntflags",3]]]],[11,"bitor_assign","nix::mqueue","Adds the set of flags.",19,[[["mq_oflag",3]]]],[11,"bitor_assign","","Adds the set of flags.",20,[[["fdflag",3]]]],[11,"bitor_assign","nix::net::if_","Adds the set of flags.",22,[[["interfaceflags",3]]]],[11,"bitor_assign","nix::poll","Adds the set of flags.",24,[[["pollflags",3]]]],[11,"bitor_assign","nix::sched","Adds the set of flags.",157,[[["cloneflags",3]]]],[11,"bitor_assign","nix::sys::epoll","Adds the set of flags.",35,[[["epollflags",3]]]],[11,"bitor_assign","","Adds the set of flags.",37,[[["epollcreateflags",3]]]],[11,"bitor_assign","nix::sys::eventfd","Adds the set of flags.",39,[[["efdflags",3]]]],[11,"bitor_assign","nix::sys::memfd","Adds the set of flags.",40,[[["memfdcreateflag",3]]]],[11,"bitor_assign","nix::sys::mman","Adds the set of flags.",41,[[["protflags",3]]]],[11,"bitor_assign","","Adds the set of flags.",42,[[["mapflags",3]]]],[11,"bitor_assign","","Adds the set of flags.",44,[[["msflags",3]]]],[11,"bitor_assign","","Adds the set of flags.",45,[[["mlockallflags",3]]]],[11,"bitor_assign","nix::sys::ptrace","Adds the set of flags.",159,[[["options",3]]]],[11,"bitor_assign","nix::sys::quota","Adds the set of flags.",50,[[["quotavalidflags",3]]]],[11,"bitor_assign","nix::sys::signal","Adds the set of flags.",55,[[["saflags",3]]]],[11,"bitor_assign","nix::sys::signalfd","Adds the set of flags.",64,[[["sfdflags",3]]]],[11,"bitor_assign","nix::sys::socket","Adds the set of flags.",86,[[["sockflag",3]]]],[11,"bitor_assign","","Adds the set of flags.",87,[[["msgflags",3]]]],[11,"bitor_assign","nix::sys::stat","Adds the set of flags.",101,[[["sflag",3]]]],[11,"bitor_assign","","Adds the set of flags.",102,[[["mode",3]]]],[11,"bitor_assign","nix::sys::statvfs","Adds the set of flags.",107,[[["fsflags",3]]]],[11,"bitor_assign","nix::sys::termios","Adds the set of flags.",116,[[["inputflags",3]]]],[11,"bitor_assign","","Adds the set of flags.",117,[[["outputflags",3]]]],[11,"bitor_assign","","Adds the set of flags.",118,[[["controlflags",3]]]],[11,"bitor_assign","","Adds the set of flags.",119,[[["localflags",3]]]],[11,"bitor_assign","nix::sys::wait","Adds the set of flags.",126,[[["waitpidflag",3]]]],[11,"bitor_assign","nix::sys::inotify","Adds the set of flags.",128,[[["addwatchflags",3]]]],[11,"bitor_assign","","Adds the set of flags.",129,[[["initflags",3]]]],[11,"bitor_assign","nix::sys::timerfd","Adds the set of flags.",133,[[["timerflags",3]]]],[11,"bitor_assign","","Adds the set of flags.",134,[[["timersettimeflags",3]]]],[11,"bitor_assign","nix::unistd","Adds the set of flags.",149,[[["accessflags",3]]]],[11,"bitxor_assign","nix::fcntl","Toggles the set of flags.",6,[[["atflags",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",7,[[["oflag",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",8,[[["sealflag",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",9,[[["fdflag",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",12,[[["splicefflags",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",13,[[["fallocateflags",3]]]],[11,"bitxor_assign","nix::kmod","Toggles the set of flags.",15,[[["moduleinitflags",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",16,[[["deletemoduleflags",3]]]],[11,"bitxor_assign","nix::mount","Toggles the set of flags.",17,[[["msflags",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",18,[[["mntflags",3]]]],[11,"bitxor_assign","nix::mqueue","Toggles the set of flags.",19,[[["mq_oflag",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",20,[[["fdflag",3]]]],[11,"bitxor_assign","nix::net::if_","Toggles the set of flags.",22,[[["interfaceflags",3]]]],[11,"bitxor_assign","nix::poll","Toggles the set of flags.",24,[[["pollflags",3]]]],[11,"bitxor_assign","nix::sched","Toggles the set of flags.",157,[[["cloneflags",3]]]],[11,"bitxor_assign","nix::sys::epoll","Toggles the set of flags.",35,[[["epollflags",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",37,[[["epollcreateflags",3]]]],[11,"bitxor_assign","nix::sys::eventfd","Toggles the set of flags.",39,[[["efdflags",3]]]],[11,"bitxor_assign","nix::sys::memfd","Toggles the set of flags.",40,[[["memfdcreateflag",3]]]],[11,"bitxor_assign","nix::sys::mman","Toggles the set of flags.",41,[[["protflags",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",42,[[["mapflags",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",44,[[["msflags",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",45,[[["mlockallflags",3]]]],[11,"bitxor_assign","nix::sys::ptrace","Toggles the set of flags.",159,[[["options",3]]]],[11,"bitxor_assign","nix::sys::quota","Toggles the set of flags.",50,[[["quotavalidflags",3]]]],[11,"bitxor_assign","nix::sys::signal","Toggles the set of flags.",55,[[["saflags",3]]]],[11,"bitxor_assign","nix::sys::signalfd","Toggles the set of flags.",64,[[["sfdflags",3]]]],[11,"bitxor_assign","nix::sys::socket","Toggles the set of flags.",86,[[["sockflag",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",87,[[["msgflags",3]]]],[11,"bitxor_assign","nix::sys::stat","Toggles the set of flags.",101,[[["sflag",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",102,[[["mode",3]]]],[11,"bitxor_assign","nix::sys::statvfs","Toggles the set of flags.",107,[[["fsflags",3]]]],[11,"bitxor_assign","nix::sys::termios","Toggles the set of flags.",116,[[["inputflags",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",117,[[["outputflags",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",118,[[["controlflags",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",119,[[["localflags",3]]]],[11,"bitxor_assign","nix::sys::wait","Toggles the set of flags.",126,[[["waitpidflag",3]]]],[11,"bitxor_assign","nix::sys::inotify","Toggles the set of flags.",128,[[["addwatchflags",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",129,[[["initflags",3]]]],[11,"bitxor_assign","nix::sys::timerfd","Toggles the set of flags.",133,[[["timerflags",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",134,[[["timersettimeflags",3]]]],[11,"bitxor_assign","nix::unistd","Toggles the set of flags.",149,[[["accessflags",3]]]],[11,"hash","nix::dir","",0,[[]]],[11,"hash","","",154,[[]]],[11,"hash","","",2,[[]]],[11,"hash","","",1,[[]]],[11,"hash","nix::fcntl","",6,[[]]],[11,"hash","","",7,[[]]],[11,"hash","","",8,[[]]],[11,"hash","","",9,[[]]],[11,"hash","","",10,[[]]],[11,"hash","","",11,[[]]],[11,"hash","","",12,[[]]],[11,"hash","","",13,[[]]],[11,"hash","","",5,[[]]],[11,"hash","nix::ifaddrs","",14,[[]]],[11,"hash","","",155,[[]]],[11,"hash","nix::kmod","",15,[[]]],[11,"hash","","",16,[[]]],[11,"hash","nix::mount","",17,[[]]],[11,"hash","","",18,[[]]],[11,"hash","nix::mqueue","",19,[[]]],[11,"hash","","",20,[[]]],[11,"hash","","",21,[[]]],[11,"hash","nix::net::if_","",22,[[]]],[11,"hash","nix::poll","",23,[[]]],[11,"hash","","",24,[[]]],[11,"hash","nix::pty","",26,[[]]],[11,"hash","","",156,[[]]],[11,"hash","nix::sched","",157,[[]]],[11,"hash","","",158,[[]]],[11,"hash","nix::sys::aio","",28,[[]]],[11,"hash","","",29,[[]]],[11,"hash","","",30,[[]]],[11,"hash","","",31,[[]]],[11,"hash","nix::sys::epoll","",35,[[]]],[11,"hash","","",36,[[]]],[11,"hash","","",37,[[]]],[11,"hash","","",38,[[]]],[11,"hash","nix::sys::eventfd","",39,[[]]],[11,"hash","nix::sys::memfd","",40,[[]]],[11,"hash","nix::sys::mman","",41,[[]]],[11,"hash","","",42,[[]]],[11,"hash","","",43,[[]]],[11,"hash","","",44,[[]]],[11,"hash","","",45,[[]]],[11,"hash","nix::sys::ptrace","",46,[[]]],[11,"hash","","",47,[[]]],[11,"hash","","",159,[[]]],[11,"hash","nix::sys::quota","",48,[[]]],[11,"hash","","",49,[[]]],[11,"hash","","",50,[[]]],[11,"hash","","",51,[[]]],[11,"hash","nix::sys::reboot","",52,[[]]],[11,"hash","nix::sys::select","",53,[[]]],[11,"hash","nix::sys::signal","",54,[[]]],[11,"hash","","",162,[[]]],[11,"hash","","",55,[[]]],[11,"hash","","",56,[[]]],[11,"hash","","",57,[[]]],[11,"hash","","",58,[[]]],[11,"hash","","",59,[[]]],[11,"hash","","",60,[[]]],[11,"hash","","",161,[[]]],[11,"hash","nix::sys::signalfd","",64,[[]]],[11,"hash","","",65,[[]]],[11,"hash","nix::sys::socket","",73,[[]]],[11,"hash","","",75,[[]]],[11,"hash","","",77,[[]]],[11,"hash","","",78,[[]]],[11,"hash","","",79,[[]]],[11,"hash","","",76,[[]]],[11,"hash","","",74,[[]]],[11,"hash","","",81,[[]]],[11,"hash","","",82,[[]]],[11,"hash","","",80,[[]]],[11,"hash","","",83,[[]]],[11,"hash","nix::sys::socket::sockopt","",163,[[]]],[11,"hash","","",164,[[]]],[11,"hash","","",165,[[]]],[11,"hash","","",166,[[]]],[11,"hash","","",167,[[]]],[11,"hash","","",168,[[]]],[11,"hash","","",169,[[]]],[11,"hash","","",170,[[]]],[11,"hash","","",171,[[]]],[11,"hash","","",172,[[]]],[11,"hash","","",173,[[]]],[11,"hash","","",174,[[]]],[11,"hash","","",175,[[]]],[11,"hash","","",176,[[]]],[11,"hash","","",177,[[]]],[11,"hash","","",178,[[]]],[11,"hash","","",179,[[]]],[11,"hash","","",180,[[]]],[11,"hash","","",181,[[]]],[11,"hash","","",182,[[]]],[11,"hash","","",183,[[]]],[11,"hash","","",184,[[]]],[11,"hash","","",185,[[]]],[11,"hash","","",186,[[]]],[11,"hash","","",187,[[]]],[11,"hash","","",188,[[]]],[11,"hash","","",189,[[]]],[11,"hash","","",190,[[]]],[11,"hash","","",191,[[]]],[11,"hash","","",192,[[]]],[11,"hash","","",193,[[]]],[11,"hash","","",194,[[]]],[11,"hash","","",195,[[]]],[11,"hash","","",196,[[]]],[11,"hash","","",197,[[]]],[11,"hash","nix::sys::socket","",85,[[]]],[11,"hash","","",86,[[]]],[11,"hash","","",87,[[]]],[11,"hash","","",96,[[]]],[11,"hash","","",99,[[]]],[11,"hash","nix::sys::stat","",101,[[]]],[11,"hash","","",102,[[]]],[11,"hash","nix::sys::statvfs","",107,[[]]],[11,"hash","","",108,[[]]],[11,"hash","nix::sys::sysinfo","",109,[[]]],[11,"hash","nix::sys::termios","",111,[[]]],[11,"hash","","",112,[[]]],[11,"hash","","",113,[[]]],[11,"hash","","",114,[[]]],[11,"hash","","",115,[[]]],[11,"hash","","",116,[[]]],[11,"hash","","",117,[[]]],[11,"hash","","",118,[[]]],[11,"hash","","",119,[[]]],[11,"hash","nix::sys::time","",121,[[]]],[11,"hash","","",122,[[]]],[11,"hash","nix::sys::uio","",123,[[]]],[11,"hash","","",124,[[]]],[11,"hash","nix::sys::utsname","",125,[[]]],[11,"hash","nix::sys::wait","",126,[[]]],[11,"hash","","",127,[[]]],[11,"hash","nix::sys::inotify","",128,[[]]],[11,"hash","","",129,[[]]],[11,"hash","","",201,[[]]],[11,"hash","nix::sys::timerfd","",132,[[]]],[11,"hash","","",133,[[]]],[11,"hash","","",134,[[]]],[11,"hash","nix::ucontext","",137,[[]]],[11,"hash","nix::unistd","",138,[[]]],[11,"hash","","",139,[[]]],[11,"hash","","",140,[[]]],[11,"hash","","",147,[[]]],[11,"hash","","",148,[[]]],[11,"hash","","",149,[[]]],[11,"try_from","nix::sys::signal","",54,[[["c_int",6]],[["result",6],["signal",4]]]],[11,"try_from","nix::sys::termios","",111,[[["speed_t",6]],[["result",6],["baudrate",4]]]],[11,"from_str","nix::sys::signal","",54,[[],[["result",6],["signal",4]]]],[11,"from_iter","nix::fcntl","",6,[[["intoiterator",8]],["atflags",3]]],[11,"from_iter","","",7,[[["intoiterator",8]],["oflag",3]]],[11,"from_iter","","",8,[[["intoiterator",8]],["sealflag",3]]],[11,"from_iter","","",9,[[["intoiterator",8]],["fdflag",3]]],[11,"from_iter","","",12,[[["intoiterator",8]],["splicefflags",3]]],[11,"from_iter","","",13,[[["intoiterator",8]],["fallocateflags",3]]],[11,"from_iter","nix::kmod","",15,[[["intoiterator",8]],["moduleinitflags",3]]],[11,"from_iter","","",16,[[["intoiterator",8]],["deletemoduleflags",3]]],[11,"from_iter","nix::mount","",17,[[["intoiterator",8]],["msflags",3]]],[11,"from_iter","","",18,[[["intoiterator",8]],["mntflags",3]]],[11,"from_iter","nix::mqueue","",19,[[["intoiterator",8]],["mq_oflag",3]]],[11,"from_iter","","",20,[[["intoiterator",8]],["fdflag",3]]],[11,"from_iter","nix::net::if_","",22,[[["intoiterator",8]],["interfaceflags",3]]],[11,"from_iter","nix::poll","",24,[[["intoiterator",8]],["pollflags",3]]],[11,"from_iter","nix::sched","",157,[[["intoiterator",8]],["cloneflags",3]]],[11,"from_iter","nix::sys::epoll","",35,[[["intoiterator",8]],["epollflags",3]]],[11,"from_iter","","",37,[[["intoiterator",8]],["epollcreateflags",3]]],[11,"from_iter","nix::sys::eventfd","",39,[[["intoiterator",8]],["efdflags",3]]],[11,"from_iter","nix::sys::memfd","",40,[[["intoiterator",8]],["memfdcreateflag",3]]],[11,"from_iter","nix::sys::mman","",41,[[["intoiterator",8]],["protflags",3]]],[11,"from_iter","","",42,[[["intoiterator",8]],["mapflags",3]]],[11,"from_iter","","",44,[[["intoiterator",8]],["msflags",3]]],[11,"from_iter","","",45,[[["intoiterator",8]],["mlockallflags",3]]],[11,"from_iter","nix::sys::ptrace","",159,[[["intoiterator",8]],["options",3]]],[11,"from_iter","nix::sys::quota","",50,[[["intoiterator",8]],["quotavalidflags",3]]],[11,"from_iter","nix::sys::signal","",55,[[["intoiterator",8]],["saflags",3]]],[11,"from_iter","nix::sys::signalfd","",64,[[["intoiterator",8]],["sfdflags",3]]],[11,"from_iter","nix::sys::socket","",86,[[["intoiterator",8]],["sockflag",3]]],[11,"from_iter","","",87,[[["intoiterator",8]],["msgflags",3]]],[11,"from_iter","nix::sys::stat","",101,[[["intoiterator",8]],["sflag",3]]],[11,"from_iter","","",102,[[["intoiterator",8]],["mode",3]]],[11,"from_iter","nix::sys::statvfs","",107,[[["intoiterator",8]],["fsflags",3]]],[11,"from_iter","nix::sys::termios","",116,[[["intoiterator",8]],["inputflags",3]]],[11,"from_iter","","",117,[[["intoiterator",8]],["outputflags",3]]],[11,"from_iter","","",118,[[["intoiterator",8]],["controlflags",3]]],[11,"from_iter","","",119,[[["intoiterator",8]],["localflags",3]]],[11,"from_iter","nix::sys::wait","",126,[[["intoiterator",8]],["waitpidflag",3]]],[11,"from_iter","nix::sys::inotify","",128,[[["intoiterator",8]],["addwatchflags",3]]],[11,"from_iter","","",129,[[["intoiterator",8]],["initflags",3]]],[11,"from_iter","nix::sys::timerfd","",133,[[["intoiterator",8]],["timerflags",3]]],[11,"from_iter","","",134,[[["intoiterator",8]],["timersettimeflags",3]]],[11,"from_iter","nix::unistd","",149,[[["intoiterator",8]],["accessflags",3]]],[11,"fmt","nix::fcntl","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","nix::kmod","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","nix::mount","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","nix::mqueue","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","nix::net::if_","",22,[[["formatter",3]],["result",6]]],[11,"fmt","nix::poll","",24,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sched","",157,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::epoll","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::eventfd","",39,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::memfd","",40,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::mman","",41,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","","",45,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::ptrace","",159,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::quota","",50,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::signal","",55,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::signalfd","",64,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::socket","",86,[[["formatter",3]],["result",6]]],[11,"fmt","","",87,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::stat","",101,[[["formatter",3]],["result",6]]],[11,"fmt","","",102,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::statvfs","",107,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::termios","",116,[[["formatter",3]],["result",6]]],[11,"fmt","","",117,[[["formatter",3]],["result",6]]],[11,"fmt","","",118,[[["formatter",3]],["result",6]]],[11,"fmt","","",119,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::wait","",126,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::inotify","",128,[[["formatter",3]],["result",6]]],[11,"fmt","","",129,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::timerfd","",133,[[["formatter",3]],["result",6]]],[11,"fmt","","",134,[[["formatter",3]],["result",6]]],[11,"fmt","nix::unistd","",149,[[["formatter",3]],["result",6]]],[11,"fmt","nix::fcntl","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","nix::kmod","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","nix::mount","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","nix::mqueue","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","nix::net::if_","",22,[[["formatter",3]],["result",6]]],[11,"fmt","nix::poll","",24,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sched","",157,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::epoll","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::eventfd","",39,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::memfd","",40,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::mman","",41,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","","",45,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::ptrace","",159,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::quota","",50,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::signal","",55,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::signalfd","",64,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::socket","",86,[[["formatter",3]],["result",6]]],[11,"fmt","","",87,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::stat","",101,[[["formatter",3]],["result",6]]],[11,"fmt","","",102,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::statvfs","",107,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::termios","",116,[[["formatter",3]],["result",6]]],[11,"fmt","","",117,[[["formatter",3]],["result",6]]],[11,"fmt","","",118,[[["formatter",3]],["result",6]]],[11,"fmt","","",119,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::wait","",126,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::inotify","",128,[[["formatter",3]],["result",6]]],[11,"fmt","","",129,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::timerfd","",133,[[["formatter",3]],["result",6]]],[11,"fmt","","",134,[[["formatter",3]],["result",6]]],[11,"fmt","nix::unistd","",149,[[["formatter",3]],["result",6]]],[11,"fmt","nix::fcntl","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","nix::kmod","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","nix::mount","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","nix::mqueue","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","nix::net::if_","",22,[[["formatter",3]],["result",6]]],[11,"fmt","nix::poll","",24,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sched","",157,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::epoll","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::eventfd","",39,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::memfd","",40,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::mman","",41,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","","",45,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::ptrace","",159,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::quota","",50,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::signal","",55,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::signalfd","",64,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::socket","",86,[[["formatter",3]],["result",6]]],[11,"fmt","","",87,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::stat","",101,[[["formatter",3]],["result",6]]],[11,"fmt","","",102,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::statvfs","",107,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::termios","",116,[[["formatter",3]],["result",6]]],[11,"fmt","","",117,[[["formatter",3]],["result",6]]],[11,"fmt","","",118,[[["formatter",3]],["result",6]]],[11,"fmt","","",119,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::wait","",126,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::inotify","",128,[[["formatter",3]],["result",6]]],[11,"fmt","","",129,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::timerfd","",133,[[["formatter",3]],["result",6]]],[11,"fmt","","",134,[[["formatter",3]],["result",6]]],[11,"fmt","nix::unistd","",149,[[["formatter",3]],["result",6]]],[11,"fmt","nix::fcntl","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","nix::kmod","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","nix::mount","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","nix::mqueue","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","nix::net::if_","",22,[[["formatter",3]],["result",6]]],[11,"fmt","nix::poll","",24,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sched","",157,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::epoll","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::eventfd","",39,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::memfd","",40,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::mman","",41,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","","",45,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::ptrace","",159,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::quota","",50,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::signal","",55,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::signalfd","",64,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::socket","",86,[[["formatter",3]],["result",6]]],[11,"fmt","","",87,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::stat","",101,[[["formatter",3]],["result",6]]],[11,"fmt","","",102,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::statvfs","",107,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::termios","",116,[[["formatter",3]],["result",6]]],[11,"fmt","","",117,[[["formatter",3]],["result",6]]],[11,"fmt","","",118,[[["formatter",3]],["result",6]]],[11,"fmt","","",119,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::wait","",126,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::inotify","",128,[[["formatter",3]],["result",6]]],[11,"fmt","","",129,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::timerfd","",133,[[["formatter",3]],["result",6]]],[11,"fmt","","",134,[[["formatter",3]],["result",6]]],[11,"fmt","nix::unistd","",149,[[["formatter",3]],["result",6]]],[11,"read","nix::pty","",156,[[],["result",6]]],[11,"write","","",156,[[],["result",6]]],[11,"flush","","",156,[[],["result",6]]],[11,"as_raw_fd","nix::dir","",0,[[],["rawfd",6]]],[11,"as_raw_fd","nix::pty","",156,[[],["rawfd",6]]],[11,"as_raw_fd","nix::sys::signalfd","",65,[[],["rawfd",6]]],[11,"as_raw_fd","nix::sys::inotify","",131,[[],["rawfd",6]]],[11,"as_raw_fd","nix::sys::timerfd","",136,[[],["rawfd",6]]],[11,"from_raw_fd","nix::sys::inotify","",131,[[["rawfd",6]]]],[11,"from_raw_fd","nix::sys::timerfd","",136,[[["rawfd",6]]]],[11,"into_raw_fd","nix::pty","",156,[[],["rawfd",6]]],[18,"CLONE_VM","nix::sched","",157,null],[18,"CLONE_FS","","",157,null],[18,"CLONE_FILES","","",157,null],[18,"CLONE_SIGHAND","","",157,null],[18,"CLONE_PTRACE","","",157,null],[18,"CLONE_VFORK","","",157,null],[18,"CLONE_PARENT","","",157,null],[18,"CLONE_THREAD","","",157,null],[18,"CLONE_NEWNS","","",157,null],[18,"CLONE_SYSVSEM","","",157,null],[18,"CLONE_SETTLS","","",157,null],[18,"CLONE_PARENT_SETTID","","",157,null],[18,"CLONE_CHILD_CLEARTID","","",157,null],[18,"CLONE_DETACHED","","",157,null],[18,"CLONE_UNTRACED","","",157,null],[18,"CLONE_CHILD_SETTID","","",157,null],[18,"CLONE_NEWCGROUP","","",157,null],[18,"CLONE_NEWUTS","","",157,null],[18,"CLONE_NEWIPC","","",157,null],[18,"CLONE_NEWUSER","","",157,null],[18,"CLONE_NEWPID","","",157,null],[18,"CLONE_NEWNET","","",157,null],[18,"CLONE_IO","","",157,null],[11,"empty","","Returns an empty set of flags",157,[[],["cloneflags",3]]],[11,"all","","Returns the set containing all flags.",157,[[],["cloneflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",157,[[],["c_int",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",157,[[["c_int",6]],[["cloneflags",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",157,[[["c_int",6]],["cloneflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",157,[[["c_int",6]],["cloneflags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",157,[[]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",157,[[]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",157,[[["cloneflags",3]]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",157,[[["cloneflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",157,[[["cloneflags",3]]]],[11,"remove","","Removes the specified flags in-place.",157,[[["cloneflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",157,[[["cloneflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",157,[[["cloneflags",3]]]],[11,"new","","Create a new and empty CpuSet.",158,[[],["cpuset",3]]],[11,"is_set","","Test to see if a CPU is in the CpuSet. <code>field</code> is the CPU …",158,[[],["result",6]]],[11,"set","","Add a CPU to CpuSet. <code>field</code> is the CPU id to add",158,[[],["result",6]]],[11,"unset","","Remove a CPU from CpuSet. <code>field</code> is the CPU id to remove",158,[[],["result",6]]],[11,"count","","Return the maximum number of CPU in CpuSet",158,[[]]],[18,"PTRACE_O_TRACESYSGOOD","nix::sys::ptrace","When delivering system call traps set a bit to allow …",159,null],[18,"PTRACE_O_TRACEFORK","","Stop tracee at next fork and start tracing the forked …",159,null],[18,"PTRACE_O_TRACEVFORK","","Stop tracee at next vfork call and trace the vforked …",159,null],[18,"PTRACE_O_TRACECLONE","","Stop tracee at next clone call and trace the cloned …",159,null],[18,"PTRACE_O_TRACEEXEC","","Stop tracee at next execve call.",159,null],[18,"PTRACE_O_TRACEVFORKDONE","","Stop tracee at vfork completion.",159,null],[18,"PTRACE_O_TRACEEXIT","","Stop tracee at next exit call. Stops before exit …",159,null],[18,"PTRACE_O_TRACESECCOMP","","Stop tracee when a SECCOMP_RET_TRACE rule is triggered. …",159,null],[18,"PTRACE_O_EXITKILL","","Send a SIGKILL to the tracee if the tracer exits.  This …",159,null],[11,"empty","","Returns an empty set of flags",159,[[],["options",3]]],[11,"all","","Returns the set containing all flags.",159,[[],["options",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",159,[[],["c_int",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",159,[[["c_int",6]],[["option",4],["options",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",159,[[["c_int",6]],["options",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",159,[[["c_int",6]],["options",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",159,[[]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",159,[[]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",159,[[["options",3]]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",159,[[["options",3]]]],[11,"insert","","Inserts the specified flags in-place.",159,[[["options",3]]]],[11,"remove","","Removes the specified flags in-place.",159,[[["options",3]]]],[11,"toggle","","Toggles the specified flags in-place.",159,[[["options",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",159,[[["options",3]]]],[11,"new","nix::sys::signal","<strong>Note:</strong> this constructor does not allow the user to set the …",161,[[["sigevnotify",4]],["sigevent",3]]],[11,"sigevent","","",161,[[],["sigevent",3]]],[11,"new","nix::sys::socket","",81,[[],["netlinkaddr",3]]],[11,"pid","","",81,[[]]],[11,"groups","","",81,[[]]],[11,"new","","",82,[[],["algaddr",3]]],[11,"alg_type","","",82,[[],["cstr",3]]],[11,"alg_name","","",82,[[],["cstr",3]]],[11,"family","","Always AF_PACKET",80,[[],["addressfamily",4]]],[11,"protocol","","Physical-layer protocol",80,[[]]],[11,"ifindex","","Interface number",80,[[]]],[11,"hatype","","ARP hardware type",80,[[]]],[11,"pkttype","","Packet type",80,[[]]],[11,"halen","","Length of MAC address",80,[[]]],[11,"addr","","Physical-layer address (MAC)",80,[[]]],[11,"new","","",83,[[],["vsockaddr",3]]],[11,"cid","","Context Identifier (CID)",83,[[]]],[11,"port","","Port number",83,[[]]],[11,"from_i32","","Create a new <code>AddressFamily</code> from an integer value …",73,[[],[["addressfamily",4],["option",4]]]],[11,"from_std","","",75,[[["socketaddr",4]],["inetaddr",4]]],[11,"new","","",75,[[["ipaddr",4]],["inetaddr",4]]],[11,"ip","","Gets the IP address associated with this socket address.",75,[[],["ipaddr",4]]],[11,"port","","Gets the port number associated with this socket address",75,[[]]],[11,"to_std","","",75,[[],["socketaddr",4]]],[11,"to_str","","",75,[[],["string",3]]],[11,"new_v4","","Create a new IpAddr that contains an IPv4 address.",77,[[],["ipaddr",4]]],[11,"new_v6","","Create a new IpAddr that contains an IPv6 address.",77,[[],["ipaddr",4]]],[11,"from_std","","",77,[[["ipaddr",4]],["ipaddr",4]]],[11,"to_std","","",77,[[],["ipaddr",4]]],[11,"new","","",78,[[],["ipv4addr",3]]],[11,"from_std","","",78,[[["ipv4addr",3]],["ipv4addr",3]]],[11,"any","","",78,[[],["ipv4addr",3]]],[11,"octets","","",78,[[]]],[11,"to_std","","",78,[[],["ipv4addr",3]]],[11,"new","","",79,[[],["ipv6addr",3]]],[11,"from_std","","",79,[[["ipv6addr",3]],["ipv6addr",3]]],[11,"segments","","Return the eight 16-bit segments that make up this address",79,[[]]],[11,"to_std","","",79,[[],["ipv6addr",3]]],[11,"new","","Create a new sockaddr_un representing a filesystem path.",76,[[],[["unixaddr",3],["result",6]]]],[11,"new_abstract","","Create a new <code>sockaddr_un</code> representing an address in the …",76,[[],[["unixaddr",3],["result",6]]]],[11,"path","","If this address represents a filesystem path, return that …",76,[[],[["option",4],["path",3]]]],[11,"as_abstract","","If this address represents an abstract socket, return its …",76,[[],["option",4]]],[11,"new_inet","","",74,[[["inetaddr",4]],["sockaddr",4]]],[11,"new_unix","","",74,[[],[["sockaddr",4],["result",6]]]],[11,"new_netlink","","",74,[[],["sockaddr",4]]],[11,"new_alg","","",74,[[],["sockaddr",4]]],[11,"new_vsock","","",74,[[],["sockaddr",4]]],[11,"family","","",74,[[],["addressfamily",4]]],[11,"to_str","","",74,[[],["string",3]]],[11,"as_ffi_pair","","Conversion from nix\'s SockAddr type to the underlying …",74,[[]]]],"p":[[3,"Dir"],[4,"Type"],[3,"Entry"],[4,"Errno"],[8,"ErrnoSentinel"],[4,"PosixFadviseAdvice"],[3,"AtFlags"],[3,"OFlag"],[3,"SealFlag"],[3,"FdFlag"],[4,"FcntlArg"],[4,"FlockArg"],[3,"SpliceFFlags"],[3,"FallocateFlags"],[3,"InterfaceAddress"],[3,"ModuleInitFlags"],[3,"DeleteModuleFlags"],[3,"MsFlags"],[3,"MntFlags"],[3,"MQ_OFlag"],[3,"FdFlag"],[3,"MqAttr"],[3,"InterfaceFlags"],[3,"PollFd"],[3,"PollFlags"],[3,"Winsize"],[3,"OpenptyResult"],[3,"ForkptyResult"],[4,"AioFsyncMode"],[4,"LioOpcode"],[4,"LioMode"],[4,"AioCancelStat"],[4,"Buffer"],[3,"AioCb"],[3,"LioCb"],[3,"EpollFlags"],[4,"EpollOp"],[3,"EpollCreateFlags"],[3,"EpollEvent"],[3,"EfdFlags"],[3,"MemFdCreateFlag"],[3,"ProtFlags"],[3,"MapFlags"],[4,"MmapAdvise"],[3,"MsFlags"],[3,"MlockAllFlags"],[4,"Request"],[4,"Event"],[4,"QuotaType"],[4,"QuotaFmt"],[3,"QuotaValidFlags"],[3,"Dqblk"],[4,"RebootMode"],[3,"FdSet"],[4,"Signal"],[3,"SaFlags"],[4,"SigmaskHow"],[3,"SigSet"],[4,"SigHandler"],[3,"SigAction"],[4,"SigevNotify"],[13,"SigevSignal"],[13,"SigevThreadId"],[3,"siginfo"],[3,"SfdFlags"],[3,"SignalFd"],[3,"cmsghdr"],[3,"msghdr"],[3,"sockaddr"],[3,"sockaddr_in"],[3,"sockaddr_in6"],[3,"sockaddr_storage"],[3,"sockaddr_un"],[4,"AddressFamily"],[4,"SockAddr"],[4,"InetAddr"],[3,"UnixAddr"],[4,"IpAddr"],[3,"Ipv4Addr"],[3,"Ipv6Addr"],[3,"LinkAddr"],[3,"NetlinkAddr"],[3,"AlgAddr"],[3,"VsockAddr"],[4,"SockType"],[4,"SockProtocol"],[3,"SockFlag"],[3,"MsgFlags"],[3,"UnixCredentials"],[3,"IpMembershipRequest"],[3,"Ipv6MembershipRequest"],[3,"RecvMsg"],[4,"ControlMessageOwned"],[4,"ControlMessage"],[3,"SendMmsgData"],[3,"RecvMmsgData"],[4,"SockLevel"],[8,"GetSockOpt"],[8,"SetSockOpt"],[4,"Shutdown"],[3,"FileStat"],[3,"SFlag"],[3,"Mode"],[4,"FchmodatFlags"],[4,"UtimensatFlags"],[3,"FsType"],[3,"Statfs"],[3,"FsFlags"],[3,"Statvfs"],[3,"SysInfo"],[3,"Termios"],[4,"BaudRate"],[4,"SetArg"],[4,"FlushArg"],[4,"FlowArg"],[4,"SpecialCharacterIndices"],[3,"InputFlags"],[3,"OutputFlags"],[3,"ControlFlags"],[3,"LocalFlags"],[8,"TimeValLike"],[3,"TimeSpec"],[3,"TimeVal"],[3,"RemoteIoVec"],[3,"IoVec"],[3,"UtsName"],[3,"WaitPidFlag"],[4,"WaitStatus"],[3,"AddWatchFlags"],[3,"InitFlags"],[3,"InotifyEvent"],[3,"Inotify"],[4,"ClockId"],[3,"TimerFlags"],[3,"TimerSetTimeFlags"],[4,"Expiration"],[3,"TimerFd"],[3,"UContext"],[3,"Uid"],[3,"Gid"],[3,"Pid"],[4,"ForkResult"],[13,"Parent"],[4,"FchownatFlags"],[4,"Whence"],[4,"LinkatFlags"],[4,"UnlinkatFlags"],[4,"PathconfVar"],[4,"SysconfVar"],[3,"AccessFlags"],[3,"User"],[3,"Group"],[4,"Error"],[8,"NixPath"],[3,"Iter"],[3,"InterfaceAddressIterator"],[3,"PtyMaster"],[3,"CloneFlags"],[3,"CpuSet"],[3,"Options"],[3,"Fds"],[3,"SigEvent"],[3,"SignalIterator"],[3,"ReuseAddr"],[3,"ReusePort"],[3,"TcpNoDelay"],[3,"Linger"],[3,"IpAddMembership"],[3,"IpDropMembership"],[3,"Ipv6AddMembership"],[3,"Ipv6DropMembership"],[3,"IpMulticastTtl"],[3,"IpMulticastLoop"],[3,"ReceiveTimeout"],[3,"SendTimeout"],[3,"Broadcast"],[3,"OobInline"],[3,"SocketError"],[3,"KeepAlive"],[3,"PeerCredentials"],[3,"TcpKeepIdle"],[3,"RcvBuf"],[3,"SndBuf"],[3,"RcvBufForce"],[3,"SndBufForce"],[3,"SockType"],[3,"AcceptConn"],[3,"BindToDevice"],[3,"OriginalDst"],[3,"ReceiveTimestamp"],[3,"IpTransparent"],[3,"Mark"],[3,"PassCred"],[3,"TcpCongestion"],[3,"Ipv4PacketInfo"],[3,"Ipv6RecvPacketInfo"],[3,"UdpGsoSegment"],[3,"UdpGroSegment"],[3,"AlgSetAeadAuthSize"],[3,"AlgSetKey"],[3,"CmsgIterator"],[3,"WatchDescriptor"],[6,"SessionId"]]},\
"num_cpus":{"doc":"A crate with utilities to determine the number of CPUs …","i":[[5,"get","num_cpus","Returns the number of available CPUs of the current …",null,[[]]],[5,"get_physical","","Returns the number of physical cores of the current …",null,[[]]]],"p":[]},\
"num_traits":{"doc":"Numeric traits for generic mathematics","i":[[8,"Bounded","num_traits","Numbers which have upper and lower bounds",null,null],[10,"min_value","","returns the smallest finite number this type can represent",0,[[]]],[10,"max_value","","returns the largest finite number this type can represent",0,[[]]],[8,"Float","","Generic trait for floating point numbers",null,null],[10,"nan","","Returns the <code>NaN</code> value.",1,[[]]],[10,"infinity","","Returns the infinite value.",1,[[]]],[10,"neg_infinity","","Returns the negative infinite value.",1,[[]]],[10,"neg_zero","","Returns <code>-0.0</code>.",1,[[]]],[10,"min_value","","Returns the smallest finite value that this type can …",1,[[]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this …",1,[[]]],[11,"epsilon","","Returns epsilon, a small positive value.",1,[[]]],[10,"max_value","","Returns the largest finite value that this type can …",1,[[]]],[10,"is_nan","","Returns <code>true</code> if this value is <code>NaN</code> and false otherwise.",1,[[]]],[10,"is_infinite","","Returns <code>true</code> if this value is positive infinity or …",1,[[]]],[10,"is_finite","","Returns <code>true</code> if this number is neither infinite nor <code>NaN</code>.",1,[[]]],[10,"is_normal","","Returns <code>true</code> if the number is neither zero, infinite, …",1,[[]]],[10,"classify","","Returns the floating point category of the number. If …",1,[[],["fpcategory",4]]],[10,"floor","","Returns the largest integer less than or equal to a …",1,[[]]],[10,"ceil","","Returns the smallest integer greater than or equal to a …",1,[[]]],[10,"round","","Returns the nearest integer to a number. Round half-way …",1,[[]]],[10,"trunc","","Return the integer part of a number.",1,[[]]],[10,"fract","","Returns the fractional part of a number.",1,[[]]],[10,"abs","","Computes the absolute value of <code>self</code>. Returns <code>Float::nan()</code> …",1,[[]]],[10,"signum","","Returns a number that represents the sign of <code>self</code>.",1,[[]]],[10,"is_sign_positive","","Returns <code>true</code> if <code>self</code> is positive, including <code>+0.0</code>, …",1,[[]]],[10,"is_sign_negative","","Returns <code>true</code> if <code>self</code> is negative, including <code>-0.0</code>, …",1,[[]]],[10,"mul_add","","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …",1,[[]]],[10,"recip","","Take the reciprocal (inverse) of a number, <code>1/x</code>.",1,[[]]],[10,"powi","","Raise a number to an integer power.",1,[[]]],[10,"powf","","Raise a number to a floating point power.",1,[[]]],[10,"sqrt","","Take the square root of a number.",1,[[]]],[10,"exp","","Returns <code>e^(self)</code>, (the exponential function).",1,[[]]],[10,"exp2","","Returns <code>2^(self)</code>.",1,[[]]],[10,"ln","","Returns the natural logarithm of the number.",1,[[]]],[10,"log","","Returns the logarithm of the number with respect to an …",1,[[]]],[10,"log2","","Returns the base 2 logarithm of the number.",1,[[]]],[10,"log10","","Returns the base 10 logarithm of the number.",1,[[]]],[11,"to_degrees","","Converts radians to degrees.",1,[[]]],[11,"to_radians","","Converts degrees to radians.",1,[[]]],[10,"max","","Returns the maximum of the two numbers.",1,[[]]],[10,"min","","Returns the minimum of the two numbers.",1,[[]]],[10,"abs_sub","","The positive difference of two numbers.",1,[[]]],[10,"cbrt","","Take the cubic root of a number.",1,[[]]],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle …",1,[[]]],[10,"sin","","Computes the sine of a number (in radians).",1,[[]]],[10,"cos","","Computes the cosine of a number (in radians).",1,[[]]],[10,"tan","","Computes the tangent of a number (in radians).",1,[[]]],[10,"asin","","Computes the arcsine of a number. Return value is in …",1,[[]]],[10,"acos","","Computes the arccosine of a number. Return value is in …",1,[[]]],[10,"atan","","Computes the arctangent of a number. Return value is in …",1,[[]]],[10,"atan2","","Computes the four quadrant arctangent of <code>self</code> (<code>y</code>) and …",1,[[]]],[10,"sin_cos","","Simultaneously computes the sine and cosine of the …",1,[[]]],[10,"exp_m1","","Returns <code>e^(self) - 1</code> in a way that is accurate even if the…",1,[[]]],[10,"ln_1p","","Returns <code>ln(1+n)</code> (natural logarithm) more accurately than …",1,[[]]],[10,"sinh","","Hyperbolic sine function.",1,[[]]],[10,"cosh","","Hyperbolic cosine function.",1,[[]]],[10,"tanh","","Hyperbolic tangent function.",1,[[]]],[10,"asinh","","Inverse hyperbolic sine function.",1,[[]]],[10,"acosh","","Inverse hyperbolic cosine function.",1,[[]]],[10,"atanh","","Inverse hyperbolic tangent function.",1,[[]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as …",1,[[]]],[8,"FloatConst","","",null,null],[10,"E","","Return Euler’s number.",2,[[]]],[10,"FRAC_1_PI","","Return <code>1.0 / π</code>.",2,[[]]],[10,"FRAC_1_SQRT_2","","Return <code>1.0 / sqrt(2.0)</code>.",2,[[]]],[10,"FRAC_2_PI","","Return <code>2.0 / π</code>.",2,[[]]],[10,"FRAC_2_SQRT_PI","","Return <code>2.0 / sqrt(π)</code>.",2,[[]]],[10,"FRAC_PI_2","","Return <code>π / 2.0</code>.",2,[[]]],[10,"FRAC_PI_3","","Return <code>π / 3.0</code>.",2,[[]]],[10,"FRAC_PI_4","","Return <code>π / 4.0</code>.",2,[[]]],[10,"FRAC_PI_6","","Return <code>π / 6.0</code>.",2,[[]]],[10,"FRAC_PI_8","","Return <code>π / 8.0</code>.",2,[[]]],[10,"LN_10","","Return <code>ln(10.0)</code>.",2,[[]]],[10,"LN_2","","Return <code>ln(2.0)</code>.",2,[[]]],[10,"LOG10_E","","Return <code>log10(e)</code>.",2,[[]]],[10,"LOG2_E","","Return <code>log2(e)</code>.",2,[[]]],[10,"PI","","Return Archimedes’ constant <code>π</code>.",2,[[]]],[10,"SQRT_2","","Return <code>sqrt(2.0)</code>.",2,[[]]],[11,"TAU","","Return the full circle constant <code>τ</code>.",2,[[]]],[11,"LOG10_2","","Return <code>log10(2.0)</code>.",2,[[]]],[11,"LOG2_10","","Return <code>log2(10.0)</code>.",2,[[]]],[8,"Zero","","Defines an additive identity element for <code>Self</code>.",null,null],[10,"zero","","Returns the additive identity element of <code>Self</code>, <code>0</code>.",3,[[]]],[11,"set_zero","","Sets <code>self</code> to the additive identity element of <code>Self</code>, <code>0</code>.",3,[[]]],[10,"is_zero","","Returns <code>true</code> if <code>self</code> is equal to the additive identity.",3,[[]]],[8,"One","","Defines a multiplicative identity element for <code>Self</code>.",null,null],[10,"one","","Returns the multiplicative identity element of <code>Self</code>, <code>1</code>.",4,[[]]],[11,"set_one","","Sets <code>self</code> to the multiplicative identity element of <code>Self</code>, …",4,[[]]],[11,"is_one","","Returns <code>true</code> if <code>self</code> is equal to the multiplicative …",4,[[]]],[5,"zero","","Returns the additive identity, <code>0</code>.",null,[[]]],[5,"one","","Returns the multiplicative identity, <code>1</code>.",null,[[]]],[8,"CheckedAdd","","Performs addition that returns <code>None</code> instead of wrapping …",null,null],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow …",5,[[],["option",4]]],[8,"CheckedSub","","Performs subtraction that returns <code>None</code> instead of …",null,null],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If …",6,[[],["option",4]]],[8,"CheckedMul","","Performs multiplication that returns <code>None</code> instead of …",null,null],[10,"checked_mul","","Multiplies two numbers, checking for underflow or …",7,[[],["option",4]]],[8,"CheckedDiv","","Performs division that returns <code>None</code> instead of panicking …",null,null],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and …",8,[[],["option",4]]],[8,"CheckedShl","","Performs a left shift that returns <code>None</code> on shifts larger …",null,null],[10,"checked_shl","","Checked shift left. Computes <code>self << rhs</code>, returning <code>None</code> …",9,[[],["option",4]]],[8,"CheckedShr","","Performs a right shift that returns <code>None</code> on shifts larger …",null,null],[10,"checked_shr","","Checked shift right. Computes <code>self >> rhs</code>, returning <code>None</code> …",10,[[],["option",4]]],[8,"WrappingAdd","","Performs addition that wraps around on overflow.",null,null],[10,"wrapping_add","","Wrapping (modular) addition. Computes <code>self + other</code>, …",11,[[]]],[8,"WrappingMul","","Performs multiplication that wraps around on overflow.",null,null],[10,"wrapping_mul","","Wrapping (modular) multiplication. Computes <code>self * other</code>, …",12,[[]]],[8,"WrappingSub","","Performs subtraction that wraps around on overflow.",null,null],[10,"wrapping_sub","","Wrapping (modular) subtraction. Computes <code>self - other</code>, …",13,[[]]],[8,"Saturating","","Saturating math operations. Deprecated, use <code>SaturatingAdd</code>…",null,null],[10,"saturating_add","","Saturating addition operator. Returns a+b, saturating at …",14,[[]]],[10,"saturating_sub","","Saturating subtraction operator. Returns a-b, saturating …",14,[[]]],[8,"Signed","","Useful functions for signed numbers (i.e. numbers that …",null,null],[10,"abs","","Computes the absolute value.",15,[[]]],[10,"abs_sub","","The positive difference of two numbers.",15,[[]]],[10,"signum","","Returns the sign of the number.",15,[[]]],[10,"is_positive","","Returns true if the number is positive and false if the …",15,[[]]],[10,"is_negative","","Returns true if the number is negative and false if the …",15,[[]]],[8,"Unsigned","","A trait for values which cannot be negative",null,null],[5,"abs","","Computes the absolute value.",null,[[]]],[5,"abs_sub","","The positive difference of two numbers.",null,[[]]],[5,"signum","","Returns the sign of the number.",null,[[]]],[8,"AsPrimitive","","A generic interface for casting between machine scalars …",null,null],[10,"as_","","Convert a value to another, using the <code>as</code> operator.",16,[[]]],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Converts an <code>isize</code> to return an optional value of this …",17,[[],["option",4]]],[11,"from_i8","","Converts an <code>i8</code> to return an optional value of this type. …",17,[[],["option",4]]],[11,"from_i16","","Converts an <code>i16</code> to return an optional value of this type. …",17,[[],["option",4]]],[11,"from_i32","","Converts an <code>i32</code> to return an optional value of this type. …",17,[[],["option",4]]],[10,"from_i64","","Converts an <code>i64</code> to return an optional value of this type. …",17,[[],["option",4]]],[11,"from_i128","","Converts an <code>i128</code> to return an optional value of this …",17,[[],["option",4]]],[11,"from_usize","","Converts a <code>usize</code> to return an optional value of this …",17,[[],["option",4]]],[11,"from_u8","","Converts an <code>u8</code> to return an optional value of this type. …",17,[[],["option",4]]],[11,"from_u16","","Converts an <code>u16</code> to return an optional value of this type. …",17,[[],["option",4]]],[11,"from_u32","","Converts an <code>u32</code> to return an optional value of this type. …",17,[[],["option",4]]],[10,"from_u64","","Converts an <code>u64</code> to return an optional value of this type. …",17,[[],["option",4]]],[11,"from_u128","","Converts an <code>u128</code> to return an optional value of this …",17,[[],["option",4]]],[11,"from_f32","","Converts a <code>f32</code> to return an optional value of this type. …",17,[[],["option",4]]],[11,"from_f64","","Converts a <code>f64</code> to return an optional value of this type. …",17,[[],["option",4]]],[8,"ToPrimitive","","A generic trait for converting a value to a number.",null,null],[11,"to_isize","","Converts the value of <code>self</code> to an <code>isize</code>. If the value …",18,[[],["option",4]]],[11,"to_i8","","Converts the value of <code>self</code> to an <code>i8</code>. If the value cannot …",18,[[],["option",4]]],[11,"to_i16","","Converts the value of <code>self</code> to an <code>i16</code>. If the value cannot …",18,[[],["option",4]]],[11,"to_i32","","Converts the value of <code>self</code> to an <code>i32</code>. If the value cannot …",18,[[],["option",4]]],[10,"to_i64","","Converts the value of <code>self</code> to an <code>i64</code>. If the value cannot …",18,[[],["option",4]]],[11,"to_i128","","Converts the value of <code>self</code> to an <code>i128</code>. If the value …",18,[[],["option",4]]],[11,"to_usize","","Converts the value of <code>self</code> to a <code>usize</code>. If the value …",18,[[],["option",4]]],[11,"to_u8","","Converts the value of <code>self</code> to a <code>u8</code>. If the value cannot be…",18,[[],["option",4]]],[11,"to_u16","","Converts the value of <code>self</code> to a <code>u16</code>. If the value cannot …",18,[[],["option",4]]],[11,"to_u32","","Converts the value of <code>self</code> to a <code>u32</code>. If the value cannot …",18,[[],["option",4]]],[10,"to_u64","","Converts the value of <code>self</code> to a <code>u64</code>. If the value cannot …",18,[[],["option",4]]],[11,"to_u128","","Converts the value of <code>self</code> to a <code>u128</code>. If the value cannot …",18,[[],["option",4]]],[11,"to_f32","","Converts the value of <code>self</code> to an <code>f32</code>. If the value cannot …",18,[[],["option",4]]],[11,"to_f64","","Converts the value of <code>self</code> to an <code>f64</code>. If the value cannot …",18,[[],["option",4]]],[8,"NumCast","","An interface for casting between machine scalars.",null,null],[10,"from","","Creates a number from another value that can be converted …",19,[[],["option",4]]],[5,"cast","","Cast from one machine scalar to another.",null,[[],["option",4]]],[8,"PrimInt","","Generic trait for primitive integers.",null,null],[10,"count_ones","","Returns the number of ones in the binary representation …",20,[[]]],[10,"count_zeros","","Returns the number of zeros in the binary representation …",20,[[]]],[10,"leading_zeros","","Returns the number of leading zeros in the binary …",20,[[]]],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary …",20,[[]]],[10,"rotate_left","","Shifts the bits to the left by a specified amount, <code>n</code>, …",20,[[]]],[10,"rotate_right","","Shifts the bits to the right by a specified amount, <code>n</code>, …",20,[[]]],[10,"signed_shl","","Shifts the bits to the left by a specified amount, <code>n</code>, …",20,[[]]],[10,"signed_shr","","Shifts the bits to the right by a specified amount, <code>n</code>, …",20,[[]]],[10,"unsigned_shl","","Shifts the bits to the left by a specified amount, <code>n</code>, …",20,[[]]],[10,"unsigned_shr","","Shifts the bits to the right by a specified amount, <code>n</code>, …",20,[[]]],[10,"swap_bytes","","Reverses the byte order of the integer.",20,[[]]],[10,"from_be","","Convert an integer from big endian to the target\'s …",20,[[]]],[10,"from_le","","Convert an integer from little endian to the target\'s …",20,[[]]],[10,"to_be","","Convert <code>self</code> to big endian from the target\'s endianness.",20,[[]]],[10,"to_le","","Convert <code>self</code> to little endian from the target\'s …",20,[[]]],[10,"pow","","Raises self to the power of <code>exp</code>, using exponentiation by …",20,[[]]],[5,"pow","","Raises a value to the power of exp, using exponentiation …",null,[[]]],[5,"checked_pow","","Raises a value to the power of exp, returning <code>None</code> if an …",null,[[],["option",4]]],[8,"Num","","The base trait for numeric types, covering <code>0</code> and <code>1</code> values,…",null,null],[16,"FromStrRadixErr","","",21,null],[10,"from_str_radix","","Convert from a string and radix <= 36.",21,[[],["result",4]]],[8,"NumOps","","The trait for types implementing basic numeric operations",null,null],[8,"NumRef","","The trait for <code>Num</code> types which also implement numeric …",null,null],[8,"RefNum","","The trait for references which implement numeric …",null,null],[8,"NumAssignOps","","The trait for types implementing numeric assignment …",null,null],[8,"NumAssign","","The trait for <code>Num</code> types which also implement assignment …",null,null],[8,"NumAssignRef","","The trait for <code>NumAssign</code> types which also implement …",null,null],[4,"FloatErrorKind","","",null,null],[13,"Empty","","",22,null],[13,"Invalid","","",22,null],[3,"ParseFloatError","","",null,null],[12,"kind","","",23,null],[5,"clamp","","A value bounded by a minimum and a maximum",null,[[]]],[0,"identities","","",null,null],[8,"Zero","num_traits::identities","Defines an additive identity element for <code>Self</code>.",null,null],[10,"zero","","Returns the additive identity element of <code>Self</code>, <code>0</code>.",3,[[]]],[11,"set_zero","","Sets <code>self</code> to the additive identity element of <code>Self</code>, <code>0</code>.",3,[[]]],[10,"is_zero","","Returns <code>true</code> if <code>self</code> is equal to the additive identity.",3,[[]]],[8,"One","","Defines a multiplicative identity element for <code>Self</code>.",null,null],[10,"one","","Returns the multiplicative identity element of <code>Self</code>, <code>1</code>.",4,[[]]],[11,"set_one","","Sets <code>self</code> to the multiplicative identity element of <code>Self</code>, …",4,[[]]],[11,"is_one","","Returns <code>true</code> if <code>self</code> is equal to the multiplicative …",4,[[]]],[5,"zero","","Returns the additive identity, <code>0</code>.",null,[[]]],[5,"one","","Returns the multiplicative identity, <code>1</code>.",null,[[]]],[0,"sign","num_traits","",null,null],[8,"Signed","num_traits::sign","Useful functions for signed numbers (i.e. numbers that …",null,null],[10,"abs","","Computes the absolute value.",15,[[]]],[10,"abs_sub","","The positive difference of two numbers.",15,[[]]],[10,"signum","","Returns the sign of the number.",15,[[]]],[10,"is_positive","","Returns true if the number is positive and false if the …",15,[[]]],[10,"is_negative","","Returns true if the number is negative and false if the …",15,[[]]],[8,"Unsigned","","A trait for values which cannot be negative",null,null],[5,"abs","","Computes the absolute value.",null,[[]]],[5,"abs_sub","","The positive difference of two numbers.",null,[[]]],[5,"signum","","Returns the sign of the number.",null,[[]]],[0,"ops","num_traits","",null,null],[0,"saturating","num_traits::ops","",null,null],[8,"Saturating","num_traits::ops::saturating","Saturating math operations. Deprecated, use <code>SaturatingAdd</code>…",null,null],[10,"saturating_add","","Saturating addition operator. Returns a+b, saturating at …",14,[[]]],[10,"saturating_sub","","Saturating subtraction operator. Returns a-b, saturating …",14,[[]]],[0,"checked","num_traits::ops","",null,null],[8,"CheckedAdd","num_traits::ops::checked","Performs addition that returns <code>None</code> instead of wrapping …",null,null],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow …",5,[[],["option",4]]],[8,"CheckedSub","","Performs subtraction that returns <code>None</code> instead of …",null,null],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If …",6,[[],["option",4]]],[8,"CheckedMul","","Performs multiplication that returns <code>None</code> instead of …",null,null],[10,"checked_mul","","Multiplies two numbers, checking for underflow or …",7,[[],["option",4]]],[8,"CheckedDiv","","Performs division that returns <code>None</code> instead of panicking …",null,null],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and …",8,[[],["option",4]]],[8,"CheckedShl","","Performs a left shift that returns <code>None</code> on shifts larger …",null,null],[10,"checked_shl","","Checked shift left. Computes <code>self << rhs</code>, returning <code>None</code> …",9,[[],["option",4]]],[8,"CheckedShr","","Performs a right shift that returns <code>None</code> on shifts larger …",null,null],[10,"checked_shr","","Checked shift right. Computes <code>self >> rhs</code>, returning <code>None</code> …",10,[[],["option",4]]],[0,"wrapping","num_traits::ops","",null,null],[8,"WrappingAdd","num_traits::ops::wrapping","Performs addition that wraps around on overflow.",null,null],[10,"wrapping_add","","Wrapping (modular) addition. Computes <code>self + other</code>, …",11,[[]]],[8,"WrappingMul","","Performs multiplication that wraps around on overflow.",null,null],[10,"wrapping_mul","","Wrapping (modular) multiplication. Computes <code>self * other</code>, …",12,[[]]],[8,"WrappingSub","","Performs subtraction that wraps around on overflow.",null,null],[10,"wrapping_sub","","Wrapping (modular) subtraction. Computes <code>self - other</code>, …",13,[[]]],[0,"bounds","num_traits","",null,null],[8,"Bounded","num_traits::bounds","Numbers which have upper and lower bounds",null,null],[10,"min_value","","returns the smallest finite number this type can represent",0,[[]]],[10,"max_value","","returns the largest finite number this type can represent",0,[[]]],[0,"float","num_traits","",null,null],[8,"Float","num_traits::float","Generic trait for floating point numbers",null,null],[10,"nan","","Returns the <code>NaN</code> value.",1,[[]]],[10,"infinity","","Returns the infinite value.",1,[[]]],[10,"neg_infinity","","Returns the negative infinite value.",1,[[]]],[10,"neg_zero","","Returns <code>-0.0</code>.",1,[[]]],[10,"min_value","","Returns the smallest finite value that this type can …",1,[[]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this …",1,[[]]],[11,"epsilon","","Returns epsilon, a small positive value.",1,[[]]],[10,"max_value","","Returns the largest finite value that this type can …",1,[[]]],[10,"is_nan","","Returns <code>true</code> if this value is <code>NaN</code> and false otherwise.",1,[[]]],[10,"is_infinite","","Returns <code>true</code> if this value is positive infinity or …",1,[[]]],[10,"is_finite","","Returns <code>true</code> if this number is neither infinite nor <code>NaN</code>.",1,[[]]],[10,"is_normal","","Returns <code>true</code> if the number is neither zero, infinite, …",1,[[]]],[10,"classify","","Returns the floating point category of the number. If …",1,[[],["fpcategory",4]]],[10,"floor","","Returns the largest integer less than or equal to a …",1,[[]]],[10,"ceil","","Returns the smallest integer greater than or equal to a …",1,[[]]],[10,"round","","Returns the nearest integer to a number. Round half-way …",1,[[]]],[10,"trunc","","Return the integer part of a number.",1,[[]]],[10,"fract","","Returns the fractional part of a number.",1,[[]]],[10,"abs","","Computes the absolute value of <code>self</code>. Returns <code>Float::nan()</code> …",1,[[]]],[10,"signum","","Returns a number that represents the sign of <code>self</code>.",1,[[]]],[10,"is_sign_positive","","Returns <code>true</code> if <code>self</code> is positive, including <code>+0.0</code>, …",1,[[]]],[10,"is_sign_negative","","Returns <code>true</code> if <code>self</code> is negative, including <code>-0.0</code>, …",1,[[]]],[10,"mul_add","","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …",1,[[]]],[10,"recip","","Take the reciprocal (inverse) of a number, <code>1/x</code>.",1,[[]]],[10,"powi","","Raise a number to an integer power.",1,[[]]],[10,"powf","","Raise a number to a floating point power.",1,[[]]],[10,"sqrt","","Take the square root of a number.",1,[[]]],[10,"exp","","Returns <code>e^(self)</code>, (the exponential function).",1,[[]]],[10,"exp2","","Returns <code>2^(self)</code>.",1,[[]]],[10,"ln","","Returns the natural logarithm of the number.",1,[[]]],[10,"log","","Returns the logarithm of the number with respect to an …",1,[[]]],[10,"log2","","Returns the base 2 logarithm of the number.",1,[[]]],[10,"log10","","Returns the base 10 logarithm of the number.",1,[[]]],[11,"to_degrees","","Converts radians to degrees.",1,[[]]],[11,"to_radians","","Converts degrees to radians.",1,[[]]],[10,"max","","Returns the maximum of the two numbers.",1,[[]]],[10,"min","","Returns the minimum of the two numbers.",1,[[]]],[10,"abs_sub","","The positive difference of two numbers.",1,[[]]],[10,"cbrt","","Take the cubic root of a number.",1,[[]]],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle …",1,[[]]],[10,"sin","","Computes the sine of a number (in radians).",1,[[]]],[10,"cos","","Computes the cosine of a number (in radians).",1,[[]]],[10,"tan","","Computes the tangent of a number (in radians).",1,[[]]],[10,"asin","","Computes the arcsine of a number. Return value is in …",1,[[]]],[10,"acos","","Computes the arccosine of a number. Return value is in …",1,[[]]],[10,"atan","","Computes the arctangent of a number. Return value is in …",1,[[]]],[10,"atan2","","Computes the four quadrant arctangent of <code>self</code> (<code>y</code>) and …",1,[[]]],[10,"sin_cos","","Simultaneously computes the sine and cosine of the …",1,[[]]],[10,"exp_m1","","Returns <code>e^(self) - 1</code> in a way that is accurate even if the…",1,[[]]],[10,"ln_1p","","Returns <code>ln(1+n)</code> (natural logarithm) more accurately than …",1,[[]]],[10,"sinh","","Hyperbolic sine function.",1,[[]]],[10,"cosh","","Hyperbolic cosine function.",1,[[]]],[10,"tanh","","Hyperbolic tangent function.",1,[[]]],[10,"asinh","","Inverse hyperbolic sine function.",1,[[]]],[10,"acosh","","Inverse hyperbolic cosine function.",1,[[]]],[10,"atanh","","Inverse hyperbolic tangent function.",1,[[]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as …",1,[[]]],[8,"FloatConst","","",null,null],[10,"E","","Return Euler’s number.",2,[[]]],[10,"FRAC_1_PI","","Return <code>1.0 / π</code>.",2,[[]]],[10,"FRAC_1_SQRT_2","","Return <code>1.0 / sqrt(2.0)</code>.",2,[[]]],[10,"FRAC_2_PI","","Return <code>2.0 / π</code>.",2,[[]]],[10,"FRAC_2_SQRT_PI","","Return <code>2.0 / sqrt(π)</code>.",2,[[]]],[10,"FRAC_PI_2","","Return <code>π / 2.0</code>.",2,[[]]],[10,"FRAC_PI_3","","Return <code>π / 3.0</code>.",2,[[]]],[10,"FRAC_PI_4","","Return <code>π / 4.0</code>.",2,[[]]],[10,"FRAC_PI_6","","Return <code>π / 6.0</code>.",2,[[]]],[10,"FRAC_PI_8","","Return <code>π / 8.0</code>.",2,[[]]],[10,"LN_10","","Return <code>ln(10.0)</code>.",2,[[]]],[10,"LN_2","","Return <code>ln(2.0)</code>.",2,[[]]],[10,"LOG10_E","","Return <code>log10(e)</code>.",2,[[]]],[10,"LOG2_E","","Return <code>log2(e)</code>.",2,[[]]],[10,"PI","","Return Archimedes’ constant <code>π</code>.",2,[[]]],[10,"SQRT_2","","Return <code>sqrt(2.0)</code>.",2,[[]]],[11,"TAU","","Return the full circle constant <code>τ</code>.",2,[[]]],[11,"LOG10_2","","Return <code>log10(2.0)</code>.",2,[[]]],[11,"LOG2_10","","Return <code>log2(10.0)</code>.",2,[[]]],[0,"real","num_traits","",null,null],[8,"Real","num_traits::real","A trait for real number types that do not necessarily have…",null,null],[10,"min_value","","Returns the smallest finite value that this type can …",24,[[]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this …",24,[[]]],[10,"epsilon","","Returns epsilon, a small positive value.",24,[[]]],[10,"max_value","","Returns the largest finite value that this type can …",24,[[]]],[10,"floor","","Returns the largest integer less than or equal to a …",24,[[]]],[10,"ceil","","Returns the smallest integer greater than or equal to a …",24,[[]]],[10,"round","","Returns the nearest integer to a number. Round half-way …",24,[[]]],[10,"trunc","","Return the integer part of a number.",24,[[]]],[10,"fract","","Returns the fractional part of a number.",24,[[]]],[10,"abs","","Computes the absolute value of <code>self</code>. Returns <code>Float::nan()</code> …",24,[[]]],[10,"signum","","Returns a number that represents the sign of <code>self</code>.",24,[[]]],[10,"is_sign_positive","","Returns <code>true</code> if <code>self</code> is positive, including <code>+0.0</code>, …",24,[[]]],[10,"is_sign_negative","","Returns <code>true</code> if <code>self</code> is negative, including <code>-0.0</code>, …",24,[[]]],[10,"mul_add","","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …",24,[[]]],[10,"recip","","Take the reciprocal (inverse) of a number, <code>1/x</code>.",24,[[]]],[10,"powi","","Raise a number to an integer power.",24,[[]]],[10,"powf","","Raise a number to a real number power.",24,[[]]],[10,"sqrt","","Take the square root of a number.",24,[[]]],[10,"exp","","Returns <code>e^(self)</code>, (the exponential function).",24,[[]]],[10,"exp2","","Returns <code>2^(self)</code>.",24,[[]]],[10,"ln","","Returns the natural logarithm of the number.",24,[[]]],[10,"log","","Returns the logarithm of the number with respect to an …",24,[[]]],[10,"log2","","Returns the base 2 logarithm of the number.",24,[[]]],[10,"log10","","Returns the base 10 logarithm of the number.",24,[[]]],[10,"to_degrees","","Converts radians to degrees.",24,[[]]],[10,"to_radians","","Converts degrees to radians.",24,[[]]],[10,"max","","Returns the maximum of the two numbers.",24,[[]]],[10,"min","","Returns the minimum of the two numbers.",24,[[]]],[10,"abs_sub","","The positive difference of two numbers.",24,[[]]],[10,"cbrt","","Take the cubic root of a number.",24,[[]]],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle …",24,[[]]],[10,"sin","","Computes the sine of a number (in radians).",24,[[]]],[10,"cos","","Computes the cosine of a number (in radians).",24,[[]]],[10,"tan","","Computes the tangent of a number (in radians).",24,[[]]],[10,"asin","","Computes the arcsine of a number. Return value is in …",24,[[]]],[10,"acos","","Computes the arccosine of a number. Return value is in …",24,[[]]],[10,"atan","","Computes the arctangent of a number. Return value is in …",24,[[]]],[10,"atan2","","Computes the four quadrant arctangent of <code>self</code> (<code>y</code>) and …",24,[[]]],[10,"sin_cos","","Simultaneously computes the sine and cosine of the …",24,[[]]],[10,"exp_m1","","Returns <code>e^(self) - 1</code> in a way that is accurate even if the…",24,[[]]],[10,"ln_1p","","Returns <code>ln(1+n)</code> (natural logarithm) more accurately than …",24,[[]]],[10,"sinh","","Hyperbolic sine function.",24,[[]]],[10,"cosh","","Hyperbolic cosine function.",24,[[]]],[10,"tanh","","Hyperbolic tangent function.",24,[[]]],[10,"asinh","","Inverse hyperbolic sine function.",24,[[]]],[10,"acosh","","Inverse hyperbolic cosine function.",24,[[]]],[10,"atanh","","Inverse hyperbolic tangent function.",24,[[]]],[0,"cast","num_traits","",null,null],[8,"AsPrimitive","num_traits::cast","A generic interface for casting between machine scalars …",null,null],[10,"as_","","Convert a value to another, using the <code>as</code> operator.",16,[[]]],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Converts an <code>isize</code> to return an optional value of this …",17,[[],["option",4]]],[11,"from_i8","","Converts an <code>i8</code> to return an optional value of this type. …",17,[[],["option",4]]],[11,"from_i16","","Converts an <code>i16</code> to return an optional value of this type. …",17,[[],["option",4]]],[11,"from_i32","","Converts an <code>i32</code> to return an optional value of this type. …",17,[[],["option",4]]],[10,"from_i64","","Converts an <code>i64</code> to return an optional value of this type. …",17,[[],["option",4]]],[11,"from_i128","","Converts an <code>i128</code> to return an optional value of this …",17,[[],["option",4]]],[11,"from_usize","","Converts a <code>usize</code> to return an optional value of this …",17,[[],["option",4]]],[11,"from_u8","","Converts an <code>u8</code> to return an optional value of this type. …",17,[[],["option",4]]],[11,"from_u16","","Converts an <code>u16</code> to return an optional value of this type. …",17,[[],["option",4]]],[11,"from_u32","","Converts an <code>u32</code> to return an optional value of this type. …",17,[[],["option",4]]],[10,"from_u64","","Converts an <code>u64</code> to return an optional value of this type. …",17,[[],["option",4]]],[11,"from_u128","","Converts an <code>u128</code> to return an optional value of this …",17,[[],["option",4]]],[11,"from_f32","","Converts a <code>f32</code> to return an optional value of this type. …",17,[[],["option",4]]],[11,"from_f64","","Converts a <code>f64</code> to return an optional value of this type. …",17,[[],["option",4]]],[8,"ToPrimitive","","A generic trait for converting a value to a number.",null,null],[11,"to_isize","","Converts the value of <code>self</code> to an <code>isize</code>. If the value …",18,[[],["option",4]]],[11,"to_i8","","Converts the value of <code>self</code> to an <code>i8</code>. If the value cannot …",18,[[],["option",4]]],[11,"to_i16","","Converts the value of <code>self</code> to an <code>i16</code>. If the value cannot …",18,[[],["option",4]]],[11,"to_i32","","Converts the value of <code>self</code> to an <code>i32</code>. If the value cannot …",18,[[],["option",4]]],[10,"to_i64","","Converts the value of <code>self</code> to an <code>i64</code>. If the value cannot …",18,[[],["option",4]]],[11,"to_i128","","Converts the value of <code>self</code> to an <code>i128</code>. If the value …",18,[[],["option",4]]],[11,"to_usize","","Converts the value of <code>self</code> to a <code>usize</code>. If the value …",18,[[],["option",4]]],[11,"to_u8","","Converts the value of <code>self</code> to a <code>u8</code>. If the value cannot be…",18,[[],["option",4]]],[11,"to_u16","","Converts the value of <code>self</code> to a <code>u16</code>. If the value cannot …",18,[[],["option",4]]],[11,"to_u32","","Converts the value of <code>self</code> to a <code>u32</code>. If the value cannot …",18,[[],["option",4]]],[10,"to_u64","","Converts the value of <code>self</code> to a <code>u64</code>. If the value cannot …",18,[[],["option",4]]],[11,"to_u128","","Converts the value of <code>self</code> to a <code>u128</code>. If the value cannot …",18,[[],["option",4]]],[11,"to_f32","","Converts the value of <code>self</code> to an <code>f32</code>. If the value cannot …",18,[[],["option",4]]],[11,"to_f64","","Converts the value of <code>self</code> to an <code>f64</code>. If the value cannot …",18,[[],["option",4]]],[8,"NumCast","","An interface for casting between machine scalars.",null,null],[10,"from","","Creates a number from another value that can be converted …",19,[[],["option",4]]],[5,"cast","","Cast from one machine scalar to another.",null,[[],["option",4]]],[0,"int","num_traits","",null,null],[8,"PrimInt","num_traits::int","Generic trait for primitive integers.",null,null],[10,"count_ones","","Returns the number of ones in the binary representation …",20,[[]]],[10,"count_zeros","","Returns the number of zeros in the binary representation …",20,[[]]],[10,"leading_zeros","","Returns the number of leading zeros in the binary …",20,[[]]],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary …",20,[[]]],[10,"rotate_left","","Shifts the bits to the left by a specified amount, <code>n</code>, …",20,[[]]],[10,"rotate_right","","Shifts the bits to the right by a specified amount, <code>n</code>, …",20,[[]]],[10,"signed_shl","","Shifts the bits to the left by a specified amount, <code>n</code>, …",20,[[]]],[10,"signed_shr","","Shifts the bits to the right by a specified amount, <code>n</code>, …",20,[[]]],[10,"unsigned_shl","","Shifts the bits to the left by a specified amount, <code>n</code>, …",20,[[]]],[10,"unsigned_shr","","Shifts the bits to the right by a specified amount, <code>n</code>, …",20,[[]]],[10,"swap_bytes","","Reverses the byte order of the integer.",20,[[]]],[10,"from_be","","Convert an integer from big endian to the target\'s …",20,[[]]],[10,"from_le","","Convert an integer from little endian to the target\'s …",20,[[]]],[10,"to_be","","Convert <code>self</code> to big endian from the target\'s endianness.",20,[[]]],[10,"to_le","","Convert <code>self</code> to little endian from the target\'s …",20,[[]]],[10,"pow","","Raises self to the power of <code>exp</code>, using exponentiation by …",20,[[]]],[0,"pow","num_traits","",null,null],[5,"pow","num_traits::pow","Raises a value to the power of exp, using exponentiation …",null,[[]]],[5,"checked_pow","","Raises a value to the power of exp, returning <code>None</code> if an …",null,[[],["option",4]]],[11,"from","num_traits","",22,[[]]],[11,"into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_string","","",23,[[],["string",3]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"fmt","","",23,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",22,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",23,[[["formatter",3]],[["result",4],["error",3]]]]],"p":[[8,"Bounded"],[8,"Float"],[8,"FloatConst"],[8,"Zero"],[8,"One"],[8,"CheckedAdd"],[8,"CheckedSub"],[8,"CheckedMul"],[8,"CheckedDiv"],[8,"CheckedShl"],[8,"CheckedShr"],[8,"WrappingAdd"],[8,"WrappingMul"],[8,"WrappingSub"],[8,"Saturating"],[8,"Signed"],[8,"AsPrimitive"],[8,"FromPrimitive"],[8,"ToPrimitive"],[8,"NumCast"],[8,"PrimInt"],[8,"Num"],[4,"FloatErrorKind"],[3,"ParseFloatError"],[8,"Real"]]},\
"once_cell":{"doc":"Overview<code>once_cell</code> provides two new cell-like types, …","i":[[0,"unsync","once_cell","",null,null],[3,"OnceCell","once_cell::unsync","A cell which can be written to only once. It is not …",null,null],[11,"new","","Creates a new empty cell.",0,[[],["oncecell",3]]],[11,"get","","Gets a reference to the underlying value.",0,[[],["option",4]]],[11,"get_mut","","Gets a mutable reference to the underlying value.",0,[[],["option",4]]],[11,"set","","Sets the contents of this cell to <code>value</code>.",0,[[],["result",4]]],[11,"get_or_init","","Gets the contents of the cell, initializing it with <code>f</code> if …",0,[[]]],[11,"get_or_try_init","","Gets the contents of the cell, initializing it with <code>f</code> if …",0,[[],["result",4]]],[11,"take","","Takes the value out of this <code>OnceCell</code>, moving it back to …",0,[[],["option",4]]],[11,"into_inner","","Consumes the <code>OnceCell</code>, returning the wrapped value.",0,[[],["option",4]]],[3,"Lazy","","A value which is initialized on the first access.",null,null],[11,"new","","Creates a new lazy value with the given initializing …",1,[[],["lazy",3]]],[11,"force","","Forces the evaluation of this lazy value and returns a …",1,[[["lazy",3]]]],[0,"sync","once_cell","",null,null],[3,"OnceCell","once_cell::sync","A thread-safe cell which can be written to only once.",null,null],[11,"new","","Creates a new empty cell.",2,[[],["oncecell",3]]],[11,"get","","Gets the reference to the underlying value.",2,[[],["option",4]]],[11,"get_mut","","Gets the mutable reference to the underlying value.",2,[[],["option",4]]],[11,"get_unchecked","","Get the reference to the underlying value, without …",2,[[]]],[11,"set","","Sets the contents of this cell to <code>value</code>.",2,[[],["result",4]]],[11,"get_or_init","","Gets the contents of the cell, initializing it with <code>f</code> if …",2,[[]]],[11,"get_or_try_init","","Gets the contents of the cell, initializing it with <code>f</code> if …",2,[[],["result",4]]],[11,"take","","Takes the value out of this <code>OnceCell</code>, moving it back to …",2,[[],["option",4]]],[11,"into_inner","","Consumes the <code>OnceCell</code>, returning the wrapped value. …",2,[[],["option",4]]],[3,"Lazy","","A value which is initialized on the first access.",null,null],[11,"new","","Creates a new lazy value with the given initializing …",3,[[],["lazy",3]]],[11,"force","","Forces the evaluation of this lazy value and returns a …",3,[[["lazy",3]]]],[11,"from","once_cell::unsync","",0,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","once_cell::sync","",2,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","once_cell::unsync","",0,[[]]],[11,"from","once_cell::sync","",2,[[]]],[11,"clone","once_cell::unsync","",0,[[],["oncecell",3]]],[11,"clone","once_cell::sync","",2,[[],["oncecell",3]]],[11,"default","once_cell::unsync","",0,[[]]],[11,"default","","Creates a new lazy value using <code>Default</code> as the …",1,[[],["lazy",3]]],[11,"default","once_cell::sync","",2,[[],["oncecell",3]]],[11,"default","","Creates a new lazy value using <code>Default</code> as the …",3,[[],["lazy",3]]],[11,"eq","once_cell::unsync","",0,[[]]],[11,"eq","once_cell::sync","",2,[[["oncecell",3]]]],[11,"deref","once_cell::unsync","",1,[[]]],[11,"deref","once_cell::sync","",3,[[]]],[11,"deref_mut","once_cell::unsync","",1,[[]]],[11,"deref_mut","once_cell::sync","",3,[[]]],[11,"fmt","once_cell::unsync","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","once_cell::sync","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]]],"p":[[3,"OnceCell"],[3,"Lazy"],[3,"OnceCell"],[3,"Lazy"]]},\
"pin_project":{"doc":"A crate for safe and ergonomic pin-projection.","i":[[23,"pin_project","pin_project","An attribute that creates projection types covering all …",null,null],[23,"pinned_drop","","An attribute for annotating an impl block that implements …",null,null],[23,"project","","(deprecated) An attribute to provide way to refer to the …",null,null],[23,"project_ref","","(deprecated) An attribute to provide way to refer to the …",null,null],[23,"project_replace","","(deprecated) An attribute to provide way to refer to the …",null,null],[8,"UnsafeUnpin","","A trait used for custom implementations of [<code>Unpin</code>]. This …",null,null]],"p":[]},\
"pin_project_internal":{"doc":"An internal crate to support pin_project - <strong>do not use …","i":[[23,"pin_project","pin_project_internal","An attribute that creates projection types covering all …",null,null],[23,"pinned_drop","","An attribute for annotating an impl block that implements …",null,null],[23,"project","","(deprecated) An attribute to provide way to refer to the …",null,null],[23,"project_ref","","(deprecated) An attribute to provide way to refer to the …",null,null],[23,"project_replace","","(deprecated) An attribute to provide way to refer to the …",null,null]],"p":[]},\
"pin_project_lite":{"doc":"A lightweight version of pin-project written with …","i":[[14,"pin_project","pin_project_lite","A macro that creates a projection type covering all the …",null,null]],"p":[]},\
"pin_utils":{"doc":"Utilities for pinning","i":[[14,"pin_mut","pin_utils","Pins a value on the stack.",null,null],[14,"unsafe_pinned","","A pinned projection of a struct field.",null,null],[14,"unsafe_unpinned","","An unpinned projection of a struct field.",null,null]],"p":[]},\
"proc_macro2":{"doc":"A wrapper around the procedural macro API of the …","i":[[0,"token_stream","proc_macro2","Public implementation details for the <code>TokenStream</code> type, …",null,null],[3,"IntoIter","proc_macro2::token_stream","An iterator over <code>TokenStream</code>\'s <code>TokenTree</code>s.",null,null],[3,"TokenStream","proc_macro2","An abstract stream of tokens, or more concretely a …",null,null],[3,"LexError","","Error returned from <code>TokenStream::from_str</code>.",null,null],[11,"new","","Returns an empty <code>TokenStream</code> containing no token trees.",0,[[],["tokenstream",3]]],[11,"is_empty","","Checks if this <code>TokenStream</code> is empty.",0,[[]]],[3,"Span","","A region of source code, along with macro expansion …",null,null],[11,"call_site","","The span of the invocation of the current procedural …",1,[[],["span",3]]],[11,"mixed_site","","The span located at the invocation of the procedural …",1,[[],["span",3]]],[11,"resolved_at","","Creates a new span with the same line/column information …",1,[[["span",3]],["span",3]]],[11,"located_at","","Creates a new span with the same name resolution behavior …",1,[[["span",3]],["span",3]]],[11,"unwrap","","Convert <code>proc_macro2::Span</code> to <code>proc_macro::Span</code>.",1,[[],["span",3]]],[11,"join","","Create a new span encompassing <code>self</code> and <code>other</code>.",1,[[["span",3]],[["option",4],["span",3]]]],[4,"TokenTree","","A single token or a delimited sequence of token trees …",null,null],[13,"Group","","A token stream surrounded by bracket delimiters.",2,null],[13,"Ident","","An identifier.",2,null],[13,"Punct","","A single punctuation character (<code>+</code>, <code>,</code>, <code>$</code>, etc.).",2,null],[13,"Literal","","A literal character (<code>\'a\'</code>), string (<code>\\\"hello\\\"</code>), number (<code>2.3</code>…",2,null],[11,"span","","Returns the span of this tree, delegating to the <code>span</code> …",2,[[],["span",3]]],[11,"set_span","","Configures the span for <em>only this token</em>.",2,[[["span",3]]]],[3,"Group","","A delimited token stream.",null,null],[4,"Delimiter","","Describes how a sequence of token trees is delimited.",null,null],[13,"Parenthesis","","<code>( ... )</code>",3,null],[13,"Brace","","<code>{ ... }</code>",3,null],[13,"Bracket","","<code>[ ... ]</code>",3,null],[13,"None","","<code>Ø ... Ø</code>",3,null],[11,"new","","Creates a new <code>Group</code> with the given delimiter and token …",4,[[["delimiter",4],["tokenstream",3]],["group",3]]],[11,"delimiter","","Returns the delimiter of this <code>Group</code>",4,[[],["delimiter",4]]],[11,"stream","","Returns the <code>TokenStream</code> of tokens that are delimited in …",4,[[],["tokenstream",3]]],[11,"span","","Returns the span for the delimiters of this token stream, …",4,[[],["span",3]]],[11,"span_open","","Returns the span pointing to the opening delimiter of …",4,[[],["span",3]]],[11,"span_close","","Returns the span pointing to the closing delimiter of …",4,[[],["span",3]]],[11,"set_span","","Configures the span for this <code>Group</code>\'s delimiters, but not …",4,[[["span",3]]]],[3,"Punct","","An <code>Punct</code> is an single punctuation character like <code>+</code>, <code>-</code> or <code>#</code>…",null,null],[4,"Spacing","","Whether an <code>Punct</code> is followed immediately by another <code>Punct</code> …",null,null],[13,"Alone","","E.g. <code>+</code> is <code>Alone</code> in <code>+ =</code>, <code>+ident</code> or <code>+()</code>.",5,null],[13,"Joint","","E.g. <code>+</code> is <code>Joint</code> in <code>+=</code> or <code>\'</code> is <code>Joint</code> in <code>\'#</code>.",5,null],[11,"new","","Creates a new <code>Punct</code> from the given character and spacing.",6,[[["spacing",4]],["punct",3]]],[11,"as_char","","Returns the value of this punctuation character as <code>char</code>.",6,[[]]],[11,"spacing","","Returns the spacing of this punctuation character, …",6,[[],["spacing",4]]],[11,"span","","Returns the span for this punctuation character.",6,[[],["span",3]]],[11,"set_span","","Configure the span for this punctuation character.",6,[[["span",3]]]],[3,"Ident","","A word of Rust code, which may be a keyword or legal …",null,null],[11,"new","","Creates a new <code>Ident</code> with the given <code>string</code> as well as the …",7,[[["span",3]],["ident",3]]],[11,"span","","Returns the span of this <code>Ident</code>.",7,[[],["span",3]]],[11,"set_span","","Configures the span of this <code>Ident</code>, possibly changing its …",7,[[["span",3]]]],[3,"Literal","","A literal string (<code>\\\"hello\\\"</code>), byte string (<code>b\\\"hello\\\"</code>), …",null,null],[11,"u8_suffixed","","Creates a new suffixed integer literal with the specified …",8,[[],["literal",3]]],[11,"u16_suffixed","","Creates a new suffixed integer literal with the specified …",8,[[],["literal",3]]],[11,"u32_suffixed","","Creates a new suffixed integer literal with the specified …",8,[[],["literal",3]]],[11,"u64_suffixed","","Creates a new suffixed integer literal with the specified …",8,[[],["literal",3]]],[11,"u128_suffixed","","Creates a new suffixed integer literal with the specified …",8,[[],["literal",3]]],[11,"usize_suffixed","","Creates a new suffixed integer literal with the specified …",8,[[],["literal",3]]],[11,"i8_suffixed","","Creates a new suffixed integer literal with the specified …",8,[[],["literal",3]]],[11,"i16_suffixed","","Creates a new suffixed integer literal with the specified …",8,[[],["literal",3]]],[11,"i32_suffixed","","Creates a new suffixed integer literal with the specified …",8,[[],["literal",3]]],[11,"i64_suffixed","","Creates a new suffixed integer literal with the specified …",8,[[],["literal",3]]],[11,"i128_suffixed","","Creates a new suffixed integer literal with the specified …",8,[[],["literal",3]]],[11,"isize_suffixed","","Creates a new suffixed integer literal with the specified …",8,[[],["literal",3]]],[11,"u8_unsuffixed","","Creates a new unsuffixed integer literal with the …",8,[[],["literal",3]]],[11,"u16_unsuffixed","","Creates a new unsuffixed integer literal with the …",8,[[],["literal",3]]],[11,"u32_unsuffixed","","Creates a new unsuffixed integer literal with the …",8,[[],["literal",3]]],[11,"u64_unsuffixed","","Creates a new unsuffixed integer literal with the …",8,[[],["literal",3]]],[11,"u128_unsuffixed","","Creates a new unsuffixed integer literal with the …",8,[[],["literal",3]]],[11,"usize_unsuffixed","","Creates a new unsuffixed integer literal with the …",8,[[],["literal",3]]],[11,"i8_unsuffixed","","Creates a new unsuffixed integer literal with the …",8,[[],["literal",3]]],[11,"i16_unsuffixed","","Creates a new unsuffixed integer literal with the …",8,[[],["literal",3]]],[11,"i32_unsuffixed","","Creates a new unsuffixed integer literal with the …",8,[[],["literal",3]]],[11,"i64_unsuffixed","","Creates a new unsuffixed integer literal with the …",8,[[],["literal",3]]],[11,"i128_unsuffixed","","Creates a new unsuffixed integer literal with the …",8,[[],["literal",3]]],[11,"isize_unsuffixed","","Creates a new unsuffixed integer literal with the …",8,[[],["literal",3]]],[11,"f64_unsuffixed","","Creates a new unsuffixed floating-point literal.",8,[[],["literal",3]]],[11,"f64_suffixed","","Creates a new suffixed floating-point literal.",8,[[],["literal",3]]],[11,"f32_unsuffixed","","Creates a new unsuffixed floating-point literal.",8,[[],["literal",3]]],[11,"f32_suffixed","","Creates a new suffixed floating-point literal.",8,[[],["literal",3]]],[11,"string","","String literal.",8,[[],["literal",3]]],[11,"character","","Character literal.",8,[[],["literal",3]]],[11,"byte_string","","Byte string literal.",8,[[],["literal",3]]],[11,"span","","Returns the span encompassing this literal.",8,[[],["span",3]]],[11,"set_span","","Configures the span associated for this literal.",8,[[["span",3]]]],[11,"subspan","","Returns a <code>Span</code> that is a subset of <code>self.span()</code> containing …",8,[[["rangebounds",8]],[["option",4],["span",3]]]],[11,"from","proc_macro2::token_stream","",9,[[]]],[11,"into","","",9,[[]]],[11,"into_iter","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","proc_macro2","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"to_string","","",6,[[],["string",3]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"to_string","","",7,[[],["string",3]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"to_string","","",8,[[],["string",3]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",1,[[["span",3]],["span",3]]],[11,"from","","",0,[[["tokenstream",3]],["tokenstream",3]]],[11,"from","","",0,[[["tokentree",4]]]],[11,"from","","",2,[[["group",3]],["tokentree",4]]],[11,"from","","",2,[[["ident",3]],["tokentree",4]]],[11,"from","","",2,[[["punct",3]],["tokentree",4]]],[11,"from","","",2,[[["literal",3]],["tokentree",4]]],[11,"extend","","",0,[[["intoiterator",8]]]],[11,"extend","","",0,[[["intoiterator",8]]]],[11,"into_iter","","",0,[[],["intoiter",3]]],[11,"next","proc_macro2::token_stream","",9,[[],[["option",4],["tokentree",4]]]],[11,"clone","proc_macro2","",0,[[],["tokenstream",3]]],[11,"clone","","",1,[[],["span",3]]],[11,"clone","","",2,[[],["tokentree",4]]],[11,"clone","","",4,[[],["group",3]]],[11,"clone","","",3,[[],["delimiter",4]]],[11,"clone","","",6,[[],["punct",3]]],[11,"clone","","",5,[[],["spacing",4]]],[11,"clone","","",7,[[],["ident",3]]],[11,"clone","","",8,[[],["literal",3]]],[11,"clone","proc_macro2::token_stream","",9,[[],["intoiter",3]]],[11,"default","proc_macro2","",0,[[]]],[11,"cmp","","",7,[[["ident",3]],["ordering",4]]],[11,"eq","","",3,[[["delimiter",4]]]],[11,"eq","","",5,[[["spacing",4]]]],[11,"eq","","",7,[[["ident",3]]]],[11,"eq","","",7,[[]]],[11,"partial_cmp","","",7,[[["ident",3]],[["option",4],["ordering",4]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","proc_macro2::token_stream","",9,[[["formatter",3]],["result",6]]],[11,"fmt","proc_macro2","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"hash","","",7,[[]]],[11,"from_str","","",0,[[],[["result",4],["tokenstream",3],["lexerror",3]]]],[11,"from_iter","","",0,[[["intoiterator",8]]]],[11,"from_iter","","",0,[[["intoiterator",8]]]]],"p":[[3,"TokenStream"],[3,"Span"],[4,"TokenTree"],[4,"Delimiter"],[3,"Group"],[4,"Spacing"],[3,"Punct"],[3,"Ident"],[3,"Literal"],[3,"IntoIter"],[3,"LexError"]]},\
"proc_macro_hack":{"doc":"github crates-io docs-rs","i":[[23,"proc_macro_hack","proc_macro_hack","",null,null]],"p":[]},\
"proc_macro_nested":{"doc":"Support for nested invocations of proc-macro-hack …","i":[],"p":[]},\
"quote":{"doc":"github crates-io docs-rs","i":[[8,"TokenStreamExt","quote","TokenStream extension trait with methods for appending …",null,null],[10,"append","","For use by <code>ToTokens</code> implementations.",0,[[]]],[10,"append_all","","For use by <code>ToTokens</code> implementations.",0,[[]]],[10,"append_separated","","For use by <code>ToTokens</code> implementations.",0,[[]]],[10,"append_terminated","","For use by <code>ToTokens</code> implementations.",0,[[]]],[8,"IdentFragment","","Specialized formatting trait used by <code>format_ident!</code>.",null,null],[10,"fmt","","Format this value as an identifier fragment.",1,[[["formatter",3]],["result",6]]],[11,"span","","Span associated with this <code>IdentFragment</code>.",1,[[],[["span",3],["option",4]]]],[8,"ToTokens","","Types that can be interpolated inside a <code>quote!</code> invocation.",null,null],[10,"to_tokens","","Write <code>self</code> to the given <code>TokenStream</code>.",2,[[["tokenstream",3]]]],[11,"to_token_stream","","Convert <code>self</code> directly into a <code>TokenStream</code> object.",2,[[],["tokenstream",3]]],[11,"into_token_stream","","Convert <code>self</code> directly into a <code>TokenStream</code> object.",2,[[],["tokenstream",3]]],[14,"format_ident","","Formatting macro for constructing <code>Ident</code>s.",null,null],[14,"quote","","The whole point.",null,null],[14,"quote_spanned","","Same as <code>quote!</code>, but applies a given span to all tokens …",null,null],[11,"span","","Span associated with this <code>IdentFragment</code>.",1,[[],[["span",3],["option",4]]]],[11,"to_token_stream","","Convert <code>self</code> directly into a <code>TokenStream</code> object.",2,[[],["tokenstream",3]]],[11,"into_token_stream","","Convert <code>self</code> directly into a <code>TokenStream</code> object.",2,[[],["tokenstream",3]]]],"p":[[8,"TokenStreamExt"],[8,"IdentFragment"],[8,"ToTokens"]]},\
"rs9p":{"doc":"Filesystems library using 9P2000.L protocol, an extended …","i":[[0,"error","rs9p","9P error representations.",null,null],[0,"errno","rs9p::error","The system errno definitions.",null,null],[0,"string","","9P error strings imported from Linux.",null,null],[17,"EPERM","rs9p::error::string","",null,null],[17,"EPERM_WSTAT","","",null,null],[17,"ENOENT","","",null,null],[17,"ENOENT_DIR","","",null,null],[17,"ENOENT_FILE","","",null,null],[17,"EINTR","","",null,null],[17,"EIO","","",null,null],[17,"ENXIO","","",null,null],[17,"E2BIG","","",null,null],[17,"EBADF","","",null,null],[17,"EAGAIN","","",null,null],[17,"ENOMEM","","",null,null],[17,"EACCES","","",null,null],[17,"EFAULT","","",null,null],[17,"ENOTBLK","","",null,null],[17,"EBUSY","","",null,null],[17,"EEXIST","","",null,null],[17,"EXDEV","","",null,null],[17,"ENODEV","","",null,null],[17,"ENOTDIR","","",null,null],[17,"EISDIR","","",null,null],[17,"EINVAL","","",null,null],[17,"ENFILE","","",null,null],[17,"EMFILE","","",null,null],[17,"ETXTBSY","","",null,null],[17,"EFBIG","","",null,null],[17,"ENOSPC","","",null,null],[17,"ESPIPE","","",null,null],[17,"EROFS","","",null,null],[17,"EMLINK","","",null,null],[17,"EPIPE","","",null,null],[17,"EDOM","","",null,null],[17,"ERANGE","","",null,null],[17,"EDEADLK","","",null,null],[17,"ENAMETOOLONG","","",null,null],[17,"ENOLCK","","",null,null],[17,"ENOSYS","","",null,null],[17,"ENOTEMPTY","","",null,null],[17,"ELOOP","","",null,null],[17,"ENOMSG","","",null,null],[17,"EIDRM","","",null,null],[17,"ENODATA","","",null,null],[17,"ENONET","","",null,null],[17,"ENOPKG","","",null,null],[17,"EREMOTE","","",null,null],[17,"ENOLINK","","",null,null],[17,"ECOMM","","",null,null],[17,"EPROTO","","",null,null],[17,"EBADMSG","","",null,null],[17,"EBADFD","","",null,null],[17,"ESTRPIPE","","",null,null],[17,"EUSERS","","",null,null],[17,"ENOTSOCK","","",null,null],[17,"EMSGSIZE","","",null,null],[17,"ENOPROTOOPT","","",null,null],[17,"EPROTONOSUPPORT","","",null,null],[17,"ESOCKTNOSUPPORT","","",null,null],[17,"EOPNOTSUPP","","",null,null],[17,"EPFNOSUPPORT","","",null,null],[17,"ENETDOWN","","",null,null],[17,"ENETUNREACH","","",null,null],[17,"ENETRESET","","",null,null],[17,"ECONNABORTED","","",null,null],[17,"ECONNRESET","","",null,null],[17,"ENOBUFS","","",null,null],[17,"EISCONN","","",null,null],[17,"ENOTCONN","","",null,null],[17,"ESHUTDOWN","","",null,null],[17,"ETIMEDOUT","","",null,null],[17,"ECONNREFUSED","","",null,null],[17,"EHOSTDOWN","","",null,null],[17,"EHOSTUNREACH","","",null,null],[17,"EALREADY","","",null,null],[17,"EINPROGRESS","","",null,null],[17,"EISNAM","","",null,null],[17,"EREMOTEIO","","",null,null],[17,"EDQUOT","","",null,null],[17,"EBADF2","","",null,null],[17,"EACCES2","","",null,null],[17,"ENOENT_FILE2","","",null,null],[17,"ECONNREFUSED2","","",null,null],[17,"ESPIPE2","","",null,null],[17,"EBADF3","","",null,null],[17,"EPERM_CONV","","",null,null],[17,"ENOTEMPTY2","","",null,null],[17,"EEXIST2","","",null,null],[17,"EEXIST3","","",null,null],[17,"EEXIST4","","",null,null],[17,"EBADF4","","",null,null],[17,"ETXTBSY2","","",null,null],[17,"EIO2","","",null,null],[17,"ETXTBSY3","","",null,null],[17,"EINVAL2","","",null,null],[17,"ENAMETOOLONG2","","",null,null],[17,"ENOTDIR2","","",null,null],[17,"EPERM_GRP","","",null,null],[17,"EACCES3","","",null,null],[17,"EACCES4","","",null,null],[17,"EROFS2","","",null,null],[17,"EPERM_SPFILE","","",null,null],[17,"EIO3","","",null,null],[17,"EINVAL3","","",null,null],[17,"EINVAL4","","",null,null],[17,"EPROTO2","","",null,null],[17,"EAGAIN2","","",null,null],[17,"EIO4","","",null,null],[17,"EIO5","","",null,null],[17,"EIO6","","",null,null],[17,"EIO7","","",null,null],[17,"EINVAL5","","",null,null],[17,"ENOENT_PATH","","",null,null],[17,"EIO8","","",null,null],[17,"EIO9","","",null,null],[17,"EPROTO3","","",null,null],[17,"ENOSPC2","","",null,null],[17,"EAGAIN3","","",null,null],[17,"ENOENT_ALLOC","","",null,null],[17,"EROFS3","","",null,null],[17,"EIDRM2","","",null,null],[17,"EPERM_TRUNCATE","","",null,null],[17,"EPERM_RMROOT","","",null,null],[17,"EFBIG2","","",null,null],[17,"EIO10","","",null,null],[4,"Error","rs9p::error","9P error type which is convertible to an errno.",null,null],[13,"No","","System error containing an errno.",0,null],[13,"Io","","I/O error.",0,null],[11,"errno","","Get an errno representations.",0,[[],["errno",4]]],[0,"fcall","rs9p","9P protocol data types and constants.",null,null],[0,"p92000","rs9p::fcall","Old 9P2000 protocol types",null,null],[0,"om","rs9p::fcall::p92000","The type of I/O",null,null],[17,"READ","rs9p::fcall::p92000::om","Open for read",null,null],[17,"WRITE","","Write",null,null],[17,"RDWR","","Read and write",null,null],[17,"EXEC","","Execute, == read but check execute permission",null,null],[17,"TRUNC","","Or\'ed in (except for exec), truncate file first",null,null],[17,"CEXEC","","Or\'ed in, close on exec",null,null],[17,"RCLOSE","","Or\'ed in, remove on close",null,null],[0,"dm","rs9p::fcall::p92000","Bits in Stat.mode",null,null],[17,"DIR","rs9p::fcall::p92000::dm","Mode bit for directories",null,null],[17,"APPEND","","Mode bit for append only files",null,null],[17,"EXCL","","Mode bit for exclusive use files",null,null],[17,"MOUNT","","Mode bit for mounted channel",null,null],[17,"AUTH","","Mode bit for authentication file",null,null],[17,"TMP","","Mode bit for non-backed-up files",null,null],[17,"READ","","Mode bit for read permission",null,null],[17,"WRITE","","Mode bit for write permission",null,null],[17,"EXEC","","Mode bit for execute permission",null,null],[3,"Stat","rs9p::fcall::p92000","Plan 9 Namespace metadata (somewhat like a unix fstat)",null,null],[12,"typ","","Server type",1,null],[12,"dev","","Server subtype",1,null],[12,"qid","","Unique id from server",1,null],[12,"mode","","Permissions",1,null],[12,"atime","","Last read time",1,null],[12,"mtime","","Last write time",1,null],[12,"length","","File length",1,null],[12,"name","","Last element of path",1,null],[12,"uid","","Owner name",1,null],[12,"gid","","Group name",1,null],[12,"muid","","Last modifier name",1,null],[11,"size","","Get the current size of the stat",1,[[]]],[17,"P92000","rs9p::fcall","9P2000 version string",null,null],[17,"P92000L","","9P2000.L version string",null,null],[17,"NOTAG","","Special tag which <code>Tversion</code>/<code>Rversion</code> must use as <code>tag</code>",null,null],[17,"NOFID","","Special value which <code>Tattach</code> with no auth must use as <code>afid</code>",null,null],[17,"NONUNAME","","Special uid which <code>Tauth</code>/<code>Tattach</code> use as <code>n_uname</code> to …",null,null],[17,"IOHDRSZ","","Ample room for <code>Twrite</code>/<code>Rread</code> header",null,null],[17,"READDIRHDRSZ","","Room for readdir header",null,null],[17,"V9FS_PORT","","v9fs default port",null,null],[3,"LockType","","File lock type, Flock.typ",null,null],[18,"RDLOCK","","",2,null],[18,"WRLOCK","","",2,null],[18,"UNLOCK","","",2,null],[11,"empty","","Returns an empty set of flags",2,[[],["locktype",3]]],[11,"all","","Returns the set containing all flags.",2,[[],["locktype",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",2,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",2,[[],[["locktype",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",2,[[],["locktype",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",2,[[],["locktype",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",2,[[]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",2,[[]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",2,[[["locktype",3]]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",2,[[["locktype",3]]]],[11,"insert","","Inserts the specified flags in-place.",2,[[["locktype",3]]]],[11,"remove","","Removes the specified flags in-place.",2,[[["locktype",3]]]],[11,"toggle","","Toggles the specified flags in-place.",2,[[["locktype",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",2,[[["locktype",3]]]],[3,"LockFlag","","File lock flags, Flock.flags",null,null],[18,"BLOCK","","Blocking request",3,null],[18,"RECLAIM","","Reserved for future use",3,null],[11,"empty","","Returns an empty set of flags",3,[[],["lockflag",3]]],[11,"all","","Returns the set containing all flags.",3,[[],["lockflag",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",3,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",3,[[],[["lockflag",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",3,[[],["lockflag",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",3,[[],["lockflag",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",3,[[]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",3,[[]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",3,[[["lockflag",3]]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",3,[[["lockflag",3]]]],[11,"insert","","Inserts the specified flags in-place.",3,[[["lockflag",3]]]],[11,"remove","","Removes the specified flags in-place.",3,[[["lockflag",3]]]],[11,"toggle","","Toggles the specified flags in-place.",3,[[["lockflag",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",3,[[["lockflag",3]]]],[3,"LockStatus","","File lock status",null,null],[18,"SUCCESS","","",4,null],[18,"BLOCKED","","",4,null],[18,"ERROR","","",4,null],[18,"GRACE","","",4,null],[11,"empty","","Returns an empty set of flags",4,[[],["lockstatus",3]]],[11,"all","","Returns the set containing all flags.",4,[[],["lockstatus",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",4,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",4,[[],[["lockstatus",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",4,[[],["lockstatus",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",4,[[],["lockstatus",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",4,[[]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",4,[[]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",4,[[["lockstatus",3]]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",4,[[["lockstatus",3]]]],[11,"insert","","Inserts the specified flags in-place.",4,[[["lockstatus",3]]]],[11,"remove","","Removes the specified flags in-place.",4,[[["lockstatus",3]]]],[11,"toggle","","Toggles the specified flags in-place.",4,[[["lockstatus",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",4,[[["lockstatus",3]]]],[3,"QidType","","Bits in Qid.typ",null,null],[18,"DIR","","Type bit for directories",5,null],[18,"APPEND","","Type bit for append only files",5,null],[18,"EXCL","","Type bit for exclusive use files",5,null],[18,"MOUNT","","Type bit for mounted channel",5,null],[18,"AUTH","","Type bit for authentication file",5,null],[18,"TMP","","Type bit for not-backed-up file",5,null],[18,"SYMLINK","","Type bits for symbolic links (9P2000.u)",5,null],[18,"LINK","","Type bits for hard-link (9P2000.u)",5,null],[18,"FILE","","Plain file",5,null],[11,"empty","","Returns an empty set of flags",5,[[],["qidtype",3]]],[11,"all","","Returns the set containing all flags.",5,[[],["qidtype",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",5,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",5,[[],[["option",4],["qidtype",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",5,[[],["qidtype",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",5,[[],["qidtype",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",5,[[]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",5,[[]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",5,[[["qidtype",3]]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",5,[[["qidtype",3]]]],[11,"insert","","Inserts the specified flags in-place.",5,[[["qidtype",3]]]],[11,"remove","","Removes the specified flags in-place.",5,[[["qidtype",3]]]],[11,"toggle","","Toggles the specified flags in-place.",5,[[["qidtype",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",5,[[["qidtype",3]]]],[3,"GetattrMask","","Bits in <code>mask</code> and <code>valid</code> of <code>Tgetattr</code> and <code>Rgetattr</code>.",null,null],[18,"MODE","","",6,null],[18,"NLINK","","",6,null],[18,"UID","","",6,null],[18,"GID","","",6,null],[18,"RDEV","","",6,null],[18,"ATIME","","",6,null],[18,"MTIME","","",6,null],[18,"CTIME","","",6,null],[18,"INO","","",6,null],[18,"SIZE","","",6,null],[18,"BLOCKS","","",6,null],[18,"BTIME","","",6,null],[18,"GEN","","",6,null],[18,"DATA_VERSION","","",6,null],[18,"BASIC","","Mask for fields up to BLOCKS",6,null],[18,"ALL","","Mask for All fields above",6,null],[11,"empty","","Returns an empty set of flags",6,[[],["getattrmask",3]]],[11,"all","","Returns the set containing all flags.",6,[[],["getattrmask",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",6,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",6,[[],[["option",4],["getattrmask",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",6,[[],["getattrmask",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",6,[[],["getattrmask",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",6,[[]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",6,[[]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",6,[[["getattrmask",3]]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",6,[[["getattrmask",3]]]],[11,"insert","","Inserts the specified flags in-place.",6,[[["getattrmask",3]]]],[11,"remove","","Removes the specified flags in-place.",6,[[["getattrmask",3]]]],[11,"toggle","","Toggles the specified flags in-place.",6,[[["getattrmask",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",6,[[["getattrmask",3]]]],[3,"SetattrMask","","Bits in <code>mask</code> of <code>Tsetattr</code>.",null,null],[18,"MODE","","",7,null],[18,"UID","","",7,null],[18,"GID","","",7,null],[18,"SIZE","","",7,null],[18,"ATIME","","",7,null],[18,"MTIME","","",7,null],[18,"CTIME","","",7,null],[18,"ATIME_SET","","",7,null],[18,"MTIME_SET","","",7,null],[11,"empty","","Returns an empty set of flags",7,[[],["setattrmask",3]]],[11,"all","","Returns the set containing all flags.",7,[[],["setattrmask",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",7,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",7,[[],[["setattrmask",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",7,[[],["setattrmask",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",7,[[],["setattrmask",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",7,[[]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",7,[[]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",7,[[["setattrmask",3]]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",7,[[["setattrmask",3]]]],[11,"insert","","Inserts the specified flags in-place.",7,[[["setattrmask",3]]]],[11,"remove","","Removes the specified flags in-place.",7,[[["setattrmask",3]]]],[11,"toggle","","Toggles the specified flags in-place.",7,[[["setattrmask",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",7,[[["setattrmask",3]]]],[3,"Qid","","Server side data type for path tracking",null,null],[12,"typ","","Specify whether the file is a directory, append-only …",8,null],[12,"version","","Version number for a file; typically, it is incremented …",8,null],[12,"path","","An integer which is unique among all files in the …",8,null],[3,"Statfs","","Filesystem information corresponding to <code>struct statfs</code> of …",null,null],[12,"typ","","Type of file system",9,null],[12,"bsize","","Optimal transfer block size",9,null],[12,"blocks","","Total data blocks in file system",9,null],[12,"bfree","","Free blocks in fs",9,null],[12,"bavail","","Free blocks avail to non-superuser",9,null],[12,"files","","Total file nodes in file system",9,null],[12,"ffree","","Free file nodes in fs",9,null],[12,"fsid","","Filesystem ID",9,null],[12,"namelen","","Maximum length of filenames",9,null],[3,"Time","","Time struct",null,null],[12,"sec","","",10,null],[12,"nsec","","",10,null],[3,"Stat","","File attributes corresponding to <code>struct stat</code> of Linux.",null,null],[12,"mode","","Protection",11,null],[12,"uid","","User ID of owner",11,null],[12,"gid","","Group ID of owner",11,null],[12,"nlink","","Number of hard links",11,null],[12,"rdev","","Device ID (if special file)",11,null],[12,"size","","Total size, in bytes",11,null],[12,"blksize","","Blocksize for file system I/O",11,null],[12,"blocks","","Number of 512B blocks allocated",11,null],[12,"atime","","Time of last access",11,null],[12,"mtime","","Time of last modification",11,null],[12,"ctime","","Time of last status change",11,null],[3,"SetAttr","","Subset of <code>Stat</code> used for <code>Tsetattr</code>",null,null],[12,"mode","","",12,null],[12,"uid","","",12,null],[12,"gid","","",12,null],[12,"size","","",12,null],[12,"atime","","",12,null],[12,"mtime","","",12,null],[3,"DirEntry","","Directory entry used in <code>Rreaddir</code>",null,null],[12,"qid","","Qid for this directory",13,null],[12,"offset","","The index of this entry",13,null],[12,"typ","","Corresponds to <code>d_type</code> of <code>struct dirent</code>",13,null],[12,"name","","Directory name",13,null],[11,"size","","",13,[[]]],[3,"DirEntryData","","Directory entry array",null,null],[12,"data","","",14,null],[11,"new","","",14,[[],["direntrydata",3]]],[11,"with","","",14,[[["vec",3],["direntry",3]],["direntrydata",3]]],[11,"data","","",14,[[]]],[11,"size","","",14,[[]]],[11,"push","","",14,[[["direntry",3]]]],[3,"Data","","Data type used in <code>Rread</code> and <code>Twrite</code>",null,null],[12,"0","","",15,null],[3,"Flock","","Similar to Linux <code>struct flock</code>",null,null],[12,"typ","","",16,null],[12,"flags","","",16,null],[12,"start","","",16,null],[12,"length","","",16,null],[12,"proc_id","","",16,null],[12,"client_id","","",16,null],[3,"Getlock","","Getlock structure",null,null],[12,"typ","","",17,null],[12,"start","","",17,null],[12,"length","","",17,null],[12,"proc_id","","",17,null],[12,"client_id","","",17,null],[4,"MsgType","","Message type, 9P operations",null,null],[13,"Tlerror","","",18,null],[13,"Rlerror","","",18,null],[13,"Tstatfs","","",18,null],[13,"Rstatfs","","",18,null],[13,"Tlopen","","",18,null],[13,"Rlopen","","",18,null],[13,"Tlcreate","","",18,null],[13,"Rlcreate","","",18,null],[13,"Tsymlink","","",18,null],[13,"Rsymlink","","",18,null],[13,"Tmknod","","",18,null],[13,"Rmknod","","",18,null],[13,"Trename","","",18,null],[13,"Rrename","","",18,null],[13,"Treadlink","","",18,null],[13,"Rreadlink","","",18,null],[13,"Tgetattr","","",18,null],[13,"Rgetattr","","",18,null],[13,"Tsetattr","","",18,null],[13,"Rsetattr","","",18,null],[13,"Txattrwalk","","",18,null],[13,"Rxattrwalk","","",18,null],[13,"Txattrcreate","","",18,null],[13,"Rxattrcreate","","",18,null],[13,"Treaddir","","",18,null],[13,"Rreaddir","","",18,null],[13,"Tfsync","","",18,null],[13,"Rfsync","","",18,null],[13,"Tlock","","",18,null],[13,"Rlock","","",18,null],[13,"Tgetlock","","",18,null],[13,"Rgetlock","","",18,null],[13,"Tlink","","",18,null],[13,"Rlink","","",18,null],[13,"Tmkdir","","",18,null],[13,"Rmkdir","","",18,null],[13,"Trenameat","","",18,null],[13,"Rrenameat","","",18,null],[13,"Tunlinkat","","",18,null],[13,"Runlinkat","","",18,null],[13,"Tversion","","",18,null],[13,"Rversion","","",18,null],[13,"Tauth","","",18,null],[13,"Rauth","","",18,null],[13,"Tattach","","",18,null],[13,"Rattach","","",18,null],[13,"Tflush","","",18,null],[13,"Rflush","","",18,null],[13,"Twalk","","",18,null],[13,"Rwalk","","",18,null],[13,"Tread","","",18,null],[13,"Rread","","",18,null],[13,"Twrite","","",18,null],[13,"Rwrite","","",18,null],[13,"Tclunk","","",18,null],[13,"Rclunk","","",18,null],[13,"Tremove","","",18,null],[13,"Rremove","","",18,null],[11,"is_t","","If the message type is T-message",18,[[]]],[11,"is_r","","If the message type is R-message",18,[[]]],[4,"Fcall","","A data type encapsulating the various 9P messages",null,null],[13,"Rlerror","","",19,null],[12,"ecode","rs9p::fcall::Fcall","",20,null],[13,"Tstatfs","rs9p::fcall","",19,null],[12,"fid","rs9p::fcall::Fcall","",21,null],[13,"Rstatfs","rs9p::fcall","",19,null],[12,"statfs","rs9p::fcall::Fcall","",22,null],[13,"Tlopen","rs9p::fcall","",19,null],[12,"fid","rs9p::fcall::Fcall","",23,null],[12,"flags","","",23,null],[13,"Rlopen","rs9p::fcall","",19,null],[12,"qid","rs9p::fcall::Fcall","",24,null],[12,"iounit","","",24,null],[13,"Tlcreate","rs9p::fcall","",19,null],[12,"fid","rs9p::fcall::Fcall","",25,null],[12,"name","","",25,null],[12,"flags","","",25,null],[12,"mode","","",25,null],[12,"gid","","",25,null],[13,"Rlcreate","rs9p::fcall","",19,null],[12,"qid","rs9p::fcall::Fcall","",26,null],[12,"iounit","","",26,null],[13,"Tsymlink","rs9p::fcall","",19,null],[12,"fid","rs9p::fcall::Fcall","",27,null],[12,"name","","",27,null],[12,"symtgt","","",27,null],[12,"gid","","",27,null],[13,"Rsymlink","rs9p::fcall","",19,null],[12,"qid","rs9p::fcall::Fcall","",28,null],[13,"Tmknod","rs9p::fcall","",19,null],[12,"dfid","rs9p::fcall::Fcall","",29,null],[12,"name","","",29,null],[12,"mode","","",29,null],[12,"major","","",29,null],[12,"minor","","",29,null],[12,"gid","","",29,null],[13,"Rmknod","rs9p::fcall","",19,null],[12,"qid","rs9p::fcall::Fcall","",30,null],[13,"Trename","rs9p::fcall","",19,null],[12,"fid","rs9p::fcall::Fcall","",31,null],[12,"dfid","","",31,null],[12,"name","","",31,null],[13,"Rrename","rs9p::fcall","",19,null],[13,"Treadlink","","",19,null],[12,"fid","rs9p::fcall::Fcall","",32,null],[13,"Rreadlink","rs9p::fcall","",19,null],[12,"target","rs9p::fcall::Fcall","",33,null],[13,"Tgetattr","rs9p::fcall","",19,null],[12,"fid","rs9p::fcall::Fcall","",34,null],[12,"req_mask","","",34,null],[13,"Rgetattr","rs9p::fcall","Reserved members specified in the protocol are handled in …",19,null],[12,"valid","rs9p::fcall::Fcall","",35,null],[12,"qid","","",35,null],[12,"stat","","",35,null],[13,"Tsetattr","rs9p::fcall","",19,null],[12,"fid","rs9p::fcall::Fcall","",36,null],[12,"valid","","",36,null],[12,"stat","","",36,null],[13,"Rsetattr","rs9p::fcall","",19,null],[13,"Txattrwalk","","",19,null],[12,"fid","rs9p::fcall::Fcall","",37,null],[12,"newfid","","",37,null],[12,"name","","",37,null],[13,"Rxattrwalk","rs9p::fcall","",19,null],[12,"size","rs9p::fcall::Fcall","",38,null],[13,"Txattrcreate","rs9p::fcall","",19,null],[12,"fid","rs9p::fcall::Fcall","",39,null],[12,"name","","",39,null],[12,"attr_size","","",39,null],[12,"flags","","",39,null],[13,"Rxattrcreate","rs9p::fcall","",19,null],[13,"Treaddir","","",19,null],[12,"fid","rs9p::fcall::Fcall","",40,null],[12,"offset","","",40,null],[12,"count","","",40,null],[13,"Rreaddir","rs9p::fcall","",19,null],[12,"data","rs9p::fcall::Fcall","",41,null],[13,"Tfsync","rs9p::fcall","",19,null],[12,"fid","rs9p::fcall::Fcall","",42,null],[13,"Rfsync","rs9p::fcall","",19,null],[13,"Tlock","","",19,null],[12,"fid","rs9p::fcall::Fcall","",43,null],[12,"flock","","",43,null],[13,"Rlock","rs9p::fcall","",19,null],[12,"status","rs9p::fcall::Fcall","",44,null],[13,"Tgetlock","rs9p::fcall","",19,null],[12,"fid","rs9p::fcall::Fcall","",45,null],[12,"flock","","",45,null],[13,"Rgetlock","rs9p::fcall","",19,null],[12,"flock","rs9p::fcall::Fcall","",46,null],[13,"Tlink","rs9p::fcall","",19,null],[12,"dfid","rs9p::fcall::Fcall","",47,null],[12,"fid","","",47,null],[12,"name","","",47,null],[13,"Rlink","rs9p::fcall","",19,null],[13,"Tmkdir","","",19,null],[12,"dfid","rs9p::fcall::Fcall","",48,null],[12,"name","","",48,null],[12,"mode","","",48,null],[12,"gid","","",48,null],[13,"Rmkdir","rs9p::fcall","",19,null],[12,"qid","rs9p::fcall::Fcall","",49,null],[13,"Trenameat","rs9p::fcall","",19,null],[12,"olddirfid","rs9p::fcall::Fcall","",50,null],[12,"oldname","","",50,null],[12,"newdirfid","","",50,null],[12,"newname","","",50,null],[13,"Rrenameat","rs9p::fcall","",19,null],[13,"Tunlinkat","","",19,null],[12,"dirfd","rs9p::fcall::Fcall","",51,null],[12,"name","","",51,null],[12,"flags","","",51,null],[13,"Runlinkat","rs9p::fcall","",19,null],[13,"Tauth","","",19,null],[12,"afid","rs9p::fcall::Fcall","",52,null],[12,"uname","","",52,null],[12,"aname","","",52,null],[12,"n_uname","","",52,null],[13,"Rauth","rs9p::fcall","",19,null],[12,"aqid","rs9p::fcall::Fcall","",53,null],[13,"Tattach","rs9p::fcall","",19,null],[12,"fid","rs9p::fcall::Fcall","",54,null],[12,"afid","","",54,null],[12,"uname","","",54,null],[12,"aname","","",54,null],[12,"n_uname","","",54,null],[13,"Rattach","rs9p::fcall","",19,null],[12,"qid","rs9p::fcall::Fcall","",55,null],[13,"Tversion","rs9p::fcall","",19,null],[12,"msize","rs9p::fcall::Fcall","",56,null],[12,"version","","",56,null],[13,"Rversion","rs9p::fcall","",19,null],[12,"msize","rs9p::fcall::Fcall","",57,null],[12,"version","","",57,null],[13,"Tflush","rs9p::fcall","",19,null],[12,"oldtag","rs9p::fcall::Fcall","",58,null],[13,"Rflush","rs9p::fcall","",19,null],[13,"Twalk","","",19,null],[12,"fid","rs9p::fcall::Fcall","",59,null],[12,"newfid","","",59,null],[12,"wnames","","",59,null],[13,"Rwalk","rs9p::fcall","",19,null],[12,"wqids","rs9p::fcall::Fcall","",60,null],[13,"Tread","rs9p::fcall","",19,null],[12,"fid","rs9p::fcall::Fcall","",61,null],[12,"offset","","",61,null],[12,"count","","",61,null],[13,"Rread","rs9p::fcall","",19,null],[12,"data","rs9p::fcall::Fcall","",62,null],[13,"Twrite","rs9p::fcall","",19,null],[12,"fid","rs9p::fcall::Fcall","",63,null],[12,"offset","","",63,null],[12,"data","","",63,null],[13,"Rwrite","rs9p::fcall","",19,null],[12,"count","rs9p::fcall::Fcall","",64,null],[13,"Tclunk","rs9p::fcall","",19,null],[12,"fid","rs9p::fcall::Fcall","",65,null],[13,"Rclunk","rs9p::fcall","",19,null],[13,"Tremove","","",19,null],[12,"fid","rs9p::fcall::Fcall","",66,null],[13,"Rremove","rs9p::fcall","",19,null],[11,"fids","","Get the fids which self contains",19,[[],["vec",3]]],[11,"newfid","","Get the newfid which self contains",19,[[],["option",4]]],[11,"qids","","Get the qids which self contains",19,[[],[["vec",3],["qid",3]]]],[3,"Msg","","Envelope for 9P messages",null,null],[12,"tag","","Chosen and used by the client to identify the message. …",67,null],[12,"body","","Message body encapsulating the various 9P messages",67,null],[0,"serialize","rs9p","Serialize/deserialize 9P messages into/from binary.",null,null],[3,"SResult","rs9p::serialize","A serializing specific result to overload operators on …",null,null],[3,"Encoder","","A wrapper class of WriteBytesExt to provide operator …",null,null],[11,"new","","",68,[[],["encoder",3]]],[11,"bytes_written","","Return total bytes written",68,[[]]],[11,"encode","","Encode data, equivalent to: decoder << data",68,[[],["result",6]]],[11,"into_inner","","Get inner writer",68,[[]]],[3,"Decoder","","A wrapper class of ReadBytesExt to provide operator …",null,null],[11,"new","","",69,[[],["decoder",3]]],[11,"decode","","",69,[[],[["result",6],["decodable",8]]]],[11,"into_inner","","Get inner reader",69,[[]]],[8,"Encodable","","Trait representing a type which can be serialized into …",null,null],[10,"encode","","Encode self to w and returns the number of bytes encoded",70,[[],["result",6]]],[8,"Decodable","","Trait representing a type which can be deserialized from …",null,null],[10,"decode","","",71,[[],["result",6]]],[5,"read_msg","","Helper function to read a 9P message from a byte-oriented …",null,[[],[["result",6],["msg",3]]]],[5,"write_msg","","Helper function to write a 9P message into a …",null,[[["msg",3]],["result",6]]],[0,"srv","rs9p","Asynchronous server side 9P library.",null,null],[3,"Fid","rs9p::srv","Represents a fid of clients holding associated …",null,null],[12,"aux","","<code>Filesystem::Fid</code> associated with this fid. Changing this …",72,null],[11,"fid","","Get the raw fid.",72,[[]]],[8,"Filesystem","","Filesystem server trait.",null,null],[16,"Fid","","User defined fid type to be associated with a client\'s …",73,null],[11,"rstatfs","","",73,[[["fid",3]],[["box",3],["pin",3]]]],[11,"rlopen","","",73,[[["fid",3]],[["box",3],["pin",3]]]],[11,"rlcreate","","",73,[[["fid",3]],[["box",3],["pin",3]]]],[11,"rsymlink","","",73,[[["fid",3]],[["box",3],["pin",3]]]],[11,"rmknod","","",73,[[["fid",3]],[["box",3],["pin",3]]]],[11,"rrename","","",73,[[["fid",3],["fid",3]],[["box",3],["pin",3]]]],[11,"rreadlink","","",73,[[["fid",3]],[["box",3],["pin",3]]]],[11,"rgetattr","","",73,[[["fid",3],["getattrmask",3]],[["box",3],["pin",3]]]],[11,"rsetattr","","",73,[[["setattrmask",3],["fid",3],["setattr",3]],[["box",3],["pin",3]]]],[11,"rxattrwalk","","",73,[[["fid",3],["fid",3]],[["box",3],["pin",3]]]],[11,"rxattrcreate","","",73,[[["fid",3]],[["box",3],["pin",3]]]],[11,"rreaddir","","",73,[[["fid",3]],[["box",3],["pin",3]]]],[11,"rfsync","","",73,[[["fid",3]],[["box",3],["pin",3]]]],[11,"rlock","","",73,[[["fid",3],["flock",3]],[["box",3],["pin",3]]]],[11,"rgetlock","","",73,[[["fid",3],["getlock",3]],[["box",3],["pin",3]]]],[11,"rlink","","",73,[[["fid",3],["fid",3]],[["box",3],["pin",3]]]],[11,"rmkdir","","",73,[[["fid",3]],[["box",3],["pin",3]]]],[11,"rrenameat","","",73,[[["fid",3],["fid",3]],[["box",3],["pin",3]]]],[11,"runlinkat","","",73,[[["fid",3]],[["box",3],["pin",3]]]],[11,"rauth","","",73,[[["fid",3]],[["box",3],["pin",3]]]],[11,"rattach","","",73,[[["option",4],["fid",3],["fid",3]],[["box",3],["pin",3]]]],[11,"rflush","","",73,[[["option",4],["fcall",4]],[["box",3],["pin",3]]]],[11,"rwalk","","",73,[[["fid",3],["fid",3]],[["box",3],["pin",3]]]],[11,"rread","","",73,[[["fid",3]],[["box",3],["pin",3]]]],[11,"rwrite","","",73,[[["fid",3],["data",3]],[["box",3],["pin",3]]]],[11,"rclunk","","",73,[[["fid",3]],[["box",3],["pin",3]]]],[11,"rremove","","",73,[[["fid",3]],[["box",3],["pin",3]]]],[11,"rversion","","",73,[[],[["box",3],["pin",3]]]],[5,"srv_async","","",null,[[]]],[6,"Result","rs9p","",null,null],[11,"from","rs9p::error","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","rs9p::fcall::p92000","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","rs9p::fcall","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",67,[[]]],[11,"into","","",67,[[]]],[11,"to_owned","","",67,[[]]],[11,"clone_into","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"from","rs9p::serialize","",74,[[]]],[11,"into","","",74,[[]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"try_into","","",74,[[],["result",4]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"from","","",68,[[]]],[11,"into","","",68,[[]]],[11,"to_owned","","",68,[[]]],[11,"clone_into","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"from","","",69,[[]]],[11,"into","","",69,[[]]],[11,"to_owned","","",69,[[]]],[11,"clone_into","","",69,[[]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"from","rs9p::srv","",72,[[]]],[11,"into","","",72,[[]]],[11,"to_owned","","",72,[[]]],[11,"clone_into","","",72,[[]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"encode","rs9p::fcall","",8,[[],["result",6]]],[11,"encode","","",9,[[],["result",6]]],[11,"encode","","",10,[[],["result",6]]],[11,"encode","","",11,[[],["result",6]]],[11,"encode","","",12,[[],["result",6]]],[11,"encode","","",13,[[],["result",6]]],[11,"encode","","",14,[[],["result",6]]],[11,"encode","","",15,[[],["result",6]]],[11,"encode","","",16,[[],["result",6]]],[11,"encode","","",17,[[],["result",6]]],[11,"encode","","",67,[[],["result",6]]],[11,"decode","","",8,[[],["result",6]]],[11,"decode","","",9,[[],["result",6]]],[11,"decode","","",10,[[],["result",6]]],[11,"decode","","",11,[[],["result",6]]],[11,"decode","","",12,[[],["result",6]]],[11,"decode","","",13,[[],["result",6]]],[11,"decode","","",14,[[],["result",6]]],[11,"decode","","",15,[[],["result",6]]],[11,"decode","","",16,[[],["result",6]]],[11,"decode","","",17,[[],["result",6]]],[11,"decode","","",67,[[],["result",6]]],[11,"from","rs9p::error","",0,[[["error",3]]]],[11,"from","","",0,[[["error",3]]]],[11,"from","","",0,[[["errno",4]]]],[11,"from","","",0,[[["error",4]]]],[11,"from","rs9p::fcall","",5,[[["filetype",3]]]],[11,"from","","",5,[[["filetype",3]]]],[11,"from","","",9,[[["statvfs",3]],["statfs",3]]],[11,"from","","",11,[[["metadata",3]]]],[11,"from","","",11,[[["metadata",3]]]],[11,"from","","",18,[[["fcall",4]],["msgtype",4]]],[11,"extend","","",2,[[["intoiterator",8]]]],[11,"extend","","",3,[[["intoiterator",8]]]],[11,"extend","","",4,[[["intoiterator",8]]]],[11,"extend","","",5,[[["intoiterator",8]]]],[11,"extend","","",6,[[["intoiterator",8]]]],[11,"extend","","",7,[[["intoiterator",8]]]],[11,"clone","rs9p::fcall::p92000","",1,[[],["stat",3]]],[11,"clone","rs9p::fcall","",2,[[],["locktype",3]]],[11,"clone","","",3,[[],["lockflag",3]]],[11,"clone","","",4,[[],["lockstatus",3]]],[11,"clone","","",5,[[],["qidtype",3]]],[11,"clone","","",6,[[],["getattrmask",3]]],[11,"clone","","",7,[[],["setattrmask",3]]],[11,"clone","","",8,[[],["qid",3]]],[11,"clone","","",9,[[],["statfs",3]]],[11,"clone","","",10,[[],["time",3]]],[11,"clone","","",11,[[],["stat",3]]],[11,"clone","","",12,[[],["setattr",3]]],[11,"clone","","",13,[[],["direntry",3]]],[11,"clone","","",14,[[],["direntrydata",3]]],[11,"clone","","",15,[[],["data",3]]],[11,"clone","","",16,[[],["flock",3]]],[11,"clone","","",17,[[],["getlock",3]]],[11,"clone","","",18,[[],["msgtype",4]]],[11,"clone","","",19,[[],["fcall",4]]],[11,"clone","","",67,[[],["msg",3]]],[11,"clone","rs9p::serialize","",68,[[],["encoder",3]]],[11,"clone","","",69,[[],["decoder",3]]],[11,"clone","rs9p::srv","",72,[[],["fid",3]]],[11,"default","rs9p::fcall","",5,[[],["qidtype",3]]],[11,"default","","",8,[[],["qid",3]]],[11,"default","","",13,[[],["direntry",3]]],[11,"cmp","rs9p::fcall::p92000","",1,[[["stat",3]],["ordering",4]]],[11,"cmp","rs9p::fcall","",2,[[["locktype",3]],["ordering",4]]],[11,"cmp","","",3,[[["lockflag",3]],["ordering",4]]],[11,"cmp","","",4,[[["lockstatus",3]],["ordering",4]]],[11,"cmp","","",5,[[["qidtype",3]],["ordering",4]]],[11,"cmp","","",6,[[["getattrmask",3]],["ordering",4]]],[11,"cmp","","",7,[[["setattrmask",3]],["ordering",4]]],[11,"cmp","","",8,[[["qid",3]],["ordering",4]]],[11,"cmp","","",9,[[["statfs",3]],["ordering",4]]],[11,"cmp","","",10,[[["time",3]],["ordering",4]]],[11,"cmp","","",11,[[["stat",3]],["ordering",4]]],[11,"cmp","","",12,[[["setattr",3]],["ordering",4]]],[11,"cmp","","",13,[[["direntry",3]],["ordering",4]]],[11,"cmp","","",14,[[["direntrydata",3]],["ordering",4]]],[11,"cmp","","",15,[[["data",3]],["ordering",4]]],[11,"cmp","","",16,[[["flock",3]],["ordering",4]]],[11,"cmp","","",17,[[["getlock",3]],["ordering",4]]],[11,"cmp","","",18,[[["msgtype",4]],["ordering",4]]],[11,"cmp","","",19,[[["fcall",4]],["ordering",4]]],[11,"cmp","","",67,[[["msg",3]],["ordering",4]]],[11,"cmp","rs9p::srv","",72,[[["fid",3]],["ordering",4]]],[11,"eq","rs9p::fcall::p92000","",1,[[["stat",3]]]],[11,"ne","","",1,[[["stat",3]]]],[11,"eq","rs9p::fcall","",2,[[["locktype",3]]]],[11,"ne","","",2,[[["locktype",3]]]],[11,"eq","","",3,[[["lockflag",3]]]],[11,"ne","","",3,[[["lockflag",3]]]],[11,"eq","","",4,[[["lockstatus",3]]]],[11,"ne","","",4,[[["lockstatus",3]]]],[11,"eq","","",5,[[["qidtype",3]]]],[11,"ne","","",5,[[["qidtype",3]]]],[11,"eq","","",6,[[["getattrmask",3]]]],[11,"ne","","",6,[[["getattrmask",3]]]],[11,"eq","","",7,[[["setattrmask",3]]]],[11,"ne","","",7,[[["setattrmask",3]]]],[11,"eq","","",8,[[["qid",3]]]],[11,"ne","","",8,[[["qid",3]]]],[11,"eq","","",9,[[["statfs",3]]]],[11,"ne","","",9,[[["statfs",3]]]],[11,"eq","","",10,[[["time",3]]]],[11,"ne","","",10,[[["time",3]]]],[11,"eq","","",11,[[["stat",3]]]],[11,"ne","","",11,[[["stat",3]]]],[11,"eq","","",12,[[["setattr",3]]]],[11,"ne","","",12,[[["setattr",3]]]],[11,"eq","","",13,[[["direntry",3]]]],[11,"ne","","",13,[[["direntry",3]]]],[11,"eq","","",14,[[["direntrydata",3]]]],[11,"ne","","",14,[[["direntrydata",3]]]],[11,"eq","","",15,[[["data",3]]]],[11,"ne","","",15,[[["data",3]]]],[11,"eq","","",16,[[["flock",3]]]],[11,"ne","","",16,[[["flock",3]]]],[11,"eq","","",17,[[["getlock",3]]]],[11,"ne","","",17,[[["getlock",3]]]],[11,"eq","","",18,[[["msgtype",4]]]],[11,"eq","","",19,[[["fcall",4]]]],[11,"ne","","",19,[[["fcall",4]]]],[11,"eq","","",67,[[["msg",3]]]],[11,"ne","","",67,[[["msg",3]]]],[11,"eq","rs9p::srv","",72,[[["fid",3]]]],[11,"ne","","",72,[[["fid",3]]]],[11,"partial_cmp","rs9p::fcall::p92000","",1,[[["stat",3]],[["option",4],["ordering",4]]]],[11,"lt","","",1,[[["stat",3]]]],[11,"le","","",1,[[["stat",3]]]],[11,"gt","","",1,[[["stat",3]]]],[11,"ge","","",1,[[["stat",3]]]],[11,"partial_cmp","rs9p::fcall","",2,[[["locktype",3]],[["option",4],["ordering",4]]]],[11,"lt","","",2,[[["locktype",3]]]],[11,"le","","",2,[[["locktype",3]]]],[11,"gt","","",2,[[["locktype",3]]]],[11,"ge","","",2,[[["locktype",3]]]],[11,"partial_cmp","","",3,[[["lockflag",3]],[["option",4],["ordering",4]]]],[11,"lt","","",3,[[["lockflag",3]]]],[11,"le","","",3,[[["lockflag",3]]]],[11,"gt","","",3,[[["lockflag",3]]]],[11,"ge","","",3,[[["lockflag",3]]]],[11,"partial_cmp","","",4,[[["lockstatus",3]],[["option",4],["ordering",4]]]],[11,"lt","","",4,[[["lockstatus",3]]]],[11,"le","","",4,[[["lockstatus",3]]]],[11,"gt","","",4,[[["lockstatus",3]]]],[11,"ge","","",4,[[["lockstatus",3]]]],[11,"partial_cmp","","",5,[[["qidtype",3]],[["option",4],["ordering",4]]]],[11,"lt","","",5,[[["qidtype",3]]]],[11,"le","","",5,[[["qidtype",3]]]],[11,"gt","","",5,[[["qidtype",3]]]],[11,"ge","","",5,[[["qidtype",3]]]],[11,"partial_cmp","","",6,[[["getattrmask",3]],[["option",4],["ordering",4]]]],[11,"lt","","",6,[[["getattrmask",3]]]],[11,"le","","",6,[[["getattrmask",3]]]],[11,"gt","","",6,[[["getattrmask",3]]]],[11,"ge","","",6,[[["getattrmask",3]]]],[11,"partial_cmp","","",7,[[["setattrmask",3]],[["option",4],["ordering",4]]]],[11,"lt","","",7,[[["setattrmask",3]]]],[11,"le","","",7,[[["setattrmask",3]]]],[11,"gt","","",7,[[["setattrmask",3]]]],[11,"ge","","",7,[[["setattrmask",3]]]],[11,"partial_cmp","","",8,[[["qid",3]],[["option",4],["ordering",4]]]],[11,"lt","","",8,[[["qid",3]]]],[11,"le","","",8,[[["qid",3]]]],[11,"gt","","",8,[[["qid",3]]]],[11,"ge","","",8,[[["qid",3]]]],[11,"partial_cmp","","",9,[[["statfs",3]],[["option",4],["ordering",4]]]],[11,"lt","","",9,[[["statfs",3]]]],[11,"le","","",9,[[["statfs",3]]]],[11,"gt","","",9,[[["statfs",3]]]],[11,"ge","","",9,[[["statfs",3]]]],[11,"partial_cmp","","",10,[[["time",3]],[["option",4],["ordering",4]]]],[11,"lt","","",10,[[["time",3]]]],[11,"le","","",10,[[["time",3]]]],[11,"gt","","",10,[[["time",3]]]],[11,"ge","","",10,[[["time",3]]]],[11,"partial_cmp","","",11,[[["stat",3]],[["option",4],["ordering",4]]]],[11,"lt","","",11,[[["stat",3]]]],[11,"le","","",11,[[["stat",3]]]],[11,"gt","","",11,[[["stat",3]]]],[11,"ge","","",11,[[["stat",3]]]],[11,"partial_cmp","","",12,[[["setattr",3]],[["option",4],["ordering",4]]]],[11,"lt","","",12,[[["setattr",3]]]],[11,"le","","",12,[[["setattr",3]]]],[11,"gt","","",12,[[["setattr",3]]]],[11,"ge","","",12,[[["setattr",3]]]],[11,"partial_cmp","","",13,[[["direntry",3]],[["option",4],["ordering",4]]]],[11,"lt","","",13,[[["direntry",3]]]],[11,"le","","",13,[[["direntry",3]]]],[11,"gt","","",13,[[["direntry",3]]]],[11,"ge","","",13,[[["direntry",3]]]],[11,"partial_cmp","","",14,[[["direntrydata",3]],[["option",4],["ordering",4]]]],[11,"lt","","",14,[[["direntrydata",3]]]],[11,"le","","",14,[[["direntrydata",3]]]],[11,"gt","","",14,[[["direntrydata",3]]]],[11,"ge","","",14,[[["direntrydata",3]]]],[11,"partial_cmp","","",15,[[["data",3]],[["option",4],["ordering",4]]]],[11,"lt","","",15,[[["data",3]]]],[11,"le","","",15,[[["data",3]]]],[11,"gt","","",15,[[["data",3]]]],[11,"ge","","",15,[[["data",3]]]],[11,"partial_cmp","","",16,[[["flock",3]],[["option",4],["ordering",4]]]],[11,"lt","","",16,[[["flock",3]]]],[11,"le","","",16,[[["flock",3]]]],[11,"gt","","",16,[[["flock",3]]]],[11,"ge","","",16,[[["flock",3]]]],[11,"partial_cmp","","",17,[[["getlock",3]],[["option",4],["ordering",4]]]],[11,"lt","","",17,[[["getlock",3]]]],[11,"le","","",17,[[["getlock",3]]]],[11,"gt","","",17,[[["getlock",3]]]],[11,"ge","","",17,[[["getlock",3]]]],[11,"partial_cmp","","",18,[[["msgtype",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",19,[[["fcall",4]],[["option",4],["ordering",4]]]],[11,"lt","","",19,[[["fcall",4]]]],[11,"le","","",19,[[["fcall",4]]]],[11,"gt","","",19,[[["fcall",4]]]],[11,"ge","","",19,[[["fcall",4]]]],[11,"partial_cmp","","",67,[[["msg",3]],[["option",4],["ordering",4]]]],[11,"lt","","",67,[[["msg",3]]]],[11,"le","","",67,[[["msg",3]]]],[11,"gt","","",67,[[["msg",3]]]],[11,"ge","","",67,[[["msg",3]]]],[11,"partial_cmp","rs9p::srv","",72,[[["fid",3]],[["option",4],["ordering",4]]]],[11,"lt","","",72,[[["fid",3]]]],[11,"le","","",72,[[["fid",3]]]],[11,"gt","","",72,[[["fid",3]]]],[11,"ge","","",72,[[["fid",3]]]],[11,"fmt","rs9p::error","",0,[[["formatter",3]],["result",6]]],[11,"fmt","rs9p::fcall::p92000","",1,[[["formatter",3]],["result",6]]],[11,"fmt","rs9p::fcall","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",67,[[["formatter",3]],["result",6]]],[11,"fmt","rs9p::serialize","",68,[[["formatter",3]],["result",6]]],[11,"fmt","","",69,[[["formatter",3]],["result",6]]],[11,"fmt","rs9p::srv","",72,[[["formatter",3]],["result",6]]],[11,"fmt","rs9p::error","",0,[[["formatter",3]],["result",6]]],[11,"sub","rs9p::fcall","Returns the set difference of the two sets of flags.",2,[[["locktype",3]],["locktype",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",3,[[["lockflag",3]],["lockflag",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",4,[[["lockstatus",3]],["lockstatus",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",5,[[["qidtype",3]],["qidtype",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",6,[[["getattrmask",3]],["getattrmask",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",7,[[["setattrmask",3]],["setattrmask",3]]],[11,"sub_assign","","Disables all flags enabled in the set.",2,[[["locktype",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",3,[[["lockflag",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",4,[[["lockstatus",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",5,[[["qidtype",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",6,[[["getattrmask",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",7,[[["setattrmask",3]]]],[11,"not","","Returns the complement of this set of flags.",2,[[],["locktype",3]]],[11,"not","","Returns the complement of this set of flags.",3,[[],["lockflag",3]]],[11,"not","","Returns the complement of this set of flags.",4,[[],["lockstatus",3]]],[11,"not","","Returns the complement of this set of flags.",5,[[],["qidtype",3]]],[11,"not","","Returns the complement of this set of flags.",6,[[],["getattrmask",3]]],[11,"not","","Returns the complement of this set of flags.",7,[[],["setattrmask",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",2,[[["locktype",3]],["locktype",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",3,[[["lockflag",3]],["lockflag",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",4,[[["lockstatus",3]],["lockstatus",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",5,[[["qidtype",3]],["qidtype",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",6,[[["getattrmask",3]],["getattrmask",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",7,[[["setattrmask",3]],["setattrmask",3]]],[11,"bitor","","Returns the union of the two sets of flags.",2,[[["locktype",3]],["locktype",3]]],[11,"bitor","","Returns the union of the two sets of flags.",3,[[["lockflag",3]],["lockflag",3]]],[11,"bitor","","Returns the union of the two sets of flags.",4,[[["lockstatus",3]],["lockstatus",3]]],[11,"bitor","","Returns the union of the two sets of flags.",5,[[["qidtype",3]],["qidtype",3]]],[11,"bitor","","Returns the union of the two sets of flags.",6,[[["getattrmask",3]],["getattrmask",3]]],[11,"bitor","","Returns the union of the two sets of flags.",7,[[["setattrmask",3]],["setattrmask",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",2,[[["locktype",3]],["locktype",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",3,[[["lockflag",3]],["lockflag",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",4,[[["lockstatus",3]],["lockstatus",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",5,[[["qidtype",3]],["qidtype",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",6,[[["getattrmask",3]],["getattrmask",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",7,[[["setattrmask",3]],["setattrmask",3]]],[11,"shl","rs9p::serialize","",68,[[]]],[11,"shl","","",74,[[]]],[11,"shr","","",69,[[]]],[11,"shr","","",74,[[]]],[11,"bitand_assign","rs9p::fcall","Disables all flags disabled in the set.",2,[[["locktype",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",3,[[["lockflag",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",4,[[["lockstatus",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",5,[[["qidtype",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",6,[[["getattrmask",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",7,[[["setattrmask",3]]]],[11,"bitor_assign","","Adds the set of flags.",2,[[["locktype",3]]]],[11,"bitor_assign","","Adds the set of flags.",3,[[["lockflag",3]]]],[11,"bitor_assign","","Adds the set of flags.",4,[[["lockstatus",3]]]],[11,"bitor_assign","","Adds the set of flags.",5,[[["qidtype",3]]]],[11,"bitor_assign","","Adds the set of flags.",6,[[["getattrmask",3]]]],[11,"bitor_assign","","Adds the set of flags.",7,[[["setattrmask",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",2,[[["locktype",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",3,[[["lockflag",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",4,[[["lockstatus",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",5,[[["qidtype",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",6,[[["getattrmask",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",7,[[["setattrmask",3]]]],[11,"hash","rs9p::fcall::p92000","",1,[[]]],[11,"hash","rs9p::fcall","",2,[[]]],[11,"hash","","",3,[[]]],[11,"hash","","",4,[[]]],[11,"hash","","",5,[[]]],[11,"hash","","",6,[[]]],[11,"hash","","",7,[[]]],[11,"hash","","",8,[[]]],[11,"hash","","",9,[[]]],[11,"hash","","",10,[[]]],[11,"hash","","",11,[[]]],[11,"hash","","",12,[[]]],[11,"hash","","",13,[[]]],[11,"hash","","",14,[[]]],[11,"hash","","",15,[[]]],[11,"hash","","",16,[[]]],[11,"hash","","",17,[[]]],[11,"hash","","",18,[[]]],[11,"hash","","",19,[[]]],[11,"hash","","",67,[[]]],[11,"hash","rs9p::srv","",72,[[]]],[11,"from_iter","rs9p::fcall","",2,[[["intoiterator",8]],["locktype",3]]],[11,"from_iter","","",3,[[["intoiterator",8]],["lockflag",3]]],[11,"from_iter","","",4,[[["intoiterator",8]],["lockstatus",3]]],[11,"from_iter","","",5,[[["intoiterator",8]],["qidtype",3]]],[11,"from_iter","","",6,[[["intoiterator",8]],["getattrmask",3]]],[11,"from_iter","","",7,[[["intoiterator",8]],["setattrmask",3]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"cause","rs9p::error","",0,[[],[["option",4],["error",8]]]],[11,"from_i64","rs9p::fcall","",18,[[],["option",4]]],[11,"from_u64","","",18,[[],["option",4]]]],"p":[[4,"Error"],[3,"Stat"],[3,"LockType"],[3,"LockFlag"],[3,"LockStatus"],[3,"QidType"],[3,"GetattrMask"],[3,"SetattrMask"],[3,"Qid"],[3,"Statfs"],[3,"Time"],[3,"Stat"],[3,"SetAttr"],[3,"DirEntry"],[3,"DirEntryData"],[3,"Data"],[3,"Flock"],[3,"Getlock"],[4,"MsgType"],[4,"Fcall"],[13,"Rlerror"],[13,"Tstatfs"],[13,"Rstatfs"],[13,"Tlopen"],[13,"Rlopen"],[13,"Tlcreate"],[13,"Rlcreate"],[13,"Tsymlink"],[13,"Rsymlink"],[13,"Tmknod"],[13,"Rmknod"],[13,"Trename"],[13,"Treadlink"],[13,"Rreadlink"],[13,"Tgetattr"],[13,"Rgetattr"],[13,"Tsetattr"],[13,"Txattrwalk"],[13,"Rxattrwalk"],[13,"Txattrcreate"],[13,"Treaddir"],[13,"Rreaddir"],[13,"Tfsync"],[13,"Tlock"],[13,"Rlock"],[13,"Tgetlock"],[13,"Rgetlock"],[13,"Tlink"],[13,"Tmkdir"],[13,"Rmkdir"],[13,"Trenameat"],[13,"Tunlinkat"],[13,"Tauth"],[13,"Rauth"],[13,"Tattach"],[13,"Rattach"],[13,"Tversion"],[13,"Rversion"],[13,"Tflush"],[13,"Twalk"],[13,"Rwalk"],[13,"Tread"],[13,"Rread"],[13,"Twrite"],[13,"Rwrite"],[13,"Tclunk"],[13,"Tremove"],[3,"Msg"],[3,"Encoder"],[3,"Decoder"],[8,"Encodable"],[8,"Decodable"],[3,"Fid"],[8,"Filesystem"],[3,"SResult"]]},\
"signal_hook_registry":{"doc":"Backend of the signal-hook crate.","i":[[3,"SigId","signal_hook_registry","An ID of registered action.",null,null],[17,"FORBIDDEN","","List of forbidden signals.",null,null],[5,"register","","Registers an arbitrary action for the given signal.",null,[[["c_int",6]],[["sigid",3],["error",3],["result",4]]]],[5,"register_sigaction","","Register a signal action.",null,[[["c_int",6]],[["sigid",3],["error",3],["result",4]]]],[5,"register_signal_unchecked","","Register a signal action without checking for forbidden …",null,[[["c_int",6]],[["sigid",3],["error",3],["result",4]]]],[5,"register_unchecked","","Register a signal action without checking for forbidden …",null,[[["c_int",6]],[["sigid",3],["error",3],["result",4]]]],[5,"unregister","","Removes a previously installed action.",null,[[["sigid",3]]]],[5,"unregister_signal","","Removes all previously installed actions for a given …",null,[[["c_int",6]]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"clone","","",0,[[],["sigid",3]]],[11,"cmp","","",0,[[["sigid",3]],["ordering",4]]],[11,"eq","","",0,[[["sigid",3]]]],[11,"ne","","",0,[[["sigid",3]]]],[11,"partial_cmp","","",0,[[["sigid",3]],[["option",4],["ordering",4]]]],[11,"lt","","",0,[[["sigid",3]]]],[11,"le","","",0,[[["sigid",3]]]],[11,"gt","","",0,[[["sigid",3]]]],[11,"ge","","",0,[[["sigid",3]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"hash","","",0,[[]]]],"p":[[3,"SigId"]]},\
"slab":{"doc":"Pre-allocated storage for a uniform data type.","i":[[3,"Slab","slab","Pre-allocated storage for a uniform data type",null,null],[3,"VacantEntry","","A handle to a vacant entry in a <code>Slab</code>.",null,null],[3,"Iter","","An iterator over the values stored in the <code>Slab</code>",null,null],[3,"IterMut","","A mutable iterator over the values stored in the <code>Slab</code>",null,null],[3,"Drain","","A draining iterator for <code>Slab</code>",null,null],[11,"new","","Construct a new, empty <code>Slab</code>.",0,[[],["slab",3]]],[11,"with_capacity","","Construct a new, empty <code>Slab</code> with the specified capacity.",0,[[],["slab",3]]],[11,"capacity","","Return the number of values the slab can store without …",0,[[]]],[11,"reserve","","Reserve capacity for at least <code>additional</code> more values to …",0,[[]]],[11,"reserve_exact","","Reserve the minimum capacity required to store exactly …",0,[[]]],[11,"shrink_to_fit","","Shrink the capacity of the slab as much as possible.",0,[[]]],[11,"clear","","Clear the slab of all values.",0,[[]]],[11,"len","","Return the number of stored values.",0,[[]]],[11,"is_empty","","Return <code>true</code> if there are no values stored in the slab.",0,[[]]],[11,"iter","","Return an iterator over the slab.",0,[[],["iter",3]]],[11,"iter_mut","","Return an iterator that allows modifying each value.",0,[[],["itermut",3]]],[11,"get","","Return a reference to the value associated with the given …",0,[[],["option",4]]],[11,"get_mut","","Return a mutable reference to the value associated with …",0,[[],["option",4]]],[11,"get_unchecked","","Return a reference to the value associated with the given …",0,[[]]],[11,"get_unchecked_mut","","Return a mutable reference to the value associated with …",0,[[]]],[11,"insert","","Insert a value in the slab, returning key assigned to the …",0,[[]]],[11,"vacant_entry","","Return a handle to a vacant entry allowing for further …",0,[[],["vacantentry",3]]],[11,"remove","","Remove and return the value associated with the given key.",0,[[]]],[11,"contains","","Return <code>true</code> if a value is associated with the given key.",0,[[]]],[11,"retain","","Retain only the elements specified by the predicate.",0,[[]]],[11,"drain","","Return a draining iterator that removes all elements from …",0,[[],["drain",3]]],[11,"insert","","Insert a value in the entry, returning a mutable …",1,[[]]],[11,"key","","Return the key associated with this entry.",1,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"into_iter","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"into_iter","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"into_iter","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"next","","",2,[[],["option",4]]],[11,"next","","",3,[[],["option",4]]],[11,"next","","",4,[[],["option",4]]],[11,"clone","","",0,[[],["slab",3]]],[11,"default","","",0,[[]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"index","","",0,[[]]],[11,"index_mut","","",0,[[]]]],"p":[[3,"Slab"],[3,"VacantEntry"],[3,"Iter"],[3,"IterMut"],[3,"Drain"]]},\
"syn":{"doc":"github crates-io docs-rs","i":[[3,"Ident","syn","A word of Rust code, which may be a keyword or legal …",null,null],[0,"token","","Tokens representing Rust punctuation, keywords, and …",null,null],[8,"Token","syn::token","Marker trait for types that represent single tokens.",null,null],[3,"Underscore","","<code>_</code>",null,null],[12,"spans","","",0,null],[3,"Abstract","","<code>abstract</code>",null,null],[12,"span","","",1,null],[3,"As","","<code>as</code>",null,null],[12,"span","","",2,null],[3,"Async","","<code>async</code>",null,null],[12,"span","","",3,null],[3,"Auto","","<code>auto</code>",null,null],[12,"span","","",4,null],[3,"Await","","<code>await</code>",null,null],[12,"span","","",5,null],[3,"Become","","<code>become</code>",null,null],[12,"span","","",6,null],[3,"Box","","<code>box</code>",null,null],[12,"span","","",7,null],[3,"Break","","<code>break</code>",null,null],[12,"span","","",8,null],[3,"Const","","<code>const</code>",null,null],[12,"span","","",9,null],[3,"Continue","","<code>continue</code>",null,null],[12,"span","","",10,null],[3,"Crate","","<code>crate</code>",null,null],[12,"span","","",11,null],[3,"Default","","<code>default</code>",null,null],[12,"span","","",12,null],[3,"Do","","<code>do</code>",null,null],[12,"span","","",13,null],[3,"Dyn","","<code>dyn</code>",null,null],[12,"span","","",14,null],[3,"Else","","<code>else</code>",null,null],[12,"span","","",15,null],[3,"Enum","","<code>enum</code>",null,null],[12,"span","","",16,null],[3,"Extern","","<code>extern</code>",null,null],[12,"span","","",17,null],[3,"Final","","<code>final</code>",null,null],[12,"span","","",18,null],[3,"Fn","","<code>fn</code>",null,null],[12,"span","","",19,null],[3,"For","","<code>for</code>",null,null],[12,"span","","",20,null],[3,"If","","<code>if</code>",null,null],[12,"span","","",21,null],[3,"Impl","","<code>impl</code>",null,null],[12,"span","","",22,null],[3,"In","","<code>in</code>",null,null],[12,"span","","",23,null],[3,"Let","","<code>let</code>",null,null],[12,"span","","",24,null],[3,"Loop","","<code>loop</code>",null,null],[12,"span","","",25,null],[3,"Macro","","<code>macro</code>",null,null],[12,"span","","",26,null],[3,"Match","","<code>match</code>",null,null],[12,"span","","",27,null],[3,"Mod","","<code>mod</code>",null,null],[12,"span","","",28,null],[3,"Move","","<code>move</code>",null,null],[12,"span","","",29,null],[3,"Mut","","<code>mut</code>",null,null],[12,"span","","",30,null],[3,"Override","","<code>override</code>",null,null],[12,"span","","",31,null],[3,"Priv","","<code>priv</code>",null,null],[12,"span","","",32,null],[3,"Pub","","<code>pub</code>",null,null],[12,"span","","",33,null],[3,"Ref","","<code>ref</code>",null,null],[12,"span","","",34,null],[3,"Return","","<code>return</code>",null,null],[12,"span","","",35,null],[3,"SelfType","","<code>Self</code>",null,null],[12,"span","","",36,null],[3,"SelfValue","","<code>self</code>",null,null],[12,"span","","",37,null],[3,"Static","","<code>static</code>",null,null],[12,"span","","",38,null],[3,"Struct","","<code>struct</code>",null,null],[12,"span","","",39,null],[3,"Super","","<code>super</code>",null,null],[12,"span","","",40,null],[3,"Trait","","<code>trait</code>",null,null],[12,"span","","",41,null],[3,"Try","","<code>try</code>",null,null],[12,"span","","",42,null],[3,"Type","","<code>type</code>",null,null],[12,"span","","",43,null],[3,"Typeof","","<code>typeof</code>",null,null],[12,"span","","",44,null],[3,"Union","","<code>union</code>",null,null],[12,"span","","",45,null],[3,"Unsafe","","<code>unsafe</code>",null,null],[12,"span","","",46,null],[3,"Unsized","","<code>unsized</code>",null,null],[12,"span","","",47,null],[3,"Use","","<code>use</code>",null,null],[12,"span","","",48,null],[3,"Virtual","","<code>virtual</code>",null,null],[12,"span","","",49,null],[3,"Where","","<code>where</code>",null,null],[12,"span","","",50,null],[3,"While","","<code>while</code>",null,null],[12,"span","","",51,null],[3,"Yield","","<code>yield</code>",null,null],[12,"span","","",52,null],[3,"Add","","<code>+</code>",null,null],[12,"spans","","",53,null],[3,"AddEq","","<code>+=</code>",null,null],[12,"spans","","",54,null],[3,"And","","<code>&</code>",null,null],[12,"spans","","",55,null],[3,"AndAnd","","<code>&&</code>",null,null],[12,"spans","","",56,null],[3,"AndEq","","<code>&=</code>",null,null],[12,"spans","","",57,null],[3,"At","","<code>@</code>",null,null],[12,"spans","","",58,null],[3,"Bang","","<code>!</code>",null,null],[12,"spans","","",59,null],[3,"Caret","","<code>^</code>",null,null],[12,"spans","","",60,null],[3,"CaretEq","","<code>^=</code>",null,null],[12,"spans","","",61,null],[3,"Colon","","<code>:</code>",null,null],[12,"spans","","",62,null],[3,"Colon2","","<code>::</code>",null,null],[12,"spans","","",63,null],[3,"Comma","","<code>,</code>",null,null],[12,"spans","","",64,null],[3,"Div","","<code>/</code>",null,null],[12,"spans","","",65,null],[3,"DivEq","","<code>/=</code>",null,null],[12,"spans","","",66,null],[3,"Dollar","","<code>$</code>",null,null],[12,"spans","","",67,null],[3,"Dot","","<code>.</code>",null,null],[12,"spans","","",68,null],[3,"Dot2","","<code>..</code>",null,null],[12,"spans","","",69,null],[3,"Dot3","","<code>...</code>",null,null],[12,"spans","","",70,null],[3,"DotDotEq","","<code>..=</code>",null,null],[12,"spans","","",71,null],[3,"Eq","","<code>=</code>",null,null],[12,"spans","","",72,null],[3,"EqEq","","<code>==</code>",null,null],[12,"spans","","",73,null],[3,"Ge","","<code>>=</code>",null,null],[12,"spans","","",74,null],[3,"Gt","","<code>></code>",null,null],[12,"spans","","",75,null],[3,"Le","","<code><=</code>",null,null],[12,"spans","","",76,null],[3,"Lt","","<code><</code>",null,null],[12,"spans","","",77,null],[3,"MulEq","","<code>*=</code>",null,null],[12,"spans","","",78,null],[3,"Ne","","<code>!=</code>",null,null],[12,"spans","","",79,null],[3,"Or","","<code>|</code>",null,null],[12,"spans","","",80,null],[3,"OrEq","","<code>|=</code>",null,null],[12,"spans","","",81,null],[3,"OrOr","","<code>||</code>",null,null],[12,"spans","","",82,null],[3,"Pound","","<code>#</code>",null,null],[12,"spans","","",83,null],[3,"Question","","<code>?</code>",null,null],[12,"spans","","",84,null],[3,"RArrow","","<code>-></code>",null,null],[12,"spans","","",85,null],[3,"LArrow","","<code><-</code>",null,null],[12,"spans","","",86,null],[3,"Rem","","<code>%</code>",null,null],[12,"spans","","",87,null],[3,"RemEq","","<code>%=</code>",null,null],[12,"spans","","",88,null],[3,"FatArrow","","<code>=></code>",null,null],[12,"spans","","",89,null],[3,"Semi","","<code>;</code>",null,null],[12,"spans","","",90,null],[3,"Shl","","<code><<</code>",null,null],[12,"spans","","",91,null],[3,"ShlEq","","<code><<=</code>",null,null],[12,"spans","","",92,null],[3,"Shr","","<code>>></code>",null,null],[12,"spans","","",93,null],[3,"ShrEq","","<code>>>=</code>",null,null],[12,"spans","","",94,null],[3,"Star","","<code>*</code>",null,null],[12,"spans","","",95,null],[3,"Sub","","<code>-</code>",null,null],[12,"spans","","",96,null],[3,"SubEq","","<code>-=</code>",null,null],[12,"spans","","",97,null],[3,"Tilde","","<code>~</code>",null,null],[12,"spans","","",98,null],[3,"Brace","","<code>{...}</code>",null,null],[12,"span","","",99,null],[11,"surround","","",99,[[["tokenstream",3]]]],[3,"Bracket","","<code>[...]</code>",null,null],[12,"span","","",100,null],[11,"surround","","",100,[[["tokenstream",3]]]],[3,"Paren","","<code>(...)</code>",null,null],[12,"span","","",101,null],[11,"surround","","",101,[[["tokenstream",3]]]],[3,"Group","","None-delimited group",null,null],[12,"span","","",102,null],[11,"surround","","",102,[[["tokenstream",3]]]],[0,"buffer","syn","A stably addressed token buffer supporting efficient …",null,null],[3,"TokenBuffer","syn::buffer","A buffer that can be efficiently traversed multiple …",null,null],[11,"new","","Creates a <code>TokenBuffer</code> containing all the tokens from the …",103,[[["tokenstream",3]],["tokenbuffer",3]]],[11,"new2","","Creates a <code>TokenBuffer</code> containing all the tokens from the …",103,[[["tokenstream",3]],["tokenbuffer",3]]],[11,"begin","","Creates a cursor referencing the first token in the …",103,[[],["cursor",3]]],[3,"Cursor","","A cheaply copyable cursor into a <code>TokenBuffer</code>.",null,null],[11,"empty","","Creates a cursor referencing a static empty TokenStream.",104,[[]]],[11,"eof","","Checks whether the cursor is currently pointing at the …",104,[[]]],[11,"group","","If the cursor is pointing at a <code>Group</code> with the given …",104,[[["delimiter",4]],["option",4]]],[11,"ident","","If the cursor is pointing at a <code>Ident</code>, returns it along …",104,[[],["option",4]]],[11,"punct","","If the cursor is pointing at an <code>Punct</code>, returns it along …",104,[[],["option",4]]],[11,"literal","","If the cursor is pointing at a <code>Literal</code>, return it along …",104,[[],["option",4]]],[11,"lifetime","","If the cursor is pointing at a <code>Lifetime</code>, returns it along …",104,[[],["option",4]]],[11,"token_stream","","Copies all remaining tokens visible from this cursor into …",104,[[],["tokenstream",3]]],[11,"token_tree","","If the cursor is pointing at a <code>TokenTree</code>, returns it …",104,[[],["option",4]]],[11,"span","","Returns the <code>Span</code> of the current token, or …",104,[[],["span",3]]],[0,"ext","syn","Extension traits to provide parsing methods on foreign …",null,null],[8,"IdentExt","syn::ext","Additional methods for <code>Ident</code> not provided by proc-macro2 …",null,null],[10,"parse_any","","Parses any identifier including keywords.",105,[[["parsestream",6]],["result",6]]],[18,"peek_any","","Peeks any identifier including keywords. Usage: …",105,null],[10,"unraw","","Strips the raw marker <code>r#</code>, if any, from the beginning of …",105,[[],["ident",3]]],[0,"punctuated","syn","A punctuated sequence of syntax tree nodes separated by …",null,null],[3,"Punctuated","syn::punctuated","A punctuated sequence of syntax tree nodes of type <code>T</code> …",null,null],[11,"new","","Creates an empty punctuated sequence.",106,[[],["punctuated",3]]],[11,"is_empty","","Determines whether this punctuated sequence is empty, …",106,[[]]],[11,"len","","Returns the number of syntax tree nodes in this …",106,[[]]],[11,"first","","Borrows the first element in this sequence.",106,[[],["option",4]]],[11,"first_mut","","Mutably borrows the first element in this sequence.",106,[[],["option",4]]],[11,"last","","Borrows the last element in this sequence.",106,[[],["option",4]]],[11,"last_mut","","Mutably borrows the last element in this sequence.",106,[[],["option",4]]],[11,"iter","","Returns an iterator over borrowed syntax tree nodes of …",106,[[],["iter",3]]],[11,"iter_mut","","Returns an iterator over mutably borrowed syntax tree …",106,[[],["itermut",3]]],[11,"pairs","","Returns an iterator over the contents of this sequence as …",106,[[],["pairs",3]]],[11,"pairs_mut","","Returns an iterator over the contents of this sequence as …",106,[[],["pairsmut",3]]],[11,"into_pairs","","Returns an iterator over the contents of this sequence as …",106,[[],["intopairs",3]]],[11,"push_value","","Appends a syntax tree node onto the end of this …",106,[[]]],[11,"push_punct","","Appends a trailing punctuation onto the end of this …",106,[[]]],[11,"pop","","Removes the last punctuated pair from this sequence, or …",106,[[],[["pair",4],["option",4]]]],[11,"trailing_punct","","Determines whether this punctuated sequence ends with a …",106,[[]]],[11,"empty_or_trailing","","Returns true if either this <code>Punctuated</code> is empty, or it …",106,[[]]],[11,"push","","Appends a syntax tree node onto the end of this …",106,[[]]],[11,"insert","","Inserts an element at position <code>index</code>.",106,[[]]],[11,"clear","","Clears the sequence of all values and punctuation, making …",106,[[]]],[11,"parse_terminated","","Parses zero or more occurrences of <code>T</code> separated by …",106,[[["parsestream",6]],["result",6]]],[11,"parse_terminated_with","","Parses zero or more occurrences of <code>T</code> using the given …",106,[[["parsestream",6]],["result",6]]],[11,"parse_separated_nonempty","","Parses one or more occurrences of <code>T</code> separated by …",106,[[["parsestream",6]],["result",6]]],[11,"parse_separated_nonempty_with","","Parses one or more occurrences of <code>T</code> using the given parse …",106,[[["parsestream",6]],["result",6]]],[3,"Pairs","","An iterator over borrowed pairs of type <code>Pair<&T, &P></code>.",null,null],[3,"PairsMut","","An iterator over mutably borrowed pairs of type …",null,null],[3,"IntoPairs","","An iterator over owned pairs of type <code>Pair<T, P></code>.",null,null],[3,"IntoIter","","An iterator over owned values of type <code>T</code>.",null,null],[3,"Iter","","An iterator over borrowed values of type <code>&T</code>.",null,null],[3,"IterMut","","An iterator over mutably borrowed values of type <code>&mut T</code>.",null,null],[4,"Pair","","A single syntax tree node of type <code>T</code> followed by its …",null,null],[13,"Punctuated","","",107,null],[13,"End","","",107,null],[11,"into_value","","Extracts the syntax tree node from this punctuated pair, …",107,[[]]],[11,"value","","Borrows the syntax tree node from this punctuated pair.",107,[[]]],[11,"value_mut","","Mutably borrows the syntax tree node from this punctuated …",107,[[]]],[11,"punct","","Borrows the punctuation from this punctuated pair, unless …",107,[[],["option",4]]],[11,"new","","Creates a punctuated pair out of a syntax tree node and …",107,[[["option",4]]]],[11,"into_tuple","","Produces this punctuated pair as a tuple of syntax tree …",107,[[]]],[0,"spanned","syn","A trait that can provide the <code>Span</code> of the complete …",null,null],[8,"Spanned","syn::spanned","A trait that can provide the <code>Span</code> of the complete …",null,null],[10,"span","","Returns a <code>Span</code> covering the complete contents of this …",108,[[],["span",3]]],[0,"visit_mut","syn","Syntax tree traversal to mutate an exclusive borrow of a …",null,null],[8,"VisitMut","syn::visit_mut","Syntax tree traversal to mutate an exclusive borrow of a …",null,null],[11,"visit_abi_mut","","",109,[[["abi",3]]]],[11,"visit_angle_bracketed_generic_arguments_mut","","",109,[[["anglebracketedgenericarguments",3]]]],[11,"visit_arm_mut","","",109,[[["arm",3]]]],[11,"visit_attr_style_mut","","",109,[[["attrstyle",4]]]],[11,"visit_attribute_mut","","",109,[[["attribute",3]]]],[11,"visit_bare_fn_arg_mut","","",109,[[["barefnarg",3]]]],[11,"visit_bin_op_mut","","",109,[[["binop",4]]]],[11,"visit_binding_mut","","",109,[[["binding",3]]]],[11,"visit_block_mut","","",109,[[["block",3]]]],[11,"visit_bound_lifetimes_mut","","",109,[[["boundlifetimes",3]]]],[11,"visit_const_param_mut","","",109,[[["constparam",3]]]],[11,"visit_constraint_mut","","",109,[[["constraint",3]]]],[11,"visit_data_mut","","",109,[[["data",4]]]],[11,"visit_data_enum_mut","","",109,[[["dataenum",3]]]],[11,"visit_data_struct_mut","","",109,[[["datastruct",3]]]],[11,"visit_data_union_mut","","",109,[[["dataunion",3]]]],[11,"visit_derive_input_mut","","",109,[[["deriveinput",3]]]],[11,"visit_expr_mut","","",109,[[["expr",4]]]],[11,"visit_expr_array_mut","","",109,[[["exprarray",3]]]],[11,"visit_expr_assign_mut","","",109,[[["exprassign",3]]]],[11,"visit_expr_assign_op_mut","","",109,[[["exprassignop",3]]]],[11,"visit_expr_async_mut","","",109,[[["exprasync",3]]]],[11,"visit_expr_await_mut","","",109,[[["exprawait",3]]]],[11,"visit_expr_binary_mut","","",109,[[["exprbinary",3]]]],[11,"visit_expr_block_mut","","",109,[[["exprblock",3]]]],[11,"visit_expr_box_mut","","",109,[[["exprbox",3]]]],[11,"visit_expr_break_mut","","",109,[[["exprbreak",3]]]],[11,"visit_expr_call_mut","","",109,[[["exprcall",3]]]],[11,"visit_expr_cast_mut","","",109,[[["exprcast",3]]]],[11,"visit_expr_closure_mut","","",109,[[["exprclosure",3]]]],[11,"visit_expr_continue_mut","","",109,[[["exprcontinue",3]]]],[11,"visit_expr_field_mut","","",109,[[["exprfield",3]]]],[11,"visit_expr_for_loop_mut","","",109,[[["exprforloop",3]]]],[11,"visit_expr_group_mut","","",109,[[["exprgroup",3]]]],[11,"visit_expr_if_mut","","",109,[[["exprif",3]]]],[11,"visit_expr_index_mut","","",109,[[["exprindex",3]]]],[11,"visit_expr_let_mut","","",109,[[["exprlet",3]]]],[11,"visit_expr_lit_mut","","",109,[[["exprlit",3]]]],[11,"visit_expr_loop_mut","","",109,[[["exprloop",3]]]],[11,"visit_expr_macro_mut","","",109,[[["exprmacro",3]]]],[11,"visit_expr_match_mut","","",109,[[["exprmatch",3]]]],[11,"visit_expr_method_call_mut","","",109,[[["exprmethodcall",3]]]],[11,"visit_expr_paren_mut","","",109,[[["exprparen",3]]]],[11,"visit_expr_path_mut","","",109,[[["exprpath",3]]]],[11,"visit_expr_range_mut","","",109,[[["exprrange",3]]]],[11,"visit_expr_reference_mut","","",109,[[["exprreference",3]]]],[11,"visit_expr_repeat_mut","","",109,[[["exprrepeat",3]]]],[11,"visit_expr_return_mut","","",109,[[["exprreturn",3]]]],[11,"visit_expr_struct_mut","","",109,[[["exprstruct",3]]]],[11,"visit_expr_try_mut","","",109,[[["exprtry",3]]]],[11,"visit_expr_try_block_mut","","",109,[[["exprtryblock",3]]]],[11,"visit_expr_tuple_mut","","",109,[[["exprtuple",3]]]],[11,"visit_expr_type_mut","","",109,[[["exprtype",3]]]],[11,"visit_expr_unary_mut","","",109,[[["exprunary",3]]]],[11,"visit_expr_unsafe_mut","","",109,[[["exprunsafe",3]]]],[11,"visit_expr_while_mut","","",109,[[["exprwhile",3]]]],[11,"visit_expr_yield_mut","","",109,[[["expryield",3]]]],[11,"visit_field_mut","","",109,[[["field",3]]]],[11,"visit_field_pat_mut","","",109,[[["fieldpat",3]]]],[11,"visit_field_value_mut","","",109,[[["fieldvalue",3]]]],[11,"visit_fields_mut","","",109,[[["fields",4]]]],[11,"visit_fields_named_mut","","",109,[[["fieldsnamed",3]]]],[11,"visit_fields_unnamed_mut","","",109,[[["fieldsunnamed",3]]]],[11,"visit_file_mut","","",109,[[["file",3]]]],[11,"visit_fn_arg_mut","","",109,[[["fnarg",4]]]],[11,"visit_foreign_item_mut","","",109,[[["foreignitem",4]]]],[11,"visit_foreign_item_fn_mut","","",109,[[["foreignitemfn",3]]]],[11,"visit_foreign_item_macro_mut","","",109,[[["foreignitemmacro",3]]]],[11,"visit_foreign_item_static_mut","","",109,[[["foreignitemstatic",3]]]],[11,"visit_foreign_item_type_mut","","",109,[[["foreignitemtype",3]]]],[11,"visit_generic_argument_mut","","",109,[[["genericargument",4]]]],[11,"visit_generic_method_argument_mut","","",109,[[["genericmethodargument",4]]]],[11,"visit_generic_param_mut","","",109,[[["genericparam",4]]]],[11,"visit_generics_mut","","",109,[[["generics",3]]]],[11,"visit_ident_mut","","",109,[[["ident",3]]]],[11,"visit_impl_item_mut","","",109,[[["implitem",4]]]],[11,"visit_impl_item_const_mut","","",109,[[["implitemconst",3]]]],[11,"visit_impl_item_macro_mut","","",109,[[["implitemmacro",3]]]],[11,"visit_impl_item_method_mut","","",109,[[["implitemmethod",3]]]],[11,"visit_impl_item_type_mut","","",109,[[["implitemtype",3]]]],[11,"visit_index_mut","","",109,[[["index",3]]]],[11,"visit_item_mut","","",109,[[["item",4]]]],[11,"visit_item_const_mut","","",109,[[["itemconst",3]]]],[11,"visit_item_enum_mut","","",109,[[["itemenum",3]]]],[11,"visit_item_extern_crate_mut","","",109,[[["itemexterncrate",3]]]],[11,"visit_item_fn_mut","","",109,[[["itemfn",3]]]],[11,"visit_item_foreign_mod_mut","","",109,[[["itemforeignmod",3]]]],[11,"visit_item_impl_mut","","",109,[[["itemimpl",3]]]],[11,"visit_item_macro_mut","","",109,[[["itemmacro",3]]]],[11,"visit_item_macro2_mut","","",109,[[["itemmacro2",3]]]],[11,"visit_item_mod_mut","","",109,[[["itemmod",3]]]],[11,"visit_item_static_mut","","",109,[[["itemstatic",3]]]],[11,"visit_item_struct_mut","","",109,[[["itemstruct",3]]]],[11,"visit_item_trait_mut","","",109,[[["itemtrait",3]]]],[11,"visit_item_trait_alias_mut","","",109,[[["itemtraitalias",3]]]],[11,"visit_item_type_mut","","",109,[[["itemtype",3]]]],[11,"visit_item_union_mut","","",109,[[["itemunion",3]]]],[11,"visit_item_use_mut","","",109,[[["itemuse",3]]]],[11,"visit_label_mut","","",109,[[["label",3]]]],[11,"visit_lifetime_mut","","",109,[[["lifetime",3]]]],[11,"visit_lifetime_def_mut","","",109,[[["lifetimedef",3]]]],[11,"visit_lit_mut","","",109,[[["lit",4]]]],[11,"visit_lit_bool_mut","","",109,[[["litbool",3]]]],[11,"visit_lit_byte_mut","","",109,[[["litbyte",3]]]],[11,"visit_lit_byte_str_mut","","",109,[[["litbytestr",3]]]],[11,"visit_lit_char_mut","","",109,[[["litchar",3]]]],[11,"visit_lit_float_mut","","",109,[[["litfloat",3]]]],[11,"visit_lit_int_mut","","",109,[[["litint",3]]]],[11,"visit_lit_str_mut","","",109,[[["litstr",3]]]],[11,"visit_local_mut","","",109,[[["local",3]]]],[11,"visit_macro_mut","","",109,[[["macro",3]]]],[11,"visit_macro_delimiter_mut","","",109,[[["macrodelimiter",4]]]],[11,"visit_member_mut","","",109,[[["member",4]]]],[11,"visit_meta_mut","","",109,[[["meta",4]]]],[11,"visit_meta_list_mut","","",109,[[["metalist",3]]]],[11,"visit_meta_name_value_mut","","",109,[[["metanamevalue",3]]]],[11,"visit_method_turbofish_mut","","",109,[[["methodturbofish",3]]]],[11,"visit_nested_meta_mut","","",109,[[["nestedmeta",4]]]],[11,"visit_parenthesized_generic_arguments_mut","","",109,[[["parenthesizedgenericarguments",3]]]],[11,"visit_pat_mut","","",109,[[["pat",4]]]],[11,"visit_pat_box_mut","","",109,[[["patbox",3]]]],[11,"visit_pat_ident_mut","","",109,[[["patident",3]]]],[11,"visit_pat_lit_mut","","",109,[[["patlit",3]]]],[11,"visit_pat_macro_mut","","",109,[[["patmacro",3]]]],[11,"visit_pat_or_mut","","",109,[[["pator",3]]]],[11,"visit_pat_path_mut","","",109,[[["patpath",3]]]],[11,"visit_pat_range_mut","","",109,[[["patrange",3]]]],[11,"visit_pat_reference_mut","","",109,[[["patreference",3]]]],[11,"visit_pat_rest_mut","","",109,[[["patrest",3]]]],[11,"visit_pat_slice_mut","","",109,[[["patslice",3]]]],[11,"visit_pat_struct_mut","","",109,[[["patstruct",3]]]],[11,"visit_pat_tuple_mut","","",109,[[["pattuple",3]]]],[11,"visit_pat_tuple_struct_mut","","",109,[[["pattuplestruct",3]]]],[11,"visit_pat_type_mut","","",109,[[["pattype",3]]]],[11,"visit_pat_wild_mut","","",109,[[["patwild",3]]]],[11,"visit_path_mut","","",109,[[["path",3]]]],[11,"visit_path_arguments_mut","","",109,[[["patharguments",4]]]],[11,"visit_path_segment_mut","","",109,[[["pathsegment",3]]]],[11,"visit_predicate_eq_mut","","",109,[[["predicateeq",3]]]],[11,"visit_predicate_lifetime_mut","","",109,[[["predicatelifetime",3]]]],[11,"visit_predicate_type_mut","","",109,[[["predicatetype",3]]]],[11,"visit_qself_mut","","",109,[[["qself",3]]]],[11,"visit_range_limits_mut","","",109,[[["rangelimits",4]]]],[11,"visit_receiver_mut","","",109,[[["receiver",3]]]],[11,"visit_return_type_mut","","",109,[[["returntype",4]]]],[11,"visit_signature_mut","","",109,[[["signature",3]]]],[11,"visit_span_mut","","",109,[[["span",3]]]],[11,"visit_stmt_mut","","",109,[[["stmt",4]]]],[11,"visit_trait_bound_mut","","",109,[[["traitbound",3]]]],[11,"visit_trait_bound_modifier_mut","","",109,[[["traitboundmodifier",4]]]],[11,"visit_trait_item_mut","","",109,[[["traititem",4]]]],[11,"visit_trait_item_const_mut","","",109,[[["traititemconst",3]]]],[11,"visit_trait_item_macro_mut","","",109,[[["traititemmacro",3]]]],[11,"visit_trait_item_method_mut","","",109,[[["traititemmethod",3]]]],[11,"visit_trait_item_type_mut","","",109,[[["traititemtype",3]]]],[11,"visit_type_mut","","",109,[[["type",4]]]],[11,"visit_type_array_mut","","",109,[[["typearray",3]]]],[11,"visit_type_bare_fn_mut","","",109,[[["typebarefn",3]]]],[11,"visit_type_group_mut","","",109,[[["typegroup",3]]]],[11,"visit_type_impl_trait_mut","","",109,[[["typeimpltrait",3]]]],[11,"visit_type_infer_mut","","",109,[[["typeinfer",3]]]],[11,"visit_type_macro_mut","","",109,[[["typemacro",3]]]],[11,"visit_type_never_mut","","",109,[[["typenever",3]]]],[11,"visit_type_param_mut","","",109,[[["typeparam",3]]]],[11,"visit_type_param_bound_mut","","",109,[[["typeparambound",4]]]],[11,"visit_type_paren_mut","","",109,[[["typeparen",3]]]],[11,"visit_type_path_mut","","",109,[[["typepath",3]]]],[11,"visit_type_ptr_mut","","",109,[[["typeptr",3]]]],[11,"visit_type_reference_mut","","",109,[[["typereference",3]]]],[11,"visit_type_slice_mut","","",109,[[["typeslice",3]]]],[11,"visit_type_trait_object_mut","","",109,[[["typetraitobject",3]]]],[11,"visit_type_tuple_mut","","",109,[[["typetuple",3]]]],[11,"visit_un_op_mut","","",109,[[["unop",4]]]],[11,"visit_use_glob_mut","","",109,[[["useglob",3]]]],[11,"visit_use_group_mut","","",109,[[["usegroup",3]]]],[11,"visit_use_name_mut","","",109,[[["usename",3]]]],[11,"visit_use_path_mut","","",109,[[["usepath",3]]]],[11,"visit_use_rename_mut","","",109,[[["userename",3]]]],[11,"visit_use_tree_mut","","",109,[[["usetree",4]]]],[11,"visit_variadic_mut","","",109,[[["variadic",3]]]],[11,"visit_variant_mut","","",109,[[["variant",3]]]],[11,"visit_vis_crate_mut","","",109,[[["viscrate",3]]]],[11,"visit_vis_public_mut","","",109,[[["vispublic",3]]]],[11,"visit_vis_restricted_mut","","",109,[[["visrestricted",3]]]],[11,"visit_visibility_mut","","",109,[[["visibility",4]]]],[11,"visit_where_clause_mut","","",109,[[["whereclause",3]]]],[11,"visit_where_predicate_mut","","",109,[[["wherepredicate",4]]]],[5,"visit_abi_mut","","",null,[[["abi",3]]]],[5,"visit_angle_bracketed_generic_arguments_mut","","",null,[[["anglebracketedgenericarguments",3]]]],[5,"visit_arm_mut","","",null,[[["arm",3]]]],[5,"visit_attr_style_mut","","",null,[[["attrstyle",4]]]],[5,"visit_attribute_mut","","",null,[[["attribute",3]]]],[5,"visit_bare_fn_arg_mut","","",null,[[["barefnarg",3]]]],[5,"visit_bin_op_mut","","",null,[[["binop",4]]]],[5,"visit_binding_mut","","",null,[[["binding",3]]]],[5,"visit_block_mut","","",null,[[["block",3]]]],[5,"visit_bound_lifetimes_mut","","",null,[[["boundlifetimes",3]]]],[5,"visit_const_param_mut","","",null,[[["constparam",3]]]],[5,"visit_constraint_mut","","",null,[[["constraint",3]]]],[5,"visit_data_mut","","",null,[[["data",4]]]],[5,"visit_data_enum_mut","","",null,[[["dataenum",3]]]],[5,"visit_data_struct_mut","","",null,[[["datastruct",3]]]],[5,"visit_data_union_mut","","",null,[[["dataunion",3]]]],[5,"visit_derive_input_mut","","",null,[[["deriveinput",3]]]],[5,"visit_expr_mut","","",null,[[["expr",4]]]],[5,"visit_expr_array_mut","","",null,[[["exprarray",3]]]],[5,"visit_expr_assign_mut","","",null,[[["exprassign",3]]]],[5,"visit_expr_assign_op_mut","","",null,[[["exprassignop",3]]]],[5,"visit_expr_async_mut","","",null,[[["exprasync",3]]]],[5,"visit_expr_await_mut","","",null,[[["exprawait",3]]]],[5,"visit_expr_binary_mut","","",null,[[["exprbinary",3]]]],[5,"visit_expr_block_mut","","",null,[[["exprblock",3]]]],[5,"visit_expr_box_mut","","",null,[[["exprbox",3]]]],[5,"visit_expr_break_mut","","",null,[[["exprbreak",3]]]],[5,"visit_expr_call_mut","","",null,[[["exprcall",3]]]],[5,"visit_expr_cast_mut","","",null,[[["exprcast",3]]]],[5,"visit_expr_closure_mut","","",null,[[["exprclosure",3]]]],[5,"visit_expr_continue_mut","","",null,[[["exprcontinue",3]]]],[5,"visit_expr_field_mut","","",null,[[["exprfield",3]]]],[5,"visit_expr_for_loop_mut","","",null,[[["exprforloop",3]]]],[5,"visit_expr_group_mut","","",null,[[["exprgroup",3]]]],[5,"visit_expr_if_mut","","",null,[[["exprif",3]]]],[5,"visit_expr_index_mut","","",null,[[["exprindex",3]]]],[5,"visit_expr_let_mut","","",null,[[["exprlet",3]]]],[5,"visit_expr_lit_mut","","",null,[[["exprlit",3]]]],[5,"visit_expr_loop_mut","","",null,[[["exprloop",3]]]],[5,"visit_expr_macro_mut","","",null,[[["exprmacro",3]]]],[5,"visit_expr_match_mut","","",null,[[["exprmatch",3]]]],[5,"visit_expr_method_call_mut","","",null,[[["exprmethodcall",3]]]],[5,"visit_expr_paren_mut","","",null,[[["exprparen",3]]]],[5,"visit_expr_path_mut","","",null,[[["exprpath",3]]]],[5,"visit_expr_range_mut","","",null,[[["exprrange",3]]]],[5,"visit_expr_reference_mut","","",null,[[["exprreference",3]]]],[5,"visit_expr_repeat_mut","","",null,[[["exprrepeat",3]]]],[5,"visit_expr_return_mut","","",null,[[["exprreturn",3]]]],[5,"visit_expr_struct_mut","","",null,[[["exprstruct",3]]]],[5,"visit_expr_try_mut","","",null,[[["exprtry",3]]]],[5,"visit_expr_try_block_mut","","",null,[[["exprtryblock",3]]]],[5,"visit_expr_tuple_mut","","",null,[[["exprtuple",3]]]],[5,"visit_expr_type_mut","","",null,[[["exprtype",3]]]],[5,"visit_expr_unary_mut","","",null,[[["exprunary",3]]]],[5,"visit_expr_unsafe_mut","","",null,[[["exprunsafe",3]]]],[5,"visit_expr_while_mut","","",null,[[["exprwhile",3]]]],[5,"visit_expr_yield_mut","","",null,[[["expryield",3]]]],[5,"visit_field_mut","","",null,[[["field",3]]]],[5,"visit_field_pat_mut","","",null,[[["fieldpat",3]]]],[5,"visit_field_value_mut","","",null,[[["fieldvalue",3]]]],[5,"visit_fields_mut","","",null,[[["fields",4]]]],[5,"visit_fields_named_mut","","",null,[[["fieldsnamed",3]]]],[5,"visit_fields_unnamed_mut","","",null,[[["fieldsunnamed",3]]]],[5,"visit_file_mut","","",null,[[["file",3]]]],[5,"visit_fn_arg_mut","","",null,[[["fnarg",4]]]],[5,"visit_foreign_item_mut","","",null,[[["foreignitem",4]]]],[5,"visit_foreign_item_fn_mut","","",null,[[["foreignitemfn",3]]]],[5,"visit_foreign_item_macro_mut","","",null,[[["foreignitemmacro",3]]]],[5,"visit_foreign_item_static_mut","","",null,[[["foreignitemstatic",3]]]],[5,"visit_foreign_item_type_mut","","",null,[[["foreignitemtype",3]]]],[5,"visit_generic_argument_mut","","",null,[[["genericargument",4]]]],[5,"visit_generic_method_argument_mut","","",null,[[["genericmethodargument",4]]]],[5,"visit_generic_param_mut","","",null,[[["genericparam",4]]]],[5,"visit_generics_mut","","",null,[[["generics",3]]]],[5,"visit_ident_mut","","",null,[[["ident",3]]]],[5,"visit_impl_item_mut","","",null,[[["implitem",4]]]],[5,"visit_impl_item_const_mut","","",null,[[["implitemconst",3]]]],[5,"visit_impl_item_macro_mut","","",null,[[["implitemmacro",3]]]],[5,"visit_impl_item_method_mut","","",null,[[["implitemmethod",3]]]],[5,"visit_impl_item_type_mut","","",null,[[["implitemtype",3]]]],[5,"visit_index_mut","","",null,[[["index",3]]]],[5,"visit_item_mut","","",null,[[["item",4]]]],[5,"visit_item_const_mut","","",null,[[["itemconst",3]]]],[5,"visit_item_enum_mut","","",null,[[["itemenum",3]]]],[5,"visit_item_extern_crate_mut","","",null,[[["itemexterncrate",3]]]],[5,"visit_item_fn_mut","","",null,[[["itemfn",3]]]],[5,"visit_item_foreign_mod_mut","","",null,[[["itemforeignmod",3]]]],[5,"visit_item_impl_mut","","",null,[[["itemimpl",3]]]],[5,"visit_item_macro_mut","","",null,[[["itemmacro",3]]]],[5,"visit_item_macro2_mut","","",null,[[["itemmacro2",3]]]],[5,"visit_item_mod_mut","","",null,[[["itemmod",3]]]],[5,"visit_item_static_mut","","",null,[[["itemstatic",3]]]],[5,"visit_item_struct_mut","","",null,[[["itemstruct",3]]]],[5,"visit_item_trait_mut","","",null,[[["itemtrait",3]]]],[5,"visit_item_trait_alias_mut","","",null,[[["itemtraitalias",3]]]],[5,"visit_item_type_mut","","",null,[[["itemtype",3]]]],[5,"visit_item_union_mut","","",null,[[["itemunion",3]]]],[5,"visit_item_use_mut","","",null,[[["itemuse",3]]]],[5,"visit_label_mut","","",null,[[["label",3]]]],[5,"visit_lifetime_mut","","",null,[[["lifetime",3]]]],[5,"visit_lifetime_def_mut","","",null,[[["lifetimedef",3]]]],[5,"visit_lit_mut","","",null,[[["lit",4]]]],[5,"visit_lit_bool_mut","","",null,[[["litbool",3]]]],[5,"visit_lit_byte_mut","","",null,[[["litbyte",3]]]],[5,"visit_lit_byte_str_mut","","",null,[[["litbytestr",3]]]],[5,"visit_lit_char_mut","","",null,[[["litchar",3]]]],[5,"visit_lit_float_mut","","",null,[[["litfloat",3]]]],[5,"visit_lit_int_mut","","",null,[[["litint",3]]]],[5,"visit_lit_str_mut","","",null,[[["litstr",3]]]],[5,"visit_local_mut","","",null,[[["local",3]]]],[5,"visit_macro_mut","","",null,[[["macro",3]]]],[5,"visit_macro_delimiter_mut","","",null,[[["macrodelimiter",4]]]],[5,"visit_member_mut","","",null,[[["member",4]]]],[5,"visit_meta_mut","","",null,[[["meta",4]]]],[5,"visit_meta_list_mut","","",null,[[["metalist",3]]]],[5,"visit_meta_name_value_mut","","",null,[[["metanamevalue",3]]]],[5,"visit_method_turbofish_mut","","",null,[[["methodturbofish",3]]]],[5,"visit_nested_meta_mut","","",null,[[["nestedmeta",4]]]],[5,"visit_parenthesized_generic_arguments_mut","","",null,[[["parenthesizedgenericarguments",3]]]],[5,"visit_pat_mut","","",null,[[["pat",4]]]],[5,"visit_pat_box_mut","","",null,[[["patbox",3]]]],[5,"visit_pat_ident_mut","","",null,[[["patident",3]]]],[5,"visit_pat_lit_mut","","",null,[[["patlit",3]]]],[5,"visit_pat_macro_mut","","",null,[[["patmacro",3]]]],[5,"visit_pat_or_mut","","",null,[[["pator",3]]]],[5,"visit_pat_path_mut","","",null,[[["patpath",3]]]],[5,"visit_pat_range_mut","","",null,[[["patrange",3]]]],[5,"visit_pat_reference_mut","","",null,[[["patreference",3]]]],[5,"visit_pat_rest_mut","","",null,[[["patrest",3]]]],[5,"visit_pat_slice_mut","","",null,[[["patslice",3]]]],[5,"visit_pat_struct_mut","","",null,[[["patstruct",3]]]],[5,"visit_pat_tuple_mut","","",null,[[["pattuple",3]]]],[5,"visit_pat_tuple_struct_mut","","",null,[[["pattuplestruct",3]]]],[5,"visit_pat_type_mut","","",null,[[["pattype",3]]]],[5,"visit_pat_wild_mut","","",null,[[["patwild",3]]]],[5,"visit_path_mut","","",null,[[["path",3]]]],[5,"visit_path_arguments_mut","","",null,[[["patharguments",4]]]],[5,"visit_path_segment_mut","","",null,[[["pathsegment",3]]]],[5,"visit_predicate_eq_mut","","",null,[[["predicateeq",3]]]],[5,"visit_predicate_lifetime_mut","","",null,[[["predicatelifetime",3]]]],[5,"visit_predicate_type_mut","","",null,[[["predicatetype",3]]]],[5,"visit_qself_mut","","",null,[[["qself",3]]]],[5,"visit_range_limits_mut","","",null,[[["rangelimits",4]]]],[5,"visit_receiver_mut","","",null,[[["receiver",3]]]],[5,"visit_return_type_mut","","",null,[[["returntype",4]]]],[5,"visit_signature_mut","","",null,[[["signature",3]]]],[5,"visit_span_mut","","",null,[[["span",3]]]],[5,"visit_stmt_mut","","",null,[[["stmt",4]]]],[5,"visit_trait_bound_mut","","",null,[[["traitbound",3]]]],[5,"visit_trait_bound_modifier_mut","","",null,[[["traitboundmodifier",4]]]],[5,"visit_trait_item_mut","","",null,[[["traititem",4]]]],[5,"visit_trait_item_const_mut","","",null,[[["traititemconst",3]]]],[5,"visit_trait_item_macro_mut","","",null,[[["traititemmacro",3]]]],[5,"visit_trait_item_method_mut","","",null,[[["traititemmethod",3]]]],[5,"visit_trait_item_type_mut","","",null,[[["traititemtype",3]]]],[5,"visit_type_mut","","",null,[[["type",4]]]],[5,"visit_type_array_mut","","",null,[[["typearray",3]]]],[5,"visit_type_bare_fn_mut","","",null,[[["typebarefn",3]]]],[5,"visit_type_group_mut","","",null,[[["typegroup",3]]]],[5,"visit_type_impl_trait_mut","","",null,[[["typeimpltrait",3]]]],[5,"visit_type_infer_mut","","",null,[[["typeinfer",3]]]],[5,"visit_type_macro_mut","","",null,[[["typemacro",3]]]],[5,"visit_type_never_mut","","",null,[[["typenever",3]]]],[5,"visit_type_param_mut","","",null,[[["typeparam",3]]]],[5,"visit_type_param_bound_mut","","",null,[[["typeparambound",4]]]],[5,"visit_type_paren_mut","","",null,[[["typeparen",3]]]],[5,"visit_type_path_mut","","",null,[[["typepath",3]]]],[5,"visit_type_ptr_mut","","",null,[[["typeptr",3]]]],[5,"visit_type_reference_mut","","",null,[[["typereference",3]]]],[5,"visit_type_slice_mut","","",null,[[["typeslice",3]]]],[5,"visit_type_trait_object_mut","","",null,[[["typetraitobject",3]]]],[5,"visit_type_tuple_mut","","",null,[[["typetuple",3]]]],[5,"visit_un_op_mut","","",null,[[["unop",4]]]],[5,"visit_use_glob_mut","","",null,[[["useglob",3]]]],[5,"visit_use_group_mut","","",null,[[["usegroup",3]]]],[5,"visit_use_name_mut","","",null,[[["usename",3]]]],[5,"visit_use_path_mut","","",null,[[["usepath",3]]]],[5,"visit_use_rename_mut","","",null,[[["userename",3]]]],[5,"visit_use_tree_mut","","",null,[[["usetree",4]]]],[5,"visit_variadic_mut","","",null,[[["variadic",3]]]],[5,"visit_variant_mut","","",null,[[["variant",3]]]],[5,"visit_vis_crate_mut","","",null,[[["viscrate",3]]]],[5,"visit_vis_public_mut","","",null,[[["vispublic",3]]]],[5,"visit_vis_restricted_mut","","",null,[[["visrestricted",3]]]],[5,"visit_visibility_mut","","",null,[[["visibility",4]]]],[5,"visit_where_clause_mut","","",null,[[["whereclause",3]]]],[5,"visit_where_predicate_mut","","",null,[[["wherepredicate",4]]]],[0,"parse","syn","Parsing interface for parsing a token stream into a …",null,null],[0,"discouraged","syn::parse","Extensions to the parsing API with niche applicability.",null,null],[8,"Speculative","syn::parse::discouraged","Extensions to the <code>ParseStream</code> API to support speculative …",null,null],[10,"advance_to","","Advance this parse stream to the position of a forked …",110,[[]]],[3,"Error","syn::parse","Error returned when a Syn parser cannot parse the input …",null,null],[6,"Result","","The result of a Syn parser.",null,null],[3,"Lookahead1","","Support for checking the next token in a stream to decide …",null,null],[8,"Peek","","Types that can be parsed by looking at just one token.",null,null],[8,"Parse","","Parsing interface implemented by all types that can be …",null,null],[10,"parse","","",111,[[["parsestream",6]],["result",6]]],[6,"ParseStream","","Input to a Syn parser function.",null,null],[3,"ParseBuffer","","Cursor position within a buffered token stream.",null,null],[3,"StepCursor","","Cursor state associated with speculative parsing.",null,null],[11,"error","","Triggers an error at the current position of the parse …",112,[[["display",8]],["error",3]]],[11,"parse","","Parses a syntax tree node of type <code>T</code>, advancing the …",113,[[],[["result",6],["parse",8]]]],[11,"call","","Calls the given parser function to parse a syntax tree …",113,[[],["result",6]]],[11,"peek","","Looks at the next token in the parse stream to determine …",113,[[["peek",8]]]],[11,"peek2","","Looks at the second-next token in the parse stream.",113,[[["peek",8]]]],[11,"peek3","","Looks at the third-next token in the parse stream.",113,[[["peek",8]]]],[11,"parse_terminated","","Parses zero or more occurrences of <code>T</code> separated by …",113,[[],[["punctuated",3],["result",6]]]],[11,"is_empty","","Returns whether there are tokens remaining in this stream.",113,[[]]],[11,"lookahead1","","Constructs a helper for peeking at the next token in this …",113,[[],["lookahead1",3]]],[11,"fork","","Forks a parse stream so that parsing tokens out of either …",113,[[]]],[11,"error","","Triggers an error at the current position of the parse …",113,[[["display",8]],["error",3]]],[11,"step","","Speculatively parses tokens from this parse stream, …",113,[[],["result",6]]],[11,"span","","Returns the <code>Span</code> of the next token in the parse stream, or…",113,[[],["span",3]]],[11,"cursor","","Provides low-level access to the token representation …",113,[[],["cursor",3]]],[8,"Parser","","Parser that can parse Rust tokens into a particular …",null,null],[16,"Output","","",114,null],[10,"parse2","","Parse a proc-macro2 token stream into the chosen syntax …",114,[[["tokenstream",3]],["result",6]]],[11,"parse","","Parse tokens of source code into the chosen syntax tree …",114,[[["tokenstream",3]],["result",6]]],[11,"parse_str","","Parse a string of Rust code into the chosen syntax tree …",114,[[],["result",6]]],[3,"Nothing","","An empty syntax tree node that consumes no tokens when …",null,null],[11,"new","","Usually the <code>ParseStream::error</code> method will be used …",115,[[["display",8],["span",3]]]],[11,"new_spanned","","Creates an error with the specified message spanning the …",115,[[["display",8],["totokens",8]]]],[11,"span","","The source location of the error.",115,[[],["span",3]]],[11,"to_compile_error","","Render the error as an invocation of <code>compile_error!</code>.",115,[[],["tokenstream",3]]],[11,"combine","","Add another error message to self such that when …",115,[[["error",3]]]],[4,"AttrStyle","syn","Distinguishes between attributes that decorate an item …",null,null],[13,"Outer","","",116,null],[13,"Inner","","",116,null],[3,"Attribute","","An attribute like <code>#[repr(transparent)]</code>.",null,null],[12,"pound_token","","",117,null],[12,"style","","",117,null],[12,"bracket_token","","",117,null],[12,"path","","",117,null],[12,"tokens","","",117,null],[6,"AttributeArgs","","Conventional argument type associated with an invocation …",null,null],[4,"Meta","","Content of a compile-time structured attribute.",null,null],[13,"Path","","",118,null],[13,"List","","A structured list within an attribute, like …",118,null],[13,"NameValue","","A name-value pair within an attribute, like …",118,null],[3,"MetaList","","A structured list within an attribute, like …",null,null],[12,"path","","",119,null],[12,"paren_token","","",119,null],[12,"nested","","",119,null],[3,"MetaNameValue","","A name-value pair within an attribute, like …",null,null],[12,"path","","",120,null],[12,"eq_token","","",120,null],[12,"lit","","",120,null],[4,"NestedMeta","","Element of a compile-time attribute list.",null,null],[13,"Meta","","A structured meta item, like the <code>Copy</code> in <code>#[derive(Copy)]</code> …",121,null],[13,"Lit","","A Rust literal, like the <code>\\\"new_name\\\"</code> in …",121,null],[3,"Field","","A field of a struct or enum variant.",null,null],[12,"attrs","","Attributes tagged on the field.",122,null],[12,"vis","","Visibility of the field.",122,null],[12,"ident","","Name of the field, if any.",122,null],[12,"colon_token","","",122,null],[12,"ty","","Type of the field.",122,null],[4,"Fields","","Data stored within an enum variant or struct.",null,null],[13,"Named","","Named fields of a struct or struct variant such as …",123,null],[13,"Unnamed","","Unnamed fields of a tuple struct or tuple variant such as …",123,null],[13,"Unit","","Unit struct or unit variant such as <code>None</code>.",123,null],[3,"FieldsNamed","","Named fields of a struct or struct variant such as …",null,null],[12,"brace_token","","",124,null],[12,"named","","",124,null],[3,"FieldsUnnamed","","Unnamed fields of a tuple struct or tuple variant such as …",null,null],[12,"paren_token","","",125,null],[12,"unnamed","","",125,null],[3,"Variant","","An enum variant.",null,null],[12,"attrs","","Attributes tagged on the variant.",126,null],[12,"ident","","Name of the variant.",126,null],[12,"fields","","Content stored in the variant.",126,null],[12,"discriminant","","Explicit discriminant: <code>Variant = 1</code>",126,null],[3,"VisCrate","","A crate-level visibility: <code>crate</code>.",null,null],[12,"crate_token","","",127,null],[3,"VisPublic","","A public visibility level: <code>pub</code>.",null,null],[12,"pub_token","","",128,null],[3,"VisRestricted","","A visibility level restricted to some path: <code>pub(self)</code> or …",null,null],[12,"pub_token","","",129,null],[12,"paren_token","","",129,null],[12,"in_token","","",129,null],[12,"path","","",129,null],[4,"Visibility","","The visibility level of an item: inherited or <code>pub</code> or …",null,null],[13,"Public","","A public visibility level: <code>pub</code>.",130,null],[13,"Crate","","A crate-level visibility: <code>crate</code>.",130,null],[13,"Restricted","","A visibility level restricted to some path: <code>pub(self)</code> or …",130,null],[13,"Inherited","","An inherited visibility, which usually means private.",130,null],[3,"Arm","","One arm of a <code>match</code> expression: <code>0...10 => { return true; }</code>.",null,null],[12,"attrs","","",131,null],[12,"pat","","",131,null],[12,"guard","","",131,null],[12,"fat_arrow_token","","",131,null],[12,"body","","",131,null],[12,"comma","","",131,null],[3,"FieldValue","","A field-value pair in a struct literal.",null,null],[12,"attrs","","Attributes tagged on the field.",132,null],[12,"member","","Name or index of the field.",132,null],[12,"colon_token","","The colon in <code>Struct { x: x }</code>. If written in shorthand like…",132,null],[12,"expr","","Value of the field.",132,null],[4,"GenericMethodArgument","","An individual generic argument to a method, like <code>T</code>.",null,null],[13,"Type","","A type argument.",133,null],[13,"Const","","A const expression. Must be inside of a block.",133,null],[3,"Label","","A lifetime labeling a <code>for</code>, <code>while</code>, or <code>loop</code>.",null,null],[12,"name","","",134,null],[12,"colon_token","","",134,null],[3,"MethodTurbofish","","The <code>::<></code> explicit type parameters passed to a method call:…",null,null],[12,"colon2_token","","",135,null],[12,"lt_token","","",135,null],[12,"args","","",135,null],[12,"gt_token","","",135,null],[4,"RangeLimits","","Limit types of a range, inclusive or exclusive.",null,null],[13,"HalfOpen","","Inclusive at the beginning, exclusive at the end.",136,null],[13,"Closed","","Inclusive at the beginning and end.",136,null],[4,"Expr","","A Rust expression.",null,null],[13,"Array","","A slice literal expression: <code>[a, b, c, d]</code>.",137,null],[13,"Assign","","An assignment expression: <code>a = compute()</code>.",137,null],[13,"AssignOp","","A compound assignment expression: <code>counter += 1</code>.",137,null],[13,"Async","","An async block: <code>async { ... }</code>.",137,null],[13,"Await","","An await expression: <code>fut.await</code>.",137,null],[13,"Binary","","A binary operation: <code>a + b</code>, <code>a * b</code>.",137,null],[13,"Block","","A blocked scope: <code>{ ... }</code>.",137,null],[13,"Box","","A box expression: <code>box f</code>.",137,null],[13,"Break","","A <code>break</code>, with an optional label to break and an optional …",137,null],[13,"Call","","A function call expression: <code>invoke(a, b)</code>.",137,null],[13,"Cast","","A cast expression: <code>foo as f64</code>.",137,null],[13,"Closure","","A closure expression: <code>|a, b| a + b</code>.",137,null],[13,"Continue","","A <code>continue</code>, with an optional label.",137,null],[13,"Field","","Access of a named struct field (<code>obj.k</code>) or unnamed tuple …",137,null],[13,"ForLoop","","A for loop: <code>for pat in expr { ... }</code>.",137,null],[13,"Group","","An expression contained within invisible delimiters.",137,null],[13,"If","","An <code>if</code> expression with an optional <code>else</code> block: …",137,null],[13,"Index","","A square bracketed indexing expression: <code>vector[2]</code>.",137,null],[13,"Let","","A <code>let</code> guard: <code>let Some(x) = opt</code>.",137,null],[13,"Lit","","A literal in place of an expression: <code>1</code>, <code>\\\"foo\\\"</code>.",137,null],[13,"Loop","","Conditionless loop: <code>loop { ... }</code>.",137,null],[13,"Macro","","A macro invocation expression: <code>format!(\\\"{}\\\", q)</code>.",137,null],[13,"Match","","A <code>match</code> expression: <code>match n { Some(n) => {}, None => {} }</code>.",137,null],[13,"MethodCall","","A method call expression: <code>x.foo::<T>(a, b)</code>.",137,null],[13,"Paren","","A parenthesized expression: <code>(a + b)</code>.",137,null],[13,"Path","","A path like <code>std::mem::replace</code> possibly containing generic …",137,null],[13,"Range","","A range expression: <code>1..2</code>, <code>1..</code>, <code>..2</code>, <code>1..=2</code>, <code>..=2</code>.",137,null],[13,"Reference","","A referencing operation: <code>&a</code> or <code>&mut a</code>.",137,null],[13,"Repeat","","An array literal constructed from one repeated element: …",137,null],[13,"Return","","A <code>return</code>, with an optional value to be returned.",137,null],[13,"Struct","","A struct literal expression: <code>Point { x: 1, y: 1 }</code>.",137,null],[13,"Try","","A try-expression: <code>expr?</code>.",137,null],[13,"TryBlock","","A try block: <code>try { ... }</code>.",137,null],[13,"Tuple","","A tuple expression: <code>(a, b, c, d)</code>.",137,null],[13,"Type","","A type ascription expression: <code>foo: f64</code>.",137,null],[13,"Unary","","A unary operation: <code>!x</code>, <code>*x</code>.",137,null],[13,"Unsafe","","An unsafe block: <code>unsafe { ... }</code>.",137,null],[13,"Verbatim","","Tokens in expression position not interpreted by Syn.",137,null],[13,"While","","A while loop: <code>while expr { ... }</code>.",137,null],[13,"Yield","","A yield expression: <code>yield expr</code>.",137,null],[3,"ExprArray","","A slice literal expression: <code>[a, b, c, d]</code>.",null,null],[12,"attrs","","",138,null],[12,"bracket_token","","",138,null],[12,"elems","","",138,null],[3,"ExprAssign","","An assignment expression: <code>a = compute()</code>.",null,null],[12,"attrs","","",139,null],[12,"left","","",139,null],[12,"eq_token","","",139,null],[12,"right","","",139,null],[3,"ExprAssignOp","","A compound assignment expression: <code>counter += 1</code>.",null,null],[12,"attrs","","",140,null],[12,"left","","",140,null],[12,"op","","",140,null],[12,"right","","",140,null],[3,"ExprAsync","","An async block: <code>async { ... }</code>.",null,null],[12,"attrs","","",141,null],[12,"async_token","","",141,null],[12,"capture","","",141,null],[12,"block","","",141,null],[3,"ExprAwait","","An await expression: <code>fut.await</code>.",null,null],[12,"attrs","","",142,null],[12,"base","","",142,null],[12,"dot_token","","",142,null],[12,"await_token","","",142,null],[3,"ExprBinary","","A binary operation: <code>a + b</code>, <code>a * b</code>.",null,null],[12,"attrs","","",143,null],[12,"left","","",143,null],[12,"op","","",143,null],[12,"right","","",143,null],[3,"ExprBlock","","A blocked scope: <code>{ ... }</code>.",null,null],[12,"attrs","","",144,null],[12,"label","","",144,null],[12,"block","","",144,null],[3,"ExprBox","","A box expression: <code>box f</code>.",null,null],[12,"attrs","","",145,null],[12,"box_token","","",145,null],[12,"expr","","",145,null],[3,"ExprBreak","","A <code>break</code>, with an optional label to break and an optional …",null,null],[12,"attrs","","",146,null],[12,"break_token","","",146,null],[12,"label","","",146,null],[12,"expr","","",146,null],[3,"ExprCall","","A function call expression: <code>invoke(a, b)</code>.",null,null],[12,"attrs","","",147,null],[12,"func","","",147,null],[12,"paren_token","","",147,null],[12,"args","","",147,null],[3,"ExprCast","","A cast expression: <code>foo as f64</code>.",null,null],[12,"attrs","","",148,null],[12,"expr","","",148,null],[12,"as_token","","",148,null],[12,"ty","","",148,null],[3,"ExprClosure","","A closure expression: <code>|a, b| a + b</code>.",null,null],[12,"attrs","","",149,null],[12,"asyncness","","",149,null],[12,"movability","","",149,null],[12,"capture","","",149,null],[12,"or1_token","","",149,null],[12,"inputs","","",149,null],[12,"or2_token","","",149,null],[12,"output","","",149,null],[12,"body","","",149,null],[3,"ExprContinue","","A <code>continue</code>, with an optional label.",null,null],[12,"attrs","","",150,null],[12,"continue_token","","",150,null],[12,"label","","",150,null],[3,"ExprField","","Access of a named struct field (<code>obj.k</code>) or unnamed tuple …",null,null],[12,"attrs","","",151,null],[12,"base","","",151,null],[12,"dot_token","","",151,null],[12,"member","","",151,null],[3,"ExprForLoop","","A for loop: <code>for pat in expr { ... }</code>.",null,null],[12,"attrs","","",152,null],[12,"label","","",152,null],[12,"for_token","","",152,null],[12,"pat","","",152,null],[12,"in_token","","",152,null],[12,"expr","","",152,null],[12,"body","","",152,null],[3,"ExprGroup","","An expression contained within invisible delimiters.",null,null],[12,"attrs","","",153,null],[12,"group_token","","",153,null],[12,"expr","","",153,null],[3,"ExprIf","","An <code>if</code> expression with an optional <code>else</code> block: …",null,null],[12,"attrs","","",154,null],[12,"if_token","","",154,null],[12,"cond","","",154,null],[12,"then_branch","","",154,null],[12,"else_branch","","",154,null],[3,"ExprIndex","","A square bracketed indexing expression: <code>vector[2]</code>.",null,null],[12,"attrs","","",155,null],[12,"expr","","",155,null],[12,"bracket_token","","",155,null],[12,"index","","",155,null],[3,"ExprLet","","A <code>let</code> guard: <code>let Some(x) = opt</code>.",null,null],[12,"attrs","","",156,null],[12,"let_token","","",156,null],[12,"pat","","",156,null],[12,"eq_token","","",156,null],[12,"expr","","",156,null],[3,"ExprLit","","A literal in place of an expression: <code>1</code>, <code>\\\"foo\\\"</code>.",null,null],[12,"attrs","","",157,null],[12,"lit","","",157,null],[3,"ExprLoop","","Conditionless loop: <code>loop { ... }</code>.",null,null],[12,"attrs","","",158,null],[12,"label","","",158,null],[12,"loop_token","","",158,null],[12,"body","","",158,null],[3,"ExprMacro","","A macro invocation expression: <code>format!(\\\"{}\\\", q)</code>.",null,null],[12,"attrs","","",159,null],[12,"mac","","",159,null],[3,"ExprMatch","","A <code>match</code> expression: <code>match n { Some(n) => {}, None => {} }</code>.",null,null],[12,"attrs","","",160,null],[12,"match_token","","",160,null],[12,"expr","","",160,null],[12,"brace_token","","",160,null],[12,"arms","","",160,null],[3,"ExprMethodCall","","A method call expression: <code>x.foo::<T>(a, b)</code>.",null,null],[12,"attrs","","",161,null],[12,"receiver","","",161,null],[12,"dot_token","","",161,null],[12,"method","","",161,null],[12,"turbofish","","",161,null],[12,"paren_token","","",161,null],[12,"args","","",161,null],[3,"ExprParen","","A parenthesized expression: <code>(a + b)</code>.",null,null],[12,"attrs","","",162,null],[12,"paren_token","","",162,null],[12,"expr","","",162,null],[3,"ExprPath","","A path like <code>std::mem::replace</code> possibly containing generic …",null,null],[12,"attrs","","",163,null],[12,"qself","","",163,null],[12,"path","","",163,null],[3,"ExprRange","","A range expression: <code>1..2</code>, <code>1..</code>, <code>..2</code>, <code>1..=2</code>, <code>..=2</code>.",null,null],[12,"attrs","","",164,null],[12,"from","","",164,null],[12,"limits","","",164,null],[12,"to","","",164,null],[3,"ExprReference","","A referencing operation: <code>&a</code> or <code>&mut a</code>.",null,null],[12,"attrs","","",165,null],[12,"and_token","","",165,null],[12,"raw","","",165,null],[12,"mutability","","",165,null],[12,"expr","","",165,null],[3,"ExprRepeat","","An array literal constructed from one repeated element: …",null,null],[12,"attrs","","",166,null],[12,"bracket_token","","",166,null],[12,"expr","","",166,null],[12,"semi_token","","",166,null],[12,"len","","",166,null],[3,"ExprReturn","","A <code>return</code>, with an optional value to be returned.",null,null],[12,"attrs","","",167,null],[12,"return_token","","",167,null],[12,"expr","","",167,null],[3,"ExprStruct","","A struct literal expression: <code>Point { x: 1, y: 1 }</code>.",null,null],[12,"attrs","","",168,null],[12,"path","","",168,null],[12,"brace_token","","",168,null],[12,"fields","","",168,null],[12,"dot2_token","","",168,null],[12,"rest","","",168,null],[3,"ExprTry","","A try-expression: <code>expr?</code>.",null,null],[12,"attrs","","",169,null],[12,"expr","","",169,null],[12,"question_token","","",169,null],[3,"ExprTryBlock","","A try block: <code>try { ... }</code>.",null,null],[12,"attrs","","",170,null],[12,"try_token","","",170,null],[12,"block","","",170,null],[3,"ExprTuple","","A tuple expression: <code>(a, b, c, d)</code>.",null,null],[12,"attrs","","",171,null],[12,"paren_token","","",171,null],[12,"elems","","",171,null],[3,"ExprType","","A type ascription expression: <code>foo: f64</code>.",null,null],[12,"attrs","","",172,null],[12,"expr","","",172,null],[12,"colon_token","","",172,null],[12,"ty","","",172,null],[3,"ExprUnary","","A unary operation: <code>!x</code>, <code>*x</code>.",null,null],[12,"attrs","","",173,null],[12,"op","","",173,null],[12,"expr","","",173,null],[3,"ExprUnsafe","","An unsafe block: <code>unsafe { ... }</code>.",null,null],[12,"attrs","","",174,null],[12,"unsafe_token","","",174,null],[12,"block","","",174,null],[3,"ExprWhile","","A while loop: <code>while expr { ... }</code>.",null,null],[12,"attrs","","",175,null],[12,"label","","",175,null],[12,"while_token","","",175,null],[12,"cond","","",175,null],[12,"body","","",175,null],[3,"ExprYield","","A yield expression: <code>yield expr</code>.",null,null],[12,"attrs","","",176,null],[12,"yield_token","","",176,null],[12,"expr","","",176,null],[3,"Index","","The index of an unnamed tuple struct field.",null,null],[12,"index","","",177,null],[12,"span","","",177,null],[4,"Member","","A struct or tuple struct field accessed in a struct …",null,null],[13,"Named","","A named field like <code>self.x</code>.",178,null],[13,"Unnamed","","An unnamed field like <code>self.0</code>.",178,null],[3,"BoundLifetimes","","A set of bound lifetimes: <code>for<\'a, \'b, \'c></code>.",null,null],[12,"for_token","","",179,null],[12,"lt_token","","",179,null],[12,"lifetimes","","",179,null],[12,"gt_token","","",179,null],[3,"ConstParam","","A const generic parameter: <code>const LENGTH: usize</code>.",null,null],[12,"attrs","","",180,null],[12,"const_token","","",180,null],[12,"ident","","",180,null],[12,"colon_token","","",180,null],[12,"ty","","",180,null],[12,"eq_token","","",180,null],[12,"default","","",180,null],[4,"GenericParam","","A generic type parameter, lifetime, or const generic: …",null,null],[13,"Type","","A generic type parameter: <code>T: Into<String></code>.",181,null],[13,"Lifetime","","A lifetime definition: <code>\'a: \'b + \'c + \'d</code>.",181,null],[13,"Const","","A const generic parameter: <code>const LENGTH: usize</code>.",181,null],[3,"Generics","","Lifetimes and type parameters attached to a declaration …",null,null],[12,"lt_token","","",182,null],[12,"params","","",182,null],[12,"gt_token","","",182,null],[12,"where_clause","","",182,null],[3,"LifetimeDef","","A lifetime definition: <code>\'a: \'b + \'c + \'d</code>.",null,null],[12,"attrs","","",183,null],[12,"lifetime","","",183,null],[12,"colon_token","","",183,null],[12,"bounds","","",183,null],[3,"PredicateEq","","An equality predicate in a <code>where</code> clause (unsupported).",null,null],[12,"lhs_ty","","",184,null],[12,"eq_token","","",184,null],[12,"rhs_ty","","",184,null],[3,"PredicateLifetime","","A lifetime predicate in a <code>where</code> clause: <code>\'a: \'b + \'c</code>.",null,null],[12,"lifetime","","",185,null],[12,"colon_token","","",185,null],[12,"bounds","","",185,null],[3,"PredicateType","","A type predicate in a <code>where</code> clause: …",null,null],[12,"lifetimes","","Any lifetimes from a <code>for</code> binding",186,null],[12,"bounded_ty","","The type being bounded",186,null],[12,"colon_token","","",186,null],[12,"bounds","","Trait and lifetime bounds (<code>Clone+Send+\'static</code>)",186,null],[3,"TraitBound","","A trait used as a bound on a type parameter.",null,null],[12,"paren_token","","",187,null],[12,"modifier","","",187,null],[12,"lifetimes","","The <code>for<\'a></code> in <code>for<\'a> Foo<&\'a T></code>",187,null],[12,"path","","The <code>Foo<&\'a T></code> in <code>for<\'a> Foo<&\'a T></code>",187,null],[4,"TraitBoundModifier","","A modifier on a trait bound, currently only used for the <code>?</code>…",null,null],[13,"None","","",188,null],[13,"Maybe","","",188,null],[3,"TypeParam","","A generic type parameter: <code>T: Into<String></code>.",null,null],[12,"attrs","","",189,null],[12,"ident","","",189,null],[12,"colon_token","","",189,null],[12,"bounds","","",189,null],[12,"eq_token","","",189,null],[12,"default","","",189,null],[4,"TypeParamBound","","A trait or lifetime used as a bound on a type parameter.",null,null],[13,"Trait","","",190,null],[13,"Lifetime","","",190,null],[3,"WhereClause","","A <code>where</code> clause in a definition: …",null,null],[12,"where_token","","",191,null],[12,"predicates","","",191,null],[4,"WherePredicate","","A single predicate in a <code>where</code> clause: <code>T: Deserialize<\'de></code>.",null,null],[13,"Type","","A type predicate in a <code>where</code> clause: …",192,null],[13,"Lifetime","","A lifetime predicate in a <code>where</code> clause: <code>\'a: \'b + \'c</code>.",192,null],[13,"Eq","","An equality predicate in a <code>where</code> clause (unsupported).",192,null],[3,"ImplGenerics","","Returned by <code>Generics::split_for_impl</code>.",null,null],[3,"Turbofish","","Returned by <code>TypeGenerics::as_turbofish</code>.",null,null],[3,"TypeGenerics","","Returned by <code>Generics::split_for_impl</code>.",null,null],[4,"FnArg","","An argument in a function signature: the <code>n: usize</code> in …",null,null],[13,"Receiver","","The <code>self</code> argument of an associated method, whether taken …",193,null],[13,"Typed","","A function argument accepted by pattern and type.",193,null],[4,"ForeignItem","","An item within an <code>extern</code> block.",null,null],[13,"Fn","","A foreign function in an <code>extern</code> block.",194,null],[13,"Static","","A foreign static item in an <code>extern</code> block: <code>static ext: u8</code>.",194,null],[13,"Type","","A foreign type in an <code>extern</code> block: <code>type void</code>.",194,null],[13,"Macro","","A macro invocation within an extern block.",194,null],[13,"Verbatim","","Tokens in an <code>extern</code> block not interpreted by Syn.",194,null],[3,"ForeignItemFn","","A foreign function in an <code>extern</code> block.",null,null],[12,"attrs","","",195,null],[12,"vis","","",195,null],[12,"sig","","",195,null],[12,"semi_token","","",195,null],[3,"ForeignItemMacro","","A macro invocation within an extern block.",null,null],[12,"attrs","","",196,null],[12,"mac","","",196,null],[12,"semi_token","","",196,null],[3,"ForeignItemStatic","","A foreign static item in an <code>extern</code> block: <code>static ext: u8</code>.",null,null],[12,"attrs","","",197,null],[12,"vis","","",197,null],[12,"static_token","","",197,null],[12,"mutability","","",197,null],[12,"ident","","",197,null],[12,"colon_token","","",197,null],[12,"ty","","",197,null],[12,"semi_token","","",197,null],[3,"ForeignItemType","","A foreign type in an <code>extern</code> block: <code>type void</code>.",null,null],[12,"attrs","","",198,null],[12,"vis","","",198,null],[12,"type_token","","",198,null],[12,"ident","","",198,null],[12,"semi_token","","",198,null],[4,"ImplItem","","An item within an impl block.",null,null],[13,"Const","","An associated constant within an impl block.",199,null],[13,"Method","","A method within an impl block.",199,null],[13,"Type","","An associated type within an impl block.",199,null],[13,"Macro","","A macro invocation within an impl block.",199,null],[13,"Verbatim","","Tokens within an impl block not interpreted by Syn.",199,null],[3,"ImplItemConst","","An associated constant within an impl block.",null,null],[12,"attrs","","",200,null],[12,"vis","","",200,null],[12,"defaultness","","",200,null],[12,"const_token","","",200,null],[12,"ident","","",200,null],[12,"colon_token","","",200,null],[12,"ty","","",200,null],[12,"eq_token","","",200,null],[12,"expr","","",200,null],[12,"semi_token","","",200,null],[3,"ImplItemMacro","","A macro invocation within an impl block.",null,null],[12,"attrs","","",201,null],[12,"mac","","",201,null],[12,"semi_token","","",201,null],[3,"ImplItemMethod","","A method within an impl block.",null,null],[12,"attrs","","",202,null],[12,"vis","","",202,null],[12,"defaultness","","",202,null],[12,"sig","","",202,null],[12,"block","","",202,null],[3,"ImplItemType","","An associated type within an impl block.",null,null],[12,"attrs","","",203,null],[12,"vis","","",203,null],[12,"defaultness","","",203,null],[12,"type_token","","",203,null],[12,"ident","","",203,null],[12,"generics","","",203,null],[12,"eq_token","","",203,null],[12,"ty","","",203,null],[12,"semi_token","","",203,null],[4,"Item","","Things that can appear directly inside of a module or …",null,null],[13,"Const","","A constant item: <code>const MAX: u16 = 65535</code>.",204,null],[13,"Enum","","An enum definition: <code>enum Foo<A, B> { A(A), B(B) }</code>.",204,null],[13,"ExternCrate","","An <code>extern crate</code> item: <code>extern crate serde</code>.",204,null],[13,"Fn","","A free-standing function: …",204,null],[13,"ForeignMod","","A block of foreign items: <code>extern \\\"C\\\" { ... }</code>.",204,null],[13,"Impl","","An impl block providing trait or associated items: …",204,null],[13,"Macro","","A macro invocation, which includes <code>macro_rules!</code> …",204,null],[13,"Macro2","","A 2.0-style declarative macro introduced by the <code>macro</code> …",204,null],[13,"Mod","","A module or module declaration: <code>mod m</code> or <code>mod m { ... }</code>.",204,null],[13,"Static","","A static item: <code>static BIKE: Shed = Shed(42)</code>.",204,null],[13,"Struct","","A struct definition: <code>struct Foo<A> { x: A }</code>.",204,null],[13,"Trait","","A trait definition: <code>pub trait Iterator { ... }</code>.",204,null],[13,"TraitAlias","","A trait alias: …",204,null],[13,"Type","","A type alias: …",204,null],[13,"Union","","A union definition: <code>union Foo<A, B> { x: A, y: B }</code>.",204,null],[13,"Use","","A use declaration: <code>use std::collections::HashMap</code>.",204,null],[13,"Verbatim","","Tokens forming an item not interpreted by Syn.",204,null],[3,"ItemConst","","A constant item: <code>const MAX: u16 = 65535</code>.",null,null],[12,"attrs","","",205,null],[12,"vis","","",205,null],[12,"const_token","","",205,null],[12,"ident","","",205,null],[12,"colon_token","","",205,null],[12,"ty","","",205,null],[12,"eq_token","","",205,null],[12,"expr","","",205,null],[12,"semi_token","","",205,null],[3,"ItemEnum","","An enum definition: <code>enum Foo<A, B> { A(A), B(B) }</code>.",null,null],[12,"attrs","","",206,null],[12,"vis","","",206,null],[12,"enum_token","","",206,null],[12,"ident","","",206,null],[12,"generics","","",206,null],[12,"brace_token","","",206,null],[12,"variants","","",206,null],[3,"ItemExternCrate","","An <code>extern crate</code> item: <code>extern crate serde</code>.",null,null],[12,"attrs","","",207,null],[12,"vis","","",207,null],[12,"extern_token","","",207,null],[12,"crate_token","","",207,null],[12,"ident","","",207,null],[12,"rename","","",207,null],[12,"semi_token","","",207,null],[3,"ItemFn","","A free-standing function: …",null,null],[12,"attrs","","",208,null],[12,"vis","","",208,null],[12,"sig","","",208,null],[12,"block","","",208,null],[3,"ItemForeignMod","","A block of foreign items: <code>extern \\\"C\\\" { ... }</code>.",null,null],[12,"attrs","","",209,null],[12,"abi","","",209,null],[12,"brace_token","","",209,null],[12,"items","","",209,null],[3,"ItemImpl","","An impl block providing trait or associated items: …",null,null],[12,"attrs","","",210,null],[12,"defaultness","","",210,null],[12,"unsafety","","",210,null],[12,"impl_token","","",210,null],[12,"generics","","",210,null],[12,"trait_","","Trait this impl implements.",210,null],[12,"self_ty","","The Self type of the impl.",210,null],[12,"brace_token","","",210,null],[12,"items","","",210,null],[3,"ItemMacro","","A macro invocation, which includes <code>macro_rules!</code> …",null,null],[12,"attrs","","",211,null],[12,"ident","","The <code>example</code> in <code>macro_rules! example { ... }</code>.",211,null],[12,"mac","","",211,null],[12,"semi_token","","",211,null],[3,"ItemMacro2","","A 2.0-style declarative macro introduced by the <code>macro</code> …",null,null],[12,"attrs","","",212,null],[12,"vis","","",212,null],[12,"macro_token","","",212,null],[12,"ident","","",212,null],[12,"rules","","",212,null],[3,"ItemMod","","A module or module declaration: <code>mod m</code> or <code>mod m { ... }</code>.",null,null],[12,"attrs","","",213,null],[12,"vis","","",213,null],[12,"mod_token","","",213,null],[12,"ident","","",213,null],[12,"content","","",213,null],[12,"semi","","",213,null],[3,"ItemStatic","","A static item: <code>static BIKE: Shed = Shed(42)</code>.",null,null],[12,"attrs","","",214,null],[12,"vis","","",214,null],[12,"static_token","","",214,null],[12,"mutability","","",214,null],[12,"ident","","",214,null],[12,"colon_token","","",214,null],[12,"ty","","",214,null],[12,"eq_token","","",214,null],[12,"expr","","",214,null],[12,"semi_token","","",214,null],[3,"ItemStruct","","A struct definition: <code>struct Foo<A> { x: A }</code>.",null,null],[12,"attrs","","",215,null],[12,"vis","","",215,null],[12,"struct_token","","",215,null],[12,"ident","","",215,null],[12,"generics","","",215,null],[12,"fields","","",215,null],[12,"semi_token","","",215,null],[3,"ItemTrait","","A trait definition: <code>pub trait Iterator { ... }</code>.",null,null],[12,"attrs","","",216,null],[12,"vis","","",216,null],[12,"unsafety","","",216,null],[12,"auto_token","","",216,null],[12,"trait_token","","",216,null],[12,"ident","","",216,null],[12,"generics","","",216,null],[12,"colon_token","","",216,null],[12,"supertraits","","",216,null],[12,"brace_token","","",216,null],[12,"items","","",216,null],[3,"ItemTraitAlias","","A trait alias: …",null,null],[12,"attrs","","",217,null],[12,"vis","","",217,null],[12,"trait_token","","",217,null],[12,"ident","","",217,null],[12,"generics","","",217,null],[12,"eq_token","","",217,null],[12,"bounds","","",217,null],[12,"semi_token","","",217,null],[3,"ItemType","","A type alias: …",null,null],[12,"attrs","","",218,null],[12,"vis","","",218,null],[12,"type_token","","",218,null],[12,"ident","","",218,null],[12,"generics","","",218,null],[12,"eq_token","","",218,null],[12,"ty","","",218,null],[12,"semi_token","","",218,null],[3,"ItemUnion","","A union definition: <code>union Foo<A, B> { x: A, y: B }</code>.",null,null],[12,"attrs","","",219,null],[12,"vis","","",219,null],[12,"union_token","","",219,null],[12,"ident","","",219,null],[12,"generics","","",219,null],[12,"fields","","",219,null],[3,"ItemUse","","A use declaration: <code>use std::collections::HashMap</code>.",null,null],[12,"attrs","","",220,null],[12,"vis","","",220,null],[12,"use_token","","",220,null],[12,"leading_colon","","",220,null],[12,"tree","","",220,null],[12,"semi_token","","",220,null],[3,"Receiver","","The <code>self</code> argument of an associated method, whether taken …",null,null],[12,"attrs","","",221,null],[12,"reference","","",221,null],[12,"mutability","","",221,null],[12,"self_token","","",221,null],[3,"Signature","","A function signature in a trait or implementation: …",null,null],[12,"constness","","",222,null],[12,"asyncness","","",222,null],[12,"unsafety","","",222,null],[12,"abi","","",222,null],[12,"fn_token","","",222,null],[12,"ident","","",222,null],[12,"generics","","",222,null],[12,"paren_token","","",222,null],[12,"inputs","","",222,null],[12,"variadic","","",222,null],[12,"output","","",222,null],[4,"TraitItem","","An item declaration within the definition of a trait.",null,null],[13,"Const","","An associated constant within the definition of a trait.",223,null],[13,"Method","","A trait method within the definition of a trait.",223,null],[13,"Type","","An associated type within the definition of a trait.",223,null],[13,"Macro","","A macro invocation within the definition of a trait.",223,null],[13,"Verbatim","","Tokens within the definition of a trait not interpreted …",223,null],[3,"TraitItemConst","","An associated constant within the definition of a trait.",null,null],[12,"attrs","","",224,null],[12,"const_token","","",224,null],[12,"ident","","",224,null],[12,"colon_token","","",224,null],[12,"ty","","",224,null],[12,"default","","",224,null],[12,"semi_token","","",224,null],[3,"TraitItemMacro","","A macro invocation within the definition of a trait.",null,null],[12,"attrs","","",225,null],[12,"mac","","",225,null],[12,"semi_token","","",225,null],[3,"TraitItemMethod","","A trait method within the definition of a trait.",null,null],[12,"attrs","","",226,null],[12,"sig","","",226,null],[12,"default","","",226,null],[12,"semi_token","","",226,null],[3,"TraitItemType","","An associated type within the definition of a trait.",null,null],[12,"attrs","","",227,null],[12,"type_token","","",227,null],[12,"ident","","",227,null],[12,"generics","","",227,null],[12,"colon_token","","",227,null],[12,"bounds","","",227,null],[12,"default","","",227,null],[12,"semi_token","","",227,null],[3,"UseGlob","","A glob import in a <code>use</code> item: <code>*</code>.",null,null],[12,"star_token","","",228,null],[3,"UseGroup","","A braced group of imports in a <code>use</code> item: <code>{A, B, C}</code>.",null,null],[12,"brace_token","","",229,null],[12,"items","","",229,null],[3,"UseName","","An identifier imported by a <code>use</code> item: <code>HashMap</code>.",null,null],[12,"ident","","",230,null],[3,"UsePath","","A path prefix of imports in a <code>use</code> item: <code>std::...</code>.",null,null],[12,"ident","","",231,null],[12,"colon2_token","","",231,null],[12,"tree","","",231,null],[3,"UseRename","","An renamed identifier imported by a <code>use</code> item: …",null,null],[12,"ident","","",232,null],[12,"as_token","","",232,null],[12,"rename","","",232,null],[4,"UseTree","","A suffix of an import tree in a <code>use</code> item: <code>Type as Renamed</code> …",null,null],[13,"Path","","A path prefix of imports in a <code>use</code> item: <code>std::...</code>.",233,null],[13,"Name","","An identifier imported by a <code>use</code> item: <code>HashMap</code>.",233,null],[13,"Rename","","An renamed identifier imported by a <code>use</code> item: …",233,null],[13,"Glob","","A glob import in a <code>use</code> item: <code>*</code>.",233,null],[13,"Group","","A braced group of imports in a <code>use</code> item: <code>{A, B, C}</code>.",233,null],[3,"File","","A complete file of Rust source code.",null,null],[12,"shebang","","",234,null],[12,"attrs","","",234,null],[12,"items","","",234,null],[3,"Lifetime","","A Rust lifetime: <code>\'a</code>.",null,null],[12,"apostrophe","","",235,null],[12,"ident","","",235,null],[4,"Lit","","A Rust literal such as a string or integer or boolean.",null,null],[13,"Str","","A UTF-8 string literal: <code>\\\"foo\\\"</code>.",236,null],[13,"ByteStr","","A byte string literal: <code>b\\\"foo\\\"</code>.",236,null],[13,"Byte","","A byte literal: <code>b\'f\'</code>.",236,null],[13,"Char","","A character literal: <code>\'a\'</code>.",236,null],[13,"Int","","An integer literal: <code>1</code> or <code>1u16</code>.",236,null],[13,"Float","","A floating point literal: <code>1f64</code> or <code>1.0e10f64</code>.",236,null],[13,"Bool","","A boolean literal: <code>true</code> or <code>false</code>.",236,null],[13,"Verbatim","","A raw token literal not interpreted by Syn.",236,null],[3,"LitBool","","A boolean literal: <code>true</code> or <code>false</code>.",null,null],[12,"value","","",237,null],[12,"span","","",237,null],[3,"LitByte","","A byte literal: <code>b\'f\'</code>.",null,null],[3,"LitByteStr","","A byte string literal: <code>b\\\"foo\\\"</code>.",null,null],[3,"LitChar","","A character literal: <code>\'a\'</code>.",null,null],[3,"LitFloat","","A floating point literal: <code>1f64</code> or <code>1.0e10f64</code>.",null,null],[3,"LitInt","","An integer literal: <code>1</code> or <code>1u16</code>.",null,null],[3,"LitStr","","A UTF-8 string literal: <code>\\\"foo\\\"</code>.",null,null],[4,"StrStyle","","The style of a string literal, either plain quoted or a …",null,null],[13,"Cooked","","An ordinary string like <code>\\\"data\\\"</code>.",238,null],[13,"Raw","","A raw string like <code>r##\\\"data\\\"##</code>.",238,null],[3,"Macro","","A macro invocation: <code>println!(\\\"{}\\\", mac)</code>.",null,null],[12,"path","","",239,null],[12,"bang_token","","",239,null],[12,"delimiter","","",239,null],[12,"tokens","","",239,null],[4,"MacroDelimiter","","A grouping token that surrounds a macro body: <code>m!(...)</code> or …",null,null],[13,"Paren","","",240,null],[13,"Brace","","",240,null],[13,"Bracket","","",240,null],[4,"Data","","The storage of a struct, enum or union data structure.",null,null],[13,"Struct","","A struct input to a <code>proc_macro_derive</code> macro.",241,null],[13,"Enum","","An enum input to a <code>proc_macro_derive</code> macro.",241,null],[13,"Union","","An untagged union input to a <code>proc_macro_derive</code> macro.",241,null],[3,"DataEnum","","An enum input to a <code>proc_macro_derive</code> macro.",null,null],[12,"enum_token","","",242,null],[12,"brace_token","","",242,null],[12,"variants","","",242,null],[3,"DataStruct","","A struct input to a <code>proc_macro_derive</code> macro.",null,null],[12,"struct_token","","",243,null],[12,"fields","","",243,null],[12,"semi_token","","",243,null],[3,"DataUnion","","An untagged union input to a <code>proc_macro_derive</code> macro.",null,null],[12,"union_token","","",244,null],[12,"fields","","",244,null],[3,"DeriveInput","","Data structure sent to a <code>proc_macro_derive</code> macro.",null,null],[12,"attrs","","Attributes tagged on the whole struct or enum.",245,null],[12,"vis","","Visibility of the struct or enum.",245,null],[12,"ident","","Name of the struct or enum.",245,null],[12,"generics","","Generics required to complete the definition.",245,null],[12,"data","","Data within the struct or enum.",245,null],[4,"BinOp","","A binary operator: <code>+</code>, <code>+=</code>, <code>&</code>.",null,null],[13,"Add","","The <code>+</code> operator (addition)",246,null],[13,"Sub","","The <code>-</code> operator (subtraction)",246,null],[13,"Mul","","The <code>*</code> operator (multiplication)",246,null],[13,"Div","","The <code>/</code> operator (division)",246,null],[13,"Rem","","The <code>%</code> operator (modulus)",246,null],[13,"And","","The <code>&&</code> operator (logical and)",246,null],[13,"Or","","The <code>||</code> operator (logical or)",246,null],[13,"BitXor","","The <code>^</code> operator (bitwise xor)",246,null],[13,"BitAnd","","The <code>&</code> operator (bitwise and)",246,null],[13,"BitOr","","The <code>|</code> operator (bitwise or)",246,null],[13,"Shl","","The <code><<</code> operator (shift left)",246,null],[13,"Shr","","The <code>>></code> operator (shift right)",246,null],[13,"Eq","","The <code>==</code> operator (equality)",246,null],[13,"Lt","","The <code><</code> operator (less than)",246,null],[13,"Le","","The <code><=</code> operator (less than or equal to)",246,null],[13,"Ne","","The <code>!=</code> operator (not equal to)",246,null],[13,"Ge","","The <code>>=</code> operator (greater than or equal to)",246,null],[13,"Gt","","The <code>></code> operator (greater than)",246,null],[13,"AddEq","","The <code>+=</code> operator",246,null],[13,"SubEq","","The <code>-=</code> operator",246,null],[13,"MulEq","","The <code>*=</code> operator",246,null],[13,"DivEq","","The <code>/=</code> operator",246,null],[13,"RemEq","","The <code>%=</code> operator",246,null],[13,"BitXorEq","","The <code>^=</code> operator",246,null],[13,"BitAndEq","","The <code>&=</code> operator",246,null],[13,"BitOrEq","","The <code>|=</code> operator",246,null],[13,"ShlEq","","The <code><<=</code> operator",246,null],[13,"ShrEq","","The <code>>>=</code> operator",246,null],[4,"UnOp","","A unary operator: <code>*</code>, <code>!</code>, <code>-</code>.",null,null],[13,"Deref","","The <code>*</code> operator for dereferencing",247,null],[13,"Not","","The <code>!</code> operator for logical inversion",247,null],[13,"Neg","","The <code>-</code> operator for negation",247,null],[3,"Block","","A braced block containing Rust statements.",null,null],[12,"brace_token","","",248,null],[12,"stmts","","Statements in a block",248,null],[3,"Local","","A local <code>let</code> binding: <code>let x: u64 = s.parse()?</code>.",null,null],[12,"attrs","","",249,null],[12,"let_token","","",249,null],[12,"pat","","",249,null],[12,"init","","",249,null],[12,"semi_token","","",249,null],[4,"Stmt","","A statement, usually ending in a semicolon.",null,null],[13,"Local","","A local (let) binding.",250,null],[13,"Item","","An item definition.",250,null],[13,"Expr","","Expr without trailing semicolon.",250,null],[13,"Semi","","Expression with trailing semicolon.",250,null],[3,"Abi","","The binary interface of a function: <code>extern \\\"C\\\"</code>.",null,null],[12,"extern_token","","",251,null],[12,"name","","",251,null],[3,"BareFnArg","","An argument in a function type: the <code>usize</code> in …",null,null],[12,"attrs","","",252,null],[12,"name","","",252,null],[12,"ty","","",252,null],[4,"ReturnType","","Return type of a function signature.",null,null],[13,"Default","","Return type is not specified.",253,null],[13,"Type","","A particular type is returned.",253,null],[4,"Type","","The possible types that a Rust value could have.",null,null],[13,"Array","","A fixed size array type: <code>[T; n]</code>.",254,null],[13,"BareFn","","A bare function type: <code>fn(usize) -> bool</code>.",254,null],[13,"Group","","A type contained within invisible delimiters.",254,null],[13,"ImplTrait","","An <code>impl Bound1 + Bound2 + Bound3</code> type where <code>Bound</code> is a …",254,null],[13,"Infer","","Indication that a type should be inferred by the …",254,null],[13,"Macro","","A macro in the type position.",254,null],[13,"Never","","The never type: <code>!</code>.",254,null],[13,"Paren","","A parenthesized type equivalent to the inner type.",254,null],[13,"Path","","A path like <code>std::slice::Iter</code>, optionally qualified with a …",254,null],[13,"Ptr","","A raw pointer type: <code>*const T</code> or <code>*mut T</code>.",254,null],[13,"Reference","","A reference type: <code>&\'a T</code> or <code>&\'a mut T</code>.",254,null],[13,"Slice","","A dynamically sized slice type: <code>[T]</code>.",254,null],[13,"TraitObject","","A trait object type <code>Bound1 + Bound2 + Bound3</code> where <code>Bound</code> …",254,null],[13,"Tuple","","A tuple type: <code>(A, B, C, String)</code>.",254,null],[13,"Verbatim","","Tokens in type position not interpreted by Syn.",254,null],[3,"TypeArray","","A fixed size array type: <code>[T; n]</code>.",null,null],[12,"bracket_token","","",255,null],[12,"elem","","",255,null],[12,"semi_token","","",255,null],[12,"len","","",255,null],[3,"TypeBareFn","","A bare function type: <code>fn(usize) -> bool</code>.",null,null],[12,"lifetimes","","",256,null],[12,"unsafety","","",256,null],[12,"abi","","",256,null],[12,"fn_token","","",256,null],[12,"paren_token","","",256,null],[12,"inputs","","",256,null],[12,"variadic","","",256,null],[12,"output","","",256,null],[3,"TypeGroup","","A type contained within invisible delimiters.",null,null],[12,"group_token","","",257,null],[12,"elem","","",257,null],[3,"TypeImplTrait","","An <code>impl Bound1 + Bound2 + Bound3</code> type where <code>Bound</code> is a …",null,null],[12,"impl_token","","",258,null],[12,"bounds","","",258,null],[3,"TypeInfer","","Indication that a type should be inferred by the …",null,null],[12,"underscore_token","","",259,null],[3,"TypeMacro","","A macro in the type position.",null,null],[12,"mac","","",260,null],[3,"TypeNever","","The never type: <code>!</code>.",null,null],[12,"bang_token","","",261,null],[3,"TypeParen","","A parenthesized type equivalent to the inner type.",null,null],[12,"paren_token","","",262,null],[12,"elem","","",262,null],[3,"TypePath","","A path like <code>std::slice::Iter</code>, optionally qualified with a …",null,null],[12,"qself","","",263,null],[12,"path","","",263,null],[3,"TypePtr","","A raw pointer type: <code>*const T</code> or <code>*mut T</code>.",null,null],[12,"star_token","","",264,null],[12,"const_token","","",264,null],[12,"mutability","","",264,null],[12,"elem","","",264,null],[3,"TypeReference","","A reference type: <code>&\'a T</code> or <code>&\'a mut T</code>.",null,null],[12,"and_token","","",265,null],[12,"lifetime","","",265,null],[12,"mutability","","",265,null],[12,"elem","","",265,null],[3,"TypeSlice","","A dynamically sized slice type: <code>[T]</code>.",null,null],[12,"bracket_token","","",266,null],[12,"elem","","",266,null],[3,"TypeTraitObject","","A trait object type <code>Bound1 + Bound2 + Bound3</code> where <code>Bound</code> …",null,null],[12,"dyn_token","","",267,null],[12,"bounds","","",267,null],[3,"TypeTuple","","A tuple type: <code>(A, B, C, String)</code>.",null,null],[12,"paren_token","","",268,null],[12,"elems","","",268,null],[3,"Variadic","","The variadic argument of a foreign function.",null,null],[12,"attrs","","",269,null],[12,"dots","","",269,null],[3,"FieldPat","","A single field in a struct pattern.",null,null],[12,"attrs","","",270,null],[12,"member","","",270,null],[12,"colon_token","","",270,null],[12,"pat","","",270,null],[4,"Pat","","A pattern in a local binding, function signature, match …",null,null],[13,"Box","","A box pattern: <code>box v</code>.",271,null],[13,"Ident","","A pattern that binds a new variable: …",271,null],[13,"Lit","","A literal pattern: <code>0</code>.",271,null],[13,"Macro","","A macro in pattern position.",271,null],[13,"Or","","A pattern that matches any one of a set of cases.",271,null],[13,"Path","","A path pattern like <code>Color::Red</code>, optionally qualified with …",271,null],[13,"Range","","A range pattern: <code>1..=2</code>.",271,null],[13,"Reference","","A reference pattern: <code>&mut var</code>.",271,null],[13,"Rest","","The dots in a tuple or slice pattern: <code>[0, 1, ..]</code>",271,null],[13,"Slice","","A dynamically sized slice pattern: …",271,null],[13,"Struct","","A struct or struct variant pattern: <code>Variant { x, y, .. }</code>.",271,null],[13,"Tuple","","A tuple pattern: <code>(a, b)</code>.",271,null],[13,"TupleStruct","","A tuple struct or tuple variant pattern: …",271,null],[13,"Type","","A type ascription pattern: <code>foo: f64</code>.",271,null],[13,"Verbatim","","Tokens in pattern position not interpreted by Syn.",271,null],[13,"Wild","","A pattern that matches any value: <code>_</code>.",271,null],[3,"PatBox","","A box pattern: <code>box v</code>.",null,null],[12,"attrs","","",272,null],[12,"box_token","","",272,null],[12,"pat","","",272,null],[3,"PatIdent","","A pattern that binds a new variable: …",null,null],[12,"attrs","","",273,null],[12,"by_ref","","",273,null],[12,"mutability","","",273,null],[12,"ident","","",273,null],[12,"subpat","","",273,null],[3,"PatLit","","A literal pattern: <code>0</code>.",null,null],[12,"attrs","","",274,null],[12,"expr","","",274,null],[3,"PatMacro","","A macro in pattern position.",null,null],[12,"attrs","","",275,null],[12,"mac","","",275,null],[3,"PatOr","","A pattern that matches any one of a set of cases.",null,null],[12,"attrs","","",276,null],[12,"leading_vert","","",276,null],[12,"cases","","",276,null],[3,"PatPath","","A path pattern like <code>Color::Red</code>, optionally qualified with …",null,null],[12,"attrs","","",277,null],[12,"qself","","",277,null],[12,"path","","",277,null],[3,"PatRange","","A range pattern: <code>1..=2</code>.",null,null],[12,"attrs","","",278,null],[12,"lo","","",278,null],[12,"limits","","",278,null],[12,"hi","","",278,null],[3,"PatReference","","A reference pattern: <code>&mut var</code>.",null,null],[12,"attrs","","",279,null],[12,"and_token","","",279,null],[12,"mutability","","",279,null],[12,"pat","","",279,null],[3,"PatRest","","The dots in a tuple or slice pattern: <code>[0, 1, ..]</code>",null,null],[12,"attrs","","",280,null],[12,"dot2_token","","",280,null],[3,"PatSlice","","A dynamically sized slice pattern: …",null,null],[12,"attrs","","",281,null],[12,"bracket_token","","",281,null],[12,"elems","","",281,null],[3,"PatStruct","","A struct or struct variant pattern: <code>Variant { x, y, .. }</code>.",null,null],[12,"attrs","","",282,null],[12,"path","","",282,null],[12,"brace_token","","",282,null],[12,"fields","","",282,null],[12,"dot2_token","","",282,null],[3,"PatTuple","","A tuple pattern: <code>(a, b)</code>.",null,null],[12,"attrs","","",283,null],[12,"paren_token","","",283,null],[12,"elems","","",283,null],[3,"PatTupleStruct","","A tuple struct or tuple variant pattern: …",null,null],[12,"attrs","","",284,null],[12,"path","","",284,null],[12,"pat","","",284,null],[3,"PatType","","A type ascription pattern: <code>foo: f64</code>.",null,null],[12,"attrs","","",285,null],[12,"pat","","",285,null],[12,"colon_token","","",285,null],[12,"ty","","",285,null],[3,"PatWild","","A pattern that matches any value: <code>_</code>.",null,null],[12,"attrs","","",286,null],[12,"underscore_token","","",286,null],[3,"AngleBracketedGenericArguments","","Angle bracketed arguments of a path segment: the <code><K, V></code> …",null,null],[12,"colon2_token","","",287,null],[12,"lt_token","","",287,null],[12,"args","","",287,null],[12,"gt_token","","",287,null],[3,"Binding","","A binding (equality constraint) on an associated type: …",null,null],[12,"ident","","",288,null],[12,"eq_token","","",288,null],[12,"ty","","",288,null],[3,"Constraint","","An associated type bound: <code>Iterator<Item: Display></code>.",null,null],[12,"ident","","",289,null],[12,"colon_token","","",289,null],[12,"bounds","","",289,null],[4,"GenericArgument","","An individual generic argument, like <code>\'a</code>, <code>T</code>, or <code>Item = T</code>.",null,null],[13,"Lifetime","","A lifetime argument.",290,null],[13,"Type","","A type argument.",290,null],[13,"Binding","","A binding (equality constraint) on an associated type: …",290,null],[13,"Constraint","","An associated type bound: <code>Iterator<Item: Display></code>.",290,null],[13,"Const","","A const expression. Must be inside of a block.",290,null],[3,"ParenthesizedGenericArguments","","Arguments of a function path segment: the <code>(A, B) -> C</code> in …",null,null],[12,"paren_token","","",291,null],[12,"inputs","","<code>(A, B)</code>",291,null],[12,"output","","<code>C</code>",291,null],[3,"Path","","A path at which a named item is exported (e.g. …",null,null],[12,"leading_colon","","",292,null],[12,"segments","","",292,null],[4,"PathArguments","","Angle bracketed or parenthesized arguments of a path …",null,null],[13,"None","","",293,null],[13,"AngleBracketed","","The <code><\'a, T></code> in <code>std::slice::iter<\'a, T></code>.",293,null],[13,"Parenthesized","","The <code>(A, B) -> C</code> in <code>Fn(A, B) -> C</code>.",293,null],[3,"PathSegment","","A segment of a path together with any path arguments on …",null,null],[12,"ident","","",294,null],[12,"arguments","","",294,null],[3,"QSelf","","The explicit Self type in a qualified path: the <code>T</code> in …",null,null],[12,"lt_token","","",295,null],[12,"ty","","",295,null],[12,"position","","",295,null],[12,"as_token","","",295,null],[12,"gt_token","","",295,null],[3,"Error","","Error returned when a Syn parser cannot parse the input …",null,null],[6,"Result","","The result of a Syn parser.",null,null],[5,"parse","","Parse tokens of source code into the chosen syntax tree …",null,[[["tokenstream",3]],[["result",6],["parse",8]]]],[5,"parse2","","Parse a proc-macro2 token stream into the chosen syntax …",null,[[["tokenstream",3]],[["result",6],["parse",8]]]],[5,"parse_str","","Parse a string of Rust code into the chosen syntax tree …",null,[[],[["result",6],["parse",8]]]],[5,"parse_file","","Parse the content of a file of Rust code.",null,[[],[["file",3],["result",6]]]],[14,"parenthesized","","Parse a set of parentheses and expose their content to …",null,null],[14,"braced","","Parse a set of curly braces and expose their content to …",null,null],[14,"bracketed","","Parse a set of square brackets and expose their content …",null,null],[14,"Token","","A type-macro that expands to the name of the Rust type …",null,null],[14,"parse_quote","","Quasi-quotation macro that accepts input like the <code>quote!</code> …",null,null],[14,"parse_macro_input","","Parse the input TokenStream of a macro, triggering a …",null,null],[14,"custom_keyword","","Define a type that supports parsing and printing a given …",null,null],[14,"custom_punctuation","","Define a type that supports parsing and printing a …",null,null],[11,"span","","",296,[[],["span",3]]],[11,"from","","",296,[[]]],[11,"into","","",296,[[]]],[11,"to_owned","","",296,[[]]],[11,"clone_into","","",296,[[]]],[11,"to_string","","",296,[[],["string",3]]],[11,"borrow","","",296,[[]]],[11,"borrow_mut","","",296,[[]]],[11,"try_from","","",296,[[],["result",4]]],[11,"try_into","","",296,[[],["result",4]]],[11,"type_id","","",296,[[],["typeid",3]]],[11,"span","syn::token","",0,[[],["span",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"span","","",1,[[],["span",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"span","","",2,[[],["span",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"span","","",3,[[],["span",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"span","","",4,[[],["span",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"span","","",5,[[],["span",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"span","","",6,[[],["span",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"span","","",7,[[],["span",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"span","","",8,[[],["span",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"span","","",9,[[],["span",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"span","","",10,[[],["span",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"span","","",11,[[],["span",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"span","","",12,[[],["span",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"span","","",13,[[],["span",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"span","","",14,[[],["span",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"span","","",15,[[],["span",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"span","","",16,[[],["span",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"span","","",17,[[],["span",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"span","","",18,[[],["span",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"span","","",19,[[],["span",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"span","","",20,[[],["span",3]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"span","","",21,[[],["span",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"span","","",22,[[],["span",3]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"span","","",23,[[],["span",3]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"span","","",24,[[],["span",3]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"span","","",25,[[],["span",3]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"span","","",26,[[],["span",3]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"span","","",27,[[],["span",3]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"span","","",28,[[],["span",3]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"span","","",29,[[],["span",3]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"span","","",30,[[],["span",3]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"span","","",31,[[],["span",3]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"span","","",32,[[],["span",3]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"span","","",33,[[],["span",3]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"span","","",34,[[],["span",3]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"span","","",35,[[],["span",3]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"span","","",36,[[],["span",3]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"span","","",37,[[],["span",3]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"span","","",38,[[],["span",3]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"span","","",39,[[],["span",3]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"span","","",40,[[],["span",3]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"span","","",41,[[],["span",3]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"span","","",42,[[],["span",3]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"span","","",43,[[],["span",3]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"span","","",44,[[],["span",3]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"span","","",45,[[],["span",3]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"span","","",46,[[],["span",3]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"span","","",47,[[],["span",3]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"span","","",48,[[],["span",3]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"span","","",49,[[],["span",3]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"span","","",50,[[],["span",3]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"span","","",51,[[],["span",3]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"to_owned","","",51,[[]]],[11,"clone_into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"span","","",52,[[],["span",3]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"to_owned","","",52,[[]]],[11,"clone_into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"span","","",53,[[],["span",3]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"span","","",54,[[],["span",3]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"to_owned","","",54,[[]]],[11,"clone_into","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"span","","",55,[[],["span",3]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"to_owned","","",55,[[]]],[11,"clone_into","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"span","","",56,[[],["span",3]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"to_owned","","",56,[[]]],[11,"clone_into","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"span","","",57,[[],["span",3]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"to_owned","","",57,[[]]],[11,"clone_into","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"span","","",58,[[],["span",3]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"to_owned","","",58,[[]]],[11,"clone_into","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"span","","",59,[[],["span",3]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"to_owned","","",59,[[]]],[11,"clone_into","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"span","","",60,[[],["span",3]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"to_owned","","",60,[[]]],[11,"clone_into","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"span","","",61,[[],["span",3]]],[11,"from","","",61,[[]]],[11,"into","","",61,[[]]],[11,"to_owned","","",61,[[]]],[11,"clone_into","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"span","","",62,[[],["span",3]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"to_owned","","",62,[[]]],[11,"clone_into","","",62,[[]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"span","","",63,[[],["span",3]]],[11,"from","","",63,[[]]],[11,"into","","",63,[[]]],[11,"to_owned","","",63,[[]]],[11,"clone_into","","",63,[[]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"span","","",64,[[],["span",3]]],[11,"from","","",64,[[]]],[11,"into","","",64,[[]]],[11,"to_owned","","",64,[[]]],[11,"clone_into","","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"span","","",65,[[],["span",3]]],[11,"from","","",65,[[]]],[11,"into","","",65,[[]]],[11,"to_owned","","",65,[[]]],[11,"clone_into","","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"span","","",66,[[],["span",3]]],[11,"from","","",66,[[]]],[11,"into","","",66,[[]]],[11,"to_owned","","",66,[[]]],[11,"clone_into","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"span","","",67,[[],["span",3]]],[11,"from","","",67,[[]]],[11,"into","","",67,[[]]],[11,"to_owned","","",67,[[]]],[11,"clone_into","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"span","","",68,[[],["span",3]]],[11,"from","","",68,[[]]],[11,"into","","",68,[[]]],[11,"to_owned","","",68,[[]]],[11,"clone_into","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"span","","",69,[[],["span",3]]],[11,"from","","",69,[[]]],[11,"into","","",69,[[]]],[11,"to_owned","","",69,[[]]],[11,"clone_into","","",69,[[]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"span","","",70,[[],["span",3]]],[11,"from","","",70,[[]]],[11,"into","","",70,[[]]],[11,"to_owned","","",70,[[]]],[11,"clone_into","","",70,[[]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"try_into","","",70,[[],["result",4]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"span","","",71,[[],["span",3]]],[11,"from","","",71,[[]]],[11,"into","","",71,[[]]],[11,"to_owned","","",71,[[]]],[11,"clone_into","","",71,[[]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"span","","",72,[[],["span",3]]],[11,"from","","",72,[[]]],[11,"into","","",72,[[]]],[11,"to_owned","","",72,[[]]],[11,"clone_into","","",72,[[]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"span","","",73,[[],["span",3]]],[11,"from","","",73,[[]]],[11,"into","","",73,[[]]],[11,"to_owned","","",73,[[]]],[11,"clone_into","","",73,[[]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"try_into","","",73,[[],["result",4]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"span","","",74,[[],["span",3]]],[11,"from","","",74,[[]]],[11,"into","","",74,[[]]],[11,"to_owned","","",74,[[]]],[11,"clone_into","","",74,[[]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"try_into","","",74,[[],["result",4]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"span","","",75,[[],["span",3]]],[11,"from","","",75,[[]]],[11,"into","","",75,[[]]],[11,"to_owned","","",75,[[]]],[11,"clone_into","","",75,[[]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"try_into","","",75,[[],["result",4]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"span","","",76,[[],["span",3]]],[11,"from","","",76,[[]]],[11,"into","","",76,[[]]],[11,"to_owned","","",76,[[]]],[11,"clone_into","","",76,[[]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"try_into","","",76,[[],["result",4]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"span","","",77,[[],["span",3]]],[11,"from","","",77,[[]]],[11,"into","","",77,[[]]],[11,"to_owned","","",77,[[]]],[11,"clone_into","","",77,[[]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"try_into","","",77,[[],["result",4]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"span","","",78,[[],["span",3]]],[11,"from","","",78,[[]]],[11,"into","","",78,[[]]],[11,"to_owned","","",78,[[]]],[11,"clone_into","","",78,[[]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"try_into","","",78,[[],["result",4]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"span","","",79,[[],["span",3]]],[11,"from","","",79,[[]]],[11,"into","","",79,[[]]],[11,"to_owned","","",79,[[]]],[11,"clone_into","","",79,[[]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"try_into","","",79,[[],["result",4]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"span","","",80,[[],["span",3]]],[11,"from","","",80,[[]]],[11,"into","","",80,[[]]],[11,"to_owned","","",80,[[]]],[11,"clone_into","","",80,[[]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"try_into","","",80,[[],["result",4]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"span","","",81,[[],["span",3]]],[11,"from","","",81,[[]]],[11,"into","","",81,[[]]],[11,"to_owned","","",81,[[]]],[11,"clone_into","","",81,[[]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"try_into","","",81,[[],["result",4]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"span","","",82,[[],["span",3]]],[11,"from","","",82,[[]]],[11,"into","","",82,[[]]],[11,"to_owned","","",82,[[]]],[11,"clone_into","","",82,[[]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"try_into","","",82,[[],["result",4]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"span","","",83,[[],["span",3]]],[11,"from","","",83,[[]]],[11,"into","","",83,[[]]],[11,"to_owned","","",83,[[]]],[11,"clone_into","","",83,[[]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"try_into","","",83,[[],["result",4]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"span","","",84,[[],["span",3]]],[11,"from","","",84,[[]]],[11,"into","","",84,[[]]],[11,"to_owned","","",84,[[]]],[11,"clone_into","","",84,[[]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"try_into","","",84,[[],["result",4]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"span","","",85,[[],["span",3]]],[11,"from","","",85,[[]]],[11,"into","","",85,[[]]],[11,"to_owned","","",85,[[]]],[11,"clone_into","","",85,[[]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"try_into","","",85,[[],["result",4]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"span","","",86,[[],["span",3]]],[11,"from","","",86,[[]]],[11,"into","","",86,[[]]],[11,"to_owned","","",86,[[]]],[11,"clone_into","","",86,[[]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"try_into","","",86,[[],["result",4]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"span","","",87,[[],["span",3]]],[11,"from","","",87,[[]]],[11,"into","","",87,[[]]],[11,"to_owned","","",87,[[]]],[11,"clone_into","","",87,[[]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"try_into","","",87,[[],["result",4]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"span","","",88,[[],["span",3]]],[11,"from","","",88,[[]]],[11,"into","","",88,[[]]],[11,"to_owned","","",88,[[]]],[11,"clone_into","","",88,[[]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"try_into","","",88,[[],["result",4]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"span","","",89,[[],["span",3]]],[11,"from","","",89,[[]]],[11,"into","","",89,[[]]],[11,"to_owned","","",89,[[]]],[11,"clone_into","","",89,[[]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"try_into","","",89,[[],["result",4]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"span","","",90,[[],["span",3]]],[11,"from","","",90,[[]]],[11,"into","","",90,[[]]],[11,"to_owned","","",90,[[]]],[11,"clone_into","","",90,[[]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"try_into","","",90,[[],["result",4]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"span","","",91,[[],["span",3]]],[11,"from","","",91,[[]]],[11,"into","","",91,[[]]],[11,"to_owned","","",91,[[]]],[11,"clone_into","","",91,[[]]],[11,"borrow","","",91,[[]]],[11,"borrow_mut","","",91,[[]]],[11,"try_from","","",91,[[],["result",4]]],[11,"try_into","","",91,[[],["result",4]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"span","","",92,[[],["span",3]]],[11,"from","","",92,[[]]],[11,"into","","",92,[[]]],[11,"to_owned","","",92,[[]]],[11,"clone_into","","",92,[[]]],[11,"borrow","","",92,[[]]],[11,"borrow_mut","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"try_into","","",92,[[],["result",4]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"span","","",93,[[],["span",3]]],[11,"from","","",93,[[]]],[11,"into","","",93,[[]]],[11,"to_owned","","",93,[[]]],[11,"clone_into","","",93,[[]]],[11,"borrow","","",93,[[]]],[11,"borrow_mut","","",93,[[]]],[11,"try_from","","",93,[[],["result",4]]],[11,"try_into","","",93,[[],["result",4]]],[11,"type_id","","",93,[[],["typeid",3]]],[11,"span","","",94,[[],["span",3]]],[11,"from","","",94,[[]]],[11,"into","","",94,[[]]],[11,"to_owned","","",94,[[]]],[11,"clone_into","","",94,[[]]],[11,"borrow","","",94,[[]]],[11,"borrow_mut","","",94,[[]]],[11,"try_from","","",94,[[],["result",4]]],[11,"try_into","","",94,[[],["result",4]]],[11,"type_id","","",94,[[],["typeid",3]]],[11,"span","","",95,[[],["span",3]]],[11,"from","","",95,[[]]],[11,"into","","",95,[[]]],[11,"to_owned","","",95,[[]]],[11,"clone_into","","",95,[[]]],[11,"borrow","","",95,[[]]],[11,"borrow_mut","","",95,[[]]],[11,"try_from","","",95,[[],["result",4]]],[11,"try_into","","",95,[[],["result",4]]],[11,"type_id","","",95,[[],["typeid",3]]],[11,"span","","",96,[[],["span",3]]],[11,"from","","",96,[[]]],[11,"into","","",96,[[]]],[11,"to_owned","","",96,[[]]],[11,"clone_into","","",96,[[]]],[11,"borrow","","",96,[[]]],[11,"borrow_mut","","",96,[[]]],[11,"try_from","","",96,[[],["result",4]]],[11,"try_into","","",96,[[],["result",4]]],[11,"type_id","","",96,[[],["typeid",3]]],[11,"span","","",97,[[],["span",3]]],[11,"from","","",97,[[]]],[11,"into","","",97,[[]]],[11,"to_owned","","",97,[[]]],[11,"clone_into","","",97,[[]]],[11,"borrow","","",97,[[]]],[11,"borrow_mut","","",97,[[]]],[11,"try_from","","",97,[[],["result",4]]],[11,"try_into","","",97,[[],["result",4]]],[11,"type_id","","",97,[[],["typeid",3]]],[11,"span","","",98,[[],["span",3]]],[11,"from","","",98,[[]]],[11,"into","","",98,[[]]],[11,"to_owned","","",98,[[]]],[11,"clone_into","","",98,[[]]],[11,"borrow","","",98,[[]]],[11,"borrow_mut","","",98,[[]]],[11,"try_from","","",98,[[],["result",4]]],[11,"try_into","","",98,[[],["result",4]]],[11,"type_id","","",98,[[],["typeid",3]]],[11,"from","","",99,[[]]],[11,"into","","",99,[[]]],[11,"to_owned","","",99,[[]]],[11,"clone_into","","",99,[[]]],[11,"borrow","","",99,[[]]],[11,"borrow_mut","","",99,[[]]],[11,"try_from","","",99,[[],["result",4]]],[11,"try_into","","",99,[[],["result",4]]],[11,"type_id","","",99,[[],["typeid",3]]],[11,"from","","",100,[[]]],[11,"into","","",100,[[]]],[11,"to_owned","","",100,[[]]],[11,"clone_into","","",100,[[]]],[11,"borrow","","",100,[[]]],[11,"borrow_mut","","",100,[[]]],[11,"try_from","","",100,[[],["result",4]]],[11,"try_into","","",100,[[],["result",4]]],[11,"type_id","","",100,[[],["typeid",3]]],[11,"from","","",101,[[]]],[11,"into","","",101,[[]]],[11,"to_owned","","",101,[[]]],[11,"clone_into","","",101,[[]]],[11,"borrow","","",101,[[]]],[11,"borrow_mut","","",101,[[]]],[11,"try_from","","",101,[[],["result",4]]],[11,"try_into","","",101,[[],["result",4]]],[11,"type_id","","",101,[[],["typeid",3]]],[11,"from","","",102,[[]]],[11,"into","","",102,[[]]],[11,"to_owned","","",102,[[]]],[11,"clone_into","","",102,[[]]],[11,"borrow","","",102,[[]]],[11,"borrow_mut","","",102,[[]]],[11,"try_from","","",102,[[],["result",4]]],[11,"try_into","","",102,[[],["result",4]]],[11,"type_id","","",102,[[],["typeid",3]]],[11,"span","syn","",117,[[],["span",3]]],[11,"from","","",117,[[]]],[11,"into","","",117,[[]]],[11,"to_owned","","",117,[[]]],[11,"clone_into","","",117,[[]]],[11,"borrow","","",117,[[]]],[11,"borrow_mut","","",117,[[]]],[11,"try_from","","",117,[[],["result",4]]],[11,"try_into","","",117,[[],["result",4]]],[11,"type_id","","",117,[[],["typeid",3]]],[11,"from","","",116,[[]]],[11,"into","","",116,[[]]],[11,"to_owned","","",116,[[]]],[11,"clone_into","","",116,[[]]],[11,"borrow","","",116,[[]]],[11,"borrow_mut","","",116,[[]]],[11,"try_from","","",116,[[],["result",4]]],[11,"try_into","","",116,[[],["result",4]]],[11,"type_id","","",116,[[],["typeid",3]]],[11,"span","","",118,[[],["span",3]]],[11,"from","","",118,[[]]],[11,"into","","",118,[[]]],[11,"to_owned","","",118,[[]]],[11,"clone_into","","",118,[[]]],[11,"borrow","","",118,[[]]],[11,"borrow_mut","","",118,[[]]],[11,"try_from","","",118,[[],["result",4]]],[11,"try_into","","",118,[[],["result",4]]],[11,"type_id","","",118,[[],["typeid",3]]],[11,"span","","",119,[[],["span",3]]],[11,"from","","",119,[[]]],[11,"into","","",119,[[]]],[11,"to_owned","","",119,[[]]],[11,"clone_into","","",119,[[]]],[11,"borrow","","",119,[[]]],[11,"borrow_mut","","",119,[[]]],[11,"try_from","","",119,[[],["result",4]]],[11,"try_into","","",119,[[],["result",4]]],[11,"type_id","","",119,[[],["typeid",3]]],[11,"span","","",120,[[],["span",3]]],[11,"from","","",120,[[]]],[11,"into","","",120,[[]]],[11,"to_owned","","",120,[[]]],[11,"clone_into","","",120,[[]]],[11,"borrow","","",120,[[]]],[11,"borrow_mut","","",120,[[]]],[11,"try_from","","",120,[[],["result",4]]],[11,"try_into","","",120,[[],["result",4]]],[11,"type_id","","",120,[[],["typeid",3]]],[11,"span","","",121,[[],["span",3]]],[11,"from","","",121,[[]]],[11,"into","","",121,[[]]],[11,"to_owned","","",121,[[]]],[11,"clone_into","","",121,[[]]],[11,"borrow","","",121,[[]]],[11,"borrow_mut","","",121,[[]]],[11,"try_from","","",121,[[],["result",4]]],[11,"try_into","","",121,[[],["result",4]]],[11,"type_id","","",121,[[],["typeid",3]]],[11,"span","","",126,[[],["span",3]]],[11,"from","","",126,[[]]],[11,"into","","",126,[[]]],[11,"to_owned","","",126,[[]]],[11,"clone_into","","",126,[[]]],[11,"borrow","","",126,[[]]],[11,"borrow_mut","","",126,[[]]],[11,"try_from","","",126,[[],["result",4]]],[11,"try_into","","",126,[[],["result",4]]],[11,"type_id","","",126,[[],["typeid",3]]],[11,"span","","",123,[[],["span",3]]],[11,"from","","",123,[[]]],[11,"into","","",123,[[]]],[11,"to_owned","","",123,[[]]],[11,"clone_into","","",123,[[]]],[11,"borrow","","",123,[[]]],[11,"borrow_mut","","",123,[[]]],[11,"try_from","","",123,[[],["result",4]]],[11,"try_into","","",123,[[],["result",4]]],[11,"type_id","","",123,[[],["typeid",3]]],[11,"span","","",124,[[],["span",3]]],[11,"from","","",124,[[]]],[11,"into","","",124,[[]]],[11,"to_owned","","",124,[[]]],[11,"clone_into","","",124,[[]]],[11,"borrow","","",124,[[]]],[11,"borrow_mut","","",124,[[]]],[11,"try_from","","",124,[[],["result",4]]],[11,"try_into","","",124,[[],["result",4]]],[11,"type_id","","",124,[[],["typeid",3]]],[11,"span","","",125,[[],["span",3]]],[11,"from","","",125,[[]]],[11,"into","","",125,[[]]],[11,"to_owned","","",125,[[]]],[11,"clone_into","","",125,[[]]],[11,"borrow","","",125,[[]]],[11,"borrow_mut","","",125,[[]]],[11,"try_from","","",125,[[],["result",4]]],[11,"try_into","","",125,[[],["result",4]]],[11,"type_id","","",125,[[],["typeid",3]]],[11,"span","","",122,[[],["span",3]]],[11,"from","","",122,[[]]],[11,"into","","",122,[[]]],[11,"to_owned","","",122,[[]]],[11,"clone_into","","",122,[[]]],[11,"borrow","","",122,[[]]],[11,"borrow_mut","","",122,[[]]],[11,"try_from","","",122,[[],["result",4]]],[11,"try_into","","",122,[[],["result",4]]],[11,"type_id","","",122,[[],["typeid",3]]],[11,"span","","",130,[[],["span",3]]],[11,"from","","",130,[[]]],[11,"into","","",130,[[]]],[11,"to_owned","","",130,[[]]],[11,"clone_into","","",130,[[]]],[11,"borrow","","",130,[[]]],[11,"borrow_mut","","",130,[[]]],[11,"try_from","","",130,[[],["result",4]]],[11,"try_into","","",130,[[],["result",4]]],[11,"type_id","","",130,[[],["typeid",3]]],[11,"span","","",128,[[],["span",3]]],[11,"from","","",128,[[]]],[11,"into","","",128,[[]]],[11,"to_owned","","",128,[[]]],[11,"clone_into","","",128,[[]]],[11,"borrow","","",128,[[]]],[11,"borrow_mut","","",128,[[]]],[11,"try_from","","",128,[[],["result",4]]],[11,"try_into","","",128,[[],["result",4]]],[11,"type_id","","",128,[[],["typeid",3]]],[11,"span","","",127,[[],["span",3]]],[11,"from","","",127,[[]]],[11,"into","","",127,[[]]],[11,"to_owned","","",127,[[]]],[11,"clone_into","","",127,[[]]],[11,"borrow","","",127,[[]]],[11,"borrow_mut","","",127,[[]]],[11,"try_from","","",127,[[],["result",4]]],[11,"try_into","","",127,[[],["result",4]]],[11,"type_id","","",127,[[],["typeid",3]]],[11,"span","","",129,[[],["span",3]]],[11,"from","","",129,[[]]],[11,"into","","",129,[[]]],[11,"to_owned","","",129,[[]]],[11,"clone_into","","",129,[[]]],[11,"borrow","","",129,[[]]],[11,"borrow_mut","","",129,[[]]],[11,"try_from","","",129,[[],["result",4]]],[11,"try_into","","",129,[[],["result",4]]],[11,"type_id","","",129,[[],["typeid",3]]],[11,"span","","",137,[[],["span",3]]],[11,"from","","",137,[[]]],[11,"into","","",137,[[]]],[11,"to_owned","","",137,[[]]],[11,"clone_into","","",137,[[]]],[11,"borrow","","",137,[[]]],[11,"borrow_mut","","",137,[[]]],[11,"try_from","","",137,[[],["result",4]]],[11,"try_into","","",137,[[],["result",4]]],[11,"type_id","","",137,[[],["typeid",3]]],[11,"span","","",138,[[],["span",3]]],[11,"from","","",138,[[]]],[11,"into","","",138,[[]]],[11,"to_owned","","",138,[[]]],[11,"clone_into","","",138,[[]]],[11,"borrow","","",138,[[]]],[11,"borrow_mut","","",138,[[]]],[11,"try_from","","",138,[[],["result",4]]],[11,"try_into","","",138,[[],["result",4]]],[11,"type_id","","",138,[[],["typeid",3]]],[11,"span","","",139,[[],["span",3]]],[11,"from","","",139,[[]]],[11,"into","","",139,[[]]],[11,"to_owned","","",139,[[]]],[11,"clone_into","","",139,[[]]],[11,"borrow","","",139,[[]]],[11,"borrow_mut","","",139,[[]]],[11,"try_from","","",139,[[],["result",4]]],[11,"try_into","","",139,[[],["result",4]]],[11,"type_id","","",139,[[],["typeid",3]]],[11,"span","","",140,[[],["span",3]]],[11,"from","","",140,[[]]],[11,"into","","",140,[[]]],[11,"to_owned","","",140,[[]]],[11,"clone_into","","",140,[[]]],[11,"borrow","","",140,[[]]],[11,"borrow_mut","","",140,[[]]],[11,"try_from","","",140,[[],["result",4]]],[11,"try_into","","",140,[[],["result",4]]],[11,"type_id","","",140,[[],["typeid",3]]],[11,"span","","",141,[[],["span",3]]],[11,"from","","",141,[[]]],[11,"into","","",141,[[]]],[11,"to_owned","","",141,[[]]],[11,"clone_into","","",141,[[]]],[11,"borrow","","",141,[[]]],[11,"borrow_mut","","",141,[[]]],[11,"try_from","","",141,[[],["result",4]]],[11,"try_into","","",141,[[],["result",4]]],[11,"type_id","","",141,[[],["typeid",3]]],[11,"span","","",142,[[],["span",3]]],[11,"from","","",142,[[]]],[11,"into","","",142,[[]]],[11,"to_owned","","",142,[[]]],[11,"clone_into","","",142,[[]]],[11,"borrow","","",142,[[]]],[11,"borrow_mut","","",142,[[]]],[11,"try_from","","",142,[[],["result",4]]],[11,"try_into","","",142,[[],["result",4]]],[11,"type_id","","",142,[[],["typeid",3]]],[11,"span","","",143,[[],["span",3]]],[11,"from","","",143,[[]]],[11,"into","","",143,[[]]],[11,"to_owned","","",143,[[]]],[11,"clone_into","","",143,[[]]],[11,"borrow","","",143,[[]]],[11,"borrow_mut","","",143,[[]]],[11,"try_from","","",143,[[],["result",4]]],[11,"try_into","","",143,[[],["result",4]]],[11,"type_id","","",143,[[],["typeid",3]]],[11,"span","","",144,[[],["span",3]]],[11,"from","","",144,[[]]],[11,"into","","",144,[[]]],[11,"to_owned","","",144,[[]]],[11,"clone_into","","",144,[[]]],[11,"borrow","","",144,[[]]],[11,"borrow_mut","","",144,[[]]],[11,"try_from","","",144,[[],["result",4]]],[11,"try_into","","",144,[[],["result",4]]],[11,"type_id","","",144,[[],["typeid",3]]],[11,"span","","",145,[[],["span",3]]],[11,"from","","",145,[[]]],[11,"into","","",145,[[]]],[11,"to_owned","","",145,[[]]],[11,"clone_into","","",145,[[]]],[11,"borrow","","",145,[[]]],[11,"borrow_mut","","",145,[[]]],[11,"try_from","","",145,[[],["result",4]]],[11,"try_into","","",145,[[],["result",4]]],[11,"type_id","","",145,[[],["typeid",3]]],[11,"span","","",146,[[],["span",3]]],[11,"from","","",146,[[]]],[11,"into","","",146,[[]]],[11,"to_owned","","",146,[[]]],[11,"clone_into","","",146,[[]]],[11,"borrow","","",146,[[]]],[11,"borrow_mut","","",146,[[]]],[11,"try_from","","",146,[[],["result",4]]],[11,"try_into","","",146,[[],["result",4]]],[11,"type_id","","",146,[[],["typeid",3]]],[11,"span","","",147,[[],["span",3]]],[11,"from","","",147,[[]]],[11,"into","","",147,[[]]],[11,"to_owned","","",147,[[]]],[11,"clone_into","","",147,[[]]],[11,"borrow","","",147,[[]]],[11,"borrow_mut","","",147,[[]]],[11,"try_from","","",147,[[],["result",4]]],[11,"try_into","","",147,[[],["result",4]]],[11,"type_id","","",147,[[],["typeid",3]]],[11,"span","","",148,[[],["span",3]]],[11,"from","","",148,[[]]],[11,"into","","",148,[[]]],[11,"to_owned","","",148,[[]]],[11,"clone_into","","",148,[[]]],[11,"borrow","","",148,[[]]],[11,"borrow_mut","","",148,[[]]],[11,"try_from","","",148,[[],["result",4]]],[11,"try_into","","",148,[[],["result",4]]],[11,"type_id","","",148,[[],["typeid",3]]],[11,"span","","",149,[[],["span",3]]],[11,"from","","",149,[[]]],[11,"into","","",149,[[]]],[11,"to_owned","","",149,[[]]],[11,"clone_into","","",149,[[]]],[11,"borrow","","",149,[[]]],[11,"borrow_mut","","",149,[[]]],[11,"try_from","","",149,[[],["result",4]]],[11,"try_into","","",149,[[],["result",4]]],[11,"type_id","","",149,[[],["typeid",3]]],[11,"span","","",150,[[],["span",3]]],[11,"from","","",150,[[]]],[11,"into","","",150,[[]]],[11,"to_owned","","",150,[[]]],[11,"clone_into","","",150,[[]]],[11,"borrow","","",150,[[]]],[11,"borrow_mut","","",150,[[]]],[11,"try_from","","",150,[[],["result",4]]],[11,"try_into","","",150,[[],["result",4]]],[11,"type_id","","",150,[[],["typeid",3]]],[11,"span","","",151,[[],["span",3]]],[11,"from","","",151,[[]]],[11,"into","","",151,[[]]],[11,"to_owned","","",151,[[]]],[11,"clone_into","","",151,[[]]],[11,"borrow","","",151,[[]]],[11,"borrow_mut","","",151,[[]]],[11,"try_from","","",151,[[],["result",4]]],[11,"try_into","","",151,[[],["result",4]]],[11,"type_id","","",151,[[],["typeid",3]]],[11,"span","","",152,[[],["span",3]]],[11,"from","","",152,[[]]],[11,"into","","",152,[[]]],[11,"to_owned","","",152,[[]]],[11,"clone_into","","",152,[[]]],[11,"borrow","","",152,[[]]],[11,"borrow_mut","","",152,[[]]],[11,"try_from","","",152,[[],["result",4]]],[11,"try_into","","",152,[[],["result",4]]],[11,"type_id","","",152,[[],["typeid",3]]],[11,"span","","",153,[[],["span",3]]],[11,"from","","",153,[[]]],[11,"into","","",153,[[]]],[11,"to_owned","","",153,[[]]],[11,"clone_into","","",153,[[]]],[11,"borrow","","",153,[[]]],[11,"borrow_mut","","",153,[[]]],[11,"try_from","","",153,[[],["result",4]]],[11,"try_into","","",153,[[],["result",4]]],[11,"type_id","","",153,[[],["typeid",3]]],[11,"span","","",154,[[],["span",3]]],[11,"from","","",154,[[]]],[11,"into","","",154,[[]]],[11,"to_owned","","",154,[[]]],[11,"clone_into","","",154,[[]]],[11,"borrow","","",154,[[]]],[11,"borrow_mut","","",154,[[]]],[11,"try_from","","",154,[[],["result",4]]],[11,"try_into","","",154,[[],["result",4]]],[11,"type_id","","",154,[[],["typeid",3]]],[11,"span","","",155,[[],["span",3]]],[11,"from","","",155,[[]]],[11,"into","","",155,[[]]],[11,"to_owned","","",155,[[]]],[11,"clone_into","","",155,[[]]],[11,"borrow","","",155,[[]]],[11,"borrow_mut","","",155,[[]]],[11,"try_from","","",155,[[],["result",4]]],[11,"try_into","","",155,[[],["result",4]]],[11,"type_id","","",155,[[],["typeid",3]]],[11,"span","","",156,[[],["span",3]]],[11,"from","","",156,[[]]],[11,"into","","",156,[[]]],[11,"to_owned","","",156,[[]]],[11,"clone_into","","",156,[[]]],[11,"borrow","","",156,[[]]],[11,"borrow_mut","","",156,[[]]],[11,"try_from","","",156,[[],["result",4]]],[11,"try_into","","",156,[[],["result",4]]],[11,"type_id","","",156,[[],["typeid",3]]],[11,"span","","",157,[[],["span",3]]],[11,"from","","",157,[[]]],[11,"into","","",157,[[]]],[11,"to_owned","","",157,[[]]],[11,"clone_into","","",157,[[]]],[11,"borrow","","",157,[[]]],[11,"borrow_mut","","",157,[[]]],[11,"try_from","","",157,[[],["result",4]]],[11,"try_into","","",157,[[],["result",4]]],[11,"type_id","","",157,[[],["typeid",3]]],[11,"span","","",158,[[],["span",3]]],[11,"from","","",158,[[]]],[11,"into","","",158,[[]]],[11,"to_owned","","",158,[[]]],[11,"clone_into","","",158,[[]]],[11,"borrow","","",158,[[]]],[11,"borrow_mut","","",158,[[]]],[11,"try_from","","",158,[[],["result",4]]],[11,"try_into","","",158,[[],["result",4]]],[11,"type_id","","",158,[[],["typeid",3]]],[11,"span","","",159,[[],["span",3]]],[11,"from","","",159,[[]]],[11,"into","","",159,[[]]],[11,"to_owned","","",159,[[]]],[11,"clone_into","","",159,[[]]],[11,"borrow","","",159,[[]]],[11,"borrow_mut","","",159,[[]]],[11,"try_from","","",159,[[],["result",4]]],[11,"try_into","","",159,[[],["result",4]]],[11,"type_id","","",159,[[],["typeid",3]]],[11,"span","","",160,[[],["span",3]]],[11,"from","","",160,[[]]],[11,"into","","",160,[[]]],[11,"to_owned","","",160,[[]]],[11,"clone_into","","",160,[[]]],[11,"borrow","","",160,[[]]],[11,"borrow_mut","","",160,[[]]],[11,"try_from","","",160,[[],["result",4]]],[11,"try_into","","",160,[[],["result",4]]],[11,"type_id","","",160,[[],["typeid",3]]],[11,"span","","",161,[[],["span",3]]],[11,"from","","",161,[[]]],[11,"into","","",161,[[]]],[11,"to_owned","","",161,[[]]],[11,"clone_into","","",161,[[]]],[11,"borrow","","",161,[[]]],[11,"borrow_mut","","",161,[[]]],[11,"try_from","","",161,[[],["result",4]]],[11,"try_into","","",161,[[],["result",4]]],[11,"type_id","","",161,[[],["typeid",3]]],[11,"span","","",162,[[],["span",3]]],[11,"from","","",162,[[]]],[11,"into","","",162,[[]]],[11,"to_owned","","",162,[[]]],[11,"clone_into","","",162,[[]]],[11,"borrow","","",162,[[]]],[11,"borrow_mut","","",162,[[]]],[11,"try_from","","",162,[[],["result",4]]],[11,"try_into","","",162,[[],["result",4]]],[11,"type_id","","",162,[[],["typeid",3]]],[11,"span","","",163,[[],["span",3]]],[11,"from","","",163,[[]]],[11,"into","","",163,[[]]],[11,"to_owned","","",163,[[]]],[11,"clone_into","","",163,[[]]],[11,"borrow","","",163,[[]]],[11,"borrow_mut","","",163,[[]]],[11,"try_from","","",163,[[],["result",4]]],[11,"try_into","","",163,[[],["result",4]]],[11,"type_id","","",163,[[],["typeid",3]]],[11,"span","","",164,[[],["span",3]]],[11,"from","","",164,[[]]],[11,"into","","",164,[[]]],[11,"to_owned","","",164,[[]]],[11,"clone_into","","",164,[[]]],[11,"borrow","","",164,[[]]],[11,"borrow_mut","","",164,[[]]],[11,"try_from","","",164,[[],["result",4]]],[11,"try_into","","",164,[[],["result",4]]],[11,"type_id","","",164,[[],["typeid",3]]],[11,"span","","",165,[[],["span",3]]],[11,"from","","",165,[[]]],[11,"into","","",165,[[]]],[11,"to_owned","","",165,[[]]],[11,"clone_into","","",165,[[]]],[11,"borrow","","",165,[[]]],[11,"borrow_mut","","",165,[[]]],[11,"try_from","","",165,[[],["result",4]]],[11,"try_into","","",165,[[],["result",4]]],[11,"type_id","","",165,[[],["typeid",3]]],[11,"span","","",166,[[],["span",3]]],[11,"from","","",166,[[]]],[11,"into","","",166,[[]]],[11,"to_owned","","",166,[[]]],[11,"clone_into","","",166,[[]]],[11,"borrow","","",166,[[]]],[11,"borrow_mut","","",166,[[]]],[11,"try_from","","",166,[[],["result",4]]],[11,"try_into","","",166,[[],["result",4]]],[11,"type_id","","",166,[[],["typeid",3]]],[11,"span","","",167,[[],["span",3]]],[11,"from","","",167,[[]]],[11,"into","","",167,[[]]],[11,"to_owned","","",167,[[]]],[11,"clone_into","","",167,[[]]],[11,"borrow","","",167,[[]]],[11,"borrow_mut","","",167,[[]]],[11,"try_from","","",167,[[],["result",4]]],[11,"try_into","","",167,[[],["result",4]]],[11,"type_id","","",167,[[],["typeid",3]]],[11,"span","","",168,[[],["span",3]]],[11,"from","","",168,[[]]],[11,"into","","",168,[[]]],[11,"to_owned","","",168,[[]]],[11,"clone_into","","",168,[[]]],[11,"borrow","","",168,[[]]],[11,"borrow_mut","","",168,[[]]],[11,"try_from","","",168,[[],["result",4]]],[11,"try_into","","",168,[[],["result",4]]],[11,"type_id","","",168,[[],["typeid",3]]],[11,"span","","",169,[[],["span",3]]],[11,"from","","",169,[[]]],[11,"into","","",169,[[]]],[11,"to_owned","","",169,[[]]],[11,"clone_into","","",169,[[]]],[11,"borrow","","",169,[[]]],[11,"borrow_mut","","",169,[[]]],[11,"try_from","","",169,[[],["result",4]]],[11,"try_into","","",169,[[],["result",4]]],[11,"type_id","","",169,[[],["typeid",3]]],[11,"span","","",170,[[],["span",3]]],[11,"from","","",170,[[]]],[11,"into","","",170,[[]]],[11,"to_owned","","",170,[[]]],[11,"clone_into","","",170,[[]]],[11,"borrow","","",170,[[]]],[11,"borrow_mut","","",170,[[]]],[11,"try_from","","",170,[[],["result",4]]],[11,"try_into","","",170,[[],["result",4]]],[11,"type_id","","",170,[[],["typeid",3]]],[11,"span","","",171,[[],["span",3]]],[11,"from","","",171,[[]]],[11,"into","","",171,[[]]],[11,"to_owned","","",171,[[]]],[11,"clone_into","","",171,[[]]],[11,"borrow","","",171,[[]]],[11,"borrow_mut","","",171,[[]]],[11,"try_from","","",171,[[],["result",4]]],[11,"try_into","","",171,[[],["result",4]]],[11,"type_id","","",171,[[],["typeid",3]]],[11,"span","","",172,[[],["span",3]]],[11,"from","","",172,[[]]],[11,"into","","",172,[[]]],[11,"to_owned","","",172,[[]]],[11,"clone_into","","",172,[[]]],[11,"borrow","","",172,[[]]],[11,"borrow_mut","","",172,[[]]],[11,"try_from","","",172,[[],["result",4]]],[11,"try_into","","",172,[[],["result",4]]],[11,"type_id","","",172,[[],["typeid",3]]],[11,"span","","",173,[[],["span",3]]],[11,"from","","",173,[[]]],[11,"into","","",173,[[]]],[11,"to_owned","","",173,[[]]],[11,"clone_into","","",173,[[]]],[11,"borrow","","",173,[[]]],[11,"borrow_mut","","",173,[[]]],[11,"try_from","","",173,[[],["result",4]]],[11,"try_into","","",173,[[],["result",4]]],[11,"type_id","","",173,[[],["typeid",3]]],[11,"span","","",174,[[],["span",3]]],[11,"from","","",174,[[]]],[11,"into","","",174,[[]]],[11,"to_owned","","",174,[[]]],[11,"clone_into","","",174,[[]]],[11,"borrow","","",174,[[]]],[11,"borrow_mut","","",174,[[]]],[11,"try_from","","",174,[[],["result",4]]],[11,"try_into","","",174,[[],["result",4]]],[11,"type_id","","",174,[[],["typeid",3]]],[11,"span","","",175,[[],["span",3]]],[11,"from","","",175,[[]]],[11,"into","","",175,[[]]],[11,"to_owned","","",175,[[]]],[11,"clone_into","","",175,[[]]],[11,"borrow","","",175,[[]]],[11,"borrow_mut","","",175,[[]]],[11,"try_from","","",175,[[],["result",4]]],[11,"try_into","","",175,[[],["result",4]]],[11,"type_id","","",175,[[],["typeid",3]]],[11,"span","","",176,[[],["span",3]]],[11,"from","","",176,[[]]],[11,"into","","",176,[[]]],[11,"to_owned","","",176,[[]]],[11,"clone_into","","",176,[[]]],[11,"borrow","","",176,[[]]],[11,"borrow_mut","","",176,[[]]],[11,"try_from","","",176,[[],["result",4]]],[11,"try_into","","",176,[[],["result",4]]],[11,"type_id","","",176,[[],["typeid",3]]],[11,"span","","",178,[[],["span",3]]],[11,"from","","",178,[[]]],[11,"into","","",178,[[]]],[11,"to_owned","","",178,[[]]],[11,"clone_into","","",178,[[]]],[11,"borrow","","",178,[[]]],[11,"borrow_mut","","",178,[[]]],[11,"try_from","","",178,[[],["result",4]]],[11,"try_into","","",178,[[],["result",4]]],[11,"type_id","","",178,[[],["typeid",3]]],[11,"span","","",177,[[],["span",3]]],[11,"from","","",177,[[]]],[11,"into","","",177,[[]]],[11,"to_owned","","",177,[[]]],[11,"clone_into","","",177,[[]]],[11,"borrow","","",177,[[]]],[11,"borrow_mut","","",177,[[]]],[11,"try_from","","",177,[[],["result",4]]],[11,"try_into","","",177,[[],["result",4]]],[11,"type_id","","",177,[[],["typeid",3]]],[11,"span","","",135,[[],["span",3]]],[11,"from","","",135,[[]]],[11,"into","","",135,[[]]],[11,"to_owned","","",135,[[]]],[11,"clone_into","","",135,[[]]],[11,"borrow","","",135,[[]]],[11,"borrow_mut","","",135,[[]]],[11,"try_from","","",135,[[],["result",4]]],[11,"try_into","","",135,[[],["result",4]]],[11,"type_id","","",135,[[],["typeid",3]]],[11,"span","","",133,[[],["span",3]]],[11,"from","","",133,[[]]],[11,"into","","",133,[[]]],[11,"to_owned","","",133,[[]]],[11,"clone_into","","",133,[[]]],[11,"borrow","","",133,[[]]],[11,"borrow_mut","","",133,[[]]],[11,"try_from","","",133,[[],["result",4]]],[11,"try_into","","",133,[[],["result",4]]],[11,"type_id","","",133,[[],["typeid",3]]],[11,"span","","",132,[[],["span",3]]],[11,"from","","",132,[[]]],[11,"into","","",132,[[]]],[11,"to_owned","","",132,[[]]],[11,"clone_into","","",132,[[]]],[11,"borrow","","",132,[[]]],[11,"borrow_mut","","",132,[[]]],[11,"try_from","","",132,[[],["result",4]]],[11,"try_into","","",132,[[],["result",4]]],[11,"type_id","","",132,[[],["typeid",3]]],[11,"span","","",134,[[],["span",3]]],[11,"from","","",134,[[]]],[11,"into","","",134,[[]]],[11,"to_owned","","",134,[[]]],[11,"clone_into","","",134,[[]]],[11,"borrow","","",134,[[]]],[11,"borrow_mut","","",134,[[]]],[11,"try_from","","",134,[[],["result",4]]],[11,"try_into","","",134,[[],["result",4]]],[11,"type_id","","",134,[[],["typeid",3]]],[11,"span","","",131,[[],["span",3]]],[11,"from","","",131,[[]]],[11,"into","","",131,[[]]],[11,"to_owned","","",131,[[]]],[11,"clone_into","","",131,[[]]],[11,"borrow","","",131,[[]]],[11,"borrow_mut","","",131,[[]]],[11,"try_from","","",131,[[],["result",4]]],[11,"try_into","","",131,[[],["result",4]]],[11,"type_id","","",131,[[],["typeid",3]]],[11,"from","","",136,[[]]],[11,"into","","",136,[[]]],[11,"to_owned","","",136,[[]]],[11,"clone_into","","",136,[[]]],[11,"borrow","","",136,[[]]],[11,"borrow_mut","","",136,[[]]],[11,"try_from","","",136,[[],["result",4]]],[11,"try_into","","",136,[[],["result",4]]],[11,"type_id","","",136,[[],["typeid",3]]],[11,"span","","",182,[[],["span",3]]],[11,"from","","",182,[[]]],[11,"into","","",182,[[]]],[11,"to_owned","","",182,[[]]],[11,"clone_into","","",182,[[]]],[11,"borrow","","",182,[[]]],[11,"borrow_mut","","",182,[[]]],[11,"try_from","","",182,[[],["result",4]]],[11,"try_into","","",182,[[],["result",4]]],[11,"type_id","","",182,[[],["typeid",3]]],[11,"span","","",181,[[],["span",3]]],[11,"from","","",181,[[]]],[11,"into","","",181,[[]]],[11,"to_owned","","",181,[[]]],[11,"clone_into","","",181,[[]]],[11,"borrow","","",181,[[]]],[11,"borrow_mut","","",181,[[]]],[11,"try_from","","",181,[[],["result",4]]],[11,"try_into","","",181,[[],["result",4]]],[11,"type_id","","",181,[[],["typeid",3]]],[11,"span","","",189,[[],["span",3]]],[11,"from","","",189,[[]]],[11,"into","","",189,[[]]],[11,"to_owned","","",189,[[]]],[11,"clone_into","","",189,[[]]],[11,"borrow","","",189,[[]]],[11,"borrow_mut","","",189,[[]]],[11,"try_from","","",189,[[],["result",4]]],[11,"try_into","","",189,[[],["result",4]]],[11,"type_id","","",189,[[],["typeid",3]]],[11,"span","","",183,[[],["span",3]]],[11,"from","","",183,[[]]],[11,"into","","",183,[[]]],[11,"to_owned","","",183,[[]]],[11,"clone_into","","",183,[[]]],[11,"borrow","","",183,[[]]],[11,"borrow_mut","","",183,[[]]],[11,"try_from","","",183,[[],["result",4]]],[11,"try_into","","",183,[[],["result",4]]],[11,"type_id","","",183,[[],["typeid",3]]],[11,"span","","",180,[[],["span",3]]],[11,"from","","",180,[[]]],[11,"into","","",180,[[]]],[11,"to_owned","","",180,[[]]],[11,"clone_into","","",180,[[]]],[11,"borrow","","",180,[[]]],[11,"borrow_mut","","",180,[[]]],[11,"try_from","","",180,[[],["result",4]]],[11,"try_into","","",180,[[],["result",4]]],[11,"type_id","","",180,[[],["typeid",3]]],[11,"span","","",297,[[],["span",3]]],[11,"from","","",297,[[]]],[11,"into","","",297,[[]]],[11,"to_owned","","",297,[[]]],[11,"clone_into","","",297,[[]]],[11,"borrow","","",297,[[]]],[11,"borrow_mut","","",297,[[]]],[11,"try_from","","",297,[[],["result",4]]],[11,"try_into","","",297,[[],["result",4]]],[11,"type_id","","",297,[[],["typeid",3]]],[11,"span","","",298,[[],["span",3]]],[11,"from","","",298,[[]]],[11,"into","","",298,[[]]],[11,"to_owned","","",298,[[]]],[11,"clone_into","","",298,[[]]],[11,"borrow","","",298,[[]]],[11,"borrow_mut","","",298,[[]]],[11,"try_from","","",298,[[],["result",4]]],[11,"try_into","","",298,[[],["result",4]]],[11,"type_id","","",298,[[],["typeid",3]]],[11,"span","","",299,[[],["span",3]]],[11,"from","","",299,[[]]],[11,"into","","",299,[[]]],[11,"to_owned","","",299,[[]]],[11,"clone_into","","",299,[[]]],[11,"borrow","","",299,[[]]],[11,"borrow_mut","","",299,[[]]],[11,"try_from","","",299,[[],["result",4]]],[11,"try_into","","",299,[[],["result",4]]],[11,"type_id","","",299,[[],["typeid",3]]],[11,"span","","",179,[[],["span",3]]],[11,"from","","",179,[[]]],[11,"into","","",179,[[]]],[11,"to_owned","","",179,[[]]],[11,"clone_into","","",179,[[]]],[11,"borrow","","",179,[[]]],[11,"borrow_mut","","",179,[[]]],[11,"try_from","","",179,[[],["result",4]]],[11,"try_into","","",179,[[],["result",4]]],[11,"type_id","","",179,[[],["typeid",3]]],[11,"span","","",190,[[],["span",3]]],[11,"from","","",190,[[]]],[11,"into","","",190,[[]]],[11,"to_owned","","",190,[[]]],[11,"clone_into","","",190,[[]]],[11,"borrow","","",190,[[]]],[11,"borrow_mut","","",190,[[]]],[11,"try_from","","",190,[[],["result",4]]],[11,"try_into","","",190,[[],["result",4]]],[11,"type_id","","",190,[[],["typeid",3]]],[11,"span","","",187,[[],["span",3]]],[11,"from","","",187,[[]]],[11,"into","","",187,[[]]],[11,"to_owned","","",187,[[]]],[11,"clone_into","","",187,[[]]],[11,"borrow","","",187,[[]]],[11,"borrow_mut","","",187,[[]]],[11,"try_from","","",187,[[],["result",4]]],[11,"try_into","","",187,[[],["result",4]]],[11,"type_id","","",187,[[],["typeid",3]]],[11,"span","","",188,[[],["span",3]]],[11,"from","","",188,[[]]],[11,"into","","",188,[[]]],[11,"to_owned","","",188,[[]]],[11,"clone_into","","",188,[[]]],[11,"borrow","","",188,[[]]],[11,"borrow_mut","","",188,[[]]],[11,"try_from","","",188,[[],["result",4]]],[11,"try_into","","",188,[[],["result",4]]],[11,"type_id","","",188,[[],["typeid",3]]],[11,"span","","",191,[[],["span",3]]],[11,"from","","",191,[[]]],[11,"into","","",191,[[]]],[11,"to_owned","","",191,[[]]],[11,"clone_into","","",191,[[]]],[11,"borrow","","",191,[[]]],[11,"borrow_mut","","",191,[[]]],[11,"try_from","","",191,[[],["result",4]]],[11,"try_into","","",191,[[],["result",4]]],[11,"type_id","","",191,[[],["typeid",3]]],[11,"span","","",192,[[],["span",3]]],[11,"from","","",192,[[]]],[11,"into","","",192,[[]]],[11,"to_owned","","",192,[[]]],[11,"clone_into","","",192,[[]]],[11,"borrow","","",192,[[]]],[11,"borrow_mut","","",192,[[]]],[11,"try_from","","",192,[[],["result",4]]],[11,"try_into","","",192,[[],["result",4]]],[11,"type_id","","",192,[[],["typeid",3]]],[11,"span","","",186,[[],["span",3]]],[11,"from","","",186,[[]]],[11,"into","","",186,[[]]],[11,"to_owned","","",186,[[]]],[11,"clone_into","","",186,[[]]],[11,"borrow","","",186,[[]]],[11,"borrow_mut","","",186,[[]]],[11,"try_from","","",186,[[],["result",4]]],[11,"try_into","","",186,[[],["result",4]]],[11,"type_id","","",186,[[],["typeid",3]]],[11,"span","","",185,[[],["span",3]]],[11,"from","","",185,[[]]],[11,"into","","",185,[[]]],[11,"to_owned","","",185,[[]]],[11,"clone_into","","",185,[[]]],[11,"borrow","","",185,[[]]],[11,"borrow_mut","","",185,[[]]],[11,"try_from","","",185,[[],["result",4]]],[11,"try_into","","",185,[[],["result",4]]],[11,"type_id","","",185,[[],["typeid",3]]],[11,"span","","",184,[[],["span",3]]],[11,"from","","",184,[[]]],[11,"into","","",184,[[]]],[11,"to_owned","","",184,[[]]],[11,"clone_into","","",184,[[]]],[11,"borrow","","",184,[[]]],[11,"borrow_mut","","",184,[[]]],[11,"try_from","","",184,[[],["result",4]]],[11,"try_into","","",184,[[],["result",4]]],[11,"type_id","","",184,[[],["typeid",3]]],[11,"span","","",204,[[],["span",3]]],[11,"from","","",204,[[]]],[11,"into","","",204,[[]]],[11,"to_owned","","",204,[[]]],[11,"clone_into","","",204,[[]]],[11,"borrow","","",204,[[]]],[11,"borrow_mut","","",204,[[]]],[11,"try_from","","",204,[[],["result",4]]],[11,"try_into","","",204,[[],["result",4]]],[11,"type_id","","",204,[[],["typeid",3]]],[11,"span","","",205,[[],["span",3]]],[11,"from","","",205,[[]]],[11,"into","","",205,[[]]],[11,"to_owned","","",205,[[]]],[11,"clone_into","","",205,[[]]],[11,"borrow","","",205,[[]]],[11,"borrow_mut","","",205,[[]]],[11,"try_from","","",205,[[],["result",4]]],[11,"try_into","","",205,[[],["result",4]]],[11,"type_id","","",205,[[],["typeid",3]]],[11,"span","","",206,[[],["span",3]]],[11,"from","","",206,[[]]],[11,"into","","",206,[[]]],[11,"to_owned","","",206,[[]]],[11,"clone_into","","",206,[[]]],[11,"borrow","","",206,[[]]],[11,"borrow_mut","","",206,[[]]],[11,"try_from","","",206,[[],["result",4]]],[11,"try_into","","",206,[[],["result",4]]],[11,"type_id","","",206,[[],["typeid",3]]],[11,"span","","",207,[[],["span",3]]],[11,"from","","",207,[[]]],[11,"into","","",207,[[]]],[11,"to_owned","","",207,[[]]],[11,"clone_into","","",207,[[]]],[11,"borrow","","",207,[[]]],[11,"borrow_mut","","",207,[[]]],[11,"try_from","","",207,[[],["result",4]]],[11,"try_into","","",207,[[],["result",4]]],[11,"type_id","","",207,[[],["typeid",3]]],[11,"span","","",208,[[],["span",3]]],[11,"from","","",208,[[]]],[11,"into","","",208,[[]]],[11,"to_owned","","",208,[[]]],[11,"clone_into","","",208,[[]]],[11,"borrow","","",208,[[]]],[11,"borrow_mut","","",208,[[]]],[11,"try_from","","",208,[[],["result",4]]],[11,"try_into","","",208,[[],["result",4]]],[11,"type_id","","",208,[[],["typeid",3]]],[11,"span","","",209,[[],["span",3]]],[11,"from","","",209,[[]]],[11,"into","","",209,[[]]],[11,"to_owned","","",209,[[]]],[11,"clone_into","","",209,[[]]],[11,"borrow","","",209,[[]]],[11,"borrow_mut","","",209,[[]]],[11,"try_from","","",209,[[],["result",4]]],[11,"try_into","","",209,[[],["result",4]]],[11,"type_id","","",209,[[],["typeid",3]]],[11,"span","","",210,[[],["span",3]]],[11,"from","","",210,[[]]],[11,"into","","",210,[[]]],[11,"to_owned","","",210,[[]]],[11,"clone_into","","",210,[[]]],[11,"borrow","","",210,[[]]],[11,"borrow_mut","","",210,[[]]],[11,"try_from","","",210,[[],["result",4]]],[11,"try_into","","",210,[[],["result",4]]],[11,"type_id","","",210,[[],["typeid",3]]],[11,"span","","",211,[[],["span",3]]],[11,"from","","",211,[[]]],[11,"into","","",211,[[]]],[11,"to_owned","","",211,[[]]],[11,"clone_into","","",211,[[]]],[11,"borrow","","",211,[[]]],[11,"borrow_mut","","",211,[[]]],[11,"try_from","","",211,[[],["result",4]]],[11,"try_into","","",211,[[],["result",4]]],[11,"type_id","","",211,[[],["typeid",3]]],[11,"span","","",212,[[],["span",3]]],[11,"from","","",212,[[]]],[11,"into","","",212,[[]]],[11,"to_owned","","",212,[[]]],[11,"clone_into","","",212,[[]]],[11,"borrow","","",212,[[]]],[11,"borrow_mut","","",212,[[]]],[11,"try_from","","",212,[[],["result",4]]],[11,"try_into","","",212,[[],["result",4]]],[11,"type_id","","",212,[[],["typeid",3]]],[11,"span","","",213,[[],["span",3]]],[11,"from","","",213,[[]]],[11,"into","","",213,[[]]],[11,"to_owned","","",213,[[]]],[11,"clone_into","","",213,[[]]],[11,"borrow","","",213,[[]]],[11,"borrow_mut","","",213,[[]]],[11,"try_from","","",213,[[],["result",4]]],[11,"try_into","","",213,[[],["result",4]]],[11,"type_id","","",213,[[],["typeid",3]]],[11,"span","","",214,[[],["span",3]]],[11,"from","","",214,[[]]],[11,"into","","",214,[[]]],[11,"to_owned","","",214,[[]]],[11,"clone_into","","",214,[[]]],[11,"borrow","","",214,[[]]],[11,"borrow_mut","","",214,[[]]],[11,"try_from","","",214,[[],["result",4]]],[11,"try_into","","",214,[[],["result",4]]],[11,"type_id","","",214,[[],["typeid",3]]],[11,"span","","",215,[[],["span",3]]],[11,"from","","",215,[[]]],[11,"into","","",215,[[]]],[11,"to_owned","","",215,[[]]],[11,"clone_into","","",215,[[]]],[11,"borrow","","",215,[[]]],[11,"borrow_mut","","",215,[[]]],[11,"try_from","","",215,[[],["result",4]]],[11,"try_into","","",215,[[],["result",4]]],[11,"type_id","","",215,[[],["typeid",3]]],[11,"span","","",216,[[],["span",3]]],[11,"from","","",216,[[]]],[11,"into","","",216,[[]]],[11,"to_owned","","",216,[[]]],[11,"clone_into","","",216,[[]]],[11,"borrow","","",216,[[]]],[11,"borrow_mut","","",216,[[]]],[11,"try_from","","",216,[[],["result",4]]],[11,"try_into","","",216,[[],["result",4]]],[11,"type_id","","",216,[[],["typeid",3]]],[11,"span","","",217,[[],["span",3]]],[11,"from","","",217,[[]]],[11,"into","","",217,[[]]],[11,"to_owned","","",217,[[]]],[11,"clone_into","","",217,[[]]],[11,"borrow","","",217,[[]]],[11,"borrow_mut","","",217,[[]]],[11,"try_from","","",217,[[],["result",4]]],[11,"try_into","","",217,[[],["result",4]]],[11,"type_id","","",217,[[],["typeid",3]]],[11,"span","","",218,[[],["span",3]]],[11,"from","","",218,[[]]],[11,"into","","",218,[[]]],[11,"to_owned","","",218,[[]]],[11,"clone_into","","",218,[[]]],[11,"borrow","","",218,[[]]],[11,"borrow_mut","","",218,[[]]],[11,"try_from","","",218,[[],["result",4]]],[11,"try_into","","",218,[[],["result",4]]],[11,"type_id","","",218,[[],["typeid",3]]],[11,"span","","",219,[[],["span",3]]],[11,"from","","",219,[[]]],[11,"into","","",219,[[]]],[11,"to_owned","","",219,[[]]],[11,"clone_into","","",219,[[]]],[11,"borrow","","",219,[[]]],[11,"borrow_mut","","",219,[[]]],[11,"try_from","","",219,[[],["result",4]]],[11,"try_into","","",219,[[],["result",4]]],[11,"type_id","","",219,[[],["typeid",3]]],[11,"span","","",220,[[],["span",3]]],[11,"from","","",220,[[]]],[11,"into","","",220,[[]]],[11,"to_owned","","",220,[[]]],[11,"clone_into","","",220,[[]]],[11,"borrow","","",220,[[]]],[11,"borrow_mut","","",220,[[]]],[11,"try_from","","",220,[[],["result",4]]],[11,"try_into","","",220,[[],["result",4]]],[11,"type_id","","",220,[[],["typeid",3]]],[11,"span","","",233,[[],["span",3]]],[11,"from","","",233,[[]]],[11,"into","","",233,[[]]],[11,"to_owned","","",233,[[]]],[11,"clone_into","","",233,[[]]],[11,"borrow","","",233,[[]]],[11,"borrow_mut","","",233,[[]]],[11,"try_from","","",233,[[],["result",4]]],[11,"try_into","","",233,[[],["result",4]]],[11,"type_id","","",233,[[],["typeid",3]]],[11,"span","","",231,[[],["span",3]]],[11,"from","","",231,[[]]],[11,"into","","",231,[[]]],[11,"to_owned","","",231,[[]]],[11,"clone_into","","",231,[[]]],[11,"borrow","","",231,[[]]],[11,"borrow_mut","","",231,[[]]],[11,"try_from","","",231,[[],["result",4]]],[11,"try_into","","",231,[[],["result",4]]],[11,"type_id","","",231,[[],["typeid",3]]],[11,"span","","",230,[[],["span",3]]],[11,"from","","",230,[[]]],[11,"into","","",230,[[]]],[11,"to_owned","","",230,[[]]],[11,"clone_into","","",230,[[]]],[11,"borrow","","",230,[[]]],[11,"borrow_mut","","",230,[[]]],[11,"try_from","","",230,[[],["result",4]]],[11,"try_into","","",230,[[],["result",4]]],[11,"type_id","","",230,[[],["typeid",3]]],[11,"span","","",232,[[],["span",3]]],[11,"from","","",232,[[]]],[11,"into","","",232,[[]]],[11,"to_owned","","",232,[[]]],[11,"clone_into","","",232,[[]]],[11,"borrow","","",232,[[]]],[11,"borrow_mut","","",232,[[]]],[11,"try_from","","",232,[[],["result",4]]],[11,"try_into","","",232,[[],["result",4]]],[11,"type_id","","",232,[[],["typeid",3]]],[11,"span","","",228,[[],["span",3]]],[11,"from","","",228,[[]]],[11,"into","","",228,[[]]],[11,"to_owned","","",228,[[]]],[11,"clone_into","","",228,[[]]],[11,"borrow","","",228,[[]]],[11,"borrow_mut","","",228,[[]]],[11,"try_from","","",228,[[],["result",4]]],[11,"try_into","","",228,[[],["result",4]]],[11,"type_id","","",228,[[],["typeid",3]]],[11,"span","","",229,[[],["span",3]]],[11,"from","","",229,[[]]],[11,"into","","",229,[[]]],[11,"to_owned","","",229,[[]]],[11,"clone_into","","",229,[[]]],[11,"borrow","","",229,[[]]],[11,"borrow_mut","","",229,[[]]],[11,"try_from","","",229,[[],["result",4]]],[11,"try_into","","",229,[[],["result",4]]],[11,"type_id","","",229,[[],["typeid",3]]],[11,"span","","",194,[[],["span",3]]],[11,"from","","",194,[[]]],[11,"into","","",194,[[]]],[11,"to_owned","","",194,[[]]],[11,"clone_into","","",194,[[]]],[11,"borrow","","",194,[[]]],[11,"borrow_mut","","",194,[[]]],[11,"try_from","","",194,[[],["result",4]]],[11,"try_into","","",194,[[],["result",4]]],[11,"type_id","","",194,[[],["typeid",3]]],[11,"span","","",195,[[],["span",3]]],[11,"from","","",195,[[]]],[11,"into","","",195,[[]]],[11,"to_owned","","",195,[[]]],[11,"clone_into","","",195,[[]]],[11,"borrow","","",195,[[]]],[11,"borrow_mut","","",195,[[]]],[11,"try_from","","",195,[[],["result",4]]],[11,"try_into","","",195,[[],["result",4]]],[11,"type_id","","",195,[[],["typeid",3]]],[11,"span","","",197,[[],["span",3]]],[11,"from","","",197,[[]]],[11,"into","","",197,[[]]],[11,"to_owned","","",197,[[]]],[11,"clone_into","","",197,[[]]],[11,"borrow","","",197,[[]]],[11,"borrow_mut","","",197,[[]]],[11,"try_from","","",197,[[],["result",4]]],[11,"try_into","","",197,[[],["result",4]]],[11,"type_id","","",197,[[],["typeid",3]]],[11,"span","","",198,[[],["span",3]]],[11,"from","","",198,[[]]],[11,"into","","",198,[[]]],[11,"to_owned","","",198,[[]]],[11,"clone_into","","",198,[[]]],[11,"borrow","","",198,[[]]],[11,"borrow_mut","","",198,[[]]],[11,"try_from","","",198,[[],["result",4]]],[11,"try_into","","",198,[[],["result",4]]],[11,"type_id","","",198,[[],["typeid",3]]],[11,"span","","",196,[[],["span",3]]],[11,"from","","",196,[[]]],[11,"into","","",196,[[]]],[11,"to_owned","","",196,[[]]],[11,"clone_into","","",196,[[]]],[11,"borrow","","",196,[[]]],[11,"borrow_mut","","",196,[[]]],[11,"try_from","","",196,[[],["result",4]]],[11,"try_into","","",196,[[],["result",4]]],[11,"type_id","","",196,[[],["typeid",3]]],[11,"span","","",223,[[],["span",3]]],[11,"from","","",223,[[]]],[11,"into","","",223,[[]]],[11,"to_owned","","",223,[[]]],[11,"clone_into","","",223,[[]]],[11,"borrow","","",223,[[]]],[11,"borrow_mut","","",223,[[]]],[11,"try_from","","",223,[[],["result",4]]],[11,"try_into","","",223,[[],["result",4]]],[11,"type_id","","",223,[[],["typeid",3]]],[11,"span","","",224,[[],["span",3]]],[11,"from","","",224,[[]]],[11,"into","","",224,[[]]],[11,"to_owned","","",224,[[]]],[11,"clone_into","","",224,[[]]],[11,"borrow","","",224,[[]]],[11,"borrow_mut","","",224,[[]]],[11,"try_from","","",224,[[],["result",4]]],[11,"try_into","","",224,[[],["result",4]]],[11,"type_id","","",224,[[],["typeid",3]]],[11,"span","","",226,[[],["span",3]]],[11,"from","","",226,[[]]],[11,"into","","",226,[[]]],[11,"to_owned","","",226,[[]]],[11,"clone_into","","",226,[[]]],[11,"borrow","","",226,[[]]],[11,"borrow_mut","","",226,[[]]],[11,"try_from","","",226,[[],["result",4]]],[11,"try_into","","",226,[[],["result",4]]],[11,"type_id","","",226,[[],["typeid",3]]],[11,"span","","",227,[[],["span",3]]],[11,"from","","",227,[[]]],[11,"into","","",227,[[]]],[11,"to_owned","","",227,[[]]],[11,"clone_into","","",227,[[]]],[11,"borrow","","",227,[[]]],[11,"borrow_mut","","",227,[[]]],[11,"try_from","","",227,[[],["result",4]]],[11,"try_into","","",227,[[],["result",4]]],[11,"type_id","","",227,[[],["typeid",3]]],[11,"span","","",225,[[],["span",3]]],[11,"from","","",225,[[]]],[11,"into","","",225,[[]]],[11,"to_owned","","",225,[[]]],[11,"clone_into","","",225,[[]]],[11,"borrow","","",225,[[]]],[11,"borrow_mut","","",225,[[]]],[11,"try_from","","",225,[[],["result",4]]],[11,"try_into","","",225,[[],["result",4]]],[11,"type_id","","",225,[[],["typeid",3]]],[11,"span","","",199,[[],["span",3]]],[11,"from","","",199,[[]]],[11,"into","","",199,[[]]],[11,"to_owned","","",199,[[]]],[11,"clone_into","","",199,[[]]],[11,"borrow","","",199,[[]]],[11,"borrow_mut","","",199,[[]]],[11,"try_from","","",199,[[],["result",4]]],[11,"try_into","","",199,[[],["result",4]]],[11,"type_id","","",199,[[],["typeid",3]]],[11,"span","","",200,[[],["span",3]]],[11,"from","","",200,[[]]],[11,"into","","",200,[[]]],[11,"to_owned","","",200,[[]]],[11,"clone_into","","",200,[[]]],[11,"borrow","","",200,[[]]],[11,"borrow_mut","","",200,[[]]],[11,"try_from","","",200,[[],["result",4]]],[11,"try_into","","",200,[[],["result",4]]],[11,"type_id","","",200,[[],["typeid",3]]],[11,"span","","",202,[[],["span",3]]],[11,"from","","",202,[[]]],[11,"into","","",202,[[]]],[11,"to_owned","","",202,[[]]],[11,"clone_into","","",202,[[]]],[11,"borrow","","",202,[[]]],[11,"borrow_mut","","",202,[[]]],[11,"try_from","","",202,[[],["result",4]]],[11,"try_into","","",202,[[],["result",4]]],[11,"type_id","","",202,[[],["typeid",3]]],[11,"span","","",203,[[],["span",3]]],[11,"from","","",203,[[]]],[11,"into","","",203,[[]]],[11,"to_owned","","",203,[[]]],[11,"clone_into","","",203,[[]]],[11,"borrow","","",203,[[]]],[11,"borrow_mut","","",203,[[]]],[11,"try_from","","",203,[[],["result",4]]],[11,"try_into","","",203,[[],["result",4]]],[11,"type_id","","",203,[[],["typeid",3]]],[11,"span","","",201,[[],["span",3]]],[11,"from","","",201,[[]]],[11,"into","","",201,[[]]],[11,"to_owned","","",201,[[]]],[11,"clone_into","","",201,[[]]],[11,"borrow","","",201,[[]]],[11,"borrow_mut","","",201,[[]]],[11,"try_from","","",201,[[],["result",4]]],[11,"try_into","","",201,[[],["result",4]]],[11,"type_id","","",201,[[],["typeid",3]]],[11,"span","","",222,[[],["span",3]]],[11,"from","","",222,[[]]],[11,"into","","",222,[[]]],[11,"to_owned","","",222,[[]]],[11,"clone_into","","",222,[[]]],[11,"borrow","","",222,[[]]],[11,"borrow_mut","","",222,[[]]],[11,"try_from","","",222,[[],["result",4]]],[11,"try_into","","",222,[[],["result",4]]],[11,"type_id","","",222,[[],["typeid",3]]],[11,"span","","",193,[[],["span",3]]],[11,"from","","",193,[[]]],[11,"into","","",193,[[]]],[11,"to_owned","","",193,[[]]],[11,"clone_into","","",193,[[]]],[11,"borrow","","",193,[[]]],[11,"borrow_mut","","",193,[[]]],[11,"try_from","","",193,[[],["result",4]]],[11,"try_into","","",193,[[],["result",4]]],[11,"type_id","","",193,[[],["typeid",3]]],[11,"span","","",221,[[],["span",3]]],[11,"from","","",221,[[]]],[11,"into","","",221,[[]]],[11,"to_owned","","",221,[[]]],[11,"clone_into","","",221,[[]]],[11,"borrow","","",221,[[]]],[11,"borrow_mut","","",221,[[]]],[11,"try_from","","",221,[[],["result",4]]],[11,"try_into","","",221,[[],["result",4]]],[11,"type_id","","",221,[[],["typeid",3]]],[11,"span","","",234,[[],["span",3]]],[11,"from","","",234,[[]]],[11,"into","","",234,[[]]],[11,"to_owned","","",234,[[]]],[11,"clone_into","","",234,[[]]],[11,"borrow","","",234,[[]]],[11,"borrow_mut","","",234,[[]]],[11,"try_from","","",234,[[],["result",4]]],[11,"try_into","","",234,[[],["result",4]]],[11,"type_id","","",234,[[],["typeid",3]]],[11,"span","","",235,[[],["span",3]]],[11,"from","","",235,[[]]],[11,"into","","",235,[[]]],[11,"to_owned","","",235,[[]]],[11,"clone_into","","",235,[[]]],[11,"to_string","","",235,[[],["string",3]]],[11,"borrow","","",235,[[]]],[11,"borrow_mut","","",235,[[]]],[11,"try_from","","",235,[[],["result",4]]],[11,"try_into","","",235,[[],["result",4]]],[11,"type_id","","",235,[[],["typeid",3]]],[11,"span","","",236,[[],["span",3]]],[11,"from","","",236,[[]]],[11,"into","","",236,[[]]],[11,"to_owned","","",236,[[]]],[11,"clone_into","","",236,[[]]],[11,"borrow","","",236,[[]]],[11,"borrow_mut","","",236,[[]]],[11,"try_from","","",236,[[],["result",4]]],[11,"try_into","","",236,[[],["result",4]]],[11,"type_id","","",236,[[],["typeid",3]]],[11,"span","","",300,[[],["span",3]]],[11,"from","","",300,[[]]],[11,"into","","",300,[[]]],[11,"to_owned","","",300,[[]]],[11,"clone_into","","",300,[[]]],[11,"borrow","","",300,[[]]],[11,"borrow_mut","","",300,[[]]],[11,"try_from","","",300,[[],["result",4]]],[11,"try_into","","",300,[[],["result",4]]],[11,"type_id","","",300,[[],["typeid",3]]],[11,"span","","",301,[[],["span",3]]],[11,"from","","",301,[[]]],[11,"into","","",301,[[]]],[11,"to_owned","","",301,[[]]],[11,"clone_into","","",301,[[]]],[11,"borrow","","",301,[[]]],[11,"borrow_mut","","",301,[[]]],[11,"try_from","","",301,[[],["result",4]]],[11,"try_into","","",301,[[],["result",4]]],[11,"type_id","","",301,[[],["typeid",3]]],[11,"span","","",302,[[],["span",3]]],[11,"from","","",302,[[]]],[11,"into","","",302,[[]]],[11,"to_owned","","",302,[[]]],[11,"clone_into","","",302,[[]]],[11,"borrow","","",302,[[]]],[11,"borrow_mut","","",302,[[]]],[11,"try_from","","",302,[[],["result",4]]],[11,"try_into","","",302,[[],["result",4]]],[11,"type_id","","",302,[[],["typeid",3]]],[11,"span","","",303,[[],["span",3]]],[11,"from","","",303,[[]]],[11,"into","","",303,[[]]],[11,"to_owned","","",303,[[]]],[11,"clone_into","","",303,[[]]],[11,"borrow","","",303,[[]]],[11,"borrow_mut","","",303,[[]]],[11,"try_from","","",303,[[],["result",4]]],[11,"try_into","","",303,[[],["result",4]]],[11,"type_id","","",303,[[],["typeid",3]]],[11,"span","","",304,[[],["span",3]]],[11,"from","","",304,[[]]],[11,"into","","",304,[[]]],[11,"to_owned","","",304,[[]]],[11,"clone_into","","",304,[[]]],[11,"to_string","","",304,[[],["string",3]]],[11,"borrow","","",304,[[]]],[11,"borrow_mut","","",304,[[]]],[11,"try_from","","",304,[[],["result",4]]],[11,"try_into","","",304,[[],["result",4]]],[11,"type_id","","",304,[[],["typeid",3]]],[11,"span","","",305,[[],["span",3]]],[11,"from","","",305,[[]]],[11,"into","","",305,[[]]],[11,"to_owned","","",305,[[]]],[11,"clone_into","","",305,[[]]],[11,"to_string","","",305,[[],["string",3]]],[11,"borrow","","",305,[[]]],[11,"borrow_mut","","",305,[[]]],[11,"try_from","","",305,[[],["result",4]]],[11,"try_into","","",305,[[],["result",4]]],[11,"type_id","","",305,[[],["typeid",3]]],[11,"span","","",237,[[],["span",3]]],[11,"from","","",237,[[]]],[11,"into","","",237,[[]]],[11,"to_owned","","",237,[[]]],[11,"clone_into","","",237,[[]]],[11,"borrow","","",237,[[]]],[11,"borrow_mut","","",237,[[]]],[11,"try_from","","",237,[[],["result",4]]],[11,"try_into","","",237,[[],["result",4]]],[11,"type_id","","",237,[[],["typeid",3]]],[11,"from","","",238,[[]]],[11,"into","","",238,[[]]],[11,"borrow","","",238,[[]]],[11,"borrow_mut","","",238,[[]]],[11,"try_from","","",238,[[],["result",4]]],[11,"try_into","","",238,[[],["result",4]]],[11,"type_id","","",238,[[],["typeid",3]]],[11,"span","","",239,[[],["span",3]]],[11,"from","","",239,[[]]],[11,"into","","",239,[[]]],[11,"to_owned","","",239,[[]]],[11,"clone_into","","",239,[[]]],[11,"borrow","","",239,[[]]],[11,"borrow_mut","","",239,[[]]],[11,"try_from","","",239,[[],["result",4]]],[11,"try_into","","",239,[[],["result",4]]],[11,"type_id","","",239,[[],["typeid",3]]],[11,"from","","",240,[[]]],[11,"into","","",240,[[]]],[11,"to_owned","","",240,[[]]],[11,"clone_into","","",240,[[]]],[11,"borrow","","",240,[[]]],[11,"borrow_mut","","",240,[[]]],[11,"try_from","","",240,[[],["result",4]]],[11,"try_into","","",240,[[],["result",4]]],[11,"type_id","","",240,[[],["typeid",3]]],[11,"span","","",245,[[],["span",3]]],[11,"from","","",245,[[]]],[11,"into","","",245,[[]]],[11,"to_owned","","",245,[[]]],[11,"clone_into","","",245,[[]]],[11,"borrow","","",245,[[]]],[11,"borrow_mut","","",245,[[]]],[11,"try_from","","",245,[[],["result",4]]],[11,"try_into","","",245,[[],["result",4]]],[11,"type_id","","",245,[[],["typeid",3]]],[11,"from","","",241,[[]]],[11,"into","","",241,[[]]],[11,"to_owned","","",241,[[]]],[11,"clone_into","","",241,[[]]],[11,"borrow","","",241,[[]]],[11,"borrow_mut","","",241,[[]]],[11,"try_from","","",241,[[],["result",4]]],[11,"try_into","","",241,[[],["result",4]]],[11,"type_id","","",241,[[],["typeid",3]]],[11,"from","","",243,[[]]],[11,"into","","",243,[[]]],[11,"to_owned","","",243,[[]]],[11,"clone_into","","",243,[[]]],[11,"borrow","","",243,[[]]],[11,"borrow_mut","","",243,[[]]],[11,"try_from","","",243,[[],["result",4]]],[11,"try_into","","",243,[[],["result",4]]],[11,"type_id","","",243,[[],["typeid",3]]],[11,"from","","",242,[[]]],[11,"into","","",242,[[]]],[11,"to_owned","","",242,[[]]],[11,"clone_into","","",242,[[]]],[11,"borrow","","",242,[[]]],[11,"borrow_mut","","",242,[[]]],[11,"try_from","","",242,[[],["result",4]]],[11,"try_into","","",242,[[],["result",4]]],[11,"type_id","","",242,[[],["typeid",3]]],[11,"from","","",244,[[]]],[11,"into","","",244,[[]]],[11,"to_owned","","",244,[[]]],[11,"clone_into","","",244,[[]]],[11,"borrow","","",244,[[]]],[11,"borrow_mut","","",244,[[]]],[11,"try_from","","",244,[[],["result",4]]],[11,"try_into","","",244,[[],["result",4]]],[11,"type_id","","",244,[[],["typeid",3]]],[11,"span","","",246,[[],["span",3]]],[11,"from","","",246,[[]]],[11,"into","","",246,[[]]],[11,"to_owned","","",246,[[]]],[11,"clone_into","","",246,[[]]],[11,"borrow","","",246,[[]]],[11,"borrow_mut","","",246,[[]]],[11,"try_from","","",246,[[],["result",4]]],[11,"try_into","","",246,[[],["result",4]]],[11,"type_id","","",246,[[],["typeid",3]]],[11,"span","","",247,[[],["span",3]]],[11,"from","","",247,[[]]],[11,"into","","",247,[[]]],[11,"to_owned","","",247,[[]]],[11,"clone_into","","",247,[[]]],[11,"borrow","","",247,[[]]],[11,"borrow_mut","","",247,[[]]],[11,"try_from","","",247,[[],["result",4]]],[11,"try_into","","",247,[[],["result",4]]],[11,"type_id","","",247,[[],["typeid",3]]],[11,"span","","",248,[[],["span",3]]],[11,"from","","",248,[[]]],[11,"into","","",248,[[]]],[11,"to_owned","","",248,[[]]],[11,"clone_into","","",248,[[]]],[11,"borrow","","",248,[[]]],[11,"borrow_mut","","",248,[[]]],[11,"try_from","","",248,[[],["result",4]]],[11,"try_into","","",248,[[],["result",4]]],[11,"type_id","","",248,[[],["typeid",3]]],[11,"span","","",250,[[],["span",3]]],[11,"from","","",250,[[]]],[11,"into","","",250,[[]]],[11,"to_owned","","",250,[[]]],[11,"clone_into","","",250,[[]]],[11,"borrow","","",250,[[]]],[11,"borrow_mut","","",250,[[]]],[11,"try_from","","",250,[[],["result",4]]],[11,"try_into","","",250,[[],["result",4]]],[11,"type_id","","",250,[[],["typeid",3]]],[11,"span","","",249,[[],["span",3]]],[11,"from","","",249,[[]]],[11,"into","","",249,[[]]],[11,"to_owned","","",249,[[]]],[11,"clone_into","","",249,[[]]],[11,"borrow","","",249,[[]]],[11,"borrow_mut","","",249,[[]]],[11,"try_from","","",249,[[],["result",4]]],[11,"try_into","","",249,[[],["result",4]]],[11,"type_id","","",249,[[],["typeid",3]]],[11,"span","","",254,[[],["span",3]]],[11,"from","","",254,[[]]],[11,"into","","",254,[[]]],[11,"to_owned","","",254,[[]]],[11,"clone_into","","",254,[[]]],[11,"borrow","","",254,[[]]],[11,"borrow_mut","","",254,[[]]],[11,"try_from","","",254,[[],["result",4]]],[11,"try_into","","",254,[[],["result",4]]],[11,"type_id","","",254,[[],["typeid",3]]],[11,"span","","",255,[[],["span",3]]],[11,"from","","",255,[[]]],[11,"into","","",255,[[]]],[11,"to_owned","","",255,[[]]],[11,"clone_into","","",255,[[]]],[11,"borrow","","",255,[[]]],[11,"borrow_mut","","",255,[[]]],[11,"try_from","","",255,[[],["result",4]]],[11,"try_into","","",255,[[],["result",4]]],[11,"type_id","","",255,[[],["typeid",3]]],[11,"span","","",256,[[],["span",3]]],[11,"from","","",256,[[]]],[11,"into","","",256,[[]]],[11,"to_owned","","",256,[[]]],[11,"clone_into","","",256,[[]]],[11,"borrow","","",256,[[]]],[11,"borrow_mut","","",256,[[]]],[11,"try_from","","",256,[[],["result",4]]],[11,"try_into","","",256,[[],["result",4]]],[11,"type_id","","",256,[[],["typeid",3]]],[11,"span","","",257,[[],["span",3]]],[11,"from","","",257,[[]]],[11,"into","","",257,[[]]],[11,"to_owned","","",257,[[]]],[11,"clone_into","","",257,[[]]],[11,"borrow","","",257,[[]]],[11,"borrow_mut","","",257,[[]]],[11,"try_from","","",257,[[],["result",4]]],[11,"try_into","","",257,[[],["result",4]]],[11,"type_id","","",257,[[],["typeid",3]]],[11,"span","","",258,[[],["span",3]]],[11,"from","","",258,[[]]],[11,"into","","",258,[[]]],[11,"to_owned","","",258,[[]]],[11,"clone_into","","",258,[[]]],[11,"borrow","","",258,[[]]],[11,"borrow_mut","","",258,[[]]],[11,"try_from","","",258,[[],["result",4]]],[11,"try_into","","",258,[[],["result",4]]],[11,"type_id","","",258,[[],["typeid",3]]],[11,"span","","",259,[[],["span",3]]],[11,"from","","",259,[[]]],[11,"into","","",259,[[]]],[11,"to_owned","","",259,[[]]],[11,"clone_into","","",259,[[]]],[11,"borrow","","",259,[[]]],[11,"borrow_mut","","",259,[[]]],[11,"try_from","","",259,[[],["result",4]]],[11,"try_into","","",259,[[],["result",4]]],[11,"type_id","","",259,[[],["typeid",3]]],[11,"span","","",260,[[],["span",3]]],[11,"from","","",260,[[]]],[11,"into","","",260,[[]]],[11,"to_owned","","",260,[[]]],[11,"clone_into","","",260,[[]]],[11,"borrow","","",260,[[]]],[11,"borrow_mut","","",260,[[]]],[11,"try_from","","",260,[[],["result",4]]],[11,"try_into","","",260,[[],["result",4]]],[11,"type_id","","",260,[[],["typeid",3]]],[11,"span","","",261,[[],["span",3]]],[11,"from","","",261,[[]]],[11,"into","","",261,[[]]],[11,"to_owned","","",261,[[]]],[11,"clone_into","","",261,[[]]],[11,"borrow","","",261,[[]]],[11,"borrow_mut","","",261,[[]]],[11,"try_from","","",261,[[],["result",4]]],[11,"try_into","","",261,[[],["result",4]]],[11,"type_id","","",261,[[],["typeid",3]]],[11,"span","","",262,[[],["span",3]]],[11,"from","","",262,[[]]],[11,"into","","",262,[[]]],[11,"to_owned","","",262,[[]]],[11,"clone_into","","",262,[[]]],[11,"borrow","","",262,[[]]],[11,"borrow_mut","","",262,[[]]],[11,"try_from","","",262,[[],["result",4]]],[11,"try_into","","",262,[[],["result",4]]],[11,"type_id","","",262,[[],["typeid",3]]],[11,"span","","",263,[[],["span",3]]],[11,"from","","",263,[[]]],[11,"into","","",263,[[]]],[11,"to_owned","","",263,[[]]],[11,"clone_into","","",263,[[]]],[11,"borrow","","",263,[[]]],[11,"borrow_mut","","",263,[[]]],[11,"try_from","","",263,[[],["result",4]]],[11,"try_into","","",263,[[],["result",4]]],[11,"type_id","","",263,[[],["typeid",3]]],[11,"span","","",264,[[],["span",3]]],[11,"from","","",264,[[]]],[11,"into","","",264,[[]]],[11,"to_owned","","",264,[[]]],[11,"clone_into","","",264,[[]]],[11,"borrow","","",264,[[]]],[11,"borrow_mut","","",264,[[]]],[11,"try_from","","",264,[[],["result",4]]],[11,"try_into","","",264,[[],["result",4]]],[11,"type_id","","",264,[[],["typeid",3]]],[11,"span","","",265,[[],["span",3]]],[11,"from","","",265,[[]]],[11,"into","","",265,[[]]],[11,"to_owned","","",265,[[]]],[11,"clone_into","","",265,[[]]],[11,"borrow","","",265,[[]]],[11,"borrow_mut","","",265,[[]]],[11,"try_from","","",265,[[],["result",4]]],[11,"try_into","","",265,[[],["result",4]]],[11,"type_id","","",265,[[],["typeid",3]]],[11,"span","","",266,[[],["span",3]]],[11,"from","","",266,[[]]],[11,"into","","",266,[[]]],[11,"to_owned","","",266,[[]]],[11,"clone_into","","",266,[[]]],[11,"borrow","","",266,[[]]],[11,"borrow_mut","","",266,[[]]],[11,"try_from","","",266,[[],["result",4]]],[11,"try_into","","",266,[[],["result",4]]],[11,"type_id","","",266,[[],["typeid",3]]],[11,"span","","",267,[[],["span",3]]],[11,"from","","",267,[[]]],[11,"into","","",267,[[]]],[11,"to_owned","","",267,[[]]],[11,"clone_into","","",267,[[]]],[11,"borrow","","",267,[[]]],[11,"borrow_mut","","",267,[[]]],[11,"try_from","","",267,[[],["result",4]]],[11,"try_into","","",267,[[],["result",4]]],[11,"type_id","","",267,[[],["typeid",3]]],[11,"span","","",268,[[],["span",3]]],[11,"from","","",268,[[]]],[11,"into","","",268,[[]]],[11,"to_owned","","",268,[[]]],[11,"clone_into","","",268,[[]]],[11,"borrow","","",268,[[]]],[11,"borrow_mut","","",268,[[]]],[11,"try_from","","",268,[[],["result",4]]],[11,"try_into","","",268,[[],["result",4]]],[11,"type_id","","",268,[[],["typeid",3]]],[11,"span","","",251,[[],["span",3]]],[11,"from","","",251,[[]]],[11,"into","","",251,[[]]],[11,"to_owned","","",251,[[]]],[11,"clone_into","","",251,[[]]],[11,"borrow","","",251,[[]]],[11,"borrow_mut","","",251,[[]]],[11,"try_from","","",251,[[],["result",4]]],[11,"try_into","","",251,[[],["result",4]]],[11,"type_id","","",251,[[],["typeid",3]]],[11,"span","","",252,[[],["span",3]]],[11,"from","","",252,[[]]],[11,"into","","",252,[[]]],[11,"to_owned","","",252,[[]]],[11,"clone_into","","",252,[[]]],[11,"borrow","","",252,[[]]],[11,"borrow_mut","","",252,[[]]],[11,"try_from","","",252,[[],["result",4]]],[11,"try_into","","",252,[[],["result",4]]],[11,"type_id","","",252,[[],["typeid",3]]],[11,"span","","",269,[[],["span",3]]],[11,"from","","",269,[[]]],[11,"into","","",269,[[]]],[11,"to_owned","","",269,[[]]],[11,"clone_into","","",269,[[]]],[11,"borrow","","",269,[[]]],[11,"borrow_mut","","",269,[[]]],[11,"try_from","","",269,[[],["result",4]]],[11,"try_into","","",269,[[],["result",4]]],[11,"type_id","","",269,[[],["typeid",3]]],[11,"span","","",253,[[],["span",3]]],[11,"from","","",253,[[]]],[11,"into","","",253,[[]]],[11,"to_owned","","",253,[[]]],[11,"clone_into","","",253,[[]]],[11,"borrow","","",253,[[]]],[11,"borrow_mut","","",253,[[]]],[11,"try_from","","",253,[[],["result",4]]],[11,"try_into","","",253,[[],["result",4]]],[11,"type_id","","",253,[[],["typeid",3]]],[11,"span","","",271,[[],["span",3]]],[11,"from","","",271,[[]]],[11,"into","","",271,[[]]],[11,"to_owned","","",271,[[]]],[11,"clone_into","","",271,[[]]],[11,"borrow","","",271,[[]]],[11,"borrow_mut","","",271,[[]]],[11,"try_from","","",271,[[],["result",4]]],[11,"try_into","","",271,[[],["result",4]]],[11,"type_id","","",271,[[],["typeid",3]]],[11,"span","","",272,[[],["span",3]]],[11,"from","","",272,[[]]],[11,"into","","",272,[[]]],[11,"to_owned","","",272,[[]]],[11,"clone_into","","",272,[[]]],[11,"borrow","","",272,[[]]],[11,"borrow_mut","","",272,[[]]],[11,"try_from","","",272,[[],["result",4]]],[11,"try_into","","",272,[[],["result",4]]],[11,"type_id","","",272,[[],["typeid",3]]],[11,"span","","",273,[[],["span",3]]],[11,"from","","",273,[[]]],[11,"into","","",273,[[]]],[11,"to_owned","","",273,[[]]],[11,"clone_into","","",273,[[]]],[11,"borrow","","",273,[[]]],[11,"borrow_mut","","",273,[[]]],[11,"try_from","","",273,[[],["result",4]]],[11,"try_into","","",273,[[],["result",4]]],[11,"type_id","","",273,[[],["typeid",3]]],[11,"span","","",274,[[],["span",3]]],[11,"from","","",274,[[]]],[11,"into","","",274,[[]]],[11,"to_owned","","",274,[[]]],[11,"clone_into","","",274,[[]]],[11,"borrow","","",274,[[]]],[11,"borrow_mut","","",274,[[]]],[11,"try_from","","",274,[[],["result",4]]],[11,"try_into","","",274,[[],["result",4]]],[11,"type_id","","",274,[[],["typeid",3]]],[11,"span","","",275,[[],["span",3]]],[11,"from","","",275,[[]]],[11,"into","","",275,[[]]],[11,"to_owned","","",275,[[]]],[11,"clone_into","","",275,[[]]],[11,"borrow","","",275,[[]]],[11,"borrow_mut","","",275,[[]]],[11,"try_from","","",275,[[],["result",4]]],[11,"try_into","","",275,[[],["result",4]]],[11,"type_id","","",275,[[],["typeid",3]]],[11,"span","","",276,[[],["span",3]]],[11,"from","","",276,[[]]],[11,"into","","",276,[[]]],[11,"to_owned","","",276,[[]]],[11,"clone_into","","",276,[[]]],[11,"borrow","","",276,[[]]],[11,"borrow_mut","","",276,[[]]],[11,"try_from","","",276,[[],["result",4]]],[11,"try_into","","",276,[[],["result",4]]],[11,"type_id","","",276,[[],["typeid",3]]],[11,"span","","",277,[[],["span",3]]],[11,"from","","",277,[[]]],[11,"into","","",277,[[]]],[11,"to_owned","","",277,[[]]],[11,"clone_into","","",277,[[]]],[11,"borrow","","",277,[[]]],[11,"borrow_mut","","",277,[[]]],[11,"try_from","","",277,[[],["result",4]]],[11,"try_into","","",277,[[],["result",4]]],[11,"type_id","","",277,[[],["typeid",3]]],[11,"span","","",278,[[],["span",3]]],[11,"from","","",278,[[]]],[11,"into","","",278,[[]]],[11,"to_owned","","",278,[[]]],[11,"clone_into","","",278,[[]]],[11,"borrow","","",278,[[]]],[11,"borrow_mut","","",278,[[]]],[11,"try_from","","",278,[[],["result",4]]],[11,"try_into","","",278,[[],["result",4]]],[11,"type_id","","",278,[[],["typeid",3]]],[11,"span","","",279,[[],["span",3]]],[11,"from","","",279,[[]]],[11,"into","","",279,[[]]],[11,"to_owned","","",279,[[]]],[11,"clone_into","","",279,[[]]],[11,"borrow","","",279,[[]]],[11,"borrow_mut","","",279,[[]]],[11,"try_from","","",279,[[],["result",4]]],[11,"try_into","","",279,[[],["result",4]]],[11,"type_id","","",279,[[],["typeid",3]]],[11,"span","","",280,[[],["span",3]]],[11,"from","","",280,[[]]],[11,"into","","",280,[[]]],[11,"to_owned","","",280,[[]]],[11,"clone_into","","",280,[[]]],[11,"borrow","","",280,[[]]],[11,"borrow_mut","","",280,[[]]],[11,"try_from","","",280,[[],["result",4]]],[11,"try_into","","",280,[[],["result",4]]],[11,"type_id","","",280,[[],["typeid",3]]],[11,"span","","",281,[[],["span",3]]],[11,"from","","",281,[[]]],[11,"into","","",281,[[]]],[11,"to_owned","","",281,[[]]],[11,"clone_into","","",281,[[]]],[11,"borrow","","",281,[[]]],[11,"borrow_mut","","",281,[[]]],[11,"try_from","","",281,[[],["result",4]]],[11,"try_into","","",281,[[],["result",4]]],[11,"type_id","","",281,[[],["typeid",3]]],[11,"span","","",282,[[],["span",3]]],[11,"from","","",282,[[]]],[11,"into","","",282,[[]]],[11,"to_owned","","",282,[[]]],[11,"clone_into","","",282,[[]]],[11,"borrow","","",282,[[]]],[11,"borrow_mut","","",282,[[]]],[11,"try_from","","",282,[[],["result",4]]],[11,"try_into","","",282,[[],["result",4]]],[11,"type_id","","",282,[[],["typeid",3]]],[11,"span","","",283,[[],["span",3]]],[11,"from","","",283,[[]]],[11,"into","","",283,[[]]],[11,"to_owned","","",283,[[]]],[11,"clone_into","","",283,[[]]],[11,"borrow","","",283,[[]]],[11,"borrow_mut","","",283,[[]]],[11,"try_from","","",283,[[],["result",4]]],[11,"try_into","","",283,[[],["result",4]]],[11,"type_id","","",283,[[],["typeid",3]]],[11,"span","","",284,[[],["span",3]]],[11,"from","","",284,[[]]],[11,"into","","",284,[[]]],[11,"to_owned","","",284,[[]]],[11,"clone_into","","",284,[[]]],[11,"borrow","","",284,[[]]],[11,"borrow_mut","","",284,[[]]],[11,"try_from","","",284,[[],["result",4]]],[11,"try_into","","",284,[[],["result",4]]],[11,"type_id","","",284,[[],["typeid",3]]],[11,"span","","",285,[[],["span",3]]],[11,"from","","",285,[[]]],[11,"into","","",285,[[]]],[11,"to_owned","","",285,[[]]],[11,"clone_into","","",285,[[]]],[11,"borrow","","",285,[[]]],[11,"borrow_mut","","",285,[[]]],[11,"try_from","","",285,[[],["result",4]]],[11,"try_into","","",285,[[],["result",4]]],[11,"type_id","","",285,[[],["typeid",3]]],[11,"span","","",286,[[],["span",3]]],[11,"from","","",286,[[]]],[11,"into","","",286,[[]]],[11,"to_owned","","",286,[[]]],[11,"clone_into","","",286,[[]]],[11,"borrow","","",286,[[]]],[11,"borrow_mut","","",286,[[]]],[11,"try_from","","",286,[[],["result",4]]],[11,"try_into","","",286,[[],["result",4]]],[11,"type_id","","",286,[[],["typeid",3]]],[11,"span","","",270,[[],["span",3]]],[11,"from","","",270,[[]]],[11,"into","","",270,[[]]],[11,"to_owned","","",270,[[]]],[11,"clone_into","","",270,[[]]],[11,"borrow","","",270,[[]]],[11,"borrow_mut","","",270,[[]]],[11,"try_from","","",270,[[],["result",4]]],[11,"try_into","","",270,[[],["result",4]]],[11,"type_id","","",270,[[],["typeid",3]]],[11,"span","","",292,[[],["span",3]]],[11,"from","","",292,[[]]],[11,"into","","",292,[[]]],[11,"to_owned","","",292,[[]]],[11,"clone_into","","",292,[[]]],[11,"borrow","","",292,[[]]],[11,"borrow_mut","","",292,[[]]],[11,"try_from","","",292,[[],["result",4]]],[11,"try_into","","",292,[[],["result",4]]],[11,"type_id","","",292,[[],["typeid",3]]],[11,"span","","",294,[[],["span",3]]],[11,"from","","",294,[[]]],[11,"into","","",294,[[]]],[11,"to_owned","","",294,[[]]],[11,"clone_into","","",294,[[]]],[11,"borrow","","",294,[[]]],[11,"borrow_mut","","",294,[[]]],[11,"try_from","","",294,[[],["result",4]]],[11,"try_into","","",294,[[],["result",4]]],[11,"type_id","","",294,[[],["typeid",3]]],[11,"span","","",293,[[],["span",3]]],[11,"from","","",293,[[]]],[11,"into","","",293,[[]]],[11,"to_owned","","",293,[[]]],[11,"clone_into","","",293,[[]]],[11,"borrow","","",293,[[]]],[11,"borrow_mut","","",293,[[]]],[11,"try_from","","",293,[[],["result",4]]],[11,"try_into","","",293,[[],["result",4]]],[11,"type_id","","",293,[[],["typeid",3]]],[11,"span","","",290,[[],["span",3]]],[11,"from","","",290,[[]]],[11,"into","","",290,[[]]],[11,"to_owned","","",290,[[]]],[11,"clone_into","","",290,[[]]],[11,"borrow","","",290,[[]]],[11,"borrow_mut","","",290,[[]]],[11,"try_from","","",290,[[],["result",4]]],[11,"try_into","","",290,[[],["result",4]]],[11,"type_id","","",290,[[],["typeid",3]]],[11,"span","","",287,[[],["span",3]]],[11,"from","","",287,[[]]],[11,"into","","",287,[[]]],[11,"to_owned","","",287,[[]]],[11,"clone_into","","",287,[[]]],[11,"borrow","","",287,[[]]],[11,"borrow_mut","","",287,[[]]],[11,"try_from","","",287,[[],["result",4]]],[11,"try_into","","",287,[[],["result",4]]],[11,"type_id","","",287,[[],["typeid",3]]],[11,"span","","",288,[[],["span",3]]],[11,"from","","",288,[[]]],[11,"into","","",288,[[]]],[11,"to_owned","","",288,[[]]],[11,"clone_into","","",288,[[]]],[11,"borrow","","",288,[[]]],[11,"borrow_mut","","",288,[[]]],[11,"try_from","","",288,[[],["result",4]]],[11,"try_into","","",288,[[],["result",4]]],[11,"type_id","","",288,[[],["typeid",3]]],[11,"span","","",289,[[],["span",3]]],[11,"from","","",289,[[]]],[11,"into","","",289,[[]]],[11,"to_owned","","",289,[[]]],[11,"clone_into","","",289,[[]]],[11,"borrow","","",289,[[]]],[11,"borrow_mut","","",289,[[]]],[11,"try_from","","",289,[[],["result",4]]],[11,"try_into","","",289,[[],["result",4]]],[11,"type_id","","",289,[[],["typeid",3]]],[11,"span","","",291,[[],["span",3]]],[11,"from","","",291,[[]]],[11,"into","","",291,[[]]],[11,"to_owned","","",291,[[]]],[11,"clone_into","","",291,[[]]],[11,"borrow","","",291,[[]]],[11,"borrow_mut","","",291,[[]]],[11,"try_from","","",291,[[],["result",4]]],[11,"try_into","","",291,[[],["result",4]]],[11,"type_id","","",291,[[],["typeid",3]]],[11,"from","","",295,[[]]],[11,"into","","",295,[[]]],[11,"to_owned","","",295,[[]]],[11,"clone_into","","",295,[[]]],[11,"borrow","","",295,[[]]],[11,"borrow_mut","","",295,[[]]],[11,"try_from","","",295,[[],["result",4]]],[11,"try_into","","",295,[[],["result",4]]],[11,"type_id","","",295,[[],["typeid",3]]],[11,"from","syn::buffer","",103,[[]]],[11,"into","","",103,[[]]],[11,"borrow","","",103,[[]]],[11,"borrow_mut","","",103,[[]]],[11,"try_from","","",103,[[],["result",4]]],[11,"try_into","","",103,[[],["result",4]]],[11,"type_id","","",103,[[],["typeid",3]]],[11,"from","","",104,[[]]],[11,"into","","",104,[[]]],[11,"to_owned","","",104,[[]]],[11,"clone_into","","",104,[[]]],[11,"borrow","","",104,[[]]],[11,"borrow_mut","","",104,[[]]],[11,"try_from","","",104,[[],["result",4]]],[11,"try_into","","",104,[[],["result",4]]],[11,"type_id","","",104,[[],["typeid",3]]],[11,"span","syn::punctuated","",106,[[],["span",3]]],[11,"from","","",106,[[]]],[11,"into","","",106,[[]]],[11,"to_owned","","",106,[[]]],[11,"clone_into","","",106,[[]]],[11,"borrow","","",106,[[]]],[11,"borrow_mut","","",106,[[]]],[11,"try_from","","",106,[[],["result",4]]],[11,"try_into","","",106,[[],["result",4]]],[11,"type_id","","",106,[[],["typeid",3]]],[11,"from","","",306,[[]]],[11,"into","","",306,[[]]],[11,"into_iter","","",306,[[]]],[11,"to_owned","","",306,[[]]],[11,"clone_into","","",306,[[]]],[11,"borrow","","",306,[[]]],[11,"borrow_mut","","",306,[[]]],[11,"try_from","","",306,[[],["result",4]]],[11,"try_into","","",306,[[],["result",4]]],[11,"type_id","","",306,[[],["typeid",3]]],[11,"from","","",307,[[]]],[11,"into","","",307,[[]]],[11,"into_iter","","",307,[[]]],[11,"borrow","","",307,[[]]],[11,"borrow_mut","","",307,[[]]],[11,"try_from","","",307,[[],["result",4]]],[11,"try_into","","",307,[[],["result",4]]],[11,"type_id","","",307,[[],["typeid",3]]],[11,"from","","",308,[[]]],[11,"into","","",308,[[]]],[11,"into_iter","","",308,[[]]],[11,"to_owned","","",308,[[]]],[11,"clone_into","","",308,[[]]],[11,"borrow","","",308,[[]]],[11,"borrow_mut","","",308,[[]]],[11,"try_from","","",308,[[],["result",4]]],[11,"try_into","","",308,[[],["result",4]]],[11,"type_id","","",308,[[],["typeid",3]]],[11,"from","","",309,[[]]],[11,"into","","",309,[[]]],[11,"into_iter","","",309,[[]]],[11,"to_owned","","",309,[[]]],[11,"clone_into","","",309,[[]]],[11,"borrow","","",309,[[]]],[11,"borrow_mut","","",309,[[]]],[11,"try_from","","",309,[[],["result",4]]],[11,"try_into","","",309,[[],["result",4]]],[11,"type_id","","",309,[[],["typeid",3]]],[11,"from","","",310,[[]]],[11,"into","","",310,[[]]],[11,"into_iter","","",310,[[]]],[11,"to_owned","","",310,[[]]],[11,"clone_into","","",310,[[]]],[11,"borrow","","",310,[[]]],[11,"borrow_mut","","",310,[[]]],[11,"try_from","","",310,[[],["result",4]]],[11,"try_into","","",310,[[],["result",4]]],[11,"type_id","","",310,[[],["typeid",3]]],[11,"from","","",311,[[]]],[11,"into","","",311,[[]]],[11,"into_iter","","",311,[[]]],[11,"borrow","","",311,[[]]],[11,"borrow_mut","","",311,[[]]],[11,"try_from","","",311,[[],["result",4]]],[11,"try_into","","",311,[[],["result",4]]],[11,"type_id","","",311,[[],["typeid",3]]],[11,"span","","",107,[[],["span",3]]],[11,"from","","",107,[[]]],[11,"into","","",107,[[]]],[11,"to_owned","","",107,[[]]],[11,"clone_into","","",107,[[]]],[11,"borrow","","",107,[[]]],[11,"borrow_mut","","",107,[[]]],[11,"try_from","","",107,[[],["result",4]]],[11,"try_into","","",107,[[],["result",4]]],[11,"type_id","","",107,[[],["typeid",3]]],[11,"from","syn::parse","",312,[[]]],[11,"into","","",312,[[]]],[11,"borrow","","",312,[[]]],[11,"borrow_mut","","",312,[[]]],[11,"try_from","","",312,[[],["result",4]]],[11,"try_into","","",312,[[],["result",4]]],[11,"type_id","","",312,[[],["typeid",3]]],[11,"from","","",115,[[]]],[11,"into","","",115,[[]]],[11,"to_owned","","",115,[[]]],[11,"clone_into","","",115,[[]]],[11,"to_string","","",115,[[],["string",3]]],[11,"borrow","","",115,[[]]],[11,"borrow_mut","","",115,[[]]],[11,"try_from","","",115,[[],["result",4]]],[11,"try_into","","",115,[[],["result",4]]],[11,"type_id","","",115,[[],["typeid",3]]],[11,"from","","",113,[[]]],[11,"into","","",113,[[]]],[11,"to_string","","",113,[[],["string",3]]],[11,"borrow","","",113,[[]]],[11,"borrow_mut","","",113,[[]]],[11,"try_from","","",113,[[],["result",4]]],[11,"try_into","","",113,[[],["result",4]]],[11,"type_id","","",113,[[],["typeid",3]]],[11,"from","","",112,[[]]],[11,"into","","",112,[[]]],[11,"to_owned","","",112,[[]]],[11,"clone_into","","",112,[[]]],[11,"borrow","","",112,[[]]],[11,"borrow_mut","","",112,[[]]],[11,"try_from","","",112,[[],["result",4]]],[11,"try_into","","",112,[[],["result",4]]],[11,"type_id","","",112,[[],["typeid",3]]],[11,"from","","",313,[[]]],[11,"into","","",313,[[]]],[11,"borrow","","",313,[[]]],[11,"borrow_mut","","",313,[[]]],[11,"try_from","","",313,[[],["result",4]]],[11,"try_into","","",313,[[],["result",4]]],[11,"type_id","","",313,[[],["typeid",3]]],[11,"partial_cmp","syn","",296,[[["ident",3]],[["option",4],["ordering",4]]]],[11,"clone","","",296,[[],["ident",3]]],[11,"eq","","",296,[[["ident",3]]]],[11,"eq","","",296,[[]]],[11,"cmp","","",296,[[["ident",3]],["ordering",4]]],[11,"fmt","","",296,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",296,[[["formatter",3]],[["result",4],["error",3]]]],[11,"hash","","",296,[[]]],[11,"span","","",296,[[],[["option",4],["span",3]]]],[11,"fmt","","",296,[[["formatter",3]],[["result",4],["error",3]]]],[11,"to_tokens","","",296,[[["tokenstream",3]]]],[11,"peek","","",235,[[["cursor",3]]]],[11,"display","","",235,[[]]],[11,"peek","","",236,[[["cursor",3]]]],[11,"display","","",236,[[]]],[11,"peek","","",300,[[["cursor",3]]]],[11,"display","","",300,[[]]],[11,"peek","","",301,[[["cursor",3]]]],[11,"display","","",301,[[]]],[11,"peek","","",302,[[["cursor",3]]]],[11,"display","","",302,[[]]],[11,"peek","","",303,[[["cursor",3]]]],[11,"display","","",303,[[]]],[11,"peek","","",304,[[["cursor",3]]]],[11,"display","","",304,[[]]],[11,"peek","","",305,[[["cursor",3]]]],[11,"display","","",305,[[]]],[11,"peek","","",237,[[["cursor",3]]]],[11,"display","","",237,[[]]],[11,"peek","syn::token","",0,[[["cursor",3]]]],[11,"display","","",0,[[]]],[11,"peek","","",101,[[["cursor",3]]]],[11,"display","","",101,[[]]],[11,"peek","","",99,[[["cursor",3]]]],[11,"display","","",99,[[]]],[11,"peek","","",100,[[["cursor",3]]]],[11,"display","","",100,[[]]],[11,"peek","","",102,[[["cursor",3]]]],[11,"display","","",102,[[]]],[11,"peek","","",1,[[["cursor",3]]]],[11,"display","","",1,[[]]],[11,"peek","","",2,[[["cursor",3]]]],[11,"display","","",2,[[]]],[11,"peek","","",3,[[["cursor",3]]]],[11,"display","","",3,[[]]],[11,"peek","","",4,[[["cursor",3]]]],[11,"display","","",4,[[]]],[11,"peek","","",5,[[["cursor",3]]]],[11,"display","","",5,[[]]],[11,"peek","","",6,[[["cursor",3]]]],[11,"display","","",6,[[]]],[11,"peek","","",7,[[["cursor",3]]]],[11,"display","","",7,[[]]],[11,"peek","","",8,[[["cursor",3]]]],[11,"display","","",8,[[]]],[11,"peek","","",9,[[["cursor",3]]]],[11,"display","","",9,[[]]],[11,"peek","","",10,[[["cursor",3]]]],[11,"display","","",10,[[]]],[11,"peek","","",11,[[["cursor",3]]]],[11,"display","","",11,[[]]],[11,"peek","","",12,[[["cursor",3]]]],[11,"display","","",12,[[]]],[11,"peek","","",13,[[["cursor",3]]]],[11,"display","","",13,[[]]],[11,"peek","","",14,[[["cursor",3]]]],[11,"display","","",14,[[]]],[11,"peek","","",15,[[["cursor",3]]]],[11,"display","","",15,[[]]],[11,"peek","","",16,[[["cursor",3]]]],[11,"display","","",16,[[]]],[11,"peek","","",17,[[["cursor",3]]]],[11,"display","","",17,[[]]],[11,"peek","","",18,[[["cursor",3]]]],[11,"display","","",18,[[]]],[11,"peek","","",19,[[["cursor",3]]]],[11,"display","","",19,[[]]],[11,"peek","","",20,[[["cursor",3]]]],[11,"display","","",20,[[]]],[11,"peek","","",21,[[["cursor",3]]]],[11,"display","","",21,[[]]],[11,"peek","","",22,[[["cursor",3]]]],[11,"display","","",22,[[]]],[11,"peek","","",23,[[["cursor",3]]]],[11,"display","","",23,[[]]],[11,"peek","","",24,[[["cursor",3]]]],[11,"display","","",24,[[]]],[11,"peek","","",25,[[["cursor",3]]]],[11,"display","","",25,[[]]],[11,"peek","","",26,[[["cursor",3]]]],[11,"display","","",26,[[]]],[11,"peek","","",27,[[["cursor",3]]]],[11,"display","","",27,[[]]],[11,"peek","","",28,[[["cursor",3]]]],[11,"display","","",28,[[]]],[11,"peek","","",29,[[["cursor",3]]]],[11,"display","","",29,[[]]],[11,"peek","","",30,[[["cursor",3]]]],[11,"display","","",30,[[]]],[11,"peek","","",31,[[["cursor",3]]]],[11,"display","","",31,[[]]],[11,"peek","","",32,[[["cursor",3]]]],[11,"display","","",32,[[]]],[11,"peek","","",33,[[["cursor",3]]]],[11,"display","","",33,[[]]],[11,"peek","","",34,[[["cursor",3]]]],[11,"display","","",34,[[]]],[11,"peek","","",35,[[["cursor",3]]]],[11,"display","","",35,[[]]],[11,"peek","","",36,[[["cursor",3]]]],[11,"display","","",36,[[]]],[11,"peek","","",37,[[["cursor",3]]]],[11,"display","","",37,[[]]],[11,"peek","","",38,[[["cursor",3]]]],[11,"display","","",38,[[]]],[11,"peek","","",39,[[["cursor",3]]]],[11,"display","","",39,[[]]],[11,"peek","","",40,[[["cursor",3]]]],[11,"display","","",40,[[]]],[11,"peek","","",41,[[["cursor",3]]]],[11,"display","","",41,[[]]],[11,"peek","","",42,[[["cursor",3]]]],[11,"display","","",42,[[]]],[11,"peek","","",43,[[["cursor",3]]]],[11,"display","","",43,[[]]],[11,"peek","","",44,[[["cursor",3]]]],[11,"display","","",44,[[]]],[11,"peek","","",45,[[["cursor",3]]]],[11,"display","","",45,[[]]],[11,"peek","","",46,[[["cursor",3]]]],[11,"display","","",46,[[]]],[11,"peek","","",47,[[["cursor",3]]]],[11,"display","","",47,[[]]],[11,"peek","","",48,[[["cursor",3]]]],[11,"display","","",48,[[]]],[11,"peek","","",49,[[["cursor",3]]]],[11,"display","","",49,[[]]],[11,"peek","","",50,[[["cursor",3]]]],[11,"display","","",50,[[]]],[11,"peek","","",51,[[["cursor",3]]]],[11,"display","","",51,[[]]],[11,"peek","","",52,[[["cursor",3]]]],[11,"display","","",52,[[]]],[11,"peek","","",53,[[["cursor",3]]]],[11,"display","","",53,[[]]],[11,"peek","","",54,[[["cursor",3]]]],[11,"display","","",54,[[]]],[11,"peek","","",55,[[["cursor",3]]]],[11,"display","","",55,[[]]],[11,"peek","","",56,[[["cursor",3]]]],[11,"display","","",56,[[]]],[11,"peek","","",57,[[["cursor",3]]]],[11,"display","","",57,[[]]],[11,"peek","","",58,[[["cursor",3]]]],[11,"display","","",58,[[]]],[11,"peek","","",59,[[["cursor",3]]]],[11,"display","","",59,[[]]],[11,"peek","","",60,[[["cursor",3]]]],[11,"display","","",60,[[]]],[11,"peek","","",61,[[["cursor",3]]]],[11,"display","","",61,[[]]],[11,"peek","","",62,[[["cursor",3]]]],[11,"display","","",62,[[]]],[11,"peek","","",63,[[["cursor",3]]]],[11,"display","","",63,[[]]],[11,"peek","","",64,[[["cursor",3]]]],[11,"display","","",64,[[]]],[11,"peek","","",65,[[["cursor",3]]]],[11,"display","","",65,[[]]],[11,"peek","","",66,[[["cursor",3]]]],[11,"display","","",66,[[]]],[11,"peek","","",67,[[["cursor",3]]]],[11,"display","","",67,[[]]],[11,"peek","","",68,[[["cursor",3]]]],[11,"display","","",68,[[]]],[11,"peek","","",69,[[["cursor",3]]]],[11,"display","","",69,[[]]],[11,"peek","","",70,[[["cursor",3]]]],[11,"display","","",70,[[]]],[11,"peek","","",71,[[["cursor",3]]]],[11,"display","","",71,[[]]],[11,"peek","","",72,[[["cursor",3]]]],[11,"display","","",72,[[]]],[11,"peek","","",73,[[["cursor",3]]]],[11,"display","","",73,[[]]],[11,"peek","","",74,[[["cursor",3]]]],[11,"display","","",74,[[]]],[11,"peek","","",75,[[["cursor",3]]]],[11,"display","","",75,[[]]],[11,"peek","","",76,[[["cursor",3]]]],[11,"display","","",76,[[]]],[11,"peek","","",77,[[["cursor",3]]]],[11,"display","","",77,[[]]],[11,"peek","","",78,[[["cursor",3]]]],[11,"display","","",78,[[]]],[11,"peek","","",79,[[["cursor",3]]]],[11,"display","","",79,[[]]],[11,"peek","","",80,[[["cursor",3]]]],[11,"display","","",80,[[]]],[11,"peek","","",81,[[["cursor",3]]]],[11,"display","","",81,[[]]],[11,"peek","","",82,[[["cursor",3]]]],[11,"display","","",82,[[]]],[11,"peek","","",83,[[["cursor",3]]]],[11,"display","","",83,[[]]],[11,"peek","","",84,[[["cursor",3]]]],[11,"display","","",84,[[]]],[11,"peek","","",85,[[["cursor",3]]]],[11,"display","","",85,[[]]],[11,"peek","","",86,[[["cursor",3]]]],[11,"display","","",86,[[]]],[11,"peek","","",87,[[["cursor",3]]]],[11,"display","","",87,[[]]],[11,"peek","","",88,[[["cursor",3]]]],[11,"display","","",88,[[]]],[11,"peek","","",89,[[["cursor",3]]]],[11,"display","","",89,[[]]],[11,"peek","","",90,[[["cursor",3]]]],[11,"display","","",90,[[]]],[11,"peek","","",91,[[["cursor",3]]]],[11,"display","","",91,[[]]],[11,"peek","","",92,[[["cursor",3]]]],[11,"display","","",92,[[]]],[11,"peek","","",93,[[["cursor",3]]]],[11,"display","","",93,[[]]],[11,"peek","","",94,[[["cursor",3]]]],[11,"display","","",94,[[]]],[11,"peek","","",95,[[["cursor",3]]]],[11,"display","","",95,[[]]],[11,"peek","","",96,[[["cursor",3]]]],[11,"display","","",96,[[]]],[11,"peek","","",97,[[["cursor",3]]]],[11,"display","","",97,[[]]],[11,"peek","","",98,[[["cursor",3]]]],[11,"display","","",98,[[]]],[11,"peek","syn","",296,[[["cursor",3]]]],[11,"display","","",296,[[]]],[11,"parse_any","","",296,[[["parsestream",6]],["result",6]]],[11,"unraw","","",296,[[],["ident",3]]],[11,"advance_to","syn::parse","",113,[[]]],[11,"parse","syn::token","",0,[[["parsestream",6]],["result",6]]],[11,"parse","","",1,[[["parsestream",6]],["result",6]]],[11,"parse","","",2,[[["parsestream",6]],["result",6]]],[11,"parse","","",3,[[["parsestream",6]],["result",6]]],[11,"parse","","",4,[[["parsestream",6]],["result",6]]],[11,"parse","","",5,[[["parsestream",6]],["result",6]]],[11,"parse","","",6,[[["parsestream",6]],["result",6]]],[11,"parse","","",7,[[["parsestream",6]],["result",6]]],[11,"parse","","",8,[[["parsestream",6]],["result",6]]],[11,"parse","","",9,[[["parsestream",6]],["result",6]]],[11,"parse","","",10,[[["parsestream",6]],["result",6]]],[11,"parse","","",11,[[["parsestream",6]],["result",6]]],[11,"parse","","",12,[[["parsestream",6]],["result",6]]],[11,"parse","","",13,[[["parsestream",6]],["result",6]]],[11,"parse","","",14,[[["parsestream",6]],["result",6]]],[11,"parse","","",15,[[["parsestream",6]],["result",6]]],[11,"parse","","",16,[[["parsestream",6]],["result",6]]],[11,"parse","","",17,[[["parsestream",6]],["result",6]]],[11,"parse","","",18,[[["parsestream",6]],["result",6]]],[11,"parse","","",19,[[["parsestream",6]],["result",6]]],[11,"parse","","",20,[[["parsestream",6]],["result",6]]],[11,"parse","","",21,[[["parsestream",6]],["result",6]]],[11,"parse","","",22,[[["parsestream",6]],["result",6]]],[11,"parse","","",23,[[["parsestream",6]],["result",6]]],[11,"parse","","",24,[[["parsestream",6]],["result",6]]],[11,"parse","","",25,[[["parsestream",6]],["result",6]]],[11,"parse","","",26,[[["parsestream",6]],["result",6]]],[11,"parse","","",27,[[["parsestream",6]],["result",6]]],[11,"parse","","",28,[[["parsestream",6]],["result",6]]],[11,"parse","","",29,[[["parsestream",6]],["result",6]]],[11,"parse","","",30,[[["parsestream",6]],["result",6]]],[11,"parse","","",31,[[["parsestream",6]],["result",6]]],[11,"parse","","",32,[[["parsestream",6]],["result",6]]],[11,"parse","","",33,[[["parsestream",6]],["result",6]]],[11,"parse","","",34,[[["parsestream",6]],["result",6]]],[11,"parse","","",35,[[["parsestream",6]],["result",6]]],[11,"parse","","",36,[[["parsestream",6]],["result",6]]],[11,"parse","","",37,[[["parsestream",6]],["result",6]]],[11,"parse","","",38,[[["parsestream",6]],["result",6]]],[11,"parse","","",39,[[["parsestream",6]],["result",6]]],[11,"parse","","",40,[[["parsestream",6]],["result",6]]],[11,"parse","","",41,[[["parsestream",6]],["result",6]]],[11,"parse","","",42,[[["parsestream",6]],["result",6]]],[11,"parse","","",43,[[["parsestream",6]],["result",6]]],[11,"parse","","",44,[[["parsestream",6]],["result",6]]],[11,"parse","","",45,[[["parsestream",6]],["result",6]]],[11,"parse","","",46,[[["parsestream",6]],["result",6]]],[11,"parse","","",47,[[["parsestream",6]],["result",6]]],[11,"parse","","",48,[[["parsestream",6]],["result",6]]],[11,"parse","","",49,[[["parsestream",6]],["result",6]]],[11,"parse","","",50,[[["parsestream",6]],["result",6]]],[11,"parse","","",51,[[["parsestream",6]],["result",6]]],[11,"parse","","",52,[[["parsestream",6]],["result",6]]],[11,"parse","","",53,[[["parsestream",6]],["result",6]]],[11,"parse","","",54,[[["parsestream",6]],["result",6]]],[11,"parse","","",55,[[["parsestream",6]],["result",6]]],[11,"parse","","",56,[[["parsestream",6]],["result",6]]],[11,"parse","","",57,[[["parsestream",6]],["result",6]]],[11,"parse","","",58,[[["parsestream",6]],["result",6]]],[11,"parse","","",59,[[["parsestream",6]],["result",6]]],[11,"parse","","",60,[[["parsestream",6]],["result",6]]],[11,"parse","","",61,[[["parsestream",6]],["result",6]]],[11,"parse","","",62,[[["parsestream",6]],["result",6]]],[11,"parse","","",63,[[["parsestream",6]],["result",6]]],[11,"parse","","",64,[[["parsestream",6]],["result",6]]],[11,"parse","","",65,[[["parsestream",6]],["result",6]]],[11,"parse","","",66,[[["parsestream",6]],["result",6]]],[11,"parse","","",67,[[["parsestream",6]],["result",6]]],[11,"parse","","",68,[[["parsestream",6]],["result",6]]],[11,"parse","","",69,[[["parsestream",6]],["result",6]]],[11,"parse","","",70,[[["parsestream",6]],["result",6]]],[11,"parse","","",71,[[["parsestream",6]],["result",6]]],[11,"parse","","",72,[[["parsestream",6]],["result",6]]],[11,"parse","","",73,[[["parsestream",6]],["result",6]]],[11,"parse","","",74,[[["parsestream",6]],["result",6]]],[11,"parse","","",75,[[["parsestream",6]],["result",6]]],[11,"parse","","",76,[[["parsestream",6]],["result",6]]],[11,"parse","","",77,[[["parsestream",6]],["result",6]]],[11,"parse","","",78,[[["parsestream",6]],["result",6]]],[11,"parse","","",79,[[["parsestream",6]],["result",6]]],[11,"parse","","",80,[[["parsestream",6]],["result",6]]],[11,"parse","","",81,[[["parsestream",6]],["result",6]]],[11,"parse","","",82,[[["parsestream",6]],["result",6]]],[11,"parse","","",83,[[["parsestream",6]],["result",6]]],[11,"parse","","",84,[[["parsestream",6]],["result",6]]],[11,"parse","","",85,[[["parsestream",6]],["result",6]]],[11,"parse","","",86,[[["parsestream",6]],["result",6]]],[11,"parse","","",87,[[["parsestream",6]],["result",6]]],[11,"parse","","",88,[[["parsestream",6]],["result",6]]],[11,"parse","","",89,[[["parsestream",6]],["result",6]]],[11,"parse","","",90,[[["parsestream",6]],["result",6]]],[11,"parse","","",91,[[["parsestream",6]],["result",6]]],[11,"parse","","",92,[[["parsestream",6]],["result",6]]],[11,"parse","","",93,[[["parsestream",6]],["result",6]]],[11,"parse","","",94,[[["parsestream",6]],["result",6]]],[11,"parse","","",95,[[["parsestream",6]],["result",6]]],[11,"parse","","",96,[[["parsestream",6]],["result",6]]],[11,"parse","","",97,[[["parsestream",6]],["result",6]]],[11,"parse","","",98,[[["parsestream",6]],["result",6]]],[11,"parse","syn","",296,[[["parsestream",6]],["result",6]]],[11,"parse","","",118,[[["parsestream",6]],["result",6]]],[11,"parse","","",119,[[["parsestream",6]],["result",6]]],[11,"parse","","",120,[[["parsestream",6]],["result",6]]],[11,"parse","","",121,[[["parsestream",6]],["result",6]]],[11,"parse","","",126,[[["parsestream",6]],["result",6]]],[11,"parse","","",124,[[["parsestream",6]],["result",6]]],[11,"parse","","",125,[[["parsestream",6]],["result",6]]],[11,"parse","","",130,[[["parsestream",6]],["result",6]]],[11,"parse","","",137,[[["parsestream",6]],["result",6]]],[11,"parse","","",157,[[["parsestream",6]],["result",6]]],[11,"parse","","",154,[[["parsestream",6]],["result",6]]],[11,"parse","","",152,[[["parsestream",6]],["result",6]]],[11,"parse","","",158,[[["parsestream",6]],["result",6]]],[11,"parse","","",160,[[["parsestream",6]],["result",6]]],[11,"parse","","",145,[[["parsestream",6]],["result",6]]],[11,"parse","","",138,[[["parsestream",6]],["result",6]]],[11,"parse","","",147,[[["parsestream",6]],["result",6]]],[11,"parse","","",161,[[["parsestream",6]],["result",6]]],[11,"parse","","",171,[[["parsestream",6]],["result",6]]],[11,"parse","","",143,[[["parsestream",6]],["result",6]]],[11,"parse","","",173,[[["parsestream",6]],["result",6]]],[11,"parse","","",148,[[["parsestream",6]],["result",6]]],[11,"parse","","",172,[[["parsestream",6]],["result",6]]],[11,"parse","","",156,[[["parsestream",6]],["result",6]]],[11,"parse","","",149,[[["parsestream",6]],["result",6]]],[11,"parse","","",174,[[["parsestream",6]],["result",6]]],[11,"parse","","",144,[[["parsestream",6]],["result",6]]],[11,"parse","","",139,[[["parsestream",6]],["result",6]]],[11,"parse","","",140,[[["parsestream",6]],["result",6]]],[11,"parse","","",151,[[["parsestream",6]],["result",6]]],[11,"parse","","",155,[[["parsestream",6]],["result",6]]],[11,"parse","","",164,[[["parsestream",6]],["result",6]]],[11,"parse","","",165,[[["parsestream",6]],["result",6]]],[11,"parse","","",146,[[["parsestream",6]],["result",6]]],[11,"parse","","",150,[[["parsestream",6]],["result",6]]],[11,"parse","","",167,[[["parsestream",6]],["result",6]]],[11,"parse","","",159,[[["parsestream",6]],["result",6]]],[11,"parse","","",168,[[["parsestream",6]],["result",6]]],[11,"parse","","",166,[[["parsestream",6]],["result",6]]],[11,"parse","","",162,[[["parsestream",6]],["result",6]]],[11,"parse","","",169,[[["parsestream",6]],["result",6]]],[11,"parse","","",141,[[["parsestream",6]],["result",6]]],[11,"parse","","",170,[[["parsestream",6]],["result",6]]],[11,"parse","","",176,[[["parsestream",6]],["result",6]]],[11,"parse","","",175,[[["parsestream",6]],["result",6]]],[11,"parse","","",134,[[["parsestream",6]],["result",6]]],[11,"parse","","",132,[[["parsestream",6]],["result",6]]],[11,"parse","","",136,[[["parsestream",6]],["result",6]]],[11,"parse","","",163,[[["parsestream",6]],["result",6]]],[11,"parse","","",178,[[["parsestream",6]],["result",6]]],[11,"parse","","",131,[[["parsestream",6]],[["result",6],["arm",3]]]],[11,"parse","","",177,[[["parsestream",6]],["result",6]]],[11,"parse","","",182,[[["parsestream",6]],["result",6]]],[11,"parse","","",181,[[["parsestream",6]],["result",6]]],[11,"parse","","",183,[[["parsestream",6]],["result",6]]],[11,"parse","","",179,[[["parsestream",6]],["result",6]]],[11,"parse","","",189,[[["parsestream",6]],["result",6]]],[11,"parse","","",190,[[["parsestream",6]],["result",6]]],[11,"parse","","",187,[[["parsestream",6]],["result",6]]],[11,"parse","","",188,[[["parsestream",6]],["result",6]]],[11,"parse","","",180,[[["parsestream",6]],["result",6]]],[11,"parse","","",191,[[["parsestream",6]],["result",6]]],[11,"parse","","",192,[[["parsestream",6]],["result",6]]],[11,"parse","","",204,[[["parsestream",6]],["result",6]]],[11,"parse","","",211,[[["parsestream",6]],["result",6]]],[11,"parse","","",212,[[["parsestream",6]],["result",6]]],[11,"parse","","",207,[[["parsestream",6]],["result",6]]],[11,"parse","","",220,[[["parsestream",6]],["result",6]]],[11,"parse","","",233,[[["parsestream",6]],[["usetree",4],["result",6]]]],[11,"parse","","",214,[[["parsestream",6]],["result",6]]],[11,"parse","","",205,[[["parsestream",6]],["result",6]]],[11,"parse","","",208,[[["parsestream",6]],["result",6]]],[11,"parse","","",193,[[["parsestream",6]],["result",6]]],[11,"parse","","",221,[[["parsestream",6]],["result",6]]],[11,"parse","","",213,[[["parsestream",6]],["result",6]]],[11,"parse","","",209,[[["parsestream",6]],["result",6]]],[11,"parse","","",194,[[["parsestream",6]],["result",6]]],[11,"parse","","",195,[[["parsestream",6]],["result",6]]],[11,"parse","","",197,[[["parsestream",6]],["result",6]]],[11,"parse","","",198,[[["parsestream",6]],["result",6]]],[11,"parse","","",196,[[["parsestream",6]],["result",6]]],[11,"parse","","",218,[[["parsestream",6]],["result",6]]],[11,"parse","","",215,[[["parsestream",6]],["result",6]]],[11,"parse","","",206,[[["parsestream",6]],["result",6]]],[11,"parse","","",219,[[["parsestream",6]],["result",6]]],[11,"parse","","",216,[[["parsestream",6]],["result",6]]],[11,"parse","","",217,[[["parsestream",6]],["result",6]]],[11,"parse","","",223,[[["parsestream",6]],["result",6]]],[11,"parse","","",224,[[["parsestream",6]],["result",6]]],[11,"parse","","",226,[[["parsestream",6]],["result",6]]],[11,"parse","","",227,[[["parsestream",6]],["result",6]]],[11,"parse","","",225,[[["parsestream",6]],["result",6]]],[11,"parse","","",210,[[["parsestream",6]],["result",6]]],[11,"parse","","",199,[[["parsestream",6]],["result",6]]],[11,"parse","","",200,[[["parsestream",6]],["result",6]]],[11,"parse","","",202,[[["parsestream",6]],["result",6]]],[11,"parse","","",203,[[["parsestream",6]],["result",6]]],[11,"parse","","",201,[[["parsestream",6]],["result",6]]],[11,"parse","","",234,[[["parsestream",6]],["result",6]]],[11,"parse","","",235,[[["parsestream",6]],["result",6]]],[11,"parse","","",236,[[["parsestream",6]],["result",6]]],[11,"parse","","",300,[[["parsestream",6]],["result",6]]],[11,"parse","","",301,[[["parsestream",6]],["result",6]]],[11,"parse","","",302,[[["parsestream",6]],["result",6]]],[11,"parse","","",303,[[["parsestream",6]],["result",6]]],[11,"parse","","",304,[[["parsestream",6]],["result",6]]],[11,"parse","","",305,[[["parsestream",6]],["result",6]]],[11,"parse","","",237,[[["parsestream",6]],["result",6]]],[11,"parse","","",239,[[["parsestream",6]],["result",6]]],[11,"parse","","",245,[[["parsestream",6]],["result",6]]],[11,"parse","","",246,[[["parsestream",6]],["result",6]]],[11,"parse","","",247,[[["parsestream",6]],["result",6]]],[11,"parse","","",248,[[["parsestream",6]],["result",6]]],[11,"parse","","",250,[[["parsestream",6]],["result",6]]],[11,"parse","","",254,[[["parsestream",6]],["result",6]]],[11,"parse","","",266,[[["parsestream",6]],["result",6]]],[11,"parse","","",255,[[["parsestream",6]],["result",6]]],[11,"parse","","",264,[[["parsestream",6]],["result",6]]],[11,"parse","","",265,[[["parsestream",6]],["result",6]]],[11,"parse","","",256,[[["parsestream",6]],["result",6]]],[11,"parse","","",261,[[["parsestream",6]],["result",6]]],[11,"parse","","",259,[[["parsestream",6]],["result",6]]],[11,"parse","","",268,[[["parsestream",6]],["result",6]]],[11,"parse","","",260,[[["parsestream",6]],["result",6]]],[11,"parse","","",263,[[["parsestream",6]],["result",6]]],[11,"parse","","",253,[[["parsestream",6]],["result",6]]],[11,"parse","","",267,[[["parsestream",6]],["result",6]]],[11,"parse","","",258,[[["parsestream",6]],["result",6]]],[11,"parse","","",257,[[["parsestream",6]],["result",6]]],[11,"parse","","",262,[[["parsestream",6]],["result",6]]],[11,"parse","","",252,[[["parsestream",6]],["result",6]]],[11,"parse","","",251,[[["parsestream",6]],["result",6]]],[11,"parse","","",271,[[["parsestream",6]],["result",6]]],[11,"parse","","",292,[[["parsestream",6]],["result",6]]],[11,"parse","","",290,[[["parsestream",6]],["result",6]]],[11,"parse","","",287,[[["parsestream",6]],["result",6]]],[11,"parse","","",291,[[["parsestream",6]],["result",6]]],[11,"parse","","",294,[[["parsestream",6]],["result",6]]],[11,"parse","","",288,[[["parsestream",6]],["result",6]]],[11,"parse","","",289,[[["parsestream",6]],["result",6]]],[11,"parse","syn::parse","",313,[[["parsestream",6]],["result",6]]],[11,"drop","","",113,[[]]],[11,"from","syn","",296,[[["selfvalue",3]],["ident",3]]],[11,"from","","",296,[[["selftype",3]],["ident",3]]],[11,"from","","",296,[[["super",3]],["ident",3]]],[11,"from","","",296,[[["crate",3]],["ident",3]]],[11,"from","","",296,[[["extern",3]],["ident",3]]],[11,"from","","",296,[[["underscore",3]],["ident",3]]],[11,"from","","",118,[[["path",3]],["meta",4]]],[11,"from","","",118,[[["metalist",3]],["meta",4]]],[11,"from","","",118,[[["metanamevalue",3]],["meta",4]]],[11,"from","","",121,[[["meta",4]],["nestedmeta",4]]],[11,"from","","",121,[[["lit",4]],["nestedmeta",4]]],[11,"from","","",123,[[["fieldsnamed",3]],["fields",4]]],[11,"from","","",123,[[["fieldsunnamed",3]],["fields",4]]],[11,"from","","",130,[[["vispublic",3]],["visibility",4]]],[11,"from","","",130,[[["viscrate",3]],["visibility",4]]],[11,"from","","",130,[[["visrestricted",3]],["visibility",4]]],[11,"from","","",137,[[["exprarray",3]],["expr",4]]],[11,"from","","",137,[[["exprassign",3]],["expr",4]]],[11,"from","","",137,[[["exprassignop",3]],["expr",4]]],[11,"from","","",137,[[["exprasync",3]],["expr",4]]],[11,"from","","",137,[[["exprawait",3]],["expr",4]]],[11,"from","","",137,[[["exprbinary",3]],["expr",4]]],[11,"from","","",137,[[["exprblock",3]],["expr",4]]],[11,"from","","",137,[[["exprbox",3]],["expr",4]]],[11,"from","","",137,[[["exprbreak",3]],["expr",4]]],[11,"from","","",137,[[["exprcall",3]],["expr",4]]],[11,"from","","",137,[[["exprcast",3]],["expr",4]]],[11,"from","","",137,[[["exprclosure",3]],["expr",4]]],[11,"from","","",137,[[["exprcontinue",3]],["expr",4]]],[11,"from","","",137,[[["exprfield",3]],["expr",4]]],[11,"from","","",137,[[["exprforloop",3]],["expr",4]]],[11,"from","","",137,[[["exprgroup",3]],["expr",4]]],[11,"from","","",137,[[["exprif",3]],["expr",4]]],[11,"from","","",137,[[["exprindex",3]],["expr",4]]],[11,"from","","",137,[[["exprlet",3]],["expr",4]]],[11,"from","","",137,[[["exprlit",3]],["expr",4]]],[11,"from","","",137,[[["exprloop",3]],["expr",4]]],[11,"from","","",137,[[["exprmacro",3]],["expr",4]]],[11,"from","","",137,[[["exprmatch",3]],["expr",4]]],[11,"from","","",137,[[["exprmethodcall",3]],["expr",4]]],[11,"from","","",137,[[["exprparen",3]],["expr",4]]],[11,"from","","",137,[[["exprpath",3]],["expr",4]]],[11,"from","","",137,[[["exprrange",3]],["expr",4]]],[11,"from","","",137,[[["exprreference",3]],["expr",4]]],[11,"from","","",137,[[["exprrepeat",3]],["expr",4]]],[11,"from","","",137,[[["exprreturn",3]],["expr",4]]],[11,"from","","",137,[[["exprstruct",3]],["expr",4]]],[11,"from","","",137,[[["exprtry",3]],["expr",4]]],[11,"from","","",137,[[["exprtryblock",3]],["expr",4]]],[11,"from","","",137,[[["exprtuple",3]],["expr",4]]],[11,"from","","",137,[[["exprtype",3]],["expr",4]]],[11,"from","","",137,[[["exprunary",3]],["expr",4]]],[11,"from","","",137,[[["exprunsafe",3]],["expr",4]]],[11,"from","","",137,[[["exprwhile",3]],["expr",4]]],[11,"from","","",137,[[["expryield",3]],["expr",4]]],[11,"from","","",177,[[],["index",3]]],[11,"from","","",181,[[["typeparam",3]],["genericparam",4]]],[11,"from","","",181,[[["lifetimedef",3]],["genericparam",4]]],[11,"from","","",181,[[["constparam",3]],["genericparam",4]]],[11,"from","","",189,[[["ident",3]]]],[11,"from","","",190,[[["traitbound",3]],["typeparambound",4]]],[11,"from","","",190,[[["lifetime",3]],["typeparambound",4]]],[11,"from","","",192,[[["predicatetype",3]],["wherepredicate",4]]],[11,"from","","",192,[[["predicatelifetime",3]],["wherepredicate",4]]],[11,"from","","",192,[[["predicateeq",3]],["wherepredicate",4]]],[11,"from","","",204,[[["itemconst",3]],["item",4]]],[11,"from","","",204,[[["itemenum",3]],["item",4]]],[11,"from","","",204,[[["itemexterncrate",3]],["item",4]]],[11,"from","","",204,[[["itemfn",3]],["item",4]]],[11,"from","","",204,[[["itemforeignmod",3]],["item",4]]],[11,"from","","",204,[[["itemimpl",3]],["item",4]]],[11,"from","","",204,[[["itemmacro",3]],["item",4]]],[11,"from","","",204,[[["itemmacro2",3]],["item",4]]],[11,"from","","",204,[[["itemmod",3]],["item",4]]],[11,"from","","",204,[[["itemstatic",3]],["item",4]]],[11,"from","","",204,[[["itemstruct",3]],["item",4]]],[11,"from","","",204,[[["itemtrait",3]],["item",4]]],[11,"from","","",204,[[["itemtraitalias",3]],["item",4]]],[11,"from","","",204,[[["itemtype",3]],["item",4]]],[11,"from","","",204,[[["itemunion",3]],["item",4]]],[11,"from","","",204,[[["itemuse",3]],["item",4]]],[11,"from","","",204,[[["deriveinput",3]],["item",4]]],[11,"from","","",245,[[["itemstruct",3]],["deriveinput",3]]],[11,"from","","",245,[[["itemenum",3]],["deriveinput",3]]],[11,"from","","",245,[[["itemunion",3]],["deriveinput",3]]],[11,"from","","",233,[[["usepath",3]],["usetree",4]]],[11,"from","","",233,[[["usename",3]],["usetree",4]]],[11,"from","","",233,[[["userename",3]],["usetree",4]]],[11,"from","","",233,[[["useglob",3]],["usetree",4]]],[11,"from","","",233,[[["usegroup",3]],["usetree",4]]],[11,"from","","",194,[[["foreignitemfn",3]],["foreignitem",4]]],[11,"from","","",194,[[["foreignitemstatic",3]],["foreignitem",4]]],[11,"from","","",194,[[["foreignitemtype",3]],["foreignitem",4]]],[11,"from","","",194,[[["foreignitemmacro",3]],["foreignitem",4]]],[11,"from","","",223,[[["traititemconst",3]],["traititem",4]]],[11,"from","","",223,[[["traititemmethod",3]],["traititem",4]]],[11,"from","","",223,[[["traititemtype",3]],["traititem",4]]],[11,"from","","",223,[[["traititemmacro",3]],["traititem",4]]],[11,"from","","",199,[[["implitemconst",3]],["implitem",4]]],[11,"from","","",199,[[["implitemmethod",3]],["implitem",4]]],[11,"from","","",199,[[["implitemtype",3]],["implitem",4]]],[11,"from","","",199,[[["implitemmacro",3]],["implitem",4]]],[11,"from","","",193,[[["receiver",3]],["fnarg",4]]],[11,"from","","",193,[[["pattype",3]],["fnarg",4]]],[11,"from","","",236,[[["litstr",3]],["lit",4]]],[11,"from","","",236,[[["litbytestr",3]],["lit",4]]],[11,"from","","",236,[[["litbyte",3]],["lit",4]]],[11,"from","","",236,[[["litchar",3]],["lit",4]]],[11,"from","","",236,[[["litint",3]],["lit",4]]],[11,"from","","",236,[[["litfloat",3]],["lit",4]]],[11,"from","","",236,[[["litbool",3]],["lit",4]]],[11,"from","","",304,[[["literal",3]]]],[11,"from","","",305,[[["literal",3]]]],[11,"from","","",241,[[["datastruct",3]],["data",4]]],[11,"from","","",241,[[["dataenum",3]],["data",4]]],[11,"from","","",241,[[["dataunion",3]],["data",4]]],[11,"from","","",254,[[["typearray",3]],["type",4]]],[11,"from","","",254,[[["typebarefn",3]],["type",4]]],[11,"from","","",254,[[["typegroup",3]],["type",4]]],[11,"from","","",254,[[["typeimpltrait",3]],["type",4]]],[11,"from","","",254,[[["typeinfer",3]],["type",4]]],[11,"from","","",254,[[["typemacro",3]],["type",4]]],[11,"from","","",254,[[["typenever",3]],["type",4]]],[11,"from","","",254,[[["typeparen",3]],["type",4]]],[11,"from","","",254,[[["typepath",3]],["type",4]]],[11,"from","","",254,[[["typeptr",3]],["type",4]]],[11,"from","","",254,[[["typereference",3]],["type",4]]],[11,"from","","",254,[[["typeslice",3]],["type",4]]],[11,"from","","",254,[[["typetraitobject",3]],["type",4]]],[11,"from","","",254,[[["typetuple",3]],["type",4]]],[11,"from","","",271,[[["patbox",3]],["pat",4]]],[11,"from","","",271,[[["patident",3]],["pat",4]]],[11,"from","","",271,[[["patlit",3]],["pat",4]]],[11,"from","","",271,[[["patmacro",3]],["pat",4]]],[11,"from","","",271,[[["pator",3]],["pat",4]]],[11,"from","","",271,[[["patpath",3]],["pat",4]]],[11,"from","","",271,[[["patrange",3]],["pat",4]]],[11,"from","","",271,[[["patreference",3]],["pat",4]]],[11,"from","","",271,[[["patrest",3]],["pat",4]]],[11,"from","","",271,[[["patslice",3]],["pat",4]]],[11,"from","","",271,[[["patstruct",3]],["pat",4]]],[11,"from","","",271,[[["pattuple",3]],["pat",4]]],[11,"from","","",271,[[["pattuplestruct",3]],["pat",4]]],[11,"from","","",271,[[["pattype",3]],["pat",4]]],[11,"from","","",271,[[["patwild",3]],["pat",4]]],[11,"from","","",292,[[]]],[11,"from","","",294,[[]]],[11,"from","syn::parse","",115,[[["lexerror",3]]]],[11,"next_back","syn::punctuated","",306,[[],["option",4]]],[11,"next_back","","",307,[[],["option",4]]],[11,"next_back","","",308,[[],["option",4]]],[11,"next_back","","",309,[[],["option",4]]],[11,"next_back","","",310,[[],["option",4]]],[11,"next_back","","",311,[[],["option",4]]],[11,"len","","",306,[[]]],[11,"len","","",307,[[]]],[11,"len","","",308,[[]]],[11,"len","","",309,[[]]],[11,"len","","",310,[[]]],[11,"len","","",311,[[]]],[11,"extend","","",106,[[["intoiterator",8]]]],[11,"extend","","",106,[[["intoiterator",8]]]],[11,"extend","syn::parse","",115,[[["intoiterator",8]]]],[11,"into_iter","syn","",123,[[]]],[11,"into_iter","syn::punctuated","",106,[[]]],[11,"into_iter","syn::parse","",115,[[]]],[11,"next","syn::punctuated","",306,[[],["option",4]]],[11,"size_hint","","",306,[[]]],[11,"next","","",307,[[],["option",4]]],[11,"size_hint","","",307,[[]]],[11,"next","","",308,[[],["option",4]]],[11,"size_hint","","",308,[[]]],[11,"next","","",309,[[],["option",4]]],[11,"size_hint","","",309,[[]]],[11,"next","","",310,[[],["option",4]]],[11,"size_hint","","",310,[[]]],[11,"next","","",311,[[],["option",4]]],[11,"size_hint","","",311,[[]]],[11,"clone","syn::token","",0,[[]]],[11,"clone","","",1,[[]]],[11,"clone","","",2,[[]]],[11,"clone","","",3,[[]]],[11,"clone","","",4,[[]]],[11,"clone","","",5,[[]]],[11,"clone","","",6,[[]]],[11,"clone","","",7,[[]]],[11,"clone","","",8,[[]]],[11,"clone","","",9,[[]]],[11,"clone","","",10,[[]]],[11,"clone","","",11,[[]]],[11,"clone","","",12,[[]]],[11,"clone","","",13,[[]]],[11,"clone","","",14,[[]]],[11,"clone","","",15,[[]]],[11,"clone","","",16,[[]]],[11,"clone","","",17,[[]]],[11,"clone","","",18,[[]]],[11,"clone","","",19,[[]]],[11,"clone","","",20,[[]]],[11,"clone","","",21,[[]]],[11,"clone","","",22,[[]]],[11,"clone","","",23,[[]]],[11,"clone","","",24,[[]]],[11,"clone","","",25,[[]]],[11,"clone","","",26,[[]]],[11,"clone","","",27,[[]]],[11,"clone","","",28,[[]]],[11,"clone","","",29,[[]]],[11,"clone","","",30,[[]]],[11,"clone","","",31,[[]]],[11,"clone","","",32,[[]]],[11,"clone","","",33,[[]]],[11,"clone","","",34,[[]]],[11,"clone","","",35,[[]]],[11,"clone","","",36,[[]]],[11,"clone","","",37,[[]]],[11,"clone","","",38,[[]]],[11,"clone","","",39,[[]]],[11,"clone","","",40,[[]]],[11,"clone","","",41,[[]]],[11,"clone","","",42,[[]]],[11,"clone","","",43,[[]]],[11,"clone","","",44,[[]]],[11,"clone","","",45,[[]]],[11,"clone","","",46,[[]]],[11,"clone","","",47,[[]]],[11,"clone","","",48,[[]]],[11,"clone","","",49,[[]]],[11,"clone","","",50,[[]]],[11,"clone","","",51,[[]]],[11,"clone","","",52,[[]]],[11,"clone","","",53,[[]]],[11,"clone","","",54,[[]]],[11,"clone","","",55,[[]]],[11,"clone","","",56,[[]]],[11,"clone","","",57,[[]]],[11,"clone","","",58,[[]]],[11,"clone","","",59,[[]]],[11,"clone","","",60,[[]]],[11,"clone","","",61,[[]]],[11,"clone","","",62,[[]]],[11,"clone","","",63,[[]]],[11,"clone","","",64,[[]]],[11,"clone","","",65,[[]]],[11,"clone","","",66,[[]]],[11,"clone","","",67,[[]]],[11,"clone","","",68,[[]]],[11,"clone","","",69,[[]]],[11,"clone","","",70,[[]]],[11,"clone","","",71,[[]]],[11,"clone","","",72,[[]]],[11,"clone","","",73,[[]]],[11,"clone","","",74,[[]]],[11,"clone","","",75,[[]]],[11,"clone","","",76,[[]]],[11,"clone","","",77,[[]]],[11,"clone","","",78,[[]]],[11,"clone","","",79,[[]]],[11,"clone","","",80,[[]]],[11,"clone","","",81,[[]]],[11,"clone","","",82,[[]]],[11,"clone","","",83,[[]]],[11,"clone","","",84,[[]]],[11,"clone","","",85,[[]]],[11,"clone","","",86,[[]]],[11,"clone","","",87,[[]]],[11,"clone","","",88,[[]]],[11,"clone","","",89,[[]]],[11,"clone","","",90,[[]]],[11,"clone","","",91,[[]]],[11,"clone","","",92,[[]]],[11,"clone","","",93,[[]]],[11,"clone","","",94,[[]]],[11,"clone","","",95,[[]]],[11,"clone","","",96,[[]]],[11,"clone","","",97,[[]]],[11,"clone","","",98,[[]]],[11,"clone","","",99,[[]]],[11,"clone","","",100,[[]]],[11,"clone","","",101,[[]]],[11,"clone","","",102,[[]]],[11,"clone","syn","",297,[[]]],[11,"clone","","",298,[[]]],[11,"clone","","",299,[[]]],[11,"clone","","",235,[[]]],[11,"clone","","",300,[[]]],[11,"clone","","",301,[[]]],[11,"clone","","",302,[[]]],[11,"clone","","",303,[[]]],[11,"clone","","",304,[[]]],[11,"clone","","",305,[[]]],[11,"clone","syn::buffer","",104,[[]]],[11,"clone","syn::punctuated","",106,[[]]],[11,"clone","","",306,[[]]],[11,"clone","","",308,[[]]],[11,"clone","","",309,[[]]],[11,"clone","","",310,[[]]],[11,"clone","","",107,[[]]],[11,"clone","syn","",251,[[]]],[11,"clone","","",287,[[]]],[11,"clone","","",131,[[]]],[11,"clone","","",116,[[]]],[11,"clone","","",117,[[]]],[11,"clone","","",252,[[]]],[11,"clone","","",246,[[]]],[11,"clone","","",288,[[]]],[11,"clone","","",248,[[]]],[11,"clone","","",179,[[]]],[11,"clone","","",180,[[]]],[11,"clone","","",289,[[]]],[11,"clone","","",241,[[]]],[11,"clone","","",242,[[]]],[11,"clone","","",243,[[]]],[11,"clone","","",244,[[]]],[11,"clone","","",245,[[]]],[11,"clone","","",137,[[]]],[11,"clone","","",138,[[]]],[11,"clone","","",139,[[]]],[11,"clone","","",140,[[]]],[11,"clone","","",141,[[]]],[11,"clone","","",142,[[]]],[11,"clone","","",143,[[]]],[11,"clone","","",144,[[]]],[11,"clone","","",145,[[]]],[11,"clone","","",146,[[]]],[11,"clone","","",147,[[]]],[11,"clone","","",148,[[]]],[11,"clone","","",149,[[]]],[11,"clone","","",150,[[]]],[11,"clone","","",151,[[]]],[11,"clone","","",152,[[]]],[11,"clone","","",153,[[]]],[11,"clone","","",154,[[]]],[11,"clone","","",155,[[]]],[11,"clone","","",156,[[]]],[11,"clone","","",157,[[]]],[11,"clone","","",158,[[]]],[11,"clone","","",159,[[]]],[11,"clone","","",160,[[]]],[11,"clone","","",161,[[]]],[11,"clone","","",162,[[]]],[11,"clone","","",163,[[]]],[11,"clone","","",164,[[]]],[11,"clone","","",165,[[]]],[11,"clone","","",166,[[]]],[11,"clone","","",167,[[]]],[11,"clone","","",168,[[]]],[11,"clone","","",169,[[]]],[11,"clone","","",170,[[]]],[11,"clone","","",171,[[]]],[11,"clone","","",172,[[]]],[11,"clone","","",173,[[]]],[11,"clone","","",174,[[]]],[11,"clone","","",175,[[]]],[11,"clone","","",176,[[]]],[11,"clone","","",122,[[]]],[11,"clone","","",270,[[]]],[11,"clone","","",132,[[]]],[11,"clone","","",123,[[]]],[11,"clone","","",124,[[]]],[11,"clone","","",125,[[]]],[11,"clone","","",234,[[]]],[11,"clone","","",193,[[]]],[11,"clone","","",194,[[]]],[11,"clone","","",195,[[]]],[11,"clone","","",196,[[]]],[11,"clone","","",197,[[]]],[11,"clone","","",198,[[]]],[11,"clone","","",290,[[]]],[11,"clone","","",133,[[]]],[11,"clone","","",181,[[]]],[11,"clone","","",182,[[]]],[11,"clone","","",199,[[]]],[11,"clone","","",200,[[]]],[11,"clone","","",201,[[]]],[11,"clone","","",202,[[]]],[11,"clone","","",203,[[]]],[11,"clone","","",177,[[]]],[11,"clone","","",204,[[]]],[11,"clone","","",205,[[]]],[11,"clone","","",206,[[]]],[11,"clone","","",207,[[]]],[11,"clone","","",208,[[]]],[11,"clone","","",209,[[]]],[11,"clone","","",210,[[]]],[11,"clone","","",211,[[]]],[11,"clone","","",212,[[]]],[11,"clone","","",213,[[]]],[11,"clone","","",214,[[]]],[11,"clone","","",215,[[]]],[11,"clone","","",216,[[]]],[11,"clone","","",217,[[]]],[11,"clone","","",218,[[]]],[11,"clone","","",219,[[]]],[11,"clone","","",220,[[]]],[11,"clone","","",134,[[]]],[11,"clone","","",183,[[]]],[11,"clone","","",236,[[]]],[11,"clone","","",237,[[]]],[11,"clone","","",249,[[]]],[11,"clone","","",239,[[]]],[11,"clone","","",240,[[]]],[11,"clone","","",178,[[]]],[11,"clone","","",118,[[]]],[11,"clone","","",119,[[]]],[11,"clone","","",120,[[]]],[11,"clone","","",135,[[]]],[11,"clone","","",121,[[]]],[11,"clone","","",291,[[]]],[11,"clone","","",271,[[]]],[11,"clone","","",272,[[]]],[11,"clone","","",273,[[]]],[11,"clone","","",274,[[]]],[11,"clone","","",275,[[]]],[11,"clone","","",276,[[]]],[11,"clone","","",277,[[]]],[11,"clone","","",278,[[]]],[11,"clone","","",279,[[]]],[11,"clone","","",280,[[]]],[11,"clone","","",281,[[]]],[11,"clone","","",282,[[]]],[11,"clone","","",283,[[]]],[11,"clone","","",284,[[]]],[11,"clone","","",285,[[]]],[11,"clone","","",286,[[]]],[11,"clone","","",292,[[]]],[11,"clone","","",293,[[]]],[11,"clone","","",294,[[]]],[11,"clone","","",184,[[]]],[11,"clone","","",185,[[]]],[11,"clone","","",186,[[]]],[11,"clone","","",295,[[]]],[11,"clone","","",136,[[]]],[11,"clone","","",221,[[]]],[11,"clone","","",253,[[]]],[11,"clone","","",222,[[]]],[11,"clone","","",250,[[]]],[11,"clone","","",187,[[]]],[11,"clone","","",188,[[]]],[11,"clone","","",223,[[]]],[11,"clone","","",224,[[]]],[11,"clone","","",225,[[]]],[11,"clone","","",226,[[]]],[11,"clone","","",227,[[]]],[11,"clone","","",254,[[]]],[11,"clone","","",255,[[]]],[11,"clone","","",256,[[]]],[11,"clone","","",257,[[]]],[11,"clone","","",258,[[]]],[11,"clone","","",259,[[]]],[11,"clone","","",260,[[]]],[11,"clone","","",261,[[]]],[11,"clone","","",189,[[]]],[11,"clone","","",190,[[]]],[11,"clone","","",262,[[]]],[11,"clone","","",263,[[]]],[11,"clone","","",264,[[]]],[11,"clone","","",265,[[]]],[11,"clone","","",266,[[]]],[11,"clone","","",267,[[]]],[11,"clone","","",268,[[]]],[11,"clone","","",247,[[]]],[11,"clone","","",228,[[]]],[11,"clone","","",229,[[]]],[11,"clone","","",230,[[]]],[11,"clone","","",231,[[]]],[11,"clone","","",232,[[]]],[11,"clone","","",233,[[]]],[11,"clone","","",269,[[]]],[11,"clone","","",126,[[]]],[11,"clone","","",127,[[]]],[11,"clone","","",128,[[]]],[11,"clone","","",129,[[]]],[11,"clone","","",130,[[]]],[11,"clone","","",191,[[]]],[11,"clone","","",192,[[]]],[11,"clone","syn::parse","",112,[[]]],[11,"clone","","",115,[[]]],[11,"default","syn::token","",0,[[]]],[11,"default","","",1,[[]]],[11,"default","","",2,[[]]],[11,"default","","",3,[[]]],[11,"default","","",4,[[]]],[11,"default","","",5,[[]]],[11,"default","","",6,[[]]],[11,"default","","",7,[[]]],[11,"default","","",8,[[]]],[11,"default","","",9,[[]]],[11,"default","","",10,[[]]],[11,"default","","",11,[[]]],[11,"default","","",12,[[]]],[11,"default","","",13,[[]]],[11,"default","","",14,[[]]],[11,"default","","",15,[[]]],[11,"default","","",16,[[]]],[11,"default","","",17,[[]]],[11,"default","","",18,[[]]],[11,"default","","",19,[[]]],[11,"default","","",20,[[]]],[11,"default","","",21,[[]]],[11,"default","","",22,[[]]],[11,"default","","",23,[[]]],[11,"default","","",24,[[]]],[11,"default","","",25,[[]]],[11,"default","","",26,[[]]],[11,"default","","",27,[[]]],[11,"default","","",28,[[]]],[11,"default","","",29,[[]]],[11,"default","","",30,[[]]],[11,"default","","",31,[[]]],[11,"default","","",32,[[]]],[11,"default","","",33,[[]]],[11,"default","","",34,[[]]],[11,"default","","",35,[[]]],[11,"default","","",36,[[]]],[11,"default","","",37,[[]]],[11,"default","","",38,[[]]],[11,"default","","",39,[[]]],[11,"default","","",40,[[]]],[11,"default","","",41,[[]]],[11,"default","","",42,[[]]],[11,"default","","",43,[[]]],[11,"default","","",44,[[]]],[11,"default","","",45,[[]]],[11,"default","","",46,[[]]],[11,"default","","",47,[[]]],[11,"default","","",48,[[]]],[11,"default","","",49,[[]]],[11,"default","","",50,[[]]],[11,"default","","",51,[[]]],[11,"default","","",52,[[]]],[11,"default","","",53,[[]]],[11,"default","","",54,[[]]],[11,"default","","",55,[[]]],[11,"default","","",56,[[]]],[11,"default","","",57,[[]]],[11,"default","","",58,[[]]],[11,"default","","",59,[[]]],[11,"default","","",60,[[]]],[11,"default","","",61,[[]]],[11,"default","","",62,[[]]],[11,"default","","",63,[[]]],[11,"default","","",64,[[]]],[11,"default","","",65,[[]]],[11,"default","","",66,[[]]],[11,"default","","",67,[[]]],[11,"default","","",68,[[]]],[11,"default","","",69,[[]]],[11,"default","","",70,[[]]],[11,"default","","",71,[[]]],[11,"default","","",72,[[]]],[11,"default","","",73,[[]]],[11,"default","","",74,[[]]],[11,"default","","",75,[[]]],[11,"default","","",76,[[]]],[11,"default","","",77,[[]]],[11,"default","","",78,[[]]],[11,"default","","",79,[[]]],[11,"default","","",80,[[]]],[11,"default","","",81,[[]]],[11,"default","","",82,[[]]],[11,"default","","",83,[[]]],[11,"default","","",84,[[]]],[11,"default","","",85,[[]]],[11,"default","","",86,[[]]],[11,"default","","",87,[[]]],[11,"default","","",88,[[]]],[11,"default","","",89,[[]]],[11,"default","","",90,[[]]],[11,"default","","",91,[[]]],[11,"default","","",92,[[]]],[11,"default","","",93,[[]]],[11,"default","","",94,[[]]],[11,"default","","",95,[[]]],[11,"default","","",96,[[]]],[11,"default","","",97,[[]]],[11,"default","","",98,[[]]],[11,"default","","",99,[[]]],[11,"default","","",100,[[]]],[11,"default","","",101,[[]]],[11,"default","","",102,[[]]],[11,"default","syn","",182,[[]]],[11,"default","","",179,[[]]],[11,"default","","",293,[[]]],[11,"default","syn::punctuated","",106,[[]]],[11,"cmp","syn","",235,[[["lifetime",3]],["ordering",4]]],[11,"eq","","",178,[[]]],[11,"eq","","",177,[[]]],[11,"eq","","",235,[[["lifetime",3]]]],[11,"eq","syn::buffer","",104,[[]]],[11,"partial_cmp","syn","",235,[[["lifetime",3]],[["option",4],["ordering",4]]]],[11,"deref","syn::token","",0,[[]]],[11,"deref","","",53,[[]]],[11,"deref","","",55,[[]]],[11,"deref","","",58,[[]]],[11,"deref","","",59,[[]]],[11,"deref","","",60,[[]]],[11,"deref","","",62,[[]]],[11,"deref","","",64,[[]]],[11,"deref","","",65,[[]]],[11,"deref","","",67,[[]]],[11,"deref","","",68,[[]]],[11,"deref","","",72,[[]]],[11,"deref","","",75,[[]]],[11,"deref","","",77,[[]]],[11,"deref","","",80,[[]]],[11,"deref","","",83,[[]]],[11,"deref","","",84,[[]]],[11,"deref","","",87,[[]]],[11,"deref","","",90,[[]]],[11,"deref","","",95,[[]]],[11,"deref","","",96,[[]]],[11,"deref","","",98,[[]]],[11,"deref","syn::parse","",112,[[]]],[11,"deref_mut","syn::token","",0,[[]]],[11,"deref_mut","","",53,[[]]],[11,"deref_mut","","",55,[[]]],[11,"deref_mut","","",58,[[]]],[11,"deref_mut","","",59,[[]]],[11,"deref_mut","","",60,[[]]],[11,"deref_mut","","",62,[[]]],[11,"deref_mut","","",64,[[]]],[11,"deref_mut","","",65,[[]]],[11,"deref_mut","","",67,[[]]],[11,"deref_mut","","",68,[[]]],[11,"deref_mut","","",72,[[]]],[11,"deref_mut","","",75,[[]]],[11,"deref_mut","","",77,[[]]],[11,"deref_mut","","",80,[[]]],[11,"deref_mut","","",83,[[]]],[11,"deref_mut","","",84,[[]]],[11,"deref_mut","","",87,[[]]],[11,"deref_mut","","",90,[[]]],[11,"deref_mut","","",95,[[]]],[11,"deref_mut","","",96,[[]]],[11,"deref_mut","","",98,[[]]],[11,"fmt","syn::parse","",113,[[["formatter",3]],["result",6]]],[11,"fmt","","",115,[[["formatter",3]],["result",6]]],[11,"fmt","syn","",235,[[["formatter",3]],["result",6]]],[11,"fmt","","",304,[[["formatter",3]],["result",6]]],[11,"fmt","","",305,[[["formatter",3]],["result",6]]],[11,"fmt","syn::parse","",113,[[["formatter",3]],["result",6]]],[11,"fmt","","",115,[[["formatter",3]],["result",6]]],[11,"index","syn::punctuated","",106,[[]]],[11,"index_mut","","",106,[[]]],[11,"hash","syn","",178,[[]]],[11,"hash","","",177,[[]]],[11,"hash","","",235,[[]]],[11,"from_iter","syn::punctuated","",106,[[["intoiterator",8]]]],[11,"from_iter","","",106,[[["intoiterator",8]]]],[11,"description","syn::parse","",115,[[]]],[11,"to_tokens","syn::token","",0,[[["tokenstream",3]]]],[11,"to_tokens","","",1,[[["tokenstream",3]]]],[11,"to_tokens","","",2,[[["tokenstream",3]]]],[11,"to_tokens","","",3,[[["tokenstream",3]]]],[11,"to_tokens","","",4,[[["tokenstream",3]]]],[11,"to_tokens","","",5,[[["tokenstream",3]]]],[11,"to_tokens","","",6,[[["tokenstream",3]]]],[11,"to_tokens","","",7,[[["tokenstream",3]]]],[11,"to_tokens","","",8,[[["tokenstream",3]]]],[11,"to_tokens","","",9,[[["tokenstream",3]]]],[11,"to_tokens","","",10,[[["tokenstream",3]]]],[11,"to_tokens","","",11,[[["tokenstream",3]]]],[11,"to_tokens","","",12,[[["tokenstream",3]]]],[11,"to_tokens","","",13,[[["tokenstream",3]]]],[11,"to_tokens","","",14,[[["tokenstream",3]]]],[11,"to_tokens","","",15,[[["tokenstream",3]]]],[11,"to_tokens","","",16,[[["tokenstream",3]]]],[11,"to_tokens","","",17,[[["tokenstream",3]]]],[11,"to_tokens","","",18,[[["tokenstream",3]]]],[11,"to_tokens","","",19,[[["tokenstream",3]]]],[11,"to_tokens","","",20,[[["tokenstream",3]]]],[11,"to_tokens","","",21,[[["tokenstream",3]]]],[11,"to_tokens","","",22,[[["tokenstream",3]]]],[11,"to_tokens","","",23,[[["tokenstream",3]]]],[11,"to_tokens","","",24,[[["tokenstream",3]]]],[11,"to_tokens","","",25,[[["tokenstream",3]]]],[11,"to_tokens","","",26,[[["tokenstream",3]]]],[11,"to_tokens","","",27,[[["tokenstream",3]]]],[11,"to_tokens","","",28,[[["tokenstream",3]]]],[11,"to_tokens","","",29,[[["tokenstream",3]]]],[11,"to_tokens","","",30,[[["tokenstream",3]]]],[11,"to_tokens","","",31,[[["tokenstream",3]]]],[11,"to_tokens","","",32,[[["tokenstream",3]]]],[11,"to_tokens","","",33,[[["tokenstream",3]]]],[11,"to_tokens","","",34,[[["tokenstream",3]]]],[11,"to_tokens","","",35,[[["tokenstream",3]]]],[11,"to_tokens","","",36,[[["tokenstream",3]]]],[11,"to_tokens","","",37,[[["tokenstream",3]]]],[11,"to_tokens","","",38,[[["tokenstream",3]]]],[11,"to_tokens","","",39,[[["tokenstream",3]]]],[11,"to_tokens","","",40,[[["tokenstream",3]]]],[11,"to_tokens","","",41,[[["tokenstream",3]]]],[11,"to_tokens","","",42,[[["tokenstream",3]]]],[11,"to_tokens","","",43,[[["tokenstream",3]]]],[11,"to_tokens","","",44,[[["tokenstream",3]]]],[11,"to_tokens","","",45,[[["tokenstream",3]]]],[11,"to_tokens","","",46,[[["tokenstream",3]]]],[11,"to_tokens","","",47,[[["tokenstream",3]]]],[11,"to_tokens","","",48,[[["tokenstream",3]]]],[11,"to_tokens","","",49,[[["tokenstream",3]]]],[11,"to_tokens","","",50,[[["tokenstream",3]]]],[11,"to_tokens","","",51,[[["tokenstream",3]]]],[11,"to_tokens","","",52,[[["tokenstream",3]]]],[11,"to_tokens","","",53,[[["tokenstream",3]]]],[11,"to_tokens","","",54,[[["tokenstream",3]]]],[11,"to_tokens","","",55,[[["tokenstream",3]]]],[11,"to_tokens","","",56,[[["tokenstream",3]]]],[11,"to_tokens","","",57,[[["tokenstream",3]]]],[11,"to_tokens","","",58,[[["tokenstream",3]]]],[11,"to_tokens","","",59,[[["tokenstream",3]]]],[11,"to_tokens","","",60,[[["tokenstream",3]]]],[11,"to_tokens","","",61,[[["tokenstream",3]]]],[11,"to_tokens","","",62,[[["tokenstream",3]]]],[11,"to_tokens","","",63,[[["tokenstream",3]]]],[11,"to_tokens","","",64,[[["tokenstream",3]]]],[11,"to_tokens","","",65,[[["tokenstream",3]]]],[11,"to_tokens","","",66,[[["tokenstream",3]]]],[11,"to_tokens","","",67,[[["tokenstream",3]]]],[11,"to_tokens","","",68,[[["tokenstream",3]]]],[11,"to_tokens","","",69,[[["tokenstream",3]]]],[11,"to_tokens","","",70,[[["tokenstream",3]]]],[11,"to_tokens","","",71,[[["tokenstream",3]]]],[11,"to_tokens","","",72,[[["tokenstream",3]]]],[11,"to_tokens","","",73,[[["tokenstream",3]]]],[11,"to_tokens","","",74,[[["tokenstream",3]]]],[11,"to_tokens","","",75,[[["tokenstream",3]]]],[11,"to_tokens","","",76,[[["tokenstream",3]]]],[11,"to_tokens","","",77,[[["tokenstream",3]]]],[11,"to_tokens","","",78,[[["tokenstream",3]]]],[11,"to_tokens","","",79,[[["tokenstream",3]]]],[11,"to_tokens","","",80,[[["tokenstream",3]]]],[11,"to_tokens","","",81,[[["tokenstream",3]]]],[11,"to_tokens","","",82,[[["tokenstream",3]]]],[11,"to_tokens","","",83,[[["tokenstream",3]]]],[11,"to_tokens","","",84,[[["tokenstream",3]]]],[11,"to_tokens","","",85,[[["tokenstream",3]]]],[11,"to_tokens","","",86,[[["tokenstream",3]]]],[11,"to_tokens","","",87,[[["tokenstream",3]]]],[11,"to_tokens","","",88,[[["tokenstream",3]]]],[11,"to_tokens","","",89,[[["tokenstream",3]]]],[11,"to_tokens","","",90,[[["tokenstream",3]]]],[11,"to_tokens","","",91,[[["tokenstream",3]]]],[11,"to_tokens","","",92,[[["tokenstream",3]]]],[11,"to_tokens","","",93,[[["tokenstream",3]]]],[11,"to_tokens","","",94,[[["tokenstream",3]]]],[11,"to_tokens","","",95,[[["tokenstream",3]]]],[11,"to_tokens","","",96,[[["tokenstream",3]]]],[11,"to_tokens","","",97,[[["tokenstream",3]]]],[11,"to_tokens","","",98,[[["tokenstream",3]]]],[11,"to_tokens","syn","",118,[[["tokenstream",3]]]],[11,"to_tokens","","",121,[[["tokenstream",3]]]],[11,"to_tokens","","",117,[[["tokenstream",3]]]],[11,"to_tokens","","",119,[[["tokenstream",3]]]],[11,"to_tokens","","",120,[[["tokenstream",3]]]],[11,"to_tokens","","",123,[[["tokenstream",3]]]],[11,"to_tokens","","",130,[[["tokenstream",3]]]],[11,"to_tokens","","",126,[[["tokenstream",3]]]],[11,"to_tokens","","",124,[[["tokenstream",3]]]],[11,"to_tokens","","",125,[[["tokenstream",3]]]],[11,"to_tokens","","",122,[[["tokenstream",3]]]],[11,"to_tokens","","",128,[[["tokenstream",3]]]],[11,"to_tokens","","",127,[[["tokenstream",3]]]],[11,"to_tokens","","",129,[[["tokenstream",3]]]],[11,"to_tokens","","",137,[[["tokenstream",3]]]],[11,"to_tokens","","",145,[[["tokenstream",3]]]],[11,"to_tokens","","",138,[[["tokenstream",3]]]],[11,"to_tokens","","",147,[[["tokenstream",3]]]],[11,"to_tokens","","",161,[[["tokenstream",3]]]],[11,"to_tokens","","",135,[[["tokenstream",3]]]],[11,"to_tokens","","",133,[[["tokenstream",3]]]],[11,"to_tokens","","",171,[[["tokenstream",3]]]],[11,"to_tokens","","",143,[[["tokenstream",3]]]],[11,"to_tokens","","",173,[[["tokenstream",3]]]],[11,"to_tokens","","",157,[[["tokenstream",3]]]],[11,"to_tokens","","",148,[[["tokenstream",3]]]],[11,"to_tokens","","",172,[[["tokenstream",3]]]],[11,"to_tokens","","",156,[[["tokenstream",3]]]],[11,"to_tokens","","",154,[[["tokenstream",3]]]],[11,"to_tokens","","",175,[[["tokenstream",3]]]],[11,"to_tokens","","",152,[[["tokenstream",3]]]],[11,"to_tokens","","",158,[[["tokenstream",3]]]],[11,"to_tokens","","",160,[[["tokenstream",3]]]],[11,"to_tokens","","",141,[[["tokenstream",3]]]],[11,"to_tokens","","",142,[[["tokenstream",3]]]],[11,"to_tokens","","",170,[[["tokenstream",3]]]],[11,"to_tokens","","",176,[[["tokenstream",3]]]],[11,"to_tokens","","",149,[[["tokenstream",3]]]],[11,"to_tokens","","",174,[[["tokenstream",3]]]],[11,"to_tokens","","",144,[[["tokenstream",3]]]],[11,"to_tokens","","",139,[[["tokenstream",3]]]],[11,"to_tokens","","",140,[[["tokenstream",3]]]],[11,"to_tokens","","",151,[[["tokenstream",3]]]],[11,"to_tokens","","",178,[[["tokenstream",3]]]],[11,"to_tokens","","",177,[[["tokenstream",3]]]],[11,"to_tokens","","",155,[[["tokenstream",3]]]],[11,"to_tokens","","",164,[[["tokenstream",3]]]],[11,"to_tokens","","",163,[[["tokenstream",3]]]],[11,"to_tokens","","",165,[[["tokenstream",3]]]],[11,"to_tokens","","",146,[[["tokenstream",3]]]],[11,"to_tokens","","",150,[[["tokenstream",3]]]],[11,"to_tokens","","",167,[[["tokenstream",3]]]],[11,"to_tokens","","",159,[[["tokenstream",3]]]],[11,"to_tokens","","",168,[[["tokenstream",3]]]],[11,"to_tokens","","",166,[[["tokenstream",3]]]],[11,"to_tokens","","",153,[[["tokenstream",3]]]],[11,"to_tokens","","",162,[[["tokenstream",3]]]],[11,"to_tokens","","",169,[[["tokenstream",3]]]],[11,"to_tokens","","",134,[[["tokenstream",3]]]],[11,"to_tokens","","",132,[[["tokenstream",3]]]],[11,"to_tokens","","",131,[[["tokenstream",3]]]],[11,"to_tokens","","",181,[[["tokenstream",3]]]],[11,"to_tokens","","",190,[[["tokenstream",3]]]],[11,"to_tokens","","",192,[[["tokenstream",3]]]],[11,"to_tokens","","",182,[[["tokenstream",3]]]],[11,"to_tokens","","",297,[[["tokenstream",3]]]],[11,"to_tokens","","",298,[[["tokenstream",3]]]],[11,"to_tokens","","",299,[[["tokenstream",3]]]],[11,"to_tokens","","",179,[[["tokenstream",3]]]],[11,"to_tokens","","",183,[[["tokenstream",3]]]],[11,"to_tokens","","",189,[[["tokenstream",3]]]],[11,"to_tokens","","",187,[[["tokenstream",3]]]],[11,"to_tokens","","",188,[[["tokenstream",3]]]],[11,"to_tokens","","",180,[[["tokenstream",3]]]],[11,"to_tokens","","",191,[[["tokenstream",3]]]],[11,"to_tokens","","",186,[[["tokenstream",3]]]],[11,"to_tokens","","",185,[[["tokenstream",3]]]],[11,"to_tokens","","",184,[[["tokenstream",3]]]],[11,"to_tokens","","",204,[[["tokenstream",3]]]],[11,"to_tokens","","",233,[[["tokenstream",3]]]],[11,"to_tokens","","",194,[[["tokenstream",3]]]],[11,"to_tokens","","",223,[[["tokenstream",3]]]],[11,"to_tokens","","",199,[[["tokenstream",3]]]],[11,"to_tokens","","",193,[[["tokenstream",3]]]],[11,"to_tokens","","",207,[[["tokenstream",3]]]],[11,"to_tokens","","",220,[[["tokenstream",3]]]],[11,"to_tokens","","",214,[[["tokenstream",3]]]],[11,"to_tokens","","",205,[[["tokenstream",3]]]],[11,"to_tokens","","",208,[[["tokenstream",3]]]],[11,"to_tokens","","",213,[[["tokenstream",3]]]],[11,"to_tokens","","",209,[[["tokenstream",3]]]],[11,"to_tokens","","",218,[[["tokenstream",3]]]],[11,"to_tokens","","",206,[[["tokenstream",3]]]],[11,"to_tokens","","",215,[[["tokenstream",3]]]],[11,"to_tokens","","",219,[[["tokenstream",3]]]],[11,"to_tokens","","",216,[[["tokenstream",3]]]],[11,"to_tokens","","",217,[[["tokenstream",3]]]],[11,"to_tokens","","",210,[[["tokenstream",3]]]],[11,"to_tokens","","",211,[[["tokenstream",3]]]],[11,"to_tokens","","",212,[[["tokenstream",3]]]],[11,"to_tokens","","",231,[[["tokenstream",3]]]],[11,"to_tokens","","",230,[[["tokenstream",3]]]],[11,"to_tokens","","",232,[[["tokenstream",3]]]],[11,"to_tokens","","",228,[[["tokenstream",3]]]],[11,"to_tokens","","",229,[[["tokenstream",3]]]],[11,"to_tokens","","",224,[[["tokenstream",3]]]],[11,"to_tokens","","",226,[[["tokenstream",3]]]],[11,"to_tokens","","",227,[[["tokenstream",3]]]],[11,"to_tokens","","",225,[[["tokenstream",3]]]],[11,"to_tokens","","",200,[[["tokenstream",3]]]],[11,"to_tokens","","",202,[[["tokenstream",3]]]],[11,"to_tokens","","",203,[[["tokenstream",3]]]],[11,"to_tokens","","",201,[[["tokenstream",3]]]],[11,"to_tokens","","",195,[[["tokenstream",3]]]],[11,"to_tokens","","",197,[[["tokenstream",3]]]],[11,"to_tokens","","",198,[[["tokenstream",3]]]],[11,"to_tokens","","",196,[[["tokenstream",3]]]],[11,"to_tokens","","",222,[[["tokenstream",3]]]],[11,"to_tokens","","",221,[[["tokenstream",3]]]],[11,"to_tokens","","",234,[[["tokenstream",3]]]],[11,"to_tokens","","",235,[[["tokenstream",3]]]],[11,"to_tokens","","",236,[[["tokenstream",3]]]],[11,"to_tokens","","",300,[[["tokenstream",3]]]],[11,"to_tokens","","",301,[[["tokenstream",3]]]],[11,"to_tokens","","",302,[[["tokenstream",3]]]],[11,"to_tokens","","",303,[[["tokenstream",3]]]],[11,"to_tokens","","",304,[[["tokenstream",3]]]],[11,"to_tokens","","",305,[[["tokenstream",3]]]],[11,"to_tokens","","",237,[[["tokenstream",3]]]],[11,"to_tokens","","",239,[[["tokenstream",3]]]],[11,"to_tokens","","",245,[[["tokenstream",3]]]],[11,"to_tokens","","",246,[[["tokenstream",3]]]],[11,"to_tokens","","",247,[[["tokenstream",3]]]],[11,"to_tokens","","",248,[[["tokenstream",3]]]],[11,"to_tokens","","",250,[[["tokenstream",3]]]],[11,"to_tokens","","",249,[[["tokenstream",3]]]],[11,"to_tokens","","",254,[[["tokenstream",3]]]],[11,"to_tokens","","",266,[[["tokenstream",3]]]],[11,"to_tokens","","",255,[[["tokenstream",3]]]],[11,"to_tokens","","",264,[[["tokenstream",3]]]],[11,"to_tokens","","",265,[[["tokenstream",3]]]],[11,"to_tokens","","",256,[[["tokenstream",3]]]],[11,"to_tokens","","",261,[[["tokenstream",3]]]],[11,"to_tokens","","",268,[[["tokenstream",3]]]],[11,"to_tokens","","",263,[[["tokenstream",3]]]],[11,"to_tokens","","",267,[[["tokenstream",3]]]],[11,"to_tokens","","",258,[[["tokenstream",3]]]],[11,"to_tokens","","",257,[[["tokenstream",3]]]],[11,"to_tokens","","",262,[[["tokenstream",3]]]],[11,"to_tokens","","",259,[[["tokenstream",3]]]],[11,"to_tokens","","",260,[[["tokenstream",3]]]],[11,"to_tokens","","",253,[[["tokenstream",3]]]],[11,"to_tokens","","",252,[[["tokenstream",3]]]],[11,"to_tokens","","",269,[[["tokenstream",3]]]],[11,"to_tokens","","",251,[[["tokenstream",3]]]],[11,"to_tokens","","",271,[[["tokenstream",3]]]],[11,"to_tokens","","",286,[[["tokenstream",3]]]],[11,"to_tokens","","",273,[[["tokenstream",3]]]],[11,"to_tokens","","",282,[[["tokenstream",3]]]],[11,"to_tokens","","",284,[[["tokenstream",3]]]],[11,"to_tokens","","",285,[[["tokenstream",3]]]],[11,"to_tokens","","",277,[[["tokenstream",3]]]],[11,"to_tokens","","",283,[[["tokenstream",3]]]],[11,"to_tokens","","",272,[[["tokenstream",3]]]],[11,"to_tokens","","",279,[[["tokenstream",3]]]],[11,"to_tokens","","",280,[[["tokenstream",3]]]],[11,"to_tokens","","",274,[[["tokenstream",3]]]],[11,"to_tokens","","",278,[[["tokenstream",3]]]],[11,"to_tokens","","",281,[[["tokenstream",3]]]],[11,"to_tokens","","",275,[[["tokenstream",3]]]],[11,"to_tokens","","",276,[[["tokenstream",3]]]],[11,"to_tokens","","",270,[[["tokenstream",3]]]],[11,"to_tokens","","",292,[[["tokenstream",3]]]],[11,"to_tokens","","",294,[[["tokenstream",3]]]],[11,"to_tokens","","",293,[[["tokenstream",3]]]],[11,"to_tokens","","",290,[[["tokenstream",3]]]],[11,"to_tokens","","",287,[[["tokenstream",3]]]],[11,"to_tokens","","",288,[[["tokenstream",3]]]],[11,"to_tokens","","",289,[[["tokenstream",3]]]],[11,"to_tokens","","",291,[[["tokenstream",3]]]],[11,"to_tokens","syn::punctuated","",106,[[["tokenstream",3]]]],[11,"to_tokens","","",107,[[["tokenstream",3]]]],[11,"fmt","syn","",178,[[["formatter",3]],["result",6]]],[11,"span","","",178,[[],[["span",3],["option",4]]]],[11,"fmt","","",177,[[["formatter",3]],["result",6]]],[11,"span","","",177,[[],[["span",3],["option",4]]]],[11,"new","","Creates a new <code>Ident</code> with the given <code>string</code> as well as the …",296,[[["span",3]],["ident",3]]],[11,"span","","Returns the span of this <code>Ident</code>.",296,[[],["span",3]]],[11,"set_span","","Configures the span of this <code>Ident</code>, possibly changing its …",296,[[["span",3]]]],[11,"parse_meta","","Parses the content of the attribute, consisting of the …",117,[[],[["meta",4],["result",6]]]],[11,"parse_args","","Parse the arguments to the attribute as a syntax tree.",117,[[],[["result",6],["parse",8]]]],[11,"parse_args_with","","Parse the arguments to the attribute using the given …",117,[[["parser",8]],["result",6]]],[11,"parse_outer","","Parses zero or more outer attributes from the stream.",117,[[["parsestream",6]],[["result",6],["vec",3]]]],[11,"parse_inner","","Parses zero or more inner attributes from the stream.",117,[[["parsestream",6]],[["result",6],["vec",3]]]],[11,"path","","Returns the identifier that begins this structured meta …",118,[[],["path",3]]],[11,"parse_named","","Parses a named (braced struct) field.",122,[[["parsestream",6]],["result",6]]],[11,"parse_unnamed","","Parses an unnamed (tuple struct) field.",122,[[["parsestream",6]],["result",6]]],[11,"iter","","Get an iterator over the borrowed [<code>Field</code>] items in this …",123,[[],[["iter",3],["field",3]]]],[11,"iter_mut","","Get an iterator over the mutably borrowed [<code>Field</code>] items …",123,[[],[["itermut",3],["field",3]]]],[11,"len","","Returns the number of fields.",123,[[]]],[11,"is_empty","","Returns <code>true</code> if there are zero fields.",123,[[]]],[11,"parse_without_eager_brace","","An alternative to the primary <code>Expr::parse</code> parser (from the…",137,[[["parsestream",6]],[["result",6],["expr",4]]]],[11,"type_params","","Returns an Iterator<Item = &TypeParam> over the type …",182,[[],["typeparams",3]]],[11,"type_params_mut","","Returns an Iterator<Item = &mut TypeParam> over the type …",182,[[],["typeparamsmut",3]]],[11,"lifetimes","","Returns an Iterator<Item = &LifetimeDef> over the …",182,[[],["lifetimes",3]]],[11,"lifetimes_mut","","Returns an Iterator<Item = &mut LifetimeDef> over the …",182,[[],["lifetimesmut",3]]],[11,"const_params","","Returns an Iterator<Item = &ConstParam> over the constant …",182,[[],["constparams",3]]],[11,"const_params_mut","","Returns an Iterator<Item = &mut ConstParam> over the …",182,[[],["constparamsmut",3]]],[11,"make_where_clause","","Initializes an empty <code>where</code>-clause if there is not one …",182,[[],["whereclause",3]]],[11,"split_for_impl","","Split a type\'s generics into the pieces required for …",182,[[]]],[11,"as_turbofish","","Turn a type\'s generics like <code><X, Y></code> into a turbofish like …",298,[[],["turbofish",3]]],[11,"new","","",183,[[["lifetime",3]]]],[11,"receiver","","A method\'s <code>self</code> receiver, such as <code>&self</code> or <code>self: Box<Self></code>…",222,[[],[["option",4],["fnarg",4]]]],[11,"lifetime","","",221,[[],[["option",4],["lifetime",3]]]],[11,"new","","PanicsPanics if the lifetime does not conform to the …",235,[[["span",3]]]],[11,"new","","Interpret a Syn literal from a proc-macro2 literal.",236,[[["literal",3]]]],[11,"suffix","","",236,[[]]],[11,"span","","",236,[[],["span",3]]],[11,"set_span","","",236,[[["span",3]]]],[11,"new","","",300,[[["span",3]]]],[11,"value","","",300,[[],["string",3]]],[11,"parse","","Parse a syntax tree node from the content of this string …",300,[[],[["result",6],["parse",8]]]],[11,"parse_with","","Invoke parser on the content of this string literal.",300,[[["parser",8]],["result",6]]],[11,"span","","",300,[[],["span",3]]],[11,"set_span","","",300,[[["span",3]]]],[11,"suffix","","",300,[[]]],[11,"new","","",301,[[["span",3]]]],[11,"value","","",301,[[],["vec",3]]],[11,"span","","",301,[[],["span",3]]],[11,"set_span","","",301,[[["span",3]]]],[11,"suffix","","",301,[[]]],[11,"new","","",302,[[["span",3]]]],[11,"value","","",302,[[]]],[11,"span","","",302,[[],["span",3]]],[11,"set_span","","",302,[[["span",3]]]],[11,"suffix","","",302,[[]]],[11,"new","","",303,[[["span",3]]]],[11,"value","","",303,[[]]],[11,"span","","",303,[[],["span",3]]],[11,"set_span","","",303,[[["span",3]]]],[11,"suffix","","",303,[[]]],[11,"new","","",304,[[["span",3]]]],[11,"base10_digits","","",304,[[]]],[11,"base10_parse","","Parses the literal into a selected number type.",304,[[],["result",6]]],[11,"suffix","","",304,[[]]],[11,"span","","",304,[[],["span",3]]],[11,"set_span","","",304,[[["span",3]]]],[11,"new","","",305,[[["span",3]]]],[11,"base10_digits","","",305,[[]]],[11,"base10_parse","","",305,[[],["result",6]]],[11,"suffix","","",305,[[]]],[11,"span","","",305,[[],["span",3]]],[11,"set_span","","",305,[[["span",3]]]],[11,"parse_body","","Parse the tokens within the macro invocation\'s delimiters …",239,[[],[["result",6],["parse",8]]]],[11,"parse_body_with","","Parse the tokens within the macro invocation\'s delimiters …",239,[[["parser",8]],["result",6]]],[11,"parse_within","","Parse the body of a block as zero or more statements, …",248,[[["parsestream",6]],[["vec",3],["result",6]]]],[11,"without_plus","","In some positions, types may not contain the <code>+</code> character, …",254,[[["parsestream",6]],["result",6]]],[11,"without_plus","","",253,[[["parsestream",6]],["result",6]]],[11,"without_plus","","",267,[[["parsestream",6]],["result",6]]],[11,"parse_mod_style","","Parse a <code>Path</code> containing no path arguments on any of its …",292,[[["parsestream",6]],["result",6]]],[11,"is_ident","","Determines whether this is a path of length 1 equal to …",292,[[]]],[11,"get_ident","","If this path consists of a single ident, returns the …",292,[[],[["option",4],["ident",3]]]],[11,"is_empty","","",293,[[]]],[11,"visit_abi_mut","syn::visit_mut","",109,[[["abi",3]]]],[11,"visit_angle_bracketed_generic_arguments_mut","","",109,[[["anglebracketedgenericarguments",3]]]],[11,"visit_arm_mut","","",109,[[["arm",3]]]],[11,"visit_attr_style_mut","","",109,[[["attrstyle",4]]]],[11,"visit_attribute_mut","","",109,[[["attribute",3]]]],[11,"visit_bare_fn_arg_mut","","",109,[[["barefnarg",3]]]],[11,"visit_bin_op_mut","","",109,[[["binop",4]]]],[11,"visit_binding_mut","","",109,[[["binding",3]]]],[11,"visit_block_mut","","",109,[[["block",3]]]],[11,"visit_bound_lifetimes_mut","","",109,[[["boundlifetimes",3]]]],[11,"visit_const_param_mut","","",109,[[["constparam",3]]]],[11,"visit_constraint_mut","","",109,[[["constraint",3]]]],[11,"visit_data_mut","","",109,[[["data",4]]]],[11,"visit_data_enum_mut","","",109,[[["dataenum",3]]]],[11,"visit_data_struct_mut","","",109,[[["datastruct",3]]]],[11,"visit_data_union_mut","","",109,[[["dataunion",3]]]],[11,"visit_derive_input_mut","","",109,[[["deriveinput",3]]]],[11,"visit_expr_mut","","",109,[[["expr",4]]]],[11,"visit_expr_array_mut","","",109,[[["exprarray",3]]]],[11,"visit_expr_assign_mut","","",109,[[["exprassign",3]]]],[11,"visit_expr_assign_op_mut","","",109,[[["exprassignop",3]]]],[11,"visit_expr_async_mut","","",109,[[["exprasync",3]]]],[11,"visit_expr_await_mut","","",109,[[["exprawait",3]]]],[11,"visit_expr_binary_mut","","",109,[[["exprbinary",3]]]],[11,"visit_expr_block_mut","","",109,[[["exprblock",3]]]],[11,"visit_expr_box_mut","","",109,[[["exprbox",3]]]],[11,"visit_expr_break_mut","","",109,[[["exprbreak",3]]]],[11,"visit_expr_call_mut","","",109,[[["exprcall",3]]]],[11,"visit_expr_cast_mut","","",109,[[["exprcast",3]]]],[11,"visit_expr_closure_mut","","",109,[[["exprclosure",3]]]],[11,"visit_expr_continue_mut","","",109,[[["exprcontinue",3]]]],[11,"visit_expr_field_mut","","",109,[[["exprfield",3]]]],[11,"visit_expr_for_loop_mut","","",109,[[["exprforloop",3]]]],[11,"visit_expr_group_mut","","",109,[[["exprgroup",3]]]],[11,"visit_expr_if_mut","","",109,[[["exprif",3]]]],[11,"visit_expr_index_mut","","",109,[[["exprindex",3]]]],[11,"visit_expr_let_mut","","",109,[[["exprlet",3]]]],[11,"visit_expr_lit_mut","","",109,[[["exprlit",3]]]],[11,"visit_expr_loop_mut","","",109,[[["exprloop",3]]]],[11,"visit_expr_macro_mut","","",109,[[["exprmacro",3]]]],[11,"visit_expr_match_mut","","",109,[[["exprmatch",3]]]],[11,"visit_expr_method_call_mut","","",109,[[["exprmethodcall",3]]]],[11,"visit_expr_paren_mut","","",109,[[["exprparen",3]]]],[11,"visit_expr_path_mut","","",109,[[["exprpath",3]]]],[11,"visit_expr_range_mut","","",109,[[["exprrange",3]]]],[11,"visit_expr_reference_mut","","",109,[[["exprreference",3]]]],[11,"visit_expr_repeat_mut","","",109,[[["exprrepeat",3]]]],[11,"visit_expr_return_mut","","",109,[[["exprreturn",3]]]],[11,"visit_expr_struct_mut","","",109,[[["exprstruct",3]]]],[11,"visit_expr_try_mut","","",109,[[["exprtry",3]]]],[11,"visit_expr_try_block_mut","","",109,[[["exprtryblock",3]]]],[11,"visit_expr_tuple_mut","","",109,[[["exprtuple",3]]]],[11,"visit_expr_type_mut","","",109,[[["exprtype",3]]]],[11,"visit_expr_unary_mut","","",109,[[["exprunary",3]]]],[11,"visit_expr_unsafe_mut","","",109,[[["exprunsafe",3]]]],[11,"visit_expr_while_mut","","",109,[[["exprwhile",3]]]],[11,"visit_expr_yield_mut","","",109,[[["expryield",3]]]],[11,"visit_field_mut","","",109,[[["field",3]]]],[11,"visit_field_pat_mut","","",109,[[["fieldpat",3]]]],[11,"visit_field_value_mut","","",109,[[["fieldvalue",3]]]],[11,"visit_fields_mut","","",109,[[["fields",4]]]],[11,"visit_fields_named_mut","","",109,[[["fieldsnamed",3]]]],[11,"visit_fields_unnamed_mut","","",109,[[["fieldsunnamed",3]]]],[11,"visit_file_mut","","",109,[[["file",3]]]],[11,"visit_fn_arg_mut","","",109,[[["fnarg",4]]]],[11,"visit_foreign_item_mut","","",109,[[["foreignitem",4]]]],[11,"visit_foreign_item_fn_mut","","",109,[[["foreignitemfn",3]]]],[11,"visit_foreign_item_macro_mut","","",109,[[["foreignitemmacro",3]]]],[11,"visit_foreign_item_static_mut","","",109,[[["foreignitemstatic",3]]]],[11,"visit_foreign_item_type_mut","","",109,[[["foreignitemtype",3]]]],[11,"visit_generic_argument_mut","","",109,[[["genericargument",4]]]],[11,"visit_generic_method_argument_mut","","",109,[[["genericmethodargument",4]]]],[11,"visit_generic_param_mut","","",109,[[["genericparam",4]]]],[11,"visit_generics_mut","","",109,[[["generics",3]]]],[11,"visit_ident_mut","","",109,[[["ident",3]]]],[11,"visit_impl_item_mut","","",109,[[["implitem",4]]]],[11,"visit_impl_item_const_mut","","",109,[[["implitemconst",3]]]],[11,"visit_impl_item_macro_mut","","",109,[[["implitemmacro",3]]]],[11,"visit_impl_item_method_mut","","",109,[[["implitemmethod",3]]]],[11,"visit_impl_item_type_mut","","",109,[[["implitemtype",3]]]],[11,"visit_index_mut","","",109,[[["index",3]]]],[11,"visit_item_mut","","",109,[[["item",4]]]],[11,"visit_item_const_mut","","",109,[[["itemconst",3]]]],[11,"visit_item_enum_mut","","",109,[[["itemenum",3]]]],[11,"visit_item_extern_crate_mut","","",109,[[["itemexterncrate",3]]]],[11,"visit_item_fn_mut","","",109,[[["itemfn",3]]]],[11,"visit_item_foreign_mod_mut","","",109,[[["itemforeignmod",3]]]],[11,"visit_item_impl_mut","","",109,[[["itemimpl",3]]]],[11,"visit_item_macro_mut","","",109,[[["itemmacro",3]]]],[11,"visit_item_macro2_mut","","",109,[[["itemmacro2",3]]]],[11,"visit_item_mod_mut","","",109,[[["itemmod",3]]]],[11,"visit_item_static_mut","","",109,[[["itemstatic",3]]]],[11,"visit_item_struct_mut","","",109,[[["itemstruct",3]]]],[11,"visit_item_trait_mut","","",109,[[["itemtrait",3]]]],[11,"visit_item_trait_alias_mut","","",109,[[["itemtraitalias",3]]]],[11,"visit_item_type_mut","","",109,[[["itemtype",3]]]],[11,"visit_item_union_mut","","",109,[[["itemunion",3]]]],[11,"visit_item_use_mut","","",109,[[["itemuse",3]]]],[11,"visit_label_mut","","",109,[[["label",3]]]],[11,"visit_lifetime_mut","","",109,[[["lifetime",3]]]],[11,"visit_lifetime_def_mut","","",109,[[["lifetimedef",3]]]],[11,"visit_lit_mut","","",109,[[["lit",4]]]],[11,"visit_lit_bool_mut","","",109,[[["litbool",3]]]],[11,"visit_lit_byte_mut","","",109,[[["litbyte",3]]]],[11,"visit_lit_byte_str_mut","","",109,[[["litbytestr",3]]]],[11,"visit_lit_char_mut","","",109,[[["litchar",3]]]],[11,"visit_lit_float_mut","","",109,[[["litfloat",3]]]],[11,"visit_lit_int_mut","","",109,[[["litint",3]]]],[11,"visit_lit_str_mut","","",109,[[["litstr",3]]]],[11,"visit_local_mut","","",109,[[["local",3]]]],[11,"visit_macro_mut","","",109,[[["macro",3]]]],[11,"visit_macro_delimiter_mut","","",109,[[["macrodelimiter",4]]]],[11,"visit_member_mut","","",109,[[["member",4]]]],[11,"visit_meta_mut","","",109,[[["meta",4]]]],[11,"visit_meta_list_mut","","",109,[[["metalist",3]]]],[11,"visit_meta_name_value_mut","","",109,[[["metanamevalue",3]]]],[11,"visit_method_turbofish_mut","","",109,[[["methodturbofish",3]]]],[11,"visit_nested_meta_mut","","",109,[[["nestedmeta",4]]]],[11,"visit_parenthesized_generic_arguments_mut","","",109,[[["parenthesizedgenericarguments",3]]]],[11,"visit_pat_mut","","",109,[[["pat",4]]]],[11,"visit_pat_box_mut","","",109,[[["patbox",3]]]],[11,"visit_pat_ident_mut","","",109,[[["patident",3]]]],[11,"visit_pat_lit_mut","","",109,[[["patlit",3]]]],[11,"visit_pat_macro_mut","","",109,[[["patmacro",3]]]],[11,"visit_pat_or_mut","","",109,[[["pator",3]]]],[11,"visit_pat_path_mut","","",109,[[["patpath",3]]]],[11,"visit_pat_range_mut","","",109,[[["patrange",3]]]],[11,"visit_pat_reference_mut","","",109,[[["patreference",3]]]],[11,"visit_pat_rest_mut","","",109,[[["patrest",3]]]],[11,"visit_pat_slice_mut","","",109,[[["patslice",3]]]],[11,"visit_pat_struct_mut","","",109,[[["patstruct",3]]]],[11,"visit_pat_tuple_mut","","",109,[[["pattuple",3]]]],[11,"visit_pat_tuple_struct_mut","","",109,[[["pattuplestruct",3]]]],[11,"visit_pat_type_mut","","",109,[[["pattype",3]]]],[11,"visit_pat_wild_mut","","",109,[[["patwild",3]]]],[11,"visit_path_mut","","",109,[[["path",3]]]],[11,"visit_path_arguments_mut","","",109,[[["patharguments",4]]]],[11,"visit_path_segment_mut","","",109,[[["pathsegment",3]]]],[11,"visit_predicate_eq_mut","","",109,[[["predicateeq",3]]]],[11,"visit_predicate_lifetime_mut","","",109,[[["predicatelifetime",3]]]],[11,"visit_predicate_type_mut","","",109,[[["predicatetype",3]]]],[11,"visit_qself_mut","","",109,[[["qself",3]]]],[11,"visit_range_limits_mut","","",109,[[["rangelimits",4]]]],[11,"visit_receiver_mut","","",109,[[["receiver",3]]]],[11,"visit_return_type_mut","","",109,[[["returntype",4]]]],[11,"visit_signature_mut","","",109,[[["signature",3]]]],[11,"visit_span_mut","","",109,[[["span",3]]]],[11,"visit_stmt_mut","","",109,[[["stmt",4]]]],[11,"visit_trait_bound_mut","","",109,[[["traitbound",3]]]],[11,"visit_trait_bound_modifier_mut","","",109,[[["traitboundmodifier",4]]]],[11,"visit_trait_item_mut","","",109,[[["traititem",4]]]],[11,"visit_trait_item_const_mut","","",109,[[["traititemconst",3]]]],[11,"visit_trait_item_macro_mut","","",109,[[["traititemmacro",3]]]],[11,"visit_trait_item_method_mut","","",109,[[["traititemmethod",3]]]],[11,"visit_trait_item_type_mut","","",109,[[["traititemtype",3]]]],[11,"visit_type_mut","","",109,[[["type",4]]]],[11,"visit_type_array_mut","","",109,[[["typearray",3]]]],[11,"visit_type_bare_fn_mut","","",109,[[["typebarefn",3]]]],[11,"visit_type_group_mut","","",109,[[["typegroup",3]]]],[11,"visit_type_impl_trait_mut","","",109,[[["typeimpltrait",3]]]],[11,"visit_type_infer_mut","","",109,[[["typeinfer",3]]]],[11,"visit_type_macro_mut","","",109,[[["typemacro",3]]]],[11,"visit_type_never_mut","","",109,[[["typenever",3]]]],[11,"visit_type_param_mut","","",109,[[["typeparam",3]]]],[11,"visit_type_param_bound_mut","","",109,[[["typeparambound",4]]]],[11,"visit_type_paren_mut","","",109,[[["typeparen",3]]]],[11,"visit_type_path_mut","","",109,[[["typepath",3]]]],[11,"visit_type_ptr_mut","","",109,[[["typeptr",3]]]],[11,"visit_type_reference_mut","","",109,[[["typereference",3]]]],[11,"visit_type_slice_mut","","",109,[[["typeslice",3]]]],[11,"visit_type_trait_object_mut","","",109,[[["typetraitobject",3]]]],[11,"visit_type_tuple_mut","","",109,[[["typetuple",3]]]],[11,"visit_un_op_mut","","",109,[[["unop",4]]]],[11,"visit_use_glob_mut","","",109,[[["useglob",3]]]],[11,"visit_use_group_mut","","",109,[[["usegroup",3]]]],[11,"visit_use_name_mut","","",109,[[["usename",3]]]],[11,"visit_use_path_mut","","",109,[[["usepath",3]]]],[11,"visit_use_rename_mut","","",109,[[["userename",3]]]],[11,"visit_use_tree_mut","","",109,[[["usetree",4]]]],[11,"visit_variadic_mut","","",109,[[["variadic",3]]]],[11,"visit_variant_mut","","",109,[[["variant",3]]]],[11,"visit_vis_crate_mut","","",109,[[["viscrate",3]]]],[11,"visit_vis_public_mut","","",109,[[["vispublic",3]]]],[11,"visit_vis_restricted_mut","","",109,[[["visrestricted",3]]]],[11,"visit_visibility_mut","","",109,[[["visibility",4]]]],[11,"visit_where_clause_mut","","",109,[[["whereclause",3]]]],[11,"visit_where_predicate_mut","","",109,[[["wherepredicate",4]]]],[11,"peek","syn::parse","Looks at the next token in the parse stream to determine …",312,[[["peek",8]]]],[11,"error","","Triggers an error at the current position of the parse …",312,[[],["error",3]]]],"p":[[3,"Underscore"],[3,"Abstract"],[3,"As"],[3,"Async"],[3,"Auto"],[3,"Await"],[3,"Become"],[3,"Box"],[3,"Break"],[3,"Const"],[3,"Continue"],[3,"Crate"],[3,"Default"],[3,"Do"],[3,"Dyn"],[3,"Else"],[3,"Enum"],[3,"Extern"],[3,"Final"],[3,"Fn"],[3,"For"],[3,"If"],[3,"Impl"],[3,"In"],[3,"Let"],[3,"Loop"],[3,"Macro"],[3,"Match"],[3,"Mod"],[3,"Move"],[3,"Mut"],[3,"Override"],[3,"Priv"],[3,"Pub"],[3,"Ref"],[3,"Return"],[3,"SelfType"],[3,"SelfValue"],[3,"Static"],[3,"Struct"],[3,"Super"],[3,"Trait"],[3,"Try"],[3,"Type"],[3,"Typeof"],[3,"Union"],[3,"Unsafe"],[3,"Unsized"],[3,"Use"],[3,"Virtual"],[3,"Where"],[3,"While"],[3,"Yield"],[3,"Add"],[3,"AddEq"],[3,"And"],[3,"AndAnd"],[3,"AndEq"],[3,"At"],[3,"Bang"],[3,"Caret"],[3,"CaretEq"],[3,"Colon"],[3,"Colon2"],[3,"Comma"],[3,"Div"],[3,"DivEq"],[3,"Dollar"],[3,"Dot"],[3,"Dot2"],[3,"Dot3"],[3,"DotDotEq"],[3,"Eq"],[3,"EqEq"],[3,"Ge"],[3,"Gt"],[3,"Le"],[3,"Lt"],[3,"MulEq"],[3,"Ne"],[3,"Or"],[3,"OrEq"],[3,"OrOr"],[3,"Pound"],[3,"Question"],[3,"RArrow"],[3,"LArrow"],[3,"Rem"],[3,"RemEq"],[3,"FatArrow"],[3,"Semi"],[3,"Shl"],[3,"ShlEq"],[3,"Shr"],[3,"ShrEq"],[3,"Star"],[3,"Sub"],[3,"SubEq"],[3,"Tilde"],[3,"Brace"],[3,"Bracket"],[3,"Paren"],[3,"Group"],[3,"TokenBuffer"],[3,"Cursor"],[8,"IdentExt"],[3,"Punctuated"],[4,"Pair"],[8,"Spanned"],[8,"VisitMut"],[8,"Speculative"],[8,"Parse"],[3,"StepCursor"],[3,"ParseBuffer"],[8,"Parser"],[3,"Error"],[4,"AttrStyle"],[3,"Attribute"],[4,"Meta"],[3,"MetaList"],[3,"MetaNameValue"],[4,"NestedMeta"],[3,"Field"],[4,"Fields"],[3,"FieldsNamed"],[3,"FieldsUnnamed"],[3,"Variant"],[3,"VisCrate"],[3,"VisPublic"],[3,"VisRestricted"],[4,"Visibility"],[3,"Arm"],[3,"FieldValue"],[4,"GenericMethodArgument"],[3,"Label"],[3,"MethodTurbofish"],[4,"RangeLimits"],[4,"Expr"],[3,"ExprArray"],[3,"ExprAssign"],[3,"ExprAssignOp"],[3,"ExprAsync"],[3,"ExprAwait"],[3,"ExprBinary"],[3,"ExprBlock"],[3,"ExprBox"],[3,"ExprBreak"],[3,"ExprCall"],[3,"ExprCast"],[3,"ExprClosure"],[3,"ExprContinue"],[3,"ExprField"],[3,"ExprForLoop"],[3,"ExprGroup"],[3,"ExprIf"],[3,"ExprIndex"],[3,"ExprLet"],[3,"ExprLit"],[3,"ExprLoop"],[3,"ExprMacro"],[3,"ExprMatch"],[3,"ExprMethodCall"],[3,"ExprParen"],[3,"ExprPath"],[3,"ExprRange"],[3,"ExprReference"],[3,"ExprRepeat"],[3,"ExprReturn"],[3,"ExprStruct"],[3,"ExprTry"],[3,"ExprTryBlock"],[3,"ExprTuple"],[3,"ExprType"],[3,"ExprUnary"],[3,"ExprUnsafe"],[3,"ExprWhile"],[3,"ExprYield"],[3,"Index"],[4,"Member"],[3,"BoundLifetimes"],[3,"ConstParam"],[4,"GenericParam"],[3,"Generics"],[3,"LifetimeDef"],[3,"PredicateEq"],[3,"PredicateLifetime"],[3,"PredicateType"],[3,"TraitBound"],[4,"TraitBoundModifier"],[3,"TypeParam"],[4,"TypeParamBound"],[3,"WhereClause"],[4,"WherePredicate"],[4,"FnArg"],[4,"ForeignItem"],[3,"ForeignItemFn"],[3,"ForeignItemMacro"],[3,"ForeignItemStatic"],[3,"ForeignItemType"],[4,"ImplItem"],[3,"ImplItemConst"],[3,"ImplItemMacro"],[3,"ImplItemMethod"],[3,"ImplItemType"],[4,"Item"],[3,"ItemConst"],[3,"ItemEnum"],[3,"ItemExternCrate"],[3,"ItemFn"],[3,"ItemForeignMod"],[3,"ItemImpl"],[3,"ItemMacro"],[3,"ItemMacro2"],[3,"ItemMod"],[3,"ItemStatic"],[3,"ItemStruct"],[3,"ItemTrait"],[3,"ItemTraitAlias"],[3,"ItemType"],[3,"ItemUnion"],[3,"ItemUse"],[3,"Receiver"],[3,"Signature"],[4,"TraitItem"],[3,"TraitItemConst"],[3,"TraitItemMacro"],[3,"TraitItemMethod"],[3,"TraitItemType"],[3,"UseGlob"],[3,"UseGroup"],[3,"UseName"],[3,"UsePath"],[3,"UseRename"],[4,"UseTree"],[3,"File"],[3,"Lifetime"],[4,"Lit"],[3,"LitBool"],[4,"StrStyle"],[3,"Macro"],[4,"MacroDelimiter"],[4,"Data"],[3,"DataEnum"],[3,"DataStruct"],[3,"DataUnion"],[3,"DeriveInput"],[4,"BinOp"],[4,"UnOp"],[3,"Block"],[3,"Local"],[4,"Stmt"],[3,"Abi"],[3,"BareFnArg"],[4,"ReturnType"],[4,"Type"],[3,"TypeArray"],[3,"TypeBareFn"],[3,"TypeGroup"],[3,"TypeImplTrait"],[3,"TypeInfer"],[3,"TypeMacro"],[3,"TypeNever"],[3,"TypeParen"],[3,"TypePath"],[3,"TypePtr"],[3,"TypeReference"],[3,"TypeSlice"],[3,"TypeTraitObject"],[3,"TypeTuple"],[3,"Variadic"],[3,"FieldPat"],[4,"Pat"],[3,"PatBox"],[3,"PatIdent"],[3,"PatLit"],[3,"PatMacro"],[3,"PatOr"],[3,"PatPath"],[3,"PatRange"],[3,"PatReference"],[3,"PatRest"],[3,"PatSlice"],[3,"PatStruct"],[3,"PatTuple"],[3,"PatTupleStruct"],[3,"PatType"],[3,"PatWild"],[3,"AngleBracketedGenericArguments"],[3,"Binding"],[3,"Constraint"],[4,"GenericArgument"],[3,"ParenthesizedGenericArguments"],[3,"Path"],[4,"PathArguments"],[3,"PathSegment"],[3,"QSelf"],[3,"Ident"],[3,"ImplGenerics"],[3,"TypeGenerics"],[3,"Turbofish"],[3,"LitStr"],[3,"LitByteStr"],[3,"LitByte"],[3,"LitChar"],[3,"LitInt"],[3,"LitFloat"],[3,"Pairs"],[3,"PairsMut"],[3,"IntoPairs"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"Lookahead1"],[3,"Nothing"]]},\
"tokio":{"doc":"A runtime for writing reliable, asynchronous, and slim …","i":[[23,"main","tokio","Marks async function to be executed by selected runtime.",null,null],[23,"test","","Marks async function to be executed by runtime, suitable …",null,null],[0,"fs","","Asynchronous file and standard stream adaptation.",null,null],[0,"os","tokio::fs","OS-specific functionality.",null,null],[0,"unix","tokio::fs::os","Unix-specific extensions to primitives in the <code>tokio_fs</code> …",null,null],[5,"symlink","tokio::fs::os::unix","Creates a new symbolic link on the filesystem.",null,[[]]],[8,"OpenOptionsExt","","Unix-specific extensions to <code>fs::OpenOptions</code>.",null,null],[10,"mode","","Sets the mode bits that a new file will be created with.",0,[[]]],[10,"custom_flags","","Pass custom flags to the <code>flags</code> argument of <code>open</code>.",0,[[]]],[8,"DirBuilderExt","","Unix-specific extensions to <code>DirBuilder</code>.",null,null],[10,"mode","","Sets the mode to create new directories with.",1,[[]]],[5,"canonicalize","tokio::fs","Returns the canonical, absolute form of a path with all …",null,[[]]],[5,"create_dir","","Creates a new, empty directory at the provided path",null,[[]]],[5,"create_dir_all","","Recursively creates a directory and all of its parent …",null,[[]]],[3,"DirBuilder","","A builder for creating directories in various manners.",null,null],[3,"File","","A reference to an open file on the filesystem.",null,null],[5,"hard_link","","Creates a new hard link on the filesystem.",null,[[]]],[5,"metadata","","Given a path, queries the file system to get information …",null,[[]]],[3,"OpenOptions","","Options and flags which can be used to configure how a …",null,null],[5,"read","","Reads the entire contents of a file into a bytes vector.",null,[[]]],[5,"read_dir","","Returns a stream over the entries within a directory.",null,[[]]],[3,"DirEntry","","Entries returned by the <code>ReadDir</code> stream.",null,null],[3,"ReadDir","","Stream of the entries in a directory.",null,null],[5,"read_link","","Reads a symbolic link, returning the file that the link …",null,[[]]],[5,"read_to_string","","Creates a future which will open a file for reading and …",null,[[]]],[5,"remove_dir","","Removes an existing, empty directory.",null,[[]]],[5,"remove_dir_all","","Removes a directory at this path, after removing all its …",null,[[]]],[5,"remove_file","","Removes a file from the filesystem.",null,[[]]],[5,"rename","","Renames a file or directory to a new name, replacing the …",null,[[]]],[5,"set_permissions","","Changes the permissions found on a file or a directory.",null,[[["permissions",3]]]],[5,"symlink_metadata","","Queries the file system metadata for a path.",null,[[]]],[5,"write","","Creates a future that will open a file for writing and …",null,[[["asref",8],["unpin",8]]]],[5,"copy","","Copies the contents of one file to another. This function …",null,[[["path",3],["asref",8]]]],[0,"io","tokio","Traits, helpers, and type definitions for asynchronous …",null,null],[3,"Error","tokio::io","The error type for I/O operations of the <code>Read</code>, <code>Write</code>, <code>Seek</code>…",null,null],[4,"ErrorKind","","A list specifying general categories of I/O error.",null,null],[13,"NotFound","","An entity was not found, often a file.",2,null],[13,"PermissionDenied","","The operation lacked the necessary privileges to complete.",2,null],[13,"ConnectionRefused","","The connection was refused by the remote server.",2,null],[13,"ConnectionReset","","The connection was reset by the remote server.",2,null],[13,"ConnectionAborted","","The connection was aborted (terminated) by the remote …",2,null],[13,"NotConnected","","The network operation failed because it was not connected …",2,null],[13,"AddrInUse","","A socket address could not be bound because the address …",2,null],[13,"AddrNotAvailable","","A nonexistent interface was requested or the requested …",2,null],[13,"BrokenPipe","","The operation failed because a pipe was closed.",2,null],[13,"AlreadyExists","","An entity already exists, often a file.",2,null],[13,"WouldBlock","","The operation needs to block to complete, but the …",2,null],[13,"InvalidInput","","A parameter was incorrect.",2,null],[13,"InvalidData","","Data not valid for the operation were encountered.",2,null],[13,"TimedOut","","The I/O operation\'s timeout expired, causing it to be …",2,null],[13,"WriteZero","","An error returned when an operation could not be …",2,null],[13,"Interrupted","","This operation was interrupted.",2,null],[13,"Other","","Any I/O error not part of this list.",2,null],[13,"UnexpectedEof","","An error returned when an operation could not be …",2,null],[6,"Result","","A specialized <code>Result</code> type for I/O operations.",null,null],[8,"AsyncBufRead","","Reads bytes asynchronously.",null,null],[10,"poll_fill_buf","","Attempts to return the contents of the internal buffer, …",3,[[["pin",3],["context",3]],[["result",6],["poll",4]]]],[10,"consume","","Tells this buffer that <code>amt</code> bytes have been consumed from …",3,[[["pin",3]]]],[8,"AsyncRead","","Reads bytes from a source.",null,null],[11,"prepare_uninitialized_buffer","","Prepares an uninitialized buffer to be safe to pass to …",4,[[]]],[10,"poll_read","","Attempts to read from the <code>AsyncRead</code> into <code>buf</code>.",4,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_read_buf","","Pulls some bytes from this source into the specified …",4,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[8,"AsyncSeek","","Seek bytes asynchronously.",null,null],[10,"start_seek","","Attempts to seek to an offset, in bytes, in a stream.",5,[[["pin",3],["seekfrom",4],["context",3]],[["result",6],["poll",4]]]],[10,"poll_complete","","Waits for a seek operation to complete.",5,[[["pin",3],["context",3]],[["result",6],["poll",4]]]],[8,"AsyncWrite","","Writes bytes asynchronously.",null,null],[10,"poll_write","","Attempt to write bytes from <code>buf</code> into the object.",6,[[["pin",3],["context",3]],[["result",4],["poll",4]]]],[10,"poll_flush","","Attempts to flush the object, ensuring that any buffered …",6,[[["pin",3],["context",3]],[["result",4],["poll",4]]]],[10,"poll_shutdown","","Initiates or attempts to shut down this writer, returning …",6,[[["pin",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_write_buf","","Writes a <code>Buf</code> into this value, returning how many bytes …",6,[[["pin",3],["context",3]],[["result",4],["poll",4]]]],[3,"PollEvented","","Associates an I/O resource that implements the …",null,null],[3,"Registration","","Associates an I/O resource with the reactor instance that …",null,null],[5,"stderr","","Constructs a new handle to the standard error of the …",null,[[],["stderr",3]]],[3,"Stderr","","A handle to the standard error stream of a process.",null,null],[5,"stdin","","Constructs a new handle to the standard input of the …",null,[[],["stdin",3]]],[3,"Stdin","","A handle to the standard input stream of a process.",null,null],[5,"stdout","","Constructs a new handle to the standard output of the …",null,[[],["stdout",3]]],[3,"Stdout","","A handle to the standard output stream of a process.",null,null],[5,"split","","Splits a single value implementing <code>AsyncRead + AsyncWrite</code> …",null,[[]]],[3,"ReadHalf","","The readable half of a value returned from <code>split</code>.",null,null],[3,"WriteHalf","","The writable half of a value returned from <code>split</code>.",null,null],[3,"Seek","","Future for the <code>seek</code> method.",null,null],[5,"copy","","Asynchronously copies the entire contents of a reader …",null,[[],[["sized",8],["copy",3]]]],[5,"empty","","Creates a new empty async reader.",null,[[],["empty",3]]],[5,"repeat","","Creates an instance of an async reader that infinitely …",null,[[],["repeat",3]]],[5,"sink","","Creates an instance of an async writer which will …",null,[[],["sink",3]]],[8,"AsyncBufReadExt","","An extension trait which adds utility methods to …",null,null],[11,"read_until","","Reads all bytes into <code>buf</code> until the delimiter <code>byte</code> or EOF …",7,[[["vec",3]],["readuntil",3]]],[11,"read_line","","Reads all bytes until a newline (the 0xA byte) is …",7,[[["string",3]],["readline",3]]],[11,"split","","Returns a stream of the contents of this reader split on …",7,[[],["split",3]]],[11,"lines","","Returns a stream over the lines of this reader. This …",7,[[],["lines",3]]],[8,"AsyncReadExt","","Reads bytes from a source.",null,null],[11,"chain","","Creates a new <code>AsyncRead</code> instance that chains this stream …",8,[[],["chain",3]]],[11,"read","","Pulls some bytes from this source into the specified …",8,[[],["read",3]]],[11,"read_buf","","Pulls some bytes from this source into the specified …",8,[[],["readbuf",3]]],[11,"read_exact","","Reads the exact number of bytes required to fill <code>buf</code>.",8,[[],["readexact",3]]],[11,"read_u8","","Reads an unsigned 8 bit integer from the underlying …",8,[[],["readu8",3]]],[11,"read_i8","","Reads a signed 8 bit integer from the underlying reader.",8,[[],["readi8",3]]],[11,"read_u16","","Reads an unsigned 16-bit integer in big-endian order from …",8,[[],["readu16",3]]],[11,"read_i16","","Reads a signed 16-bit integer in big-endian order from the…",8,[[],["readi16",3]]],[11,"read_u32","","Reads an unsigned 32-bit integer in big-endian order from …",8,[[],["readu32",3]]],[11,"read_i32","","Reads a signed 32-bit integer in big-endian order from the…",8,[[],["readi32",3]]],[11,"read_u64","","Reads an unsigned 64-bit integer in big-endian order from …",8,[[],["readu64",3]]],[11,"read_i64","","Reads an signed 64-bit integer in big-endian order from …",8,[[],["readi64",3]]],[11,"read_u128","","Reads an unsigned 128-bit integer in big-endian order …",8,[[],["readu128",3]]],[11,"read_i128","","Reads an signed 128-bit integer in big-endian order from …",8,[[],["readi128",3]]],[11,"read_u16_le","","Reads an unsigned 16-bit integer in little-endian order …",8,[[],["readu16le",3]]],[11,"read_i16_le","","Reads a signed 16-bit integer in little-endian order from …",8,[[],["readi16le",3]]],[11,"read_u32_le","","Reads an unsigned 32-bit integer in little-endian order …",8,[[],["readu32le",3]]],[11,"read_i32_le","","Reads a signed 32-bit integer in little-endian order from …",8,[[],["readi32le",3]]],[11,"read_u64_le","","Reads an unsigned 64-bit integer in little-endian order …",8,[[],["readu64le",3]]],[11,"read_i64_le","","Reads an signed 64-bit integer in little-endian order …",8,[[],["readi64le",3]]],[11,"read_u128_le","","Reads an unsigned 128-bit integer in little-endian order …",8,[[],["readu128le",3]]],[11,"read_i128_le","","Reads an signed 128-bit integer in little-endian order …",8,[[],["readi128le",3]]],[11,"read_to_end","","Reads all bytes until EOF in this source, placing them …",8,[[["vec",3]],["readtoend",3]]],[11,"read_to_string","","Reads all bytes until EOF in this source, appending them …",8,[[["string",3]],["readtostring",3]]],[11,"take","","Creates an adaptor which reads at most <code>limit</code> bytes from …",8,[[],["take",3]]],[8,"AsyncSeekExt","","An extension trait which adds utility methods to <code>AsyncSeek</code>…",null,null],[11,"seek","","Creates a future which will seek an IO object, and then …",9,[[["seekfrom",4]],["seek",3]]],[8,"AsyncWriteExt","","Writes bytes to a sink.",null,null],[11,"write","","Writes a buffer into this writer, returning how many …",10,[[],["write",3]]],[11,"write_buf","","Writes a buffer into this writer, advancing the buffer\'s …",10,[[],["writebuf",3]]],[11,"write_all","","Attempts to write an entire buffer into this writer.",10,[[],["writeall",3]]],[11,"write_u8","","Writes an unsigned 8-bit integer to the underlying writer.",10,[[],["writeu8",3]]],[11,"write_i8","","Writes an unsigned 8-bit integer to the underlying writer.",10,[[],["writei8",3]]],[11,"write_u16","","Writes an unsigned 16-bit integer in big-endian order to …",10,[[],["writeu16",3]]],[11,"write_i16","","Writes a signed 16-bit integer in big-endian order to the …",10,[[],["writei16",3]]],[11,"write_u32","","Writes an unsigned 32-bit integer in big-endian order to …",10,[[],["writeu32",3]]],[11,"write_i32","","Writes a signed 32-bit integer in big-endian order to the …",10,[[],["writei32",3]]],[11,"write_u64","","Writes an unsigned 64-bit integer in big-endian order to …",10,[[],["writeu64",3]]],[11,"write_i64","","Writes an signed 64-bit integer in big-endian order to the…",10,[[],["writei64",3]]],[11,"write_u128","","Writes an unsigned 128-bit integer in big-endian order to …",10,[[],["writeu128",3]]],[11,"write_i128","","Writes an signed 128-bit integer in big-endian order to …",10,[[],["writei128",3]]],[11,"write_u16_le","","Writes an unsigned 16-bit integer in little-endian order …",10,[[],["writeu16le",3]]],[11,"write_i16_le","","Writes a signed 16-bit integer in little-endian order to …",10,[[],["writei16le",3]]],[11,"write_u32_le","","Writes an unsigned 32-bit integer in little-endian order …",10,[[],["writeu32le",3]]],[11,"write_i32_le","","Writes a signed 32-bit integer in little-endian order to …",10,[[],["writei32le",3]]],[11,"write_u64_le","","Writes an unsigned 64-bit integer in little-endian order …",10,[[],["writeu64le",3]]],[11,"write_i64_le","","Writes an signed 64-bit integer in little-endian order to …",10,[[],["writei64le",3]]],[11,"write_u128_le","","Writes an unsigned 128-bit integer in little-endian order …",10,[[],["writeu128le",3]]],[11,"write_i128_le","","Writes an signed 128-bit integer in little-endian order …",10,[[],["writei128le",3]]],[11,"flush","","Flushes this output stream, ensuring that all …",10,[[],["flush",3]]],[11,"shutdown","","Shuts down the output stream, ensuring that the value can …",10,[[],["shutdown",3]]],[3,"BufReader","","The <code>BufReader</code> struct adds buffering to any reader.",null,null],[3,"BufStream","","Wraps a type that is [<code>AsyncWrite</code>] and [<code>AsyncRead</code>], and …",null,null],[3,"BufWriter","","Wraps a writer and buffers its output.",null,null],[3,"Copy","","A future that asynchronously copies the entire contents …",null,null],[3,"Empty","","An async reader which is always at EOF.",null,null],[3,"Lines","","Stream for the <code>lines</code> method.",null,null],[3,"Repeat","","An async reader which yields one byte over and over and …",null,null],[3,"Sink","","An async writer which will move data into the void.",null,null],[3,"Split","","Stream for the <code>split</code> method.",null,null],[3,"Take","","Stream for the <code>take</code> method.",null,null],[5,"stream_reader","","Convert a stream of byte chunks into an <code>AsyncRead</code>.",null,[[],["streamreader",3]]],[3,"StreamReader","","Convert a stream of byte chunks into an <code>AsyncRead</code>.",null,null],[0,"net","tokio","TCP/UDP/Unix bindings for <code>tokio</code>.",null,null],[0,"tcp","tokio::net","TCP utility types",null,null],[3,"Incoming","tokio::net::tcp","Stream returned by the <code>TcpListener::incoming</code> function …",null,null],[3,"ReadHalf","","Read half of a <code>TcpStream</code>, created by <code>split</code>.",null,null],[3,"WriteHalf","","Write half of a <code>TcpStream</code>, created by <code>split</code>.",null,null],[3,"OwnedReadHalf","","Owned read half of a <code>TcpStream</code>, created by <code>into_split</code>.",null,null],[3,"OwnedWriteHalf","","Owned write half of a <code>TcpStream</code>, created by <code>into_split</code>.",null,null],[3,"ReuniteError","","Error indicating two halves were not from the same …",null,null],[12,"0","","",11,null],[12,"1","","",11,null],[0,"udp","tokio::net","UDP utility types.",null,null],[3,"RecvHalf","tokio::net::udp","The recv half after <code>split</code>.",null,null],[3,"ReuniteError","","Error indicating two halves were not from the same …",null,null],[12,"0","","",12,null],[12,"1","","",12,null],[3,"SendHalf","","The send half after <code>split</code>.",null,null],[0,"unix","tokio::net","Unix domain socket utility types",null,null],[3,"Incoming","tokio::net::unix","Stream of listeners",null,null],[3,"ReadHalf","","Read half of a <code>UnixStream</code>.",null,null],[3,"WriteHalf","","Write half of a <code>UnixStream</code>.",null,null],[3,"UCred","","Credentials of a process",null,null],[12,"uid","","UID (user ID) of the process",13,null],[12,"gid","","GID (group ID) of the process",13,null],[8,"ToSocketAddrs","tokio::net","Converts or resolves without blocking to one or more …",null,null],[5,"lookup_host","","Performs a DNS resolution.",null,[[]]],[3,"TcpListener","","A TCP socket server, listening for connections.",null,null],[3,"TcpStream","","A TCP stream between a local and a remote socket.",null,null],[3,"UdpSocket","","A UDP socket",null,null],[3,"UnixDatagram","","An I/O object representing a Unix datagram socket.",null,null],[3,"UnixListener","","A Unix socket which can accept connections from other …",null,null],[3,"UnixStream","","A structure representing a connected Unix socket.",null,null],[0,"prelude","tokio","A \\\"prelude\\\" for users of the <code>tokio</code> crate.",null,null],[8,"AsyncBufRead","tokio::prelude","Reads bytes asynchronously.",null,null],[10,"poll_fill_buf","","Attempts to return the contents of the internal buffer, …",3,[[["pin",3],["context",3]],[["result",6],["poll",4]]]],[10,"consume","","Tells this buffer that <code>amt</code> bytes have been consumed from …",3,[[["pin",3]]]],[8,"AsyncRead","","Reads bytes from a source.",null,null],[11,"prepare_uninitialized_buffer","tokio::io","Prepares an uninitialized buffer to be safe to pass to …",4,[[]]],[10,"poll_read","tokio::prelude","Attempts to read from the <code>AsyncRead</code> into <code>buf</code>.",4,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_read_buf","tokio::io","Pulls some bytes from this source into the specified …",4,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[8,"AsyncWrite","tokio::prelude","Writes bytes asynchronously.",null,null],[10,"poll_write","","Attempt to write bytes from <code>buf</code> into the object.",6,[[["pin",3],["context",3]],[["result",4],["poll",4]]]],[10,"poll_flush","","Attempts to flush the object, ensuring that any buffered …",6,[[["pin",3],["context",3]],[["result",4],["poll",4]]]],[10,"poll_shutdown","","Initiates or attempts to shut down this writer, returning …",6,[[["pin",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_write_buf","tokio::io","Writes a <code>Buf</code> into this value, returning how many bytes …",6,[[["pin",3],["context",3]],[["result",4],["poll",4]]]],[0,"process","tokio","An implementation of asynchronous process management for …",null,null],[3,"Command","tokio::process","This structure mimics the API of <code>std::process::Command</code> …",null,null],[11,"new","","Constructs a new <code>Command</code> for launching the program at …",14,[[["osstr",3],["asref",8]],["command",3]]],[11,"arg","","Adds an argument to pass to the program.",14,[[["osstr",3],["asref",8]],["command",3]]],[11,"args","","Adds multiple arguments to pass to the program.",14,[[],["command",3]]],[11,"env","","Inserts or updates an environment variable mapping.",14,[[],["command",3]]],[11,"envs","","Adds or updates multiple environment variable mappings.",14,[[],["command",3]]],[11,"env_remove","","Removes an environment variable mapping.",14,[[["osstr",3],["asref",8]],["command",3]]],[11,"env_clear","","Clears the entire environment map for the child process.",14,[[],["command",3]]],[11,"current_dir","","Sets the working directory for the child process.",14,[[["path",3],["asref",8]],["command",3]]],[11,"stdin","","Sets configuration for the child process\'s standard input …",14,[[["into",8],["stdio",3]],["command",3]]],[11,"stdout","","Sets configuration for the child process\'s standard …",14,[[["into",8],["stdio",3]],["command",3]]],[11,"stderr","","Sets configuration for the child process\'s standard error …",14,[[["into",8],["stdio",3]],["command",3]]],[11,"kill_on_drop","","Controls whether a <code>kill</code> operation should be invoked on a …",14,[[],["command",3]]],[11,"uid","","Sets the child process\'s user ID. This translates to a …",14,[[],["command",3]]],[11,"gid","","Similar to <code>uid</code> but sets the group ID of the child …",14,[[],["command",3]]],[11,"pre_exec","","Schedules a closure to be run just before the <code>exec</code> …",14,[[],["command",3]]],[11,"spawn","","Executes the command as a child process, returning a …",14,[[],[["result",6],["child",3]]]],[11,"status","","Executes the command as a child process, waiting for it …",14,[[]]],[11,"output","","Executes the command as a child process, waiting for it …",14,[[]]],[3,"Child","","Representation of a child process spawned onto an event …",null,null],[12,"stdin","","The handle for writing to the child\'s standard input …",15,null],[12,"stdout","","The handle for reading from the child\'s standard output …",15,null],[12,"stderr","","The handle for reading from the child\'s standard error …",15,null],[11,"id","","Returns the OS-assigned process identifier associated …",15,[[]]],[11,"kill","","Forces the child to exit.",15,[[],["result",6]]],[11,"wait_with_output","","Returns a future that will resolve to an <code>Output</code>, …",15,[[]]],[3,"ChildStdin","","The standard input stream for spawned children.",null,null],[3,"ChildStdout","","The standard output stream for spawned children.",null,null],[3,"ChildStderr","","The standard error stream for spawned children.",null,null],[0,"runtime","tokio","The Tokio runtime.",null,null],[3,"Builder","tokio::runtime","Builds Tokio Runtime with custom configuration values.",null,null],[3,"Handle","","Handle to the runtime.",null,null],[3,"TryCurrentError","","Error returned by <code>try_current</code> when no Runtime has been …",null,null],[3,"Runtime","","The Tokio runtime.",null,null],[11,"new","","Create a new runtime instance with default configuration …",16,[[],[["result",6],["runtime",3]]]],[11,"spawn","","Spawn a future onto the Tokio runtime.",16,[[],["joinhandle",3]]],[11,"block_on","","Run a future to completion on the Tokio runtime. This is …",16,[[["future",8]]]],[11,"enter","","Enter the runtime context. This allows you to construct …",16,[[]]],[11,"handle","","Return a handle to the runtime\'s spawner.",16,[[],["handle",3]]],[11,"shutdown_timeout","","Shutdown the runtime, waiting for at most <code>duration</code> for …",16,[[["duration",3]]]],[11,"shutdown_background","","Shutdown the runtime, without waiting for any spawned …",16,[[]]],[0,"signal","tokio","Asynchronous signal handling for Tokio",null,null],[0,"unix","tokio::signal","Unix-specific types for signal handling.",null,null],[3,"SignalKind","tokio::signal::unix","Represents the specific kind of signal to listen for.",null,null],[11,"from_raw","","Allows for listening to any valid OS signal.",17,[[["c_int",6]]]],[11,"alarm","","Represents the SIGALRM signal.",17,[[]]],[11,"child","","Represents the SIGCHLD signal.",17,[[]]],[11,"hangup","","Represents the SIGHUP signal.",17,[[]]],[11,"interrupt","","Represents the SIGINT signal.",17,[[]]],[11,"io","","Represents the SIGIO signal.",17,[[]]],[11,"pipe","","Represents the SIGPIPE signal.",17,[[]]],[11,"quit","","Represents the SIGQUIT signal.",17,[[]]],[11,"terminate","","Represents the SIGTERM signal.",17,[[]]],[11,"user_defined1","","Represents the SIGUSR1 signal.",17,[[]]],[11,"user_defined2","","Represents the SIGUSR2 signal.",17,[[]]],[11,"window_change","","Represents the SIGWINCH signal.",17,[[]]],[3,"Signal","","A stream of events for receiving a particular type of OS …",null,null],[5,"signal","","Creates a new stream which will receive notifications …",null,[[["signalkind",3]],[["signal",3],["result",6]]]],[11,"recv","","Receives the next signal notification event.",18,[[]]],[11,"poll_recv","","Polls to receive the next signal notification event, …",18,[[["context",3]],[["option",4],["poll",4]]]],[5,"ctrl_c","tokio::signal","Completes when a \\\"ctrl-c\\\" notification is sent to the …",null,[[]]],[0,"stream","tokio","Stream utilities for Tokio.",null,null],[8,"Stream","tokio::stream","A stream of values produced asynchronously.",null,null],[16,"Item","","Values yielded by the stream.",19,null],[10,"poll_next","","Attempt to pull out the next value of this stream, …",19,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"size_hint","","Returns the bounds on the remaining length of the stream.",19,[[]]],[8,"FromStream","","Convert from a <code>Stream</code>.",null,null],[5,"empty","","Creates a stream that yields nothing.",null,[[],["empty",3]]],[3,"Empty","","Stream for the <code>empty</code> function.",null,null],[5,"iter","","Converts an <code>Iterator</code> into a <code>Stream</code> which is always ready …",null,[[],["iter",3]]],[3,"Iter","","Stream for the <code>iter</code> function.",null,null],[5,"once","","Creates a stream that emits an element exactly once.",null,[[],["once",3]]],[3,"Once","","Stream for the <code>once</code> function.",null,null],[5,"pending","","Creates a stream that is never ready",null,[[],["pending",3]]],[3,"Pending","","Stream for the <code>pending</code> function.",null,null],[3,"StreamMap","","Combine many streams into one, indexing each source …",null,null],[8,"StreamExt","","An extension trait for <code>Stream</code>s that provides a variety of …",null,null],[11,"next","","Consumes and returns the next value in the stream or <code>None</code> …",20,[[],["next",3]]],[11,"try_next","","Consumes and returns the next item in the stream. If an …",20,[[],["trynext",3]]],[11,"map","","Maps this stream\'s items to a different type, returning a …",20,[[],["map",3]]],[11,"merge","","Combine two streams into one by interleaving the output …",20,[[],["merge",3]]],[11,"filter","","Filters the values produced by this stream according to …",20,[[],["filter",3]]],[11,"filter_map","","Filters the values produced by this stream while …",20,[[],["filtermap",3]]],[11,"fuse","","Creates a stream which ends after the first <code>None</code>.",20,[[],["fuse",3]]],[11,"take","","Creates a new stream of at most <code>n</code> items of the underlying …",20,[[],["take",3]]],[11,"take_while","","Take elements from this stream while the provided …",20,[[],["takewhile",3]]],[11,"skip","","Creates a new stream that will skip the <code>n</code> first items of …",20,[[],["skip",3]]],[11,"skip_while","","Skip elements from the underlying stream while the …",20,[[],["skipwhile",3]]],[11,"all","","Tests if every element of the stream matches a predicate.",20,[[],["allfuture",3]]],[11,"any","","Tests if any element of the stream matches a predicate.",20,[[],["anyfuture",3]]],[11,"chain","","Combine two streams into one by first returning all …",20,[[],["chain",3]]],[11,"fold","","A combinator that applies a function to every element in …",20,[[],["foldfuture",3]]],[11,"collect","","Drain stream pushing all emitted values into a collection.",20,[[],["collect",3]]],[11,"timeout","","Applies a per-item timeout to the passed stream.",20,[[["duration",3]],["timeout",3]]],[0,"sync","tokio","Synchronization primitives for use in asynchronous …",null,null],[0,"broadcast","tokio::sync","A multi-producer, multi-consumer broadcast queue. Each …",null,null],[3,"Sender","tokio::sync::broadcast","Sending-half of the <code>broadcast</code> channel.",null,null],[3,"Receiver","","Receiving-half of the <code>broadcast</code> channel.",null,null],[3,"SendError","","Error returned by [<code>Sender::send</code>][Sender::send].",null,null],[12,"0","","",21,null],[4,"RecvError","","An error returned from the <code>recv</code> function on a <code>Receiver</code>.",null,null],[13,"Closed","","There are no more active senders implying no further …",22,null],[13,"Lagged","","The receiver lagged too far behind. Attempting to receive …",22,null],[4,"TryRecvError","","An error returned from the <code>try_recv</code> function on a <code>Receiver</code>…",null,null],[13,"Empty","","The channel is currently empty. There are still active […",23,null],[13,"Closed","","There are no more active senders implying no further …",23,null],[13,"Lagged","","The receiver lagged too far behind and has been forcibly …",23,null],[5,"channel","","Create a bounded, multi-producer, multi-consumer channel …",null,[[]]],[11,"send","","Attempts to send a value to all active <code>Receiver</code> handles, …",24,[[],[["result",4],["senderror",3]]]],[11,"subscribe","","Creates a new [<code>Receiver</code>] handle that will receive values …",24,[[],["receiver",3]]],[11,"receiver_count","","Returns the number of active receivers",24,[[]]],[11,"try_recv","","Attempts to return a pending value on this receiver …",25,[[],[["result",4],["tryrecverror",4]]]],[11,"recv","","Receives the next value for this receiver.",25,[[]]],[11,"into_stream","","Convert the receiver into a <code>Stream</code>.",25,[[]]],[0,"mpsc","tokio::sync","A multi-producer, single-consumer queue for sending …",null,null],[0,"error","tokio::sync::mpsc","Channel error types",null,null],[3,"SendError","tokio::sync::mpsc::error","Error returned by the <code>Sender</code>.",null,null],[12,"0","","",26,null],[4,"TrySendError","","This enumeration is the list of the possible error …",null,null],[13,"Full","","The data could not be sent on the channel because the …",27,null],[13,"Closed","","The receive half of the channel was explicitly closed or …",27,null],[3,"RecvError","","Error returned by <code>Receiver</code>.",null,null],[4,"TryRecvError","","This enumeration is the list of the possible reasons that …",null,null],[13,"Empty","","This channel is currently empty, but the Sender(s) have …",28,null],[13,"Closed","","The channel\'s sending half has been closed, and there will…",28,null],[3,"ClosedError","","Error returned by <code>Sender::poll_ready</code>.",null,null],[4,"SendTimeoutError","","Error returned by <code>Sender::send_timeout</code>].",null,null],[13,"Timeout","","The data could not be sent on the channel because the …",29,null],[13,"Closed","","The receive half of the channel was explicitly closed or …",29,null],[5,"channel","tokio::sync::mpsc","Creates a bounded mpsc channel for communicating between …",null,[[]]],[3,"Receiver","","Receive values from the associated <code>Sender</code>.",null,null],[3,"Sender","","Send values to the associated <code>Receiver</code>.",null,null],[5,"unbounded_channel","","Creates an unbounded mpsc channel for communicating …",null,[[]]],[3,"UnboundedReceiver","","Receive values from the associated <code>UnboundedSender</code>.",null,null],[3,"UnboundedSender","","Send values to the associated <code>UnboundedReceiver</code>.",null,null],[0,"oneshot","tokio::sync","A channel for sending a single message between …",null,null],[0,"error","tokio::sync::oneshot","Oneshot error types",null,null],[3,"RecvError","tokio::sync::oneshot::error","Error returned by the <code>Future</code> implementation for <code>Receiver</code>.",null,null],[4,"TryRecvError","","Error returned by the <code>try_recv</code> function on <code>Receiver</code>.",null,null],[13,"Empty","","The send half of the channel has not yet sent a value.",30,null],[13,"Closed","","The send half of the channel was dropped without sending …",30,null],[3,"Sender","tokio::sync::oneshot","Sends a value to the associated <code>Receiver</code>.",null,null],[3,"Receiver","","Receive a value from the associated <code>Sender</code>.",null,null],[5,"channel","","Create a new one-shot channel for sending single values …",null,[[]]],[11,"send","","Attempts to send a value on this channel, returning it …",31,[[],["result",4]]],[11,"closed","","Waits for the associated <code>Receiver</code> handle to close.",31,[[]]],[11,"is_closed","","Returns <code>true</code> if the associated <code>Receiver</code> handle has been …",31,[[]]],[11,"close","","Prevents the associated <code>Sender</code> handle from sending a …",32,[[]]],[11,"try_recv","","Attempts to receive a value.",32,[[],[["tryrecverror",4],["result",4]]]],[0,"watch","tokio::sync","A single-producer, multi-consumer channel that only …",null,null],[0,"error","tokio::sync::watch","Watch error types",null,null],[3,"SendError","tokio::sync::watch::error","Error produced when sending a value fails.",null,null],[3,"Receiver","tokio::sync::watch","Receives values from the associated <code>Sender</code>.",null,null],[3,"Sender","","Sends values to the associated <code>Receiver</code>.",null,null],[3,"Ref","","Returns a reference to the inner value",null,null],[5,"channel","","Creates a new watch channel, returning the \\\"send\\\" and …",null,[[["clone",8]]]],[11,"borrow","","Returns a reference to the most recently sent value",33,[[],["ref",3]]],[11,"recv","","Attempts to clone the latest value sent via the channel.",33,[[]]],[11,"broadcast","","Broadcasts a new value via the channel, notifying all …",34,[[],[["result",4],["senderror",3]]]],[11,"closed","","Completes when all receivers have dropped.",34,[[]]],[3,"Barrier","tokio::sync","A barrier enables multiple threads to synchronize the …",null,null],[3,"BarrierWaitResult","","A <code>BarrierWaitResult</code> is returned by <code>wait</code> when all threads …",null,null],[3,"Mutex","","An asynchronous <code>Mutex</code>-like type.",null,null],[3,"MutexGuard","","A handle to a held <code>Mutex</code>.",null,null],[3,"TryLockError","","Error returned from the <code>Mutex::try_lock</code> function.",null,null],[3,"OwnedMutexGuard","","An owned handle to a held <code>Mutex</code>.",null,null],[3,"Notify","","Notify a single task to wake up.",null,null],[3,"Semaphore","","Counting semaphore performing asynchronous permit …",null,null],[3,"SemaphorePermit","","A permit from the semaphore.",null,null],[3,"OwnedSemaphorePermit","","An owned permit from the semaphore.",null,null],[3,"RwLock","","An asynchronous reader-writer lock",null,null],[3,"RwLockReadGuard","","RAII structure used to release the shared read access of …",null,null],[3,"RwLockWriteGuard","","RAII structure used to release the exclusive write access …",null,null],[0,"task","tokio","Asynchronous green-threads.",null,null],[5,"spawn_blocking","tokio::task","Runs the provided closure on a thread where blocking is …",null,[[],["joinhandle",3]]],[5,"block_in_place","","Runs the provided blocking function on the current thread …",null,[[]]],[3,"JoinError","","Task failed to execute to completion.",null,null],[3,"JoinHandle","","An owned permission to join on a task (await its …",null,null],[5,"spawn","","Spawns a new asynchronous task, returning a <code>JoinHandle</code> …",null,[[],["joinhandle",3]]],[5,"yield_now","","Yields execution back to the Tokio runtime.",null,[[]]],[5,"spawn_local","","Spawns a <code>!Send</code> future on the local task set.",null,[[],["joinhandle",3]]],[3,"LocalSet","","A set of tasks which are executed on the same thread.",null,null],[3,"LocalKey","","A key for task-local data.",null,null],[0,"time","tokio","Utilities for tracking time.",null,null],[3,"Duration","tokio::time","A <code>Duration</code> type to represent a span of time, typically …",null,null],[0,"delay_queue","","A queue of delayed elements.",null,null],[3,"DelayQueue","tokio::time::delay_queue","A queue of delayed elements.",null,null],[3,"Expired","","An entry in <code>DelayQueue</code> that has expired and removed.",null,null],[3,"Key","","Token to a value stored in a <code>DelayQueue</code>.",null,null],[11,"new","","Creates a new, empty, <code>DelayQueue</code>",35,[[],["delayqueue",3]]],[11,"with_capacity","","Creates a new, empty, <code>DelayQueue</code> with the specified …",35,[[],["delayqueue",3]]],[11,"insert_at","","Inserts <code>value</code> into the queue set to expire at a specific …",35,[[["instant",3]],["key",3]]],[11,"poll_expired","","Attempts to pull out the next value of the delay queue, …",35,[[["context",3]],[["option",4],["poll",4]]]],[11,"insert","","Inserts <code>value</code> into the queue set to expire after the …",35,[[["duration",3]],["key",3]]],[11,"remove","","Removes the item associated with <code>key</code> from the queue.",35,[[["key",3]],["expired",3]]],[11,"reset_at","","Sets the delay of the item associated with <code>key</code> to expire …",35,[[["key",3],["instant",3]]]],[11,"reset","","Sets the delay of the item associated with <code>key</code> to expire …",35,[[["key",3],["duration",3]]]],[11,"clear","","Clears the queue, removing all items.",35,[[]]],[11,"capacity","","Returns the number of elements the queue can hold without …",35,[[]]],[11,"len","","Returns the number of elements currently in the queue.",35,[[]]],[11,"reserve","","Reserves capacity for at least <code>additional</code> more items to …",35,[[]]],[11,"is_empty","","Returns <code>true</code> if there are no items in the queue.",35,[[]]],[11,"get_ref","","Returns a reference to the inner value.",36,[[]]],[11,"get_mut","","Returns a mutable reference to the inner value.",36,[[]]],[11,"into_inner","","Consumes <code>self</code> and returns the inner value.",36,[[]]],[11,"deadline","","Returns the deadline that the expiration was set to.",36,[[],["instant",3]]],[3,"DelayQueue","tokio::time","A queue of delayed elements.",null,null],[5,"delay_for","","Waits until <code>duration</code> has elapsed.",null,[[["duration",3]],["delay",3]]],[5,"delay_until","","Waits until <code>deadline</code> is reached.",null,[[["instant",3]],["delay",3]]],[3,"Delay","","Future returned by <code>delay_until</code> and <code>delay_for</code>.",null,null],[3,"Error","","Errors encountered by the timer implementation.",null,null],[3,"Instant","","A measurement of the system clock, useful for talking to …",null,null],[5,"interval","","Creates new <code>Interval</code> that yields with interval of <code>duration</code>…",null,[[["duration",3]],["interval",3]]],[5,"interval_at","","Creates new <code>Interval</code> that yields with interval of <code>period</code> …",null,[[["duration",3],["instant",3]],["interval",3]]],[3,"Interval","","Stream returned by <code>interval</code> and <code>interval_at</code>.",null,null],[5,"timeout","","Require a <code>Future</code> to complete before the specified …",null,[[["duration",3]],["timeout",3]]],[5,"timeout_at","","Require a <code>Future</code> to complete before the specified instant …",null,[[["instant",3]],["timeout",3]]],[3,"Elapsed","","Error returned by <code>Timeout</code>.",null,null],[3,"Timeout","","Future returned by <code>timeout</code> and <code>timeout_at</code>.",null,null],[5,"throttle","","Slows down a stream by enforcing a delay between items. …",null,[[["duration",3]],["throttle",3]]],[3,"Throttle","","Stream for the <code>throttle</code> function.",null,null],[5,"spawn","tokio","Spawns a new asynchronous task, returning a <code>JoinHandle</code> …",null,[[],["joinhandle",3]]],[14,"pin","","Pins a value on the stack.",null,null],[14,"select","","Wait on multiple concurrent branches, returning when the <strong>…",null,null],[14,"join","","Wait on multiple concurrent branches, returning when <strong>all</strong> …",null,null],[14,"try_join","","Wait on multiple concurrent branches, returning when <strong>all</strong> …",null,null],[14,"task_local","","Declares a new task-local key of type …",null,null],[11,"from","tokio::fs","",37,[[]]],[11,"into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"try_poll_next","","",40,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"from","tokio::io","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_string","","",42,[[],["string",3]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"into_future","","",50,[[]]],[11,"try_poll","","",50,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"into_future","","",54,[[]]],[11,"try_poll","","",54,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"try_poll_next","","",56,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"try_poll_next","","",59,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"from","","",61,[[]]],[11,"into","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"from","tokio::net","",62,[[]]],[11,"into","","",62,[[]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"try_poll_next","","",62,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"from","tokio::net::tcp","",63,[[]]],[11,"into","","",63,[[]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"try_poll_next","","",63,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"from","","",64,[[]]],[11,"into","","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"from","","",65,[[]]],[11,"into","","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"from","","",66,[[]]],[11,"into","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"from","","",67,[[]]],[11,"into","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_string","","",11,[[],["string",3]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","tokio::net","",68,[[]]],[11,"into","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"from","","",69,[[]]],[11,"into","","",69,[[]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"from","tokio::net::udp","",70,[[]]],[11,"into","","",70,[[]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"try_into","","",70,[[],["result",4]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"from","","",71,[[]]],[11,"into","","",71,[[]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_string","","",12,[[],["string",3]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","tokio::net","",72,[[]]],[11,"into","","",72,[[]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"from","tokio::net::unix","",73,[[]]],[11,"into","","",73,[[]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"try_into","","",73,[[],["result",4]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"try_poll_next","","",73,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"from","tokio::net","",74,[[]]],[11,"into","","",74,[[]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"try_into","","",74,[[],["result",4]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"try_poll_next","","",74,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"from","tokio::net::unix","",75,[[]]],[11,"into","","",75,[[]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"try_into","","",75,[[],["result",4]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"from","","",76,[[]]],[11,"into","","",76,[[]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"try_into","","",76,[[],["result",4]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"from","tokio::net","",77,[[]]],[11,"into","","",77,[[]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"try_into","","",77,[[],["result",4]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"from","tokio::net::unix","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","tokio::process","",14,[[]]],[11,"into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"into_future","","",15,[[]]],[11,"try_poll","","",15,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",78,[[]]],[11,"into","","",78,[[]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"try_into","","",78,[[],["result",4]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"from","","",79,[[]]],[11,"into","","",79,[[]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"try_into","","",79,[[],["result",4]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"from","","",80,[[]]],[11,"into","","",80,[[]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"try_into","","",80,[[],["result",4]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"from","tokio::task","",81,[[]]],[11,"into","","",81,[[]]],[11,"to_string","","",81,[[],["string",3]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"try_into","","",81,[[],["result",4]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"from","","",82,[[]]],[11,"into","","",82,[[]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"try_into","","",82,[[],["result",4]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"into_future","","",82,[[]]],[11,"try_poll","","",82,[[["pin",3],["context",3]],["poll",4]]],[11,"from","tokio::runtime","",83,[[]]],[11,"into","","",83,[[]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"try_into","","",83,[[],["result",4]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"from","","",84,[[]]],[11,"into","","",84,[[]]],[11,"to_owned","","",84,[[]]],[11,"clone_into","","",84,[[]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"try_into","","",84,[[],["result",4]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"from","","",85,[[]]],[11,"into","","",85,[[]]],[11,"to_string","","",85,[[],["string",3]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"try_into","","",85,[[],["result",4]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","tokio::signal::unix","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","tokio::stream","",86,[[]]],[11,"into","","",86,[[]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"try_into","","",86,[[],["result",4]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"try_poll_next","","",86,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"from","","",87,[[]]],[11,"into","","",87,[[]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"try_into","","",87,[[],["result",4]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"try_poll_next","","",87,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"from","","",88,[[]]],[11,"into","","",88,[[]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"try_into","","",88,[[],["result",4]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"try_poll_next","","",88,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"from","","",89,[[]]],[11,"into","","",89,[[]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"try_into","","",89,[[],["result",4]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"try_poll_next","","",89,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"from","","",90,[[]]],[11,"into","","",90,[[]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"try_into","","",90,[[],["result",4]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"from","tokio::sync","",91,[[]]],[11,"into","","",91,[[]]],[11,"borrow","","",91,[[]]],[11,"borrow_mut","","",91,[[]]],[11,"try_from","","",91,[[],["result",4]]],[11,"try_into","","",91,[[],["result",4]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"from","","",92,[[]]],[11,"into","","",92,[[]]],[11,"to_owned","","",92,[[]]],[11,"clone_into","","",92,[[]]],[11,"borrow","","",92,[[]]],[11,"borrow_mut","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"try_into","","",92,[[],["result",4]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"from","tokio::sync::broadcast","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"try_poll_next","","",25,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_string","","",22,[[],["string",3]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_string","","",23,[[],["string",3]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","tokio::sync::mpsc","",93,[[]]],[11,"into","","",93,[[]]],[11,"to_owned","","",93,[[]]],[11,"clone_into","","",93,[[]]],[11,"borrow","","",93,[[]]],[11,"borrow_mut","","",93,[[]]],[11,"try_from","","",93,[[],["result",4]]],[11,"try_into","","",93,[[],["result",4]]],[11,"type_id","","",93,[[],["typeid",3]]],[11,"from","","",94,[[]]],[11,"into","","",94,[[]]],[11,"borrow","","",94,[[]]],[11,"borrow_mut","","",94,[[]]],[11,"try_from","","",94,[[],["result",4]]],[11,"try_into","","",94,[[],["result",4]]],[11,"type_id","","",94,[[],["typeid",3]]],[11,"try_poll_next","","",94,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"from","","",95,[[]]],[11,"into","","",95,[[]]],[11,"to_owned","","",95,[[]]],[11,"clone_into","","",95,[[]]],[11,"borrow","","",95,[[]]],[11,"borrow_mut","","",95,[[]]],[11,"try_from","","",95,[[],["result",4]]],[11,"try_into","","",95,[[],["result",4]]],[11,"type_id","","",95,[[],["typeid",3]]],[11,"from","","",96,[[]]],[11,"into","","",96,[[]]],[11,"borrow","","",96,[[]]],[11,"borrow_mut","","",96,[[]]],[11,"try_from","","",96,[[],["result",4]]],[11,"try_into","","",96,[[],["result",4]]],[11,"type_id","","",96,[[],["typeid",3]]],[11,"try_poll_next","","",96,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"from","tokio::sync::mpsc::error","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_string","","",26,[[],["string",3]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_string","","",27,[[],["string",3]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","","",97,[[]]],[11,"into","","",97,[[]]],[11,"to_string","","",97,[[],["string",3]]],[11,"borrow","","",97,[[]]],[11,"borrow_mut","","",97,[[]]],[11,"try_from","","",97,[[],["result",4]]],[11,"try_into","","",97,[[],["result",4]]],[11,"type_id","","",97,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_string","","",28,[[],["string",3]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",98,[[]]],[11,"into","","",98,[[]]],[11,"to_string","","",98,[[],["string",3]]],[11,"borrow","","",98,[[]]],[11,"borrow_mut","","",98,[[]]],[11,"try_from","","",98,[[],["result",4]]],[11,"try_into","","",98,[[],["result",4]]],[11,"type_id","","",98,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_string","","",29,[[],["string",3]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","tokio::sync","",99,[[]]],[11,"from","","",99,[[]]],[11,"into","","",99,[[]]],[11,"borrow","","",99,[[]]],[11,"borrow_mut","","",99,[[]]],[11,"try_from","","",99,[[],["result",4]]],[11,"try_into","","",99,[[],["result",4]]],[11,"type_id","","",99,[[],["typeid",3]]],[11,"from","","",100,[[]]],[11,"into","","",100,[[]]],[11,"to_string","","",100,[[],["string",3]]],[11,"borrow","","",100,[[]]],[11,"borrow_mut","","",100,[[]]],[11,"try_from","","",100,[[],["result",4]]],[11,"try_into","","",100,[[],["result",4]]],[11,"type_id","","",100,[[],["typeid",3]]],[11,"load","","",100,[[]]],[11,"load","","",100,[[],["dynguard",3]]],[11,"from","","",101,[[]]],[11,"into","","",101,[[]]],[11,"to_string","","",101,[[],["string",3]]],[11,"borrow","","",101,[[]]],[11,"borrow_mut","","",101,[[]]],[11,"try_from","","",101,[[],["result",4]]],[11,"try_into","","",101,[[],["result",4]]],[11,"type_id","","",101,[[],["typeid",3]]],[11,"load","","",101,[[]]],[11,"load","","",101,[[],["dynguard",3]]],[11,"from","","",102,[[]]],[11,"into","","",102,[[]]],[11,"to_string","","",102,[[],["string",3]]],[11,"borrow","","",102,[[]]],[11,"borrow_mut","","",102,[[]]],[11,"try_from","","",102,[[],["result",4]]],[11,"try_into","","",102,[[],["result",4]]],[11,"type_id","","",102,[[],["typeid",3]]],[11,"from","","",103,[[]]],[11,"into","","",103,[[]]],[11,"borrow","","",103,[[]]],[11,"borrow_mut","","",103,[[]]],[11,"try_from","","",103,[[],["result",4]]],[11,"try_into","","",103,[[],["result",4]]],[11,"type_id","","",103,[[],["typeid",3]]],[11,"from","tokio::sync::oneshot::error","",104,[[]]],[11,"into","","",104,[[]]],[11,"to_string","","",104,[[],["string",3]]],[11,"borrow","","",104,[[]]],[11,"borrow_mut","","",104,[[]]],[11,"try_from","","",104,[[],["result",4]]],[11,"try_into","","",104,[[],["result",4]]],[11,"type_id","","",104,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_string","","",30,[[],["string",3]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","tokio::sync::oneshot","",31,[[]]],[11,"into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"into_future","","",32,[[]]],[11,"try_poll","","",32,[[["pin",3],["context",3]],["poll",4]]],[11,"from","tokio::sync","",105,[[]]],[11,"into","","",105,[[]]],[11,"borrow","","",105,[[]]],[11,"borrow_mut","","",105,[[]]],[11,"try_from","","",105,[[],["result",4]]],[11,"try_into","","",105,[[],["result",4]]],[11,"type_id","","",105,[[],["typeid",3]]],[11,"from","","",106,[[]]],[11,"into","","",106,[[]]],[11,"borrow","","",106,[[]]],[11,"borrow_mut","","",106,[[]]],[11,"try_from","","",106,[[],["result",4]]],[11,"try_into","","",106,[[],["result",4]]],[11,"type_id","","",106,[[],["typeid",3]]],[11,"from","","",107,[[]]],[11,"into","","",107,[[]]],[11,"borrow","","",107,[[]]],[11,"borrow_mut","","",107,[[]]],[11,"try_from","","",107,[[],["result",4]]],[11,"try_into","","",107,[[],["result",4]]],[11,"type_id","","",107,[[],["typeid",3]]],[11,"from","","",108,[[]]],[11,"from","","",108,[[]]],[11,"into","","",108,[[]]],[11,"borrow","","",108,[[]]],[11,"borrow_mut","","",108,[[]]],[11,"try_from","","",108,[[],["result",4]]],[11,"try_into","","",108,[[],["result",4]]],[11,"type_id","","",108,[[],["typeid",3]]],[11,"from","","",109,[[]]],[11,"into","","",109,[[]]],[11,"borrow","","",109,[[]]],[11,"borrow_mut","","",109,[[]]],[11,"try_from","","",109,[[],["result",4]]],[11,"try_into","","",109,[[],["result",4]]],[11,"type_id","","",109,[[],["typeid",3]]],[11,"load","","",109,[[]]],[11,"load","","",109,[[],["dynguard",3]]],[11,"from","","",110,[[]]],[11,"into","","",110,[[]]],[11,"borrow","","",110,[[]]],[11,"borrow_mut","","",110,[[]]],[11,"try_from","","",110,[[],["result",4]]],[11,"try_into","","",110,[[],["result",4]]],[11,"type_id","","",110,[[],["typeid",3]]],[11,"load","","",110,[[]]],[11,"load","","",110,[[],["dynguard",3]]],[11,"from","tokio::sync::watch::error","",111,[[]]],[11,"into","","",111,[[]]],[11,"to_string","","",111,[[],["string",3]]],[11,"borrow","","",111,[[]]],[11,"borrow_mut","","",111,[[]]],[11,"try_from","","",111,[[],["result",4]]],[11,"try_into","","",111,[[],["result",4]]],[11,"type_id","","",111,[[],["typeid",3]]],[11,"from","tokio::sync::watch","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"try_poll_next","","",33,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from","","",112,[[]]],[11,"into","","",112,[[]]],[11,"borrow","","",112,[[]]],[11,"borrow_mut","","",112,[[]]],[11,"try_from","","",112,[[],["result",4]]],[11,"try_into","","",112,[[],["result",4]]],[11,"type_id","","",112,[[],["typeid",3]]],[11,"load","","",112,[[]]],[11,"load","","",112,[[],["dynguard",3]]],[11,"from","tokio::task","",113,[[]]],[11,"into","","",113,[[]]],[11,"borrow","","",113,[[]]],[11,"borrow_mut","","",113,[[]]],[11,"try_from","","",113,[[],["result",4]]],[11,"try_into","","",113,[[],["result",4]]],[11,"type_id","","",113,[[],["typeid",3]]],[11,"into_future","","",113,[[]]],[11,"from","","",114,[[]]],[11,"into","","",114,[[]]],[11,"borrow","","",114,[[]]],[11,"borrow_mut","","",114,[[]]],[11,"try_from","","",114,[[],["result",4]]],[11,"try_into","","",114,[[],["result",4]]],[11,"type_id","","",114,[[],["typeid",3]]],[11,"from","tokio::time","",115,[[]]],[11,"into","","",115,[[]]],[11,"to_owned","","",115,[[]]],[11,"clone_into","","",115,[[]]],[11,"borrow","","",115,[[]]],[11,"borrow_mut","","",115,[[]]],[11,"try_from","","",115,[[],["result",4]]],[11,"try_into","","",115,[[],["result",4]]],[11,"type_id","","",115,[[],["typeid",3]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"try_poll_next","","",35,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"from","tokio::time::delay_queue","",36,[[]]],[11,"into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"from","","",116,[[]]],[11,"into","","",116,[[]]],[11,"to_owned","","",116,[[]]],[11,"clone_into","","",116,[[]]],[11,"borrow","","",116,[[]]],[11,"borrow_mut","","",116,[[]]],[11,"try_from","","",116,[[],["result",4]]],[11,"try_into","","",116,[[],["result",4]]],[11,"type_id","","",116,[[],["typeid",3]]],[11,"from","tokio::time","",117,[[]]],[11,"into","","",117,[[]]],[11,"borrow","","",117,[[]]],[11,"borrow_mut","","",117,[[]]],[11,"try_from","","",117,[[],["result",4]]],[11,"try_into","","",117,[[],["result",4]]],[11,"type_id","","",117,[[],["typeid",3]]],[11,"into_future","","",117,[[]]],[11,"from","","",118,[[]]],[11,"into","","",118,[[]]],[11,"to_string","","",118,[[],["string",3]]],[11,"borrow","","",118,[[]]],[11,"borrow_mut","","",118,[[]]],[11,"try_from","","",118,[[],["result",4]]],[11,"try_into","","",118,[[],["result",4]]],[11,"type_id","","",118,[[],["typeid",3]]],[11,"from","","",119,[[]]],[11,"into","","",119,[[]]],[11,"to_owned","","",119,[[]]],[11,"clone_into","","",119,[[]]],[11,"borrow","","",119,[[]]],[11,"borrow_mut","","",119,[[]]],[11,"try_from","","",119,[[],["result",4]]],[11,"try_into","","",119,[[],["result",4]]],[11,"type_id","","",119,[[],["typeid",3]]],[11,"from","","",120,[[]]],[11,"into","","",120,[[]]],[11,"borrow","","",120,[[]]],[11,"borrow_mut","","",120,[[]]],[11,"try_from","","",120,[[],["result",4]]],[11,"try_into","","",120,[[],["result",4]]],[11,"type_id","","",120,[[],["typeid",3]]],[11,"from","","",121,[[]]],[11,"into","","",121,[[]]],[11,"borrow","","",121,[[]]],[11,"borrow_mut","","",121,[[]]],[11,"try_from","","",121,[[],["result",4]]],[11,"try_into","","",121,[[],["result",4]]],[11,"type_id","","",121,[[],["typeid",3]]],[11,"into_future","","",121,[[]]],[11,"try_poll","","",121,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",122,[[]]],[11,"into","","",122,[[]]],[11,"to_string","","",122,[[],["string",3]]],[11,"borrow","","",122,[[]]],[11,"borrow_mut","","",122,[[]]],[11,"try_from","","",122,[[],["result",4]]],[11,"try_into","","",122,[[],["result",4]]],[11,"type_id","","",122,[[],["typeid",3]]],[11,"from","","",123,[[]]],[11,"into","","",123,[[]]],[11,"borrow","","",123,[[]]],[11,"borrow_mut","","",123,[[]]],[11,"try_from","","",123,[[],["result",4]]],[11,"try_into","","",123,[[],["result",4]]],[11,"type_id","","",123,[[],["typeid",3]]],[11,"try_poll_next","","",123,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"description","tokio::io","",42,[[]]],[11,"cause","","",42,[[],[["option",4],["error",8]]]],[11,"source","","",42,[[],[["option",4],["error",8]]]],[11,"from","","",42,[[["intoinnererror",3]],["error",3]]],[11,"from","","Converts an [<code>ErrorKind</code>] into an [<code>Error</code>].",42,[[["errorkind",4]],["error",3]]],[11,"from","","Converts a [<code>NulError</code>] into a [<code>io::Error</code>].",42,[[["nulerror",3]],["error",3]]],[11,"hash","","",2,[[]]],[11,"partial_cmp","","",2,[[["errorkind",4]],[["option",4],["ordering",4]]]],[11,"cmp","","",2,[[["errorkind",4]],["ordering",4]]],[11,"fmt","","",2,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",42,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",42,[[["formatter",3]],[["result",4],["error",3]]]],[11,"eq","","",2,[[["errorkind",4]]]],[11,"clone","","",2,[[],["errorkind",4]]],[11,"mul","tokio::time","",115,[[],["duration",3]]],[11,"sub","","",115,[[["duration",3]],["duration",3]]],[11,"add","","",115,[[["duration",3]],["duration",3]]],[11,"div_assign","","",115,[[]]],[11,"add_assign","","",115,[[["duration",3]]]],[11,"fmt","","",115,[[["formatter",3]],[["result",4],["error",3]]]],[11,"default","","",115,[[],["duration",3]]],[11,"cmp","","",115,[[["duration",3]],["ordering",4]]],[11,"clone","","",115,[[],["duration",3]]],[11,"sub_assign","","",115,[[["duration",3]]]],[11,"hash","","",115,[[]]],[11,"eq","","",115,[[["duration",3]]]],[11,"ne","","",115,[[["duration",3]]]],[11,"sum","","",115,[[],["duration",3]]],[11,"sum","","",115,[[],["duration",3]]],[11,"partial_cmp","","",115,[[["duration",3]],[["option",4],["ordering",4]]]],[11,"lt","","",115,[[["duration",3]]]],[11,"le","","",115,[[["duration",3]]]],[11,"gt","","",115,[[["duration",3]]]],[11,"ge","","",115,[[["duration",3]]]],[11,"mul_assign","","",115,[[]]],[11,"div","","",115,[[],["duration",3]]],[11,"poll_fill_buf","tokio::io","",51,[[["pin",3],["context",3]],[["result",6],["poll",4]]]],[11,"consume","","",51,[[["pin",3]]]],[11,"poll_fill_buf","","",52,[[["pin",3],["context",3]],[["result",6],["poll",4]]]],[11,"consume","","",52,[[["pin",3]]]],[11,"poll_fill_buf","","",53,[[["pin",3],["context",3]],[["result",6],["poll",4]]]],[11,"consume","","",53,[[["pin",3]]]],[11,"poll_fill_buf","","",55,[[["pin",3],["context",3]],[["result",6],["poll",4]]]],[11,"consume","","",55,[[["pin",3]]]],[11,"poll_fill_buf","","",60,[[["pin",3],["context",3]],[["result",6],["poll",4]]]],[11,"consume","","",60,[[["pin",3]]]],[11,"poll_fill_buf","","",61,[[["pin",3],["context",3]],[["result",6],["poll",4]]]],[11,"consume","","",61,[[["pin",3]]]],[11,"prepare_uninitialized_buffer","tokio::fs","",38,[[]]],[11,"poll_read","","",38,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_read","tokio::io","",43,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"prepare_uninitialized_buffer","","",46,[[]]],[11,"poll_read","","",46,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_read","","",48,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_read_buf","","",48,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_read","","",51,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"prepare_uninitialized_buffer","","",51,[[]]],[11,"poll_read","","",52,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"prepare_uninitialized_buffer","","",52,[[]]],[11,"poll_read","","",53,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"prepare_uninitialized_buffer","","",53,[[]]],[11,"prepare_uninitialized_buffer","","",55,[[]]],[11,"poll_read","","",55,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"prepare_uninitialized_buffer","","",57,[[]]],[11,"poll_read","","",57,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_read","","",60,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_read_buf","","",60,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"prepare_uninitialized_buffer","","",60,[[]]],[11,"prepare_uninitialized_buffer","","",61,[[]]],[11,"poll_read","","",61,[[["pin",3],["context",3]],[["result",4],["poll",4]]]],[11,"prepare_uninitialized_buffer","tokio::net::tcp","",64,[[]]],[11,"poll_read","","",64,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"prepare_uninitialized_buffer","","",66,[[]]],[11,"poll_read","","",66,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"prepare_uninitialized_buffer","tokio::net","",68,[[]]],[11,"poll_read","","",68,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"prepare_uninitialized_buffer","tokio::net::unix","",75,[[]]],[11,"poll_read","","",75,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"prepare_uninitialized_buffer","tokio::net","",77,[[]]],[11,"poll_read","","",77,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"prepare_uninitialized_buffer","tokio::process","",79,[[]]],[11,"poll_read","","",79,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"prepare_uninitialized_buffer","","",80,[[]]],[11,"poll_read","","",80,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"start_seek","tokio::fs","",38,[[["pin",3],["seekfrom",4],["context",3]],[["result",6],["poll",4]]]],[11,"poll_complete","","",38,[[["pin",3],["context",3]],[["result",6],["poll",4]]]],[11,"poll_write","","",38,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_flush","","",38,[[["pin",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_shutdown","","",38,[[["pin",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_write","tokio::io","",43,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_flush","","",43,[[["pin",3],["context",3]],[["result",6],["poll",4]]]],[11,"poll_shutdown","","",43,[[["pin",3],["context",3]],[["result",6],["poll",4]]]],[11,"poll_write","","",45,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_flush","","",45,[[["pin",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_shutdown","","",45,[[["pin",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_write","","",47,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_flush","","",47,[[["pin",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_shutdown","","",47,[[["pin",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_write","","",49,[[["pin",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_flush","","",49,[[["pin",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_shutdown","","",49,[[["pin",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_write_buf","","",49,[[["pin",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_write","","",51,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_write_buf","","",51,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_flush","","",51,[[["pin",3],["context",3]],[["result",6],["poll",4]]]],[11,"poll_shutdown","","",51,[[["pin",3],["context",3]],[["result",6],["poll",4]]]],[11,"poll_write","","",52,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_flush","","",52,[[["pin",3],["context",3]],[["result",6],["poll",4]]]],[11,"poll_shutdown","","",52,[[["pin",3],["context",3]],[["result",6],["poll",4]]]],[11,"poll_write","","",53,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_flush","","",53,[[["pin",3],["context",3]],[["result",6],["poll",4]]]],[11,"poll_shutdown","","",53,[[["pin",3],["context",3]],[["result",6],["poll",4]]]],[11,"poll_write","","",58,[[["pin",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_flush","","",58,[[["pin",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_shutdown","","",58,[[["pin",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_write","tokio::net::tcp","",65,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_write_buf","","",65,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_flush","","",65,[[["pin",3],["context",3]],[["result",6],["poll",4]]]],[11,"poll_shutdown","","",65,[[["pin",3],["context",3]],[["result",6],["poll",4]]]],[11,"poll_write","","",67,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_write_buf","","",67,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_flush","","",67,[[["pin",3],["context",3]],[["result",6],["poll",4]]]],[11,"poll_shutdown","","",67,[[["pin",3],["context",3]],[["result",6],["poll",4]]]],[11,"poll_write","tokio::net","",68,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_write_buf","","",68,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_flush","","",68,[[["pin",3],["context",3]],[["result",6],["poll",4]]]],[11,"poll_shutdown","","",68,[[["pin",3],["context",3]],[["result",6],["poll",4]]]],[11,"poll_write","tokio::net::unix","",76,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_flush","","",76,[[["pin",3],["context",3]],[["result",6],["poll",4]]]],[11,"poll_shutdown","","",76,[[["pin",3],["context",3]],[["result",6],["poll",4]]]],[11,"poll_write","tokio::net","",77,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_flush","","",77,[[["pin",3],["context",3]],[["result",6],["poll",4]]]],[11,"poll_shutdown","","",77,[[["pin",3],["context",3]],[["result",6],["poll",4]]]],[11,"poll_write","tokio::process","",78,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_flush","","",78,[[["pin",3],["context",3]],[["result",6],["poll",4]]]],[11,"poll_shutdown","","",78,[[["pin",3],["context",3]],[["result",6],["poll",4]]]],[11,"mode","tokio::fs","",39,[[],["openoptions",3]]],[11,"custom_flags","","",39,[[],["openoptions",3]]],[11,"mode","","",37,[[]]],[11,"drop","tokio::io","",43,[[]]],[11,"drop","","",44,[[]]],[11,"drop","tokio::net::tcp","",67,[[]]],[11,"drop","tokio::task","",82,[[]]],[11,"drop","tokio::sync::broadcast","",24,[[]]],[11,"drop","","",25,[[]]],[11,"drop","tokio::sync","",100,[[]]],[11,"drop","","",101,[[]]],[11,"drop","tokio::sync::oneshot","",31,[[]]],[11,"drop","","",32,[[]]],[11,"drop","tokio::sync","",106,[[]]],[11,"drop","","",107,[[]]],[11,"drop","tokio::sync::watch","",33,[[]]],[11,"drop","","",34,[[]]],[11,"drop","tokio::task","",113,[[]]],[11,"as_ref","tokio::net::tcp","",64,[[],["tcpstream",3]]],[11,"as_ref","","",65,[[],["tcpstream",3]]],[11,"as_ref","","",66,[[],["tcpstream",3]]],[11,"as_ref","","",67,[[],["tcpstream",3]]],[11,"as_ref","tokio::net::udp","",70,[[],["udpsocket",3]]],[11,"as_ref","","",71,[[],["udpsocket",3]]],[11,"as_ref","tokio::net::unix","",75,[[],["unixstream",3]]],[11,"as_ref","","",76,[[],["unixstream",3]]],[11,"from","tokio::fs","",38,[[["file",3]]]],[11,"from","","",39,[[["openoptions",3]],["openoptions",3]]],[11,"from","tokio::io","",52,[[["bufwriter",3],["bufreader",3]]]],[11,"from","","",52,[[["bufwriter",3],["bufreader",3]]]],[11,"from","tokio::process","",14,[[["stdcommand",3]],["command",3]]],[11,"from","tokio::io","",42,[[["joinerror",3]],["error",3]]],[11,"from","tokio::sync::mpsc::error","",26,[[],["senderror",3]]],[11,"from","","",27,[[],["trysenderror",4]]],[11,"from","","",27,[[["senderror",3]],["trysenderror",4]]],[11,"from","tokio::sync","",99,[[]]],[11,"from","","",108,[[]]],[11,"from","tokio::time","",119,[[["instant",3]],["instant",3]]],[11,"from","tokio::io","",42,[[["elapsed",3]],["error",3]]],[11,"clone","tokio::fs","",39,[[],["openoptions",3]]],[11,"clone","tokio::net::unix","",13,[[],["ucred",3]]],[11,"clone","tokio::runtime","",84,[[],["handle",3]]],[11,"clone","tokio::signal::unix","",17,[[],["signalkind",3]]],[11,"clone","tokio::sync","",92,[[],["barrierwaitresult",3]]],[11,"clone","tokio::sync::broadcast","",24,[[],["sender",3]]],[11,"clone","tokio::sync::mpsc","",93,[[]]],[11,"clone","","",95,[[]]],[11,"clone","tokio::sync::watch","",33,[[]]],[11,"clone","tokio::time::delay_queue","",116,[[],["key",3]]],[11,"clone","tokio::time","",119,[[],["instant",3]]],[11,"default","tokio::fs","",37,[[],["dirbuilder",3]]],[11,"default","","",39,[[]]],[11,"default","tokio::runtime","",83,[[]]],[11,"default","tokio::stream","",90,[[],["streammap",3]]],[11,"default","tokio::sync","",99,[[]]],[11,"default","","",103,[[],["notify",3]]],[11,"default","","",108,[[]]],[11,"default","tokio::task","",113,[[],["localset",3]]],[11,"default","tokio::time","",35,[[],["delayqueue",3]]],[11,"cmp","","",119,[[["instant",3]],["ordering",4]]],[11,"eq","tokio::net::unix","",13,[[["ucred",3]]]],[11,"ne","","",13,[[["ucred",3]]]],[11,"eq","tokio::sync::broadcast","",22,[[["recverror",4]]]],[11,"ne","","",22,[[["recverror",4]]]],[11,"eq","","",23,[[["tryrecverror",4]]]],[11,"ne","","",23,[[["tryrecverror",4]]]],[11,"eq","tokio::sync::mpsc::error","",28,[[["tryrecverror",4]]]],[11,"eq","tokio::sync::oneshot::error","",104,[[["recverror",3]]]],[11,"ne","","",104,[[["recverror",3]]]],[11,"eq","","",30,[[["tryrecverror",4]]]],[11,"eq","tokio::time","",119,[[["instant",3]]]],[11,"ne","","",119,[[["instant",3]]]],[11,"eq","","",122,[[["elapsed",3]]]],[11,"ne","","",122,[[["elapsed",3]]]],[11,"partial_cmp","","",119,[[["instant",3]],[["option",4],["ordering",4]]]],[11,"lt","","",119,[[["instant",3]]]],[11,"le","","",119,[[["instant",3]]]],[11,"gt","","",119,[[["instant",3]]]],[11,"ge","","",119,[[["instant",3]]]],[11,"deref","tokio::sync","",100,[[]]],[11,"deref","","",101,[[]]],[11,"deref","","",109,[[]]],[11,"deref","","",110,[[]]],[11,"deref","tokio::sync::watch","",112,[[]]],[11,"deref_mut","tokio::sync","",100,[[]]],[11,"deref_mut","","",101,[[]]],[11,"deref_mut","","",110,[[]]],[11,"fmt","tokio::fs","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],["result",6]]],[11,"fmt","tokio::io","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","","",45,[[["formatter",3]],["result",6]]],[11,"fmt","","",46,[[["formatter",3]],["result",6]]],[11,"fmt","","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",49,[[["formatter",3]],["result",6]]],[11,"fmt","","",50,[[["formatter",3]],["result",6]]],[11,"fmt","","",51,[[["formatter",3]],["result",6]]],[11,"fmt","","",52,[[["formatter",3]],["result",6]]],[11,"fmt","","",53,[[["formatter",3]],["result",6]]],[11,"fmt","","",54,[[["formatter",3]],["result",6]]],[11,"fmt","","",55,[[["formatter",3]],["result",6]]],[11,"fmt","","",56,[[["formatter",3]],["result",6]]],[11,"fmt","","",57,[[["formatter",3]],["result",6]]],[11,"fmt","","",58,[[["formatter",3]],["result",6]]],[11,"fmt","","",59,[[["formatter",3]],["result",6]]],[11,"fmt","","",60,[[["formatter",3]],["result",6]]],[11,"fmt","","",61,[[["formatter",3]],["result",6]]],[11,"fmt","tokio::net","",62,[[["formatter",3]],["result",6]]],[11,"fmt","tokio::net::tcp","",63,[[["formatter",3]],["result",6]]],[11,"fmt","","",64,[[["formatter",3]],["result",6]]],[11,"fmt","","",65,[[["formatter",3]],["result",6]]],[11,"fmt","","",66,[[["formatter",3]],["result",6]]],[11,"fmt","","",67,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","tokio::net","",68,[[["formatter",3]],["result",6]]],[11,"fmt","","",69,[[["formatter",3]],["result",6]]],[11,"fmt","tokio::net::udp","",70,[[["formatter",3]],["result",6]]],[11,"fmt","","",71,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","tokio::net","",72,[[["formatter",3]],["result",6]]],[11,"fmt","tokio::net::unix","",73,[[["formatter",3]],["result",6]]],[11,"fmt","tokio::net","",74,[[["formatter",3]],["result",6]]],[11,"fmt","tokio::net::unix","",75,[[["formatter",3]],["result",6]]],[11,"fmt","","",76,[[["formatter",3]],["result",6]]],[11,"fmt","tokio::net","",77,[[["formatter",3]],["result",6]]],[11,"fmt","tokio::net::unix","",13,[[["formatter",3]],["result",6]]],[11,"fmt","tokio::process","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",78,[[["formatter",3]],["result",6]]],[11,"fmt","","",79,[[["formatter",3]],["result",6]]],[11,"fmt","","",80,[[["formatter",3]],["result",6]]],[11,"fmt","tokio::task","",81,[[["formatter",3]],["result",6]]],[11,"fmt","","",82,[[["formatter",3]],["result",6]]],[11,"fmt","tokio::runtime","",83,[[["formatter",3]],["result",6]]],[11,"fmt","","",84,[[["formatter",3]],["result",6]]],[11,"fmt","","",85,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","tokio::signal::unix","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","tokio::stream","",86,[[["formatter",3]],["result",6]]],[11,"fmt","","",87,[[["formatter",3]],["result",6]]],[11,"fmt","","",88,[[["formatter",3]],["result",6]]],[11,"fmt","","",89,[[["formatter",3]],["result",6]]],[11,"fmt","","",90,[[["formatter",3]],["result",6]]],[11,"fmt","tokio::sync","",91,[[["formatter",3]],["result",6]]],[11,"fmt","","",92,[[["formatter",3]],["result",6]]],[11,"fmt","tokio::sync::broadcast","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","tokio::sync::mpsc","",93,[[["formatter",3]],["result",6]]],[11,"fmt","","",94,[[["formatter",3]],["result",6]]],[11,"fmt","","",95,[[["formatter",3]],["result",6]]],[11,"fmt","","",96,[[["formatter",3]],["result",6]]],[11,"fmt","tokio::sync::mpsc::error","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",97,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",98,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","tokio::sync","",99,[[["formatter",3]],["result",6]]],[11,"fmt","","",102,[[["formatter",3]],["result",6]]],[11,"fmt","","",100,[[["formatter",3]],["result",6]]],[11,"fmt","","",101,[[["formatter",3]],["result",6]]],[11,"fmt","","",103,[[["formatter",3]],["result",6]]],[11,"fmt","tokio::sync::oneshot","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","tokio::sync::oneshot::error","",104,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","tokio::sync","",105,[[["formatter",3]],["result",6]]],[11,"fmt","","",106,[[["formatter",3]],["result",6]]],[11,"fmt","","",107,[[["formatter",3]],["result",6]]],[11,"fmt","","",108,[[["formatter",3]],["result",6]]],[11,"fmt","","",109,[[["formatter",3]],["result",6]]],[11,"fmt","","",110,[[["formatter",3]],["result",6]]],[11,"fmt","tokio::sync::watch","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",112,[[["formatter",3]],["result",6]]],[11,"fmt","tokio::sync::watch::error","",111,[[["formatter",3]],["result",6]]],[11,"fmt","tokio::task","",113,[[["formatter",3]],["result",6]]],[11,"fmt","","",114,[[["formatter",3]],["result",6]]],[11,"fmt","tokio::time","",35,[[["formatter",3]],["result",6]]],[11,"fmt","tokio::time::delay_queue","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",116,[[["formatter",3]],["result",6]]],[11,"fmt","tokio::time","",117,[[["formatter",3]],["result",6]]],[11,"fmt","","",118,[[["formatter",3]],["result",6]]],[11,"fmt","","",119,[[["formatter",3]],["result",6]]],[11,"fmt","","",120,[[["formatter",3]],["result",6]]],[11,"fmt","","",121,[[["formatter",3]],["result",6]]],[11,"fmt","","",122,[[["formatter",3]],["result",6]]],[11,"fmt","","",123,[[["formatter",3]],["result",6]]],[11,"fmt","tokio::net::tcp","",11,[[["formatter",3]],["result",6]]],[11,"fmt","tokio::net::udp","",12,[[["formatter",3]],["result",6]]],[11,"fmt","tokio::task","",81,[[["formatter",3]],["result",6]]],[11,"fmt","tokio::runtime","",85,[[["formatter",3]],["result",6]]],[11,"fmt","tokio::sync::broadcast","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","tokio::sync::mpsc::error","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",97,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",98,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","tokio::sync","",102,[[["formatter",3]],["result",6]]],[11,"fmt","","",100,[[["formatter",3]],["result",6]]],[11,"fmt","","",101,[[["formatter",3]],["result",6]]],[11,"fmt","tokio::sync::oneshot::error","",104,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","tokio::sync::watch::error","",111,[[["formatter",3]],["result",6]]],[11,"fmt","tokio::time","",118,[[["formatter",3]],["result",6]]],[11,"fmt","","",122,[[["formatter",3]],["result",6]]],[11,"sub","","",119,[[["instant",3]],["duration",3]]],[11,"sub","","",119,[[["duration",3]],["instant",3]]],[11,"add","","",119,[[["duration",3]],["instant",3]]],[11,"add_assign","","",119,[[["duration",3]]]],[11,"sub_assign","","",119,[[["duration",3]]]],[11,"hash","tokio::net::unix","",13,[[]]],[11,"hash","tokio::time","",119,[[]]],[11,"try_from","tokio::net","Consumes stream, returning the tokio I/O object.",62,[[["tcplistener",3]],["result",4]]],[11,"try_from","","Consumes stream, returning the tokio I/O object.",68,[[["tcpstream",3]],["result",4]]],[11,"try_from","","Consumes stream, returning the tokio I/O object.",69,[[["udpsocket",3]],["result",4]]],[11,"try_from","","Consumes stream, returning the tokio I/O object.",72,[[["unixdatagram",3]],["result",4]]],[11,"try_from","","Consumes stream, returning the tokio I/O object.",74,[[["unixlistener",3]],["result",6]]],[11,"try_from","","Consumes stream, returning the tokio I/O object.",77,[[["unixstream",3]],["result",6]]],[11,"ino","tokio::fs","",41,[[]]],[11,"as_raw_fd","","",38,[[],["rawfd",6]]],[11,"as_raw_fd","tokio::io","",45,[[],["rawfd",6]]],[11,"as_raw_fd","","",46,[[],["rawfd",6]]],[11,"as_raw_fd","","",47,[[],["rawfd",6]]],[11,"as_raw_fd","tokio::net","",62,[[],["rawfd",6]]],[11,"as_raw_fd","","",68,[[],["rawfd",6]]],[11,"as_raw_fd","","",69,[[],["rawfd",6]]],[11,"as_raw_fd","","",72,[[],["rawfd",6]]],[11,"as_raw_fd","","",74,[[],["rawfd",6]]],[11,"as_raw_fd","","",77,[[],["rawfd",6]]],[11,"as_raw_fd","tokio::process","",78,[[],["rawfd",6]]],[11,"as_raw_fd","","",79,[[],["rawfd",6]]],[11,"as_raw_fd","","",80,[[],["rawfd",6]]],[11,"poll","tokio::io","",50,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",54,[[["pin",3],["context",3]],[["result",6],["poll",4]]]],[11,"poll","tokio::process","",15,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","tokio::task","",82,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","tokio::sync::oneshot","",32,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","tokio::task","",113,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","tokio::time","",117,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",121,[[["pin",3],["context",3]],["poll",4]]],[11,"poll_next","tokio::fs","",40,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"poll_next","tokio::io","",56,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"poll_next","","",59,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"poll_next","tokio::net","",62,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"poll_next","tokio::net::tcp","",63,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"poll_next","tokio::net::unix","",73,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"poll_next","tokio::net","",74,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"poll_next","tokio::signal::unix","",18,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"poll_next","tokio::stream","",86,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",86,[[]]],[11,"poll_next","","",87,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",87,[[]]],[11,"poll_next","","",88,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",88,[[]]],[11,"poll_next","","",89,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",89,[[]]],[11,"poll_next","","",90,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",90,[[]]],[11,"poll_next","tokio::sync::mpsc","",94,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"poll_next","","",96,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"poll_next","tokio::sync::watch","",33,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"poll_next","tokio::time","",35,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"poll_next","","",120,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"poll_next","","",123,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"new","tokio::fs","Creates a new set of options with default mode/security …",37,[[]]],[11,"recursive","","Indicates whether to create directories recursively …",37,[[]]],[11,"create","","Creates the specified directory with the configured …",37,[[["path",3],["asref",8]]]],[11,"open","","Attempts to open a file in read-only mode.",38,[[]]],[11,"create","","Opens a file in write-only mode.",38,[[]]],[11,"from_std","","Converts a <code>std::fs::File</code> to a <code>tokio::fs::File</code>.",38,[[["file",3]],["file",3]]],[11,"seek","","Seeks to an offset, in bytes, in a stream.",38,[[["seekfrom",4]]]],[11,"sync_all","","Attempts to sync all OS-internal metadata to disk.",38,[[]]],[11,"sync_data","","This function is similar to <code>sync_all</code>, except that it may …",38,[[]]],[11,"set_len","","Truncates or extends the underlying file, updating the …",38,[[]]],[11,"metadata","","Queries metadata about the underlying file.",38,[[]]],[11,"try_clone","","Create a new <code>File</code> instance that shares the same …",38,[[]]],[11,"into_std","","Destructures <code>File</code> into a <code>std::fs::File</code>. This function is …",38,[[]]],[11,"try_into_std","","Tries to immediately destructure <code>File</code> into a <code>std::fs::File</code>…",38,[[],[["result",4],["file",3]]]],[11,"set_permissions","","Changes the permissions on the underlying file.",38,[[["permissions",3]]]],[11,"new","","Creates a blank new set of options ready for …",39,[[],["openoptions",3]]],[11,"read","","Sets the option for read access.",39,[[],["openoptions",3]]],[11,"write","","Sets the option for write access.",39,[[],["openoptions",3]]],[11,"append","","Sets the option for the append mode.",39,[[],["openoptions",3]]],[11,"truncate","","Sets the option for truncating a previous file.",39,[[],["openoptions",3]]],[11,"create","","Sets the option for creating a new file.",39,[[],["openoptions",3]]],[11,"create_new","","Sets the option to always create a new file.",39,[[],["openoptions",3]]],[11,"open","","Opens a file at <code>path</code> with the options specified by <code>self</code>.",39,[[]]],[11,"next_entry","","Returns the next entry in the directory stream.",40,[[]]],[11,"path","","Returns the full path to the file that this entry …",41,[[],["pathbuf",3]]],[11,"file_name","","Returns the bare file name of this directory entry …",41,[[],["osstring",3]]],[11,"metadata","","Returns the metadata for the file that this entry points …",41,[[]]],[11,"file_type","","Returns the file type for the file that this entry points …",41,[[]]],[11,"new","tokio::io","Creates a new I/O error from a known kind of error as …",42,[[["errorkind",4]],["error",3]]],[11,"last_os_error","","Returns an error representing the last OS error which …",42,[[],["error",3]]],[11,"from_raw_os_error","","Creates a new instance of an [<code>Error</code>] from a particular OS …",42,[[],["error",3]]],[11,"raw_os_error","","Returns the OS error that this error represents (if any).",42,[[],["option",4]]],[11,"get_ref","","Returns a reference to the inner error wrapped by this …",42,[[],[["error",8],["option",4]]]],[11,"get_mut","","Returns a mutable reference to the inner error wrapped by …",42,[[],[["option",4],["error",8]]]],[11,"into_inner","","Consumes the <code>Error</code>, returning its inner error (if any).",42,[[],[["box",3],["option",4]]]],[11,"kind","","Returns the corresponding [<code>ErrorKind</code>] for this error.",42,[[],["errorkind",4]]],[11,"prepare_uninitialized_buffer","","Prepares an uninitialized buffer to be safe to pass to …",4,[[]]],[11,"poll_read_buf","","Pulls some bytes from this source into the specified …",4,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_write_buf","","Writes a <code>Buf</code> into this value, returning how many bytes …",6,[[["pin",3],["context",3]],[["result",4],["poll",4]]]],[11,"new","","Creates a new <code>PollEvented</code> associated with the default …",43,[[],["result",6]]],[11,"new_with_ready","","Creates a new <code>PollEvented</code> associated with the default …",43,[[["ready",3]],["result",6]]],[11,"get_ref","","Returns a shared reference to the underlying I/O object …",43,[[]]],[11,"get_mut","","Returns a mutable reference to the underlying I/O object …",43,[[]]],[11,"into_inner","","Consumes self, returning the inner I/O object",43,[[],["result",6]]],[11,"poll_read_ready","","Checks the I/O resource\'s read readiness state.",43,[[["ready",3],["context",3]],[["result",6],["poll",4]]]],[11,"clear_read_ready","","Clears the I/O resource\'s read readiness state and …",43,[[["ready",3],["context",3]],["result",6]]],[11,"poll_write_ready","","Checks the I/O resource\'s write readiness state.",43,[[["context",3]],[["result",6],["poll",4]]]],[11,"clear_write_ready","","Resets the I/O resource\'s write readiness state and …",43,[[["context",3]],["result",6]]],[11,"new","","Registers the I/O resource with the default reactor.",44,[[],[["result",6],["registration",3]]]],[11,"new_with_ready","","Registers the I/O resource with the default reactor, for …",44,[[["ready",3]],[["result",6],["registration",3]]]],[11,"deregister","","Deregisters the I/O resource from the reactor it is …",44,[[],["result",6]]],[11,"poll_read_ready","","Polls for events on the I/O resource\'s read readiness …",44,[[["context",3]],[["result",6],["poll",4]]]],[11,"take_read_ready","","Consume any pending read readiness event.",44,[[],[["result",6],["option",4]]]],[11,"poll_write_ready","","Polls for events on the I/O resource\'s write readiness …",44,[[["context",3]],[["result",6],["poll",4]]]],[11,"take_write_ready","","Consumes any pending write readiness event.",44,[[],[["result",6],["option",4]]]],[11,"is_pair_of","","Checks if this <code>ReadHalf</code> and some <code>WriteHalf</code> were split …",48,[[["writehalf",3]]]],[11,"unsplit","","Reunites with a previously split <code>WriteHalf</code>.",48,[[["writehalf",3]]]],[11,"is_pair_of","","Check if this <code>WriteHalf</code> and some <code>ReadHalf</code> were split from …",49,[[["readhalf",3]]]],[11,"read_until","","Reads all bytes into <code>buf</code> until the delimiter <code>byte</code> or EOF …",7,[[["vec",3]],["readuntil",3]]],[11,"read_line","","Reads all bytes until a newline (the 0xA byte) is …",7,[[["string",3]],["readline",3]]],[11,"split","","Returns a stream of the contents of this reader split on …",7,[[],["split",3]]],[11,"lines","","Returns a stream over the lines of this reader. This …",7,[[],["lines",3]]],[11,"chain","","Creates a new <code>AsyncRead</code> instance that chains this stream …",8,[[],["chain",3]]],[11,"read","","Pulls some bytes from this source into the specified …",8,[[],["read",3]]],[11,"read_buf","","Pulls some bytes from this source into the specified …",8,[[],["readbuf",3]]],[11,"read_exact","","Reads the exact number of bytes required to fill <code>buf</code>.",8,[[],["readexact",3]]],[11,"read_u8","","Reads an unsigned 8 bit integer from the underlying …",8,[[],["readu8",3]]],[11,"read_i8","","Reads a signed 8 bit integer from the underlying reader.",8,[[],["readi8",3]]],[11,"read_u16","","Reads an unsigned 16-bit integer in big-endian order from …",8,[[],["readu16",3]]],[11,"read_i16","","Reads a signed 16-bit integer in big-endian order from the…",8,[[],["readi16",3]]],[11,"read_u32","","Reads an unsigned 32-bit integer in big-endian order from …",8,[[],["readu32",3]]],[11,"read_i32","","Reads a signed 32-bit integer in big-endian order from the…",8,[[],["readi32",3]]],[11,"read_u64","","Reads an unsigned 64-bit integer in big-endian order from …",8,[[],["readu64",3]]],[11,"read_i64","","Reads an signed 64-bit integer in big-endian order from …",8,[[],["readi64",3]]],[11,"read_u128","","Reads an unsigned 128-bit integer in big-endian order …",8,[[],["readu128",3]]],[11,"read_i128","","Reads an signed 128-bit integer in big-endian order from …",8,[[],["readi128",3]]],[11,"read_u16_le","","Reads an unsigned 16-bit integer in little-endian order …",8,[[],["readu16le",3]]],[11,"read_i16_le","","Reads a signed 16-bit integer in little-endian order from …",8,[[],["readi16le",3]]],[11,"read_u32_le","","Reads an unsigned 32-bit integer in little-endian order …",8,[[],["readu32le",3]]],[11,"read_i32_le","","Reads a signed 32-bit integer in little-endian order from …",8,[[],["readi32le",3]]],[11,"read_u64_le","","Reads an unsigned 64-bit integer in little-endian order …",8,[[],["readu64le",3]]],[11,"read_i64_le","","Reads an signed 64-bit integer in little-endian order …",8,[[],["readi64le",3]]],[11,"read_u128_le","","Reads an unsigned 128-bit integer in little-endian order …",8,[[],["readu128le",3]]],[11,"read_i128_le","","Reads an signed 128-bit integer in little-endian order …",8,[[],["readi128le",3]]],[11,"read_to_end","","Reads all bytes until EOF in this source, placing them …",8,[[["vec",3]],["readtoend",3]]],[11,"read_to_string","","Reads all bytes until EOF in this source, appending them …",8,[[["string",3]],["readtostring",3]]],[11,"take","","Creates an adaptor which reads at most <code>limit</code> bytes from …",8,[[],["take",3]]],[11,"seek","","Creates a future which will seek an IO object, and then …",9,[[["seekfrom",4]],["seek",3]]],[11,"write","","Writes a buffer into this writer, returning how many …",10,[[],["write",3]]],[11,"write_buf","","Writes a buffer into this writer, advancing the buffer\'s …",10,[[],["writebuf",3]]],[11,"write_all","","Attempts to write an entire buffer into this writer.",10,[[],["writeall",3]]],[11,"write_u8","","Writes an unsigned 8-bit integer to the underlying writer.",10,[[],["writeu8",3]]],[11,"write_i8","","Writes an unsigned 8-bit integer to the underlying writer.",10,[[],["writei8",3]]],[11,"write_u16","","Writes an unsigned 16-bit integer in big-endian order to …",10,[[],["writeu16",3]]],[11,"write_i16","","Writes a signed 16-bit integer in big-endian order to the …",10,[[],["writei16",3]]],[11,"write_u32","","Writes an unsigned 32-bit integer in big-endian order to …",10,[[],["writeu32",3]]],[11,"write_i32","","Writes a signed 32-bit integer in big-endian order to the …",10,[[],["writei32",3]]],[11,"write_u64","","Writes an unsigned 64-bit integer in big-endian order to …",10,[[],["writeu64",3]]],[11,"write_i64","","Writes an signed 64-bit integer in big-endian order to the…",10,[[],["writei64",3]]],[11,"write_u128","","Writes an unsigned 128-bit integer in big-endian order to …",10,[[],["writeu128",3]]],[11,"write_i128","","Writes an signed 128-bit integer in big-endian order to …",10,[[],["writei128",3]]],[11,"write_u16_le","","Writes an unsigned 16-bit integer in little-endian order …",10,[[],["writeu16le",3]]],[11,"write_i16_le","","Writes a signed 16-bit integer in little-endian order to …",10,[[],["writei16le",3]]],[11,"write_u32_le","","Writes an unsigned 32-bit integer in little-endian order …",10,[[],["writeu32le",3]]],[11,"write_i32_le","","Writes a signed 32-bit integer in little-endian order to …",10,[[],["writei32le",3]]],[11,"write_u64_le","","Writes an unsigned 64-bit integer in little-endian order …",10,[[],["writeu64le",3]]],[11,"write_i64_le","","Writes an signed 64-bit integer in little-endian order to …",10,[[],["writei64le",3]]],[11,"write_u128_le","","Writes an unsigned 128-bit integer in little-endian order …",10,[[],["writeu128le",3]]],[11,"write_i128_le","","Writes an signed 128-bit integer in little-endian order …",10,[[],["writei128le",3]]],[11,"flush","","Flushes this output stream, ensuring that all …",10,[[],["flush",3]]],[11,"shutdown","","Shuts down the output stream, ensuring that the value can …",10,[[],["shutdown",3]]],[11,"new","","Creates a new <code>BufReader</code> with a default buffer capacity. …",51,[[]]],[11,"with_capacity","","Creates a new <code>BufReader</code> with the specified buffer …",51,[[]]],[11,"get_ref","","Gets a reference to the underlying reader.",51,[[]]],[11,"get_mut","","Gets a mutable reference to the underlying reader.",51,[[]]],[11,"get_pin_mut","","Gets a pinned mutable reference to the underlying reader.",51,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this <code>BufReader</code>, returning the underlying reader.",51,[[]]],[11,"buffer","","Returns a reference to the internally buffered data.",51,[[]]],[11,"new","","Wraps a type in both [<code>BufWriter</code>] and [<code>BufReader</code>].",52,[[],["bufstream",3]]],[11,"with_capacity","","Creates a <code>BufStream</code> with the specified [<code>BufReader</code>] …",52,[[],["bufstream",3]]],[11,"get_ref","","Gets a reference to the underlying I/O object.",52,[[]]],[11,"get_mut","","Gets a mutable reference to the underlying I/O object.",52,[[]]],[11,"get_pin_mut","","Gets a pinned mutable reference to the underlying I/O …",52,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this <code>BufStream</code>, returning the underlying I/O …",52,[[]]],[11,"new","","Creates a new <code>BufWriter</code> with a default buffer capacity. …",53,[[]]],[11,"with_capacity","","Creates a new <code>BufWriter</code> with the specified buffer …",53,[[]]],[11,"get_ref","","Gets a reference to the underlying writer.",53,[[]]],[11,"get_mut","","Gets a mutable reference to the underlying writer.",53,[[]]],[11,"get_pin_mut","","Gets a pinned mutable reference to the underlying writer.",53,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this <code>BufWriter</code>, returning the underlying writer.",53,[[]]],[11,"buffer","","Returns a reference to the internally buffered data.",53,[[]]],[11,"next_line","","Returns the next line in the stream.",56,[[]]],[11,"get_mut","","Obtain a mutable reference to the underlying reader",56,[[]]],[11,"get_ref","","Obtain a reference to the underlying reader",56,[[]]],[11,"into_inner","","Unwraps this <code>Lines<R></code>, returning the underlying reader.",56,[[]]],[11,"next_segment","","Returns the next segment in the stream.",59,[[]]],[11,"limit","","Returns the remaining number of bytes that can be read …",61,[[]]],[11,"set_limit","","Sets the number of bytes that can be read before this …",61,[[]]],[11,"get_ref","","Gets a reference to the underlying reader.",61,[[]]],[11,"get_mut","","Gets a mutable reference to the underlying reader.",61,[[]]],[11,"get_pin_mut","","Gets a pinned mutable reference to the underlying reader.",61,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes the <code>Take</code>, returning the wrapped reader.",61,[[]]],[11,"bind","tokio::net","Creates a new TcpListener, which will be bound to the …",62,[[["tosocketaddrs",8]]]],[11,"accept","","Accepts a new incoming connection from this listener.",62,[[]]],[11,"poll_accept","","Attempts to poll <code>SocketAddr</code> and <code>TcpStream</code> bound to this …",62,[[["context",3]],[["poll",4],["result",6]]]],[11,"from_std","","Creates a new TCP listener from the standard library\'s …",62,[[["tcplistener",3]],[["result",6],["tcplistener",3]]]],[11,"local_addr","","Returns the local address that this listener is bound to.",62,[[],[["socketaddr",4],["result",6]]]],[11,"incoming","","Returns a stream over the connections being received on …",62,[[],["incoming",3]]],[11,"ttl","","Gets the value of the <code>IP_TTL</code> option for this socket.",62,[[],["result",6]]],[11,"set_ttl","","Sets the value for the <code>IP_TTL</code> option on this socket.",62,[[],["result",6]]],[11,"poll_accept","tokio::net::tcp","Attempts to poll <code>TcpStream</code> by polling inner <code>TcpListener</code> …",63,[[["pin",3],["context",3]],[["result",6],["poll",4]]]],[11,"poll_peek","","Attempt to receive data on the socket, without removing …",64,[[["context",3]],[["poll",4],["result",6]]]],[11,"peek","","Receives data on the socket from the remote address to …",64,[[]]],[11,"reunite","","Attempts to put the two halves of a <code>TcpStream</code> back …",66,[[["ownedwritehalf",3]],[["reuniteerror",3],["result",4],["tcpstream",3]]]],[11,"poll_peek","","Attempt to receive data on the socket, without removing …",66,[[["context",3]],[["poll",4],["result",6]]]],[11,"peek","","Receives data on the socket from the remote address to …",66,[[]]],[11,"reunite","","Attempts to put the two halves of a <code>TcpStream</code> back …",67,[[["ownedreadhalf",3]],[["reuniteerror",3],["result",4],["tcpstream",3]]]],[11,"forget","","Drop the write half, but don\'t issue a TCP shutdown.",67,[[]]],[11,"connect","tokio::net","Opens a TCP connection to a remote host.",68,[[["tosocketaddrs",8]]]],[11,"from_std","","Creates new <code>TcpStream</code> from a <code>std::net::TcpStream</code>.",68,[[["tcpstream",3]],[["result",6],["tcpstream",3]]]],[11,"local_addr","","Returns the local address that this stream is bound to.",68,[[],[["socketaddr",4],["result",6]]]],[11,"peer_addr","","Returns the remote address that this stream is connected …",68,[[],[["socketaddr",4],["result",6]]]],[11,"poll_peek","","Attempts to receive data on the socket, without removing …",68,[[["context",3]],[["poll",4],["result",6]]]],[11,"peek","","Receives data on the socket from the remote address to …",68,[[]]],[11,"shutdown","","Shuts down the read, write, or both halves of this …",68,[[["shutdown",4]],["result",6]]],[11,"nodelay","","Gets the value of the <code>TCP_NODELAY</code> option on this socket.",68,[[],["result",6]]],[11,"set_nodelay","","Sets the value of the <code>TCP_NODELAY</code> option on this socket.",68,[[],["result",6]]],[11,"recv_buffer_size","","Gets the value of the <code>SO_RCVBUF</code> option on this socket.",68,[[],["result",6]]],[11,"set_recv_buffer_size","","Sets the value of the <code>SO_RCVBUF</code> option on this socket.",68,[[],["result",6]]],[11,"send_buffer_size","","Gets the value of the <code>SO_SNDBUF</code> option on this socket.",68,[[],["result",6]]],[11,"set_send_buffer_size","","Sets the value of the <code>SO_SNDBUF</code> option on this socket.",68,[[],["result",6]]],[11,"keepalive","","Returns whether keepalive messages are enabled on this …",68,[[],[["result",6],["option",4]]]],[11,"set_keepalive","","Sets whether keepalive messages are enabled to be sent on …",68,[[["option",4],["duration",3]],["result",6]]],[11,"ttl","","Gets the value of the <code>IP_TTL</code> option for this socket.",68,[[],["result",6]]],[11,"set_ttl","","Sets the value for the <code>IP_TTL</code> option on this socket.",68,[[],["result",6]]],[11,"linger","","Reads the linger duration for this socket by getting the …",68,[[],[["result",6],["option",4]]]],[11,"set_linger","","Sets the linger duration of this socket by setting the …",68,[[["option",4],["duration",3]],["result",6]]],[11,"split","","Splits a <code>TcpStream</code> into a read half and a write half, …",68,[[]]],[11,"into_split","","Splits a <code>TcpStream</code> into a read half and a write half, …",68,[[]]],[11,"bind","","This function will create a new UDP socket and attempt to …",69,[[["tosocketaddrs",8]]]],[11,"from_std","","Creates a new <code>UdpSocket</code> from the previously bound socket …",69,[[["udpsocket",3]],[["udpsocket",3],["result",6]]]],[11,"split","","Splits the <code>UdpSocket</code> into a receive half and a send half. …",69,[[]]],[11,"local_addr","","Returns the local address that this socket is bound to.",69,[[],[["socketaddr",4],["result",6]]]],[11,"connect","","Connects the UDP socket setting the default destination …",69,[[["tosocketaddrs",8]]]],[11,"send","","Returns a future that sends data on the socket to the …",69,[[]]],[11,"recv","","Returns a future that receives a single datagram message …",69,[[]]],[11,"send_to","","Returns a future that sends data on the socket to the …",69,[[["tosocketaddrs",8]]]],[11,"recv_from","","Returns a future that receives a single datagram on the …",69,[[]]],[11,"broadcast","","Gets the value of the <code>SO_BROADCAST</code> option for this socket.",69,[[],["result",6]]],[11,"set_broadcast","","Sets the value of the <code>SO_BROADCAST</code> option for this socket.",69,[[],["result",6]]],[11,"multicast_loop_v4","","Gets the value of the <code>IP_MULTICAST_LOOP</code> option for this …",69,[[],["result",6]]],[11,"set_multicast_loop_v4","","Sets the value of the <code>IP_MULTICAST_LOOP</code> option for this …",69,[[],["result",6]]],[11,"multicast_ttl_v4","","Gets the value of the <code>IP_MULTICAST_TTL</code> option for this …",69,[[],["result",6]]],[11,"set_multicast_ttl_v4","","Sets the value of the <code>IP_MULTICAST_TTL</code> option for this …",69,[[],["result",6]]],[11,"multicast_loop_v6","","Gets the value of the <code>IPV6_MULTICAST_LOOP</code> option for this …",69,[[],["result",6]]],[11,"set_multicast_loop_v6","","Sets the value of the <code>IPV6_MULTICAST_LOOP</code> option for this …",69,[[],["result",6]]],[11,"ttl","","Gets the value of the <code>IP_TTL</code> option for this socket.",69,[[],["result",6]]],[11,"set_ttl","","Sets the value for the <code>IP_TTL</code> option on this socket.",69,[[],["result",6]]],[11,"join_multicast_v4","","Executes an operation of the <code>IP_ADD_MEMBERSHIP</code> type.",69,[[["ipv4addr",3]],["result",6]]],[11,"join_multicast_v6","","Executes an operation of the <code>IPV6_ADD_MEMBERSHIP</code> type.",69,[[["ipv6addr",3]],["result",6]]],[11,"leave_multicast_v4","","Executes an operation of the <code>IP_DROP_MEMBERSHIP</code> type.",69,[[["ipv4addr",3]],["result",6]]],[11,"leave_multicast_v6","","Executes an operation of the <code>IPV6_DROP_MEMBERSHIP</code> type.",69,[[["ipv6addr",3]],["result",6]]],[11,"reunite","tokio::net::udp","Attempts to put the two \\\"halves\\\" of a <code>UdpSocket</code> back …",71,[[["sendhalf",3]],[["result",4],["reuniteerror",3],["udpsocket",3]]]],[11,"recv_from","","Returns a future that receives a single datagram on the …",71,[[]]],[11,"recv","","Returns a future that receives a single datagram message …",71,[[]]],[11,"reunite","","Attempts to put the two \\\"halves\\\" of a <code>UdpSocket</code> back …",70,[[["recvhalf",3]],[["result",4],["reuniteerror",3],["udpsocket",3]]]],[11,"send_to","","Returns a future that sends data on the socket to the …",70,[[["socketaddr",4]]]],[11,"send","","Returns a future that sends data on the socket to the …",70,[[]]],[11,"bind","tokio::net","Creates a new <code>UnixDatagram</code> bound to the specified path.",72,[[],[["result",6],["unixdatagram",3]]]],[11,"pair","","Creates an unnamed pair of connected sockets.",72,[[],["result",6]]],[11,"from_std","","Consumes a <code>UnixDatagram</code> in the standard library and …",72,[[["unixdatagram",3]],[["result",6],["unixdatagram",3]]]],[11,"unbound","","Creates a new <code>UnixDatagram</code> which is not bound to any …",72,[[],[["result",6],["unixdatagram",3]]]],[11,"connect","","Connects the socket to the specified address.",72,[[["path",3],["asref",8]],["result",6]]],[11,"send","","Sends data on the socket to the socket\'s peer.",72,[[]]],[11,"recv","","Receives data from the socket.",72,[[]]],[11,"send_to","","Sends data on the socket to the specified address.",72,[[]]],[11,"recv_from","","Receives data from the socket.",72,[[]]],[11,"local_addr","","Returns the local address that this socket is bound to.",72,[[],[["socketaddr",3],["result",6]]]],[11,"peer_addr","","Returns the address of this socket\'s peer.",72,[[],[["socketaddr",3],["result",6]]]],[11,"take_error","","Returns the value of the <code>SO_ERROR</code> option.",72,[[],[["result",6],["option",4]]]],[11,"shutdown","","Shuts down the read, write, or both halves of this …",72,[[["shutdown",4]],["result",6]]],[11,"poll_accept","tokio::net::unix","Attempts to poll <code>UnixStream</code> by polling inner <code>UnixListener</code> …",73,[[["pin",3],["context",3]],[["result",6],["poll",4]]]],[11,"bind","tokio::net","Creates a new <code>UnixListener</code> bound to the specified path.",74,[[],[["unixlistener",3],["result",6]]]],[11,"from_std","","Consumes a <code>UnixListener</code> in the standard library and …",74,[[["unixlistener",3]],[["unixlistener",3],["result",6]]]],[11,"local_addr","","Returns the local socket address of this listener.",74,[[],[["socketaddr",3],["result",6]]]],[11,"take_error","","Returns the value of the <code>SO_ERROR</code> option.",74,[[],[["result",6],["option",4]]]],[11,"accept","","Accepts a new incoming connection to this listener.",74,[[]]],[11,"incoming","","Returns a stream over the connections being received on …",74,[[],["incoming",3]]],[11,"connect","","Connects to the socket named by <code>path</code>.",77,[[]]],[11,"from_std","","Consumes a <code>UnixStream</code> in the standard library and returns …",77,[[["unixstream",3]],[["result",6],["unixstream",3]]]],[11,"pair","","Creates an unnamed pair of connected sockets.",77,[[],["result",6]]],[11,"local_addr","","Returns the socket address of the local half of this …",77,[[],[["socketaddr",3],["result",6]]]],[11,"peer_addr","","Returns the socket address of the remote half of this …",77,[[],[["socketaddr",3],["result",6]]]],[11,"peer_cred","","Returns effective credentials of the process which called …",77,[[],[["result",6],["ucred",3]]]],[11,"take_error","","Returns the value of the <code>SO_ERROR</code> option.",77,[[],[["result",6],["option",4]]]],[11,"shutdown","","Shuts down the read, write, or both halves of this …",77,[[["shutdown",4]],["result",6]]],[11,"split","","Split a <code>UnixStream</code> into a read half and a write half, …",77,[[]]],[11,"is_cancelled","tokio::task","Returns true if the error was caused by the task being …",81,[[]]],[11,"is_panic","","Returns true if the error was caused by the task panicking",81,[[]]],[11,"into_panic","","Consumes the join error, returning the object with which …",81,[[],[["box",3],["any",8]]]],[11,"try_into_panic","","Consumes the join error, returning the object with which …",81,[[],[["joinerror",3],["box",3],["result",4]]]],[11,"new","tokio::runtime","Returns a new runtime builder initialized with default …",83,[[],["builder",3]]],[11,"enable_all","","Enables both I/O and time drivers.",83,[[]]],[11,"num_threads","","Sets the maximum number of worker threads for the <code>Runtime</code>…",83,[[]]],[11,"core_threads","","Sets the core number of worker threads for the <code>Runtime</code>\'s …",83,[[]]],[11,"max_threads","","Specifies limit for threads, spawned by the Runtime.",83,[[]]],[11,"thread_name","","Sets name of threads spawned by the <code>Runtime</code>\'s thread pool.",83,[[]]],[11,"thread_stack_size","","Sets the stack size (in bytes) for worker threads.",83,[[]]],[11,"on_thread_start","","Executes function <code>f</code> after each thread is started but …",83,[[]]],[11,"on_thread_stop","","Executes function <code>f</code> before each thread stops.",83,[[]]],[11,"build","","Creates the configured <code>Runtime</code>.",83,[[],[["result",6],["runtime",3]]]],[11,"enable_io","","Enables the I/O driver.",83,[[]]],[11,"enable_time","","Enables the time driver.",83,[[]]],[11,"basic_scheduler","","Sets runtime to use a simpler scheduler that runs all …",83,[[]]],[11,"threaded_scheduler","","Sets runtime to use a multi-threaded scheduler for …",83,[[]]],[11,"enter","","Enter the runtime context. This allows you to construct …",84,[[]]],[11,"current","","Returns a <code>Handle</code> view over the currently running <code>Runtime</code>",84,[[]]],[11,"try_current","","Returns a Handle view over the currently running Runtime",84,[[],[["result",4],["trycurrenterror",3]]]],[11,"spawn","","Spawns a future onto the Tokio runtime.",84,[[],["joinhandle",3]]],[11,"block_on","","Run a future to completion on the Tokio runtime from a …",84,[[["future",8]]]],[11,"spawn_blocking","","Runs the provided closure on a thread where blocking is …",84,[[],["joinhandle",3]]],[11,"new","tokio::stream","Creates an empty <code>StreamMap</code>.",90,[[],["streammap",3]]],[11,"with_capacity","","Creates an empty <code>StreamMap</code> with the specified capacity.",90,[[],["streammap",3]]],[11,"keys","","Returns an iterator visiting all keys in arbitrary order.",90,[[]]],[11,"values","","An iterator visiting all values in arbitrary order.",90,[[]]],[11,"values_mut","","An iterator visiting all values mutably in arbitrary …",90,[[]]],[11,"capacity","","Returns the number of streams the map can hold without …",90,[[]]],[11,"len","","Returns the number of streams in the map.",90,[[]]],[11,"is_empty","","Returns <code>true</code> if the map contains no elements.",90,[[]]],[11,"clear","","Clears the map, removing all key-stream pairs. Keeps the …",90,[[]]],[11,"insert","","Insert a key-stream pair into the map.",90,[[],["option",4]]],[11,"remove","","Removes a key from the map, returning the stream at the …",90,[[],["option",4]]],[11,"contains_key","","Returns <code>true</code> if the map contains a stream for the …",90,[[]]],[11,"new","tokio::sync","Creates a new barrier that can block a given number of …",91,[[],["barrier",3]]],[11,"wait","","Does not resolve until all tasks have rendezvoused here.",91,[[]]],[11,"is_leader","","Returns <code>true</code> if this thread from wait is the \\\"leader …",92,[[]]],[11,"recv","tokio::sync::mpsc","Receives the next value for this receiver.",94,[[]]],[11,"try_recv","","Attempts to return a pending value on this receiver …",94,[[],[["tryrecverror",4],["result",4]]]],[11,"close","","Closes the receiving half of a channel, without dropping …",94,[[]]],[11,"send","","Sends a value, waiting until there is capacity.",93,[[]]],[11,"try_send","","Attempts to immediately send a message on this <code>Sender</code>",93,[[],[["result",4],["trysenderror",4]]]],[11,"send_timeout","","Sends a value, waiting until there is capacity, but only …",93,[[["duration",3]]]],[11,"poll_ready","","Returns <code>Poll::Ready(Ok(()))</code> when the channel is able to …",93,[[["context",3]],[["poll",4],["result",4]]]],[11,"disarm","","Undo a successful call to <code>poll_ready</code>.",93,[[]]],[11,"recv","","Receives the next value for this receiver.",96,[[]]],[11,"try_recv","","Attempts to return a pending value on this receiver …",96,[[],[["tryrecverror",4],["result",4]]]],[11,"close","","Closes the receiving half of a channel, without dropping …",96,[[]]],[11,"send","","Attempts to send a message on this <code>UnboundedSender</code> …",95,[[],[["result",4],["senderror",3]]]],[11,"new","tokio::sync","Creates a new lock in an unlocked state ready for use.",99,[[]]],[11,"lock","","Locks this mutex, causing the current task to yield until …",99,[[]]],[11,"lock_owned","","Locks this mutex, causing the current task to yield until …",99,[[["arc",3]]]],[11,"try_lock","","Attempts to acquire the lock, and returns <code>TryLockError</code> if …",99,[[],[["result",4],["mutexguard",3],["trylockerror",3]]]],[11,"try_lock_owned","","Attempts to acquire the lock, and returns <code>TryLockError</code> if …",99,[[["arc",3]],[["result",4],["ownedmutexguard",3],["trylockerror",3]]]],[11,"into_inner","","Consumes the mutex, returning the underlying data.",99,[[]]],[11,"new","","Create a new <code>Notify</code>, initialized without a permit.",103,[[],["notify",3]]],[11,"notified","","Wait for a notification.",103,[[]]],[11,"notify","","Notifies a waiting task",103,[[]]],[11,"new","","Creates a new semaphore with the initial number of …",105,[[]]],[11,"available_permits","","Returns the current number of available permits.",105,[[]]],[11,"add_permits","","Adds <code>n</code> new permits to the semaphore.",105,[[]]],[11,"acquire","","Acquires permit from the semaphore.",105,[[]]],[11,"try_acquire","","Tries to acquire a permit from the semaphore.",105,[[],[["semaphorepermit",3],["tryacquireerror",3],["result",4]]]],[11,"acquire_owned","","Acquires permit from the semaphore.",105,[[["arc",3]]]],[11,"try_acquire_owned","","Tries to acquire a permit from the semaphore.",105,[[["arc",3]],[["tryacquireerror",3],["result",4],["ownedsemaphorepermit",3]]]],[11,"forget","","Forgets the permit <strong>without</strong> releasing it back to the …",106,[[]]],[11,"forget","","Forgets the permit <strong>without</strong> releasing it back to the …",107,[[]]],[11,"new","","Creates a new instance of an <code>RwLock<T></code> which is unlocked.",108,[[],["rwlock",3]]],[11,"read","","Locks this rwlock with shared read access, causing the …",108,[[]]],[11,"write","","Locks this rwlock with exclusive write access, causing …",108,[[]]],[11,"into_inner","","Consumes the lock, returning the underlying data.",108,[[]]],[11,"new","tokio::task","Returns a new local task set.",113,[[],["localset",3]]],[11,"spawn_local","","Spawns a <code>!Send</code> task onto the local task set.",113,[[],["joinhandle",3]]],[11,"block_on","","Runs a future to completion on the provided runtime, …",113,[[["runtime",3]]]],[11,"run_until","","Run a future to completion on the local set, returning …",113,[[]]],[11,"scope","","Sets a value <code>T</code> as the task-local value for the future <code>F</code>.",114,[[]]],[11,"with","","Accesses the current task-local and runs the provided …",114,[[]]],[11,"try_with","","Accesses the current task-local and runs the provided …",114,[[],[["accesserror",3],["result",4]]]],[11,"get","","Returns a copy of the task-local value if the task-local …",114,[[]]],[18,"SECOND","tokio::time","The duration of one second.",115,null],[18,"MILLISECOND","","The duration of one millisecond.",115,null],[18,"MICROSECOND","","The duration of one microsecond.",115,null],[18,"NANOSECOND","","The duration of one nanosecond.",115,null],[18,"ZERO","","A duration of zero time.",115,null],[18,"MAX","","The maximum duration.",115,null],[11,"new","","Creates a new <code>Duration</code> from the specified number of whole …",115,[[],["duration",3]]],[11,"from_secs","","Creates a new <code>Duration</code> from the specified number of whole …",115,[[],["duration",3]]],[11,"from_millis","","Creates a new <code>Duration</code> from the specified number of …",115,[[],["duration",3]]],[11,"from_micros","","Creates a new <code>Duration</code> from the specified number of …",115,[[],["duration",3]]],[11,"from_nanos","","Creates a new <code>Duration</code> from the specified number of …",115,[[],["duration",3]]],[11,"is_zero","","Returns true if this <code>Duration</code> spans no time.",115,[[]]],[11,"as_secs","","Returns the number of <em>whole</em> seconds contained by this …",115,[[]]],[11,"subsec_millis","","Returns the fractional part of this <code>Duration</code>, in whole …",115,[[]]],[11,"subsec_micros","","Returns the fractional part of this <code>Duration</code>, in whole …",115,[[]]],[11,"subsec_nanos","","Returns the fractional part of this <code>Duration</code>, in …",115,[[]]],[11,"as_millis","","Returns the total number of whole milliseconds contained …",115,[[]]],[11,"as_micros","","Returns the total number of whole microseconds contained …",115,[[]]],[11,"as_nanos","","Returns the total number of nanoseconds contained by this …",115,[[]]],[11,"checked_add","","Checked <code>Duration</code> addition. Computes <code>self + other</code>, …",115,[[["duration",3]],[["duration",3],["option",4]]]],[11,"saturating_add","","Saturating <code>Duration</code> addition. Computes <code>self + other</code>, …",115,[[["duration",3]],["duration",3]]],[11,"checked_sub","","Checked <code>Duration</code> subtraction. Computes <code>self - other</code>, …",115,[[["duration",3]],[["duration",3],["option",4]]]],[11,"saturating_sub","","Saturating <code>Duration</code> subtraction. Computes <code>self - other</code>, …",115,[[["duration",3]],["duration",3]]],[11,"checked_mul","","Checked <code>Duration</code> multiplication. Computes <code>self * other</code>, …",115,[[],[["duration",3],["option",4]]]],[11,"saturating_mul","","Saturating <code>Duration</code> multiplication. Computes <code>self * other</code>…",115,[[],["duration",3]]],[11,"checked_div","","Checked <code>Duration</code> division. Computes <code>self / other</code>, …",115,[[],[["duration",3],["option",4]]]],[11,"as_secs_f64","","Returns the number of seconds contained by this <code>Duration</code> …",115,[[]]],[11,"as_secs_f32","","Returns the number of seconds contained by this <code>Duration</code> …",115,[[]]],[11,"from_secs_f64","","Creates a new <code>Duration</code> from the specified number of …",115,[[],["duration",3]]],[11,"from_secs_f32","","Creates a new <code>Duration</code> from the specified number of …",115,[[],["duration",3]]],[11,"mul_f64","","Multiplies <code>Duration</code> by <code>f64</code>.",115,[[],["duration",3]]],[11,"mul_f32","","Multiplies <code>Duration</code> by <code>f32</code>.",115,[[],["duration",3]]],[11,"div_f64","","Divide <code>Duration</code> by <code>f64</code>.",115,[[],["duration",3]]],[11,"div_f32","","Divide <code>Duration</code> by <code>f32</code>.",115,[[],["duration",3]]],[11,"div_duration_f64","","Divide <code>Duration</code> by <code>Duration</code> and return <code>f64</code>.",115,[[["duration",3]]]],[11,"div_duration_f32","","Divide <code>Duration</code> by <code>Duration</code> and return <code>f32</code>.",115,[[["duration",3]]]],[11,"deadline","","Returns the instant at which the future will complete.",117,[[],["instant",3]]],[11,"is_elapsed","","Returns <code>true</code> if the <code>Delay</code> has elapsed",117,[[]]],[11,"reset","","Resets the <code>Delay</code> instance to a new deadline.",117,[[["instant",3]]]],[11,"shutdown","","Creates an error representing a shutdown timer.",118,[[],["error",3]]],[11,"is_shutdown","","Returns <code>true</code> if the error was caused by the timer being …",118,[[]]],[11,"at_capacity","","Creates an error representing a timer at capacity.",118,[[],["error",3]]],[11,"is_at_capacity","","Returns <code>true</code> if the error was caused by the timer being …",118,[[]]],[11,"now","","Returns an instant corresponding to \\\"now\\\".",119,[[],["instant",3]]],[11,"from_std","","Create a <code>tokio::time::Instant</code> from a <code>std::time::Instant</code>.",119,[[["instant",3]],["instant",3]]],[11,"into_std","","Convert the value into a <code>std::time::Instant</code>.",119,[[],["instant",3]]],[11,"duration_since","","Returns the amount of time elapsed from another instant …",119,[[["instant",3]],["duration",3]]],[11,"checked_duration_since","","Returns the amount of time elapsed from another instant …",119,[[["instant",3]],[["option",4],["duration",3]]]],[11,"saturating_duration_since","","Returns the amount of time elapsed from another instant …",119,[[["instant",3]],["duration",3]]],[11,"elapsed","","Returns the amount of time elapsed since this instant was …",119,[[],["duration",3]]],[11,"checked_add","","Returns <code>Some(t)</code> where <code>t</code> is the time <code>self + duration</code> if <code>t</code> …",119,[[["duration",3]],[["option",4],["instant",3]]]],[11,"checked_sub","","Returns <code>Some(t)</code> where <code>t</code> is the time <code>self - duration</code> if <code>t</code> …",119,[[["duration",3]],[["option",4],["instant",3]]]],[11,"tick","","Completes when the next instant in the interval has been …",120,[[]]],[11,"get_ref","","Gets a reference to the underlying value in this timeout.",121,[[]]],[11,"get_mut","","Gets a mutable reference to the underlying value in this …",121,[[]]],[11,"into_inner","","Consumes this timeout, returning the underlying value.",121,[[]]],[11,"get_ref","","Acquires a reference to the underlying stream that this …",123,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream …",123,[[]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",123,[[]]]],"p":[[8,"OpenOptionsExt"],[8,"DirBuilderExt"],[4,"ErrorKind"],[8,"AsyncBufRead"],[8,"AsyncRead"],[8,"AsyncSeek"],[8,"AsyncWrite"],[8,"AsyncBufReadExt"],[8,"AsyncReadExt"],[8,"AsyncSeekExt"],[8,"AsyncWriteExt"],[3,"ReuniteError"],[3,"ReuniteError"],[3,"UCred"],[3,"Command"],[3,"Child"],[3,"Runtime"],[3,"SignalKind"],[3,"Signal"],[8,"Stream"],[8,"StreamExt"],[3,"SendError"],[4,"RecvError"],[4,"TryRecvError"],[3,"Sender"],[3,"Receiver"],[3,"SendError"],[4,"TrySendError"],[4,"TryRecvError"],[4,"SendTimeoutError"],[4,"TryRecvError"],[3,"Sender"],[3,"Receiver"],[3,"Receiver"],[3,"Sender"],[3,"DelayQueue"],[3,"Expired"],[3,"DirBuilder"],[3,"File"],[3,"OpenOptions"],[3,"ReadDir"],[3,"DirEntry"],[3,"Error"],[3,"PollEvented"],[3,"Registration"],[3,"Stderr"],[3,"Stdin"],[3,"Stdout"],[3,"ReadHalf"],[3,"WriteHalf"],[3,"Seek"],[3,"BufReader"],[3,"BufStream"],[3,"BufWriter"],[3,"Copy"],[3,"Empty"],[3,"Lines"],[3,"Repeat"],[3,"Sink"],[3,"Split"],[3,"StreamReader"],[3,"Take"],[3,"TcpListener"],[3,"Incoming"],[3,"ReadHalf"],[3,"WriteHalf"],[3,"OwnedReadHalf"],[3,"OwnedWriteHalf"],[3,"TcpStream"],[3,"UdpSocket"],[3,"SendHalf"],[3,"RecvHalf"],[3,"UnixDatagram"],[3,"Incoming"],[3,"UnixListener"],[3,"ReadHalf"],[3,"WriteHalf"],[3,"UnixStream"],[3,"ChildStdin"],[3,"ChildStdout"],[3,"ChildStderr"],[3,"JoinError"],[3,"JoinHandle"],[3,"Builder"],[3,"Handle"],[3,"TryCurrentError"],[3,"Empty"],[3,"Iter"],[3,"Once"],[3,"Pending"],[3,"StreamMap"],[3,"Barrier"],[3,"BarrierWaitResult"],[3,"Sender"],[3,"Receiver"],[3,"UnboundedSender"],[3,"UnboundedReceiver"],[3,"RecvError"],[3,"ClosedError"],[3,"Mutex"],[3,"MutexGuard"],[3,"OwnedMutexGuard"],[3,"TryLockError"],[3,"Notify"],[3,"RecvError"],[3,"Semaphore"],[3,"SemaphorePermit"],[3,"OwnedSemaphorePermit"],[3,"RwLock"],[3,"RwLockReadGuard"],[3,"RwLockWriteGuard"],[3,"SendError"],[3,"Ref"],[3,"LocalSet"],[3,"LocalKey"],[3,"Duration"],[3,"Key"],[3,"Delay"],[3,"Error"],[3,"Instant"],[3,"Interval"],[3,"Timeout"],[3,"Elapsed"],[3,"Throttle"]]},\
"tokio_macros":{"doc":"Macros for use with Tokio","i":[[23,"main_threaded","tokio_macros","Marks async function to be executed by selected runtime.",null,null],[23,"main","","Marks async function to be executed by selected runtime.",null,null],[23,"main_basic","","Marks async function to be executed by selected runtime.",null,null],[23,"test_threaded","","Marks async function to be executed by runtime, suitable …",null,null],[23,"test","","Marks async function to be executed by runtime, suitable …",null,null],[23,"test_basic","","Marks async function to be executed by runtime, suitable …",null,null]],"p":[]},\
"tokio_util":{"doc":"Utilities for working with Tokio.","i":[[0,"codec","tokio_util","Utilities for encoding and decoding frames.",null,null],[0,"length_delimited","tokio_util::codec","Frame a stream of bytes based on a length prefix",null,null],[3,"Builder","tokio_util::codec::length_delimited","Configure length delimited <code>LengthDelimitedCodec</code>s.",null,null],[3,"LengthDelimitedCodecError","","An error when the number of bytes read is more than max …",null,null],[3,"LengthDelimitedCodec","","A codec for frames delimited by a frame head specifying …",null,null],[11,"new","","Creates a new <code>LengthDelimitedCodec</code> with the default …",0,[[]]],[11,"builder","","Creates a new length delimited codec builder with default …",0,[[],["builder",3]]],[11,"max_frame_length","","Returns the current max frame setting",0,[[]]],[11,"set_max_frame_length","","Updates the max frame setting.",0,[[]]],[11,"new","","Creates a new length delimited codec builder with default …",1,[[],["builder",3]]],[11,"big_endian","","Read the length field as a big endian integer",1,[[]]],[11,"little_endian","","Read the length field as a little endian integer",1,[[]]],[11,"native_endian","","Read the length field as a native endian integer",1,[[]]],[11,"max_frame_length","","Sets the max frame length",1,[[]]],[11,"length_field_length","","Sets the number of bytes used to represent the length …",1,[[]]],[11,"length_field_offset","","Sets the number of bytes in the header before the length …",1,[[]]],[11,"length_adjustment","","Delta between the payload length specified in the header …",1,[[]]],[11,"num_skip","","Sets the number of bytes to skip before reading the …",1,[[]]],[11,"new_codec","","Create a configured length delimited <code>LengthDelimitedCodec</code>",1,[[],["lengthdelimitedcodec",3]]],[11,"new_read","","Create a configured length delimited <code>FramedRead</code>",1,[[],[["lengthdelimitedcodec",3],["framedread",3]]]],[11,"new_write","","Create a configured length delimited <code>FramedWrite</code>",1,[[],[["lengthdelimitedcodec",3],["framedwrite",3]]]],[11,"new_framed","","Create a configured length delimited <code>Framed</code>",1,[[],[["framed",3],["lengthdelimitedcodec",3]]]],[3,"BytesCodec","tokio_util::codec","A simple <code>Decoder</code> and <code>Encoder</code> implementation that just …",null,null],[8,"Decoder","","Decoding of frames via buffers.",null,null],[16,"Item","","The type of decoded frames.",2,null],[16,"Error","","The type of unrecoverable frame decoding errors.",2,null],[10,"decode","","Attempts to decode a frame from the provided buffer of …",2,[[["bytesmut",3]],[["result",4],["option",4]]]],[11,"decode_eof","","A default method available to be called when there are no …",2,[[["bytesmut",3]],[["result",4],["option",4]]]],[11,"framed","","Provides a <code>Stream</code> and <code>Sink</code> interface for reading and …",2,[[["asyncread",8],["sized",8],["asyncwrite",8]],[["framed",3],["sized",8],["asyncwrite",8],["asyncread",8]]]],[8,"Encoder","","Trait of helper objects to write out messages as bytes, …",null,null],[16,"Error","","The type of encoding errors.",3,null],[10,"encode","","Encodes a frame into the buffer provided.",3,[[["bytesmut",3]],["result",4]]],[3,"Framed","","A unified <code>Stream</code> and <code>Sink</code> interface to an underlying I/O …",null,null],[3,"FramedParts","","<code>FramedParts</code> contains an export of the data of a Framed …",null,null],[12,"io","","The inner transport used to read bytes to and write bytes …",4,null],[12,"codec","","The codec",4,null],[12,"read_buf","","The buffer with read but unprocessed data.",4,null],[12,"write_buf","","A buffer with unprocessed data which are not written yet.",4,null],[3,"FramedRead","","A <code>Stream</code> of messages decoded from an <code>AsyncRead</code>.",null,null],[3,"FramedWrite","","A <code>Sink</code> of frames encoded to an <code>AsyncWrite</code>.",null,null],[3,"LinesCodec","","A simple <code>Decoder</code> and <code>Encoder</code> implementation that splits …",null,null],[4,"LinesCodecError","","An error occured while encoding or decoding a line.",null,null],[13,"MaxLineLengthExceeded","","The maximum line length was exceeded.",5,null],[13,"Io","","An IO error occured.",5,null],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"try_poll_next","","",7,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"try_poll_next","","",8,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"try_poll_next","","",9,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"from","tokio_util::codec::length_delimited","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_string","","",10,[[],["string",3]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","tokio_util::codec","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_string","","",5,[[],["string",3]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"decode","","",6,[[["bytesmut",3]],[["result",4],["error",3],["option",4]]]],[11,"decode","tokio_util::codec::length_delimited","",0,[[["bytesmut",3]],[["result",6],["option",4]]]],[11,"decode","tokio_util::codec","",11,[[["bytesmut",3]],[["result",4],["option",4],["linescodecerror",4]]]],[11,"decode_eof","","",11,[[["bytesmut",3]],[["result",4],["option",4],["linescodecerror",4]]]],[11,"encode","","",6,[[["bytes",3],["bytesmut",3]],[["error",3],["result",4]]]],[11,"encode","tokio_util::codec::length_delimited","",0,[[["bytes",3],["bytesmut",3]],[["error",3],["result",4]]]],[11,"encode","tokio_util::codec","",11,[[["bytesmut",3]],[["result",4],["linescodecerror",4]]]],[11,"from","","",5,[[["error",3]],["linescodecerror",4]]],[11,"clone","","",6,[[],["bytescodec",3]]],[11,"clone","tokio_util::codec::length_delimited","",1,[[],["builder",3]]],[11,"clone","tokio_util::codec","",11,[[],["linescodec",3]]],[11,"default","","",6,[[],["bytescodec",3]]],[11,"default","tokio_util::codec::length_delimited","",0,[[]]],[11,"default","","",1,[[]]],[11,"default","tokio_util::codec","",11,[[]]],[11,"cmp","","",6,[[["bytescodec",3]],["ordering",4]]],[11,"cmp","","",11,[[["linescodec",3]],["ordering",4]]],[11,"eq","","",6,[[["bytescodec",3]]]],[11,"ne","","",6,[[["bytescodec",3]]]],[11,"eq","","",11,[[["linescodec",3]]]],[11,"ne","","",11,[[["linescodec",3]]]],[11,"partial_cmp","","",6,[[["bytescodec",3]],[["option",4],["ordering",4]]]],[11,"lt","","",6,[[["bytescodec",3]]]],[11,"le","","",6,[[["bytescodec",3]]]],[11,"gt","","",6,[[["bytescodec",3]]]],[11,"ge","","",6,[[["bytescodec",3]]]],[11,"partial_cmp","","",11,[[["linescodec",3]],[["option",4],["ordering",4]]]],[11,"lt","","",11,[[["linescodec",3]]]],[11,"le","","",11,[[["linescodec",3]]]],[11,"gt","","",11,[[["linescodec",3]]]],[11,"ge","","",11,[[["linescodec",3]]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","tokio_util::codec::length_delimited","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","tokio_util::codec","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","tokio_util::codec::length_delimited","",10,[[["formatter",3]],["result",6]]],[11,"fmt","tokio_util::codec","",5,[[["formatter",3]],["result",6]]],[11,"hash","","",6,[[]]],[11,"hash","","",11,[[]]],[11,"poll_next","","",7,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"poll_next","","",8,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"poll_next","","",9,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"poll_ready","","",7,[[["pin",3],["context",3]],[["poll",4],["result",4]]]],[11,"start_send","","",7,[[["pin",3]],["result",4]]],[11,"poll_flush","","",7,[[["pin",3],["context",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",7,[[["pin",3],["context",3]],[["poll",4],["result",4]]]],[11,"poll_ready","","",8,[[["pin",3],["context",3]],[["poll",4],["result",4]]]],[11,"start_send","","",8,[[["pin",3]],["result",4]]],[11,"poll_flush","","",8,[[["pin",3],["context",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",8,[[["pin",3],["context",3]],[["poll",4],["result",4]]]],[11,"poll_ready","","",9,[[["pin",3],["context",3]],[["poll",4],["result",4]]]],[11,"start_send","","",9,[[["pin",3]],["result",4]]],[11,"poll_flush","","",9,[[["pin",3],["context",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",9,[[["pin",3],["context",3]],[["poll",4],["result",4]]]],[11,"new","","Creates a new <code>BytesCodec</code> for shipping around raw bytes.",6,[[],["bytescodec",3]]],[11,"decode_eof","","A default method available to be called when there are no …",2,[[["bytesmut",3]],[["result",4],["option",4]]]],[11,"framed","","Provides a <code>Stream</code> and <code>Sink</code> interface for reading and …",2,[[["asyncread",8],["sized",8],["asyncwrite",8]],[["framed",3],["sized",8],["asyncwrite",8],["asyncread",8]]]],[11,"new","","Provides a <code>Stream</code> and <code>Sink</code> interface for reading and …",7,[[],["framed",3]]],[11,"with_capacity","","Provides a <code>Stream</code> and <code>Sink</code> interface for reading and …",7,[[],["framed",3]]],[11,"from_parts","","Provides a <code>Stream</code> and <code>Sink</code> interface for reading and …",7,[[["framedparts",3]],["framed",3]]],[11,"get_ref","","Returns a reference to the underlying I/O stream wrapped …",7,[[]]],[11,"get_mut","","Returns a mutable reference to the underlying I/O stream …",7,[[]]],[11,"codec","","Returns a reference to the underlying codec wrapped by …",7,[[]]],[11,"codec_mut","","Returns a mutable reference to the underlying codec …",7,[[]]],[11,"read_buffer","","Returns a reference to the read buffer.",7,[[],["bytesmut",3]]],[11,"into_inner","","Consumes the <code>Framed</code>, returning its underlying I/O stream.",7,[[]]],[11,"into_parts","","Consumes the <code>Framed</code>, returning its underlying I/O stream, …",7,[[],["framedparts",3]]],[11,"new","","Create a new, default, <code>FramedParts</code>",4,[[],["framedparts",3]]],[11,"new","","Creates a new <code>FramedRead</code> with the given <code>decoder</code>.",8,[[],["framedread",3]]],[11,"with_capacity","","Creates a new <code>FramedRead</code> with the given <code>decoder</code> and a …",8,[[],["framedread",3]]],[11,"get_ref","","Returns a reference to the underlying I/O stream wrapped …",8,[[]]],[11,"get_mut","","Returns a mutable reference to the underlying I/O stream …",8,[[]]],[11,"into_inner","","Consumes the <code>FramedRead</code>, returning its underlying I/O …",8,[[]]],[11,"decoder","","Returns a reference to the underlying decoder.",8,[[]]],[11,"decoder_mut","","Returns a mutable reference to the underlying decoder.",8,[[]]],[11,"read_buffer","","Returns a reference to the read buffer.",8,[[],["bytesmut",3]]],[11,"new","","Creates a new <code>FramedWrite</code> with the given <code>encoder</code>.",9,[[],["framedwrite",3]]],[11,"get_ref","","Returns a reference to the underlying I/O stream wrapped …",9,[[]]],[11,"get_mut","","Returns a mutable reference to the underlying I/O stream …",9,[[]]],[11,"into_inner","","Consumes the <code>FramedWrite</code>, returning its underlying I/O …",9,[[]]],[11,"encoder","","Returns a reference to the underlying decoder.",9,[[]]],[11,"encoder_mut","","Returns a mutable reference to the underlying decoder.",9,[[]]],[11,"new","","Returns a <code>LinesCodec</code> for splitting up data into lines.",11,[[],["linescodec",3]]],[11,"new_with_max_length","","Returns a <code>LinesCodec</code> with a maximum line length limit.",11,[[]]],[11,"max_length","","Returns the maximum line length when decoding.",11,[[]]]],"p":[[3,"LengthDelimitedCodec"],[3,"Builder"],[8,"Decoder"],[8,"Encoder"],[3,"FramedParts"],[4,"LinesCodecError"],[3,"BytesCodec"],[3,"Framed"],[3,"FramedRead"],[3,"FramedWrite"],[3,"LengthDelimitedCodecError"],[3,"LinesCodec"]]},\
"unicode_xid":{"doc":"Determine if a <code>char</code> is a valid identifier for a parser …","i":[[17,"UNICODE_VERSION","unicode_xid","The version of Unicode that this version of unicode-xid …",null,null],[8,"UnicodeXID","","Methods for determining if a character is a valid …",null,null],[10,"is_xid_start","","Returns whether the specified character satisfies the …",0,[[]]],[10,"is_xid_continue","","Returns whether the specified <code>char</code> satisfies the …",0,[[]]]],"p":[[8,"UnicodeXID"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);