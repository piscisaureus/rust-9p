(function() {var implementors = {};
implementors["arc_swap"] = [{"text":"impl&lt;T:&nbsp;Ord&gt; Ord for ConstantDeref&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Ord&gt; Ord for Constant&lt;T&gt;","synthetic":false,"types":[]}];
implementors["byteorder"] = [{"text":"impl Ord for BigEndian","synthetic":false,"types":[]},{"text":"impl Ord for LittleEndian","synthetic":false,"types":[]}];
implementors["bytes"] = [{"text":"impl Ord for Bytes","synthetic":false,"types":[]},{"text":"impl Ord for BytesMut","synthetic":false,"types":[]}];
implementors["futures_util"] = [{"text":"impl&lt;T:&nbsp;Ord&gt; Ord for AllowStdIo&lt;T&gt;","synthetic":false,"types":[]}];
implementors["log"] = [{"text":"impl Ord for Level","synthetic":false,"types":[]},{"text":"impl Ord for LevelFilter","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Ord for Metadata&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Ord for MetadataBuilder&lt;'a&gt;","synthetic":false,"types":[]}];
implementors["mio"] = [{"text":"impl Ord for PollOpt","synthetic":false,"types":[]},{"text":"impl Ord for Ready","synthetic":false,"types":[]},{"text":"impl Ord for UnixReady","synthetic":false,"types":[]},{"text":"impl Ord for Token","synthetic":false,"types":[]}];
implementors["nix"] = [{"text":"impl Ord for AtFlags","synthetic":false,"types":[]},{"text":"impl Ord for OFlag","synthetic":false,"types":[]},{"text":"impl Ord for SealFlag","synthetic":false,"types":[]},{"text":"impl Ord for FdFlag","synthetic":false,"types":[]},{"text":"impl Ord for SpliceFFlags","synthetic":false,"types":[]},{"text":"impl Ord for FallocateFlags","synthetic":false,"types":[]},{"text":"impl Ord for PosixFadviseAdvice","synthetic":false,"types":[]},{"text":"impl Ord for ModuleInitFlags","synthetic":false,"types":[]},{"text":"impl Ord for DeleteModuleFlags","synthetic":false,"types":[]},{"text":"impl Ord for MsFlags","synthetic":false,"types":[]},{"text":"impl Ord for MntFlags","synthetic":false,"types":[]},{"text":"impl Ord for MQ_OFlag","synthetic":false,"types":[]},{"text":"impl Ord for FdFlag","synthetic":false,"types":[]},{"text":"impl Ord for InterfaceFlags","synthetic":false,"types":[]},{"text":"impl Ord for PollFlags","synthetic":false,"types":[]},{"text":"impl Ord for CloneFlags","synthetic":false,"types":[]},{"text":"impl Ord for AioFsyncMode","synthetic":false,"types":[]},{"text":"impl Ord for LioOpcode","synthetic":false,"types":[]},{"text":"impl Ord for LioMode","synthetic":false,"types":[]},{"text":"impl Ord for EpollFlags","synthetic":false,"types":[]},{"text":"impl Ord for EpollCreateFlags","synthetic":false,"types":[]},{"text":"impl Ord for EfdFlags","synthetic":false,"types":[]},{"text":"impl Ord for MemFdCreateFlag","synthetic":false,"types":[]},{"text":"impl Ord for ProtFlags","synthetic":false,"types":[]},{"text":"impl Ord for MapFlags","synthetic":false,"types":[]},{"text":"impl Ord for MmapAdvise","synthetic":false,"types":[]},{"text":"impl Ord for MsFlags","synthetic":false,"types":[]},{"text":"impl Ord for MlockAllFlags","synthetic":false,"types":[]},{"text":"impl Ord for Request","synthetic":false,"types":[]},{"text":"impl Ord for Event","synthetic":false,"types":[]},{"text":"impl Ord for Options","synthetic":false,"types":[]},{"text":"impl Ord for QuotaType","synthetic":false,"types":[]},{"text":"impl Ord for QuotaFmt","synthetic":false,"types":[]},{"text":"impl Ord for QuotaValidFlags","synthetic":false,"types":[]},{"text":"impl Ord for RebootMode","synthetic":false,"types":[]},{"text":"impl Ord for Signal","synthetic":false,"types":[]},{"text":"impl Ord for SaFlags","synthetic":false,"types":[]},{"text":"impl Ord for SigmaskHow","synthetic":false,"types":[]},{"text":"impl Ord for SfdFlags","synthetic":false,"types":[]},{"text":"impl Ord for SockFlag","synthetic":false,"types":[]},{"text":"impl Ord for MsgFlags","synthetic":false,"types":[]},{"text":"impl Ord for SFlag","synthetic":false,"types":[]},{"text":"impl Ord for Mode","synthetic":false,"types":[]},{"text":"impl Ord for FsFlags","synthetic":false,"types":[]},{"text":"impl Ord for BaudRate","synthetic":false,"types":[]},{"text":"impl Ord for SetArg","synthetic":false,"types":[]},{"text":"impl Ord for FlushArg","synthetic":false,"types":[]},{"text":"impl Ord for FlowArg","synthetic":false,"types":[]},{"text":"impl Ord for SpecialCharacterIndices","synthetic":false,"types":[]},{"text":"impl Ord for InputFlags","synthetic":false,"types":[]},{"text":"impl Ord for OutputFlags","synthetic":false,"types":[]},{"text":"impl Ord for ControlFlags","synthetic":false,"types":[]},{"text":"impl Ord for LocalFlags","synthetic":false,"types":[]},{"text":"impl Ord for TimeSpec","synthetic":false,"types":[]},{"text":"impl Ord for TimeVal","synthetic":false,"types":[]},{"text":"impl Ord for WaitPidFlag","synthetic":false,"types":[]},{"text":"impl Ord for AddWatchFlags","synthetic":false,"types":[]},{"text":"impl Ord for InitFlags","synthetic":false,"types":[]},{"text":"impl Ord for WatchDescriptor","synthetic":false,"types":[]},{"text":"impl Ord for ClockId","synthetic":false,"types":[]},{"text":"impl Ord for TimerFlags","synthetic":false,"types":[]},{"text":"impl Ord for TimerSetTimeFlags","synthetic":false,"types":[]},{"text":"impl Ord for Pid","synthetic":false,"types":[]},{"text":"impl Ord for AccessFlags","synthetic":false,"types":[]}];
implementors["proc_macro2"] = [{"text":"impl Ord for Ident","synthetic":false,"types":[]}];
implementors["rs9p"] = [{"text":"impl Ord for Stat","synthetic":false,"types":[]},{"text":"impl Ord for LockType","synthetic":false,"types":[]},{"text":"impl Ord for LockFlag","synthetic":false,"types":[]},{"text":"impl Ord for LockStatus","synthetic":false,"types":[]},{"text":"impl Ord for QidType","synthetic":false,"types":[]},{"text":"impl Ord for GetattrMask","synthetic":false,"types":[]},{"text":"impl Ord for SetattrMask","synthetic":false,"types":[]},{"text":"impl Ord for Qid","synthetic":false,"types":[]},{"text":"impl Ord for Statfs","synthetic":false,"types":[]},{"text":"impl Ord for Time","synthetic":false,"types":[]},{"text":"impl Ord for Stat","synthetic":false,"types":[]},{"text":"impl Ord for SetAttr","synthetic":false,"types":[]},{"text":"impl Ord for DirEntry","synthetic":false,"types":[]},{"text":"impl Ord for DirEntryData","synthetic":false,"types":[]},{"text":"impl Ord for Data","synthetic":false,"types":[]},{"text":"impl Ord for Flock","synthetic":false,"types":[]},{"text":"impl Ord for Getlock","synthetic":false,"types":[]},{"text":"impl Ord for MsgType","synthetic":false,"types":[]},{"text":"impl Ord for Fcall","synthetic":false,"types":[]},{"text":"impl Ord for Msg","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Ord&gt; Ord for Fid&lt;T&gt;","synthetic":false,"types":[]}];
implementors["signal_hook_registry"] = [{"text":"impl Ord for SigId","synthetic":false,"types":[]}];
implementors["syn"] = [{"text":"impl Ord for Lifetime","synthetic":false,"types":[]}];
implementors["tokio"] = [{"text":"impl Ord for Instant","synthetic":false,"types":[]}];
implementors["tokio_util"] = [{"text":"impl Ord for BytesCodec","synthetic":false,"types":[]},{"text":"impl Ord for LinesCodec","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()